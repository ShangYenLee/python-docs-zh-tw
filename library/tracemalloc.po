# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-09-18 00:10+0000\n"
"PO-Revision-Date: 2018-05-23 16:13+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/tracemalloc.rst:2
msgid ":mod:`tracemalloc` --- Trace memory allocations"
msgstr ":mod:`tracemalloc` --- 追蹤記憶體分配"

#: ../../library/tracemalloc.rst:9
msgid "**Source code:** :source:`Lib/tracemalloc.py`"
msgstr "**原始碼：**\\ :source:`Lib/tracemalloc.py`"

#: ../../library/tracemalloc.rst:13
#, fuzzy
msgid ""
"The tracemalloc module is a debug tool to trace memory blocks allocated by "
"Python. It provides the following information:"
msgstr "tracemalloc 模組是一個除錯工具，用於跟踪 Python "
"分配的記憶體塊。它提供以下資訊："

#: ../../library/tracemalloc.rst:16
#, fuzzy
msgid "Traceback where an object was allocated"
msgstr "追溯分配物件的位置"

#: ../../library/tracemalloc.rst:17
#, fuzzy
msgid ""
"Statistics on allocated memory blocks per filename and per line number: "
"total size, number and average size of allocated memory blocks"
msgstr ""
"Statistics on allocated memory blocks per filename and per line "
"number：分配記憶體塊的總大小、數量和平均大小"

#: ../../library/tracemalloc.rst:19
#, fuzzy
msgid "Compute the differences between two snapshots to detect memory leaks"
msgstr "計算兩個快照之間的差異以檢測記憶體洩漏"

#: ../../library/tracemalloc.rst:21
#, fuzzy
msgid ""
"To trace most memory blocks allocated by Python, the module should be "
"started as early as possible by setting the :envvar:`PYTHONTRACEMALLOC` "
"environment variable to ``1``, or by using :option:`-X` ``tracemalloc`` "
"command line option. The :func:`tracemalloc.start` function can be called at "
"runtime to start tracing Python memory allocations."
msgstr ""
"要跟踪 Python 分配的大多數記憶體塊，應通過將 PYTHONTRACEMALLOC "
"環境變數設定為 1 或使用 :option:-X ``tracemalloc` 來儘早啟動模組` 命令列選項。"
" :func:`tracemalloc.start` 函式可以在運行時呼叫以開始跟踪 Python 記憶體分配。"

#: ../../library/tracemalloc.rst:27
#, fuzzy
msgid ""
"By default, a trace of an allocated memory block only stores the most recent "
"frame (1 frame). To store 25 frames at startup: set the :envvar:"
"`PYTHONTRACEMALLOC` environment variable to ``25``, or use the :option:`-X` "
"``tracemalloc=25`` command line option."
msgstr ""
"預設情況下，分配的記憶體塊的踪跡僅儲存最近的幀（1 幀）。要在啟動時儲存 25 "
"幀：將 :envvar:`PYTHONTRACEMALLOC` 環境變數設定為``25``，或使用 :option:`-X` "
"``tracemalloc=25`` 命令列選項。"

#: ../../library/tracemalloc.rst:34
msgid "Examples"
msgstr "範例"

#: ../../library/tracemalloc.rst:37
#, fuzzy
msgid "Display the top 10"
msgstr "顯示前 10 個"

#: ../../library/tracemalloc.rst:39
#, fuzzy
msgid "Display the 10 files allocating the most memory::"
msgstr "顯示分配最多記憶體的 10 個文件::"

#: ../../library/tracemalloc.rst:55 ../../library/tracemalloc.rst:225
#, fuzzy
msgid "Example of output of the Python test suite::"
msgstr "Python 測試套件的輸出示例::"

#: ../../library/tracemalloc.rst:69
#, fuzzy
msgid ""
"We can see that Python loaded ``4855 KiB`` data (bytecode and constants) "
"from modules and that the :mod:`collections` module allocated ``244 KiB`` to "
"build :class:`~collections.namedtuple` types."
msgstr ""
"我們可以看到 Python 從模組中加載了 ``4855 KiB`` 資料（位元組碼和常數），並且 "
":mod:`collections` 模組分配了 ``244 KiB`` 來構建 :class:`~collections."
"namedtuple` 型別。"

#: ../../library/tracemalloc.rst:73 ../../library/tracemalloc.rst:250
msgid "See :meth:`Snapshot.statistics` for more options."
msgstr "更多選項請見 :meth:`Snapshot.statistics`\\ 。"

#: ../../library/tracemalloc.rst:77
#, fuzzy
msgid "Compute differences"
msgstr "計算差異"

#: ../../library/tracemalloc.rst:79
#, fuzzy
msgid "Take two snapshots and display the differences::"
msgstr "拍攝兩張快照並顯示差異::"

#: ../../library/tracemalloc.rst:95
#, fuzzy
msgid ""
"Example of output before/after running some tests of the Python test suite::"
msgstr "運行 Python 測試套件的一些測試之前/之後的輸出示例::"

#: ../../library/tracemalloc.rst:109
#, fuzzy
msgid ""
"We can see that Python has loaded ``8173 KiB`` of module data (bytecode and "
"constants), and that this is ``4428 KiB`` more than had been loaded before "
"the tests, when the previous snapshot was taken. Similarly, the :mod:"
"`linecache` module has cached ``940 KiB`` of Python source code to format "
"tracebacks, all of it since the previous snapshot."
msgstr ""
"我們可以看到 Python 已經加載了“8173 "
"KiB”的模組資料（位元組碼和常數），這比測試前拍攝前一個快照時加載的多“4428 "
"KiB”。同樣，:mod:`linecache` 模組快取了 ``940 KiB`` 的 Python "
"源程式碼以格式化回溯，所有這些都是自上一個快照以來的。"

#: ../../library/tracemalloc.rst:115
#, fuzzy
msgid ""
"If the system has little free memory, snapshots can be written on disk using "
"the :meth:`Snapshot.dump` method to analyze the snapshot offline. Then use "
"the :meth:`Snapshot.load` method reload the snapshot."
msgstr ""
"如果系統空閒記憶體很少，可以使用 Snapshot.dump "
"方法將快照寫入磁盤，以離線分析快照。然後使用 Snapshot.load 方法重新加載快照。"

#: ../../library/tracemalloc.rst:121
#, fuzzy
msgid "Get the traceback of a memory block"
msgstr "獲取記憶體塊的回溯"

#: ../../library/tracemalloc.rst:123
#, fuzzy
msgid "Code to display the traceback of the biggest memory block::"
msgstr "顯示最大記憶體塊回溯的程式碼::"

#: ../../library/tracemalloc.rst:141
#, fuzzy
msgid ""
"Example of output of the Python test suite (traceback limited to 25 frames)::"
msgstr "Python 測試套件的輸出示例（回溯限制為 25 幀）::"

#: ../../library/tracemalloc.rst:178
#, fuzzy
msgid ""
"We can see that the most memory was allocated in the :mod:`importlib` module "
"to load data (bytecode and constants) from modules: ``870.1 KiB``. The "
"traceback is where the :mod:`importlib` loaded data most recently: on the "
"``import pdb`` line of the :mod:`doctest` module. The traceback may change "
"if a new module is loaded."
msgstr ""
"我們可以看到，大部分記憶體分配在 :mod:`importlib` "
"模組中，用於從模組加載資料（位元組碼和常數）：``870.1 KiB``。回溯是 "
":mod:`importlib` 最近加載資料的地方：在 :mod:`doctest` 模組的 ``import pdb`` "
"行。如果加載了新模組，回溯可能會發生變化。"

#: ../../library/tracemalloc.rst:186
#, fuzzy
msgid "Pretty top"
msgstr "漂亮的頂"

#: ../../library/tracemalloc.rst:188
#, fuzzy
msgid ""
"Code to display the 10 lines allocating the most memory with a pretty "
"output, ignoring ``<frozen importlib._bootstrap>`` and ``<unknown>`` files::"
msgstr ""
"顯示分配最多記憶體的 10 行程式碼以及漂亮的輸出，忽略``<frozen importlib."
"_bootstrap>`` 和``<unknown>`` 文件::"

#: ../../library/tracemalloc.rst:253
#, fuzzy
msgid "Record the current and peak size of all traced memory blocks"
msgstr "記錄所有跟踪記憶體塊的當前和峰值大小"

#: ../../library/tracemalloc.rst:255
#, fuzzy
msgid ""
"The following code computes two sums like ``0 + 1 + 2 + ...`` inefficiently, "
"by creating a list of those numbers. This list consumes a lot of memory "
"temporarily. We can use :func:`get_traced_memory` and :func:`reset_peak` to "
"observe the small memory usage after the sum is computed as well as the peak "
"memory usage during the computations::"
msgstr ""
"以下程式碼通過建立這些數字的列表來低效地計算兩個總和，例如“0 + 1 + 2 + "
"...”。這個列表暫時消耗了大量的記憶體。我們可以使用 :func:`get_traced_memory` "
"和 :func:`reset_peak` "
"來觀察計算總和後的小記憶體使用量以及計算期間的峰值記憶體使用量::"

#: ../../library/tracemalloc.rst:280 ../../library/tracemalloc.rst:759
msgid "Output::"
msgstr ""
"輸出：\n"
"\n"
"::"

#: ../../library/tracemalloc.rst:285
#, fuzzy
msgid ""
"Using :func:`reset_peak` ensured we could accurately record the peak during "
"the computation of ``small_sum``, even though it is much smaller than the "
"overall peak size of memory blocks since the :func:`start` call. Without the "
"call to :func:`reset_peak`, ``second_peak`` would still be the peak from the "
"computation ``large_sum`` (that is, equal to ``first_peak``). In this case, "
"both peaks are much higher than the final memory usage, and which suggests "
"we could optimise (by removing the unnecessary call to :class:`list`, and "
"writing ``sum(range(...))``)."
msgstr ""
"使用 :func:`reset_peak` 確保我們可以在計算 ``small_sum`` 期間準確記錄峰值，"
"即使它遠小於 :func:`start` 呼叫以來記憶體塊的總峰值大小。如果不呼叫 "
":func:`reset_peak`，``second_peak`` 仍然是計算``large_sum`` 的峰值（即等於``f"
"irst_peak``）。在這種情況下，兩個峰值都遠高於最終記憶體使用量，這表明我們可以"
"最佳化（通過刪除對 :class:`list` 的不必要呼叫，並編寫 ``sum(range(...))`` )."

#: ../../library/tracemalloc.rst:295
msgid "API"
msgstr "API"

#: ../../library/tracemalloc.rst:298
msgid "Functions"
msgstr "函式"

#: ../../library/tracemalloc.rst:302
#, fuzzy
msgid "Clear traces of memory blocks allocated by Python."
msgstr "清除 Python 分配的記憶體塊痕跡。"

#: ../../library/tracemalloc.rst:304
msgid "See also :func:`stop`."
msgstr "另請參閱 :func:`stop`\\ 。"

#: ../../library/tracemalloc.rst:309
#, fuzzy
msgid ""
"Get the traceback where the Python object *obj* was allocated. Return a :"
"class:`Traceback` instance, or ``None`` if the :mod:`tracemalloc` module is "
"not tracing memory allocations or did not trace the allocation of the object."
msgstr ""
"獲取分配 Python 物件 *obj* 的回溯。回傳一個 :class:`Traceback` 實例，如果 "
":mod:`tracemalloc` 模組沒有跟踪記憶體分配或沒有跟踪物件的分配，則回傳 "
"``None``。"

#: ../../library/tracemalloc.rst:314
msgid "See also :func:`gc.get_referrers` and :func:`sys.getsizeof` functions."
msgstr "另請參閱 :func:`gc.get_referrers` 與 :func:`sys.getsizeof` 函式。"

#: ../../library/tracemalloc.rst:319
#, fuzzy
msgid "Get the maximum number of frames stored in the traceback of a trace."
msgstr "獲取跟踪的回溯中儲存的最大幀數。"

#: ../../library/tracemalloc.rst:321
#, fuzzy
msgid ""
"The :mod:`tracemalloc` module must be tracing memory allocations to get the "
"limit, otherwise an exception is raised."
msgstr ":mod:`tracemalloc` 模組必須跟踪記憶體分配以獲得限制，否則會引發例外。"

#: ../../library/tracemalloc.rst:324
#, fuzzy
msgid "The limit is set by the :func:`start` function."
msgstr "該限制由 :func:`start` 函式設定。"

#: ../../library/tracemalloc.rst:329
#, fuzzy
msgid ""
"Get the current size and peak size of memory blocks traced by the :mod:"
"`tracemalloc` module as a tuple: ``(current: int, peak: int)``."
msgstr ""
"獲取 :mod:`tracemalloc` "
"模組跟踪的記憶體塊的當前大小和峰值大小作為元組：``(current: int, peak: "
"int)``。"

#: ../../library/tracemalloc.rst:335
#, fuzzy
msgid ""
"Set the peak size of memory blocks traced by the :mod:`tracemalloc` module "
"to the current size."
msgstr "將 :mod:`tracemalloc` 模組跟踪的記憶體塊的峰值大小設定為當前大小。"

#: ../../library/tracemalloc.rst:338
#, fuzzy
msgid ""
"Do nothing if the :mod:`tracemalloc` module is not tracing memory "
"allocations."
msgstr "如果 :mod:`tracemalloc` 模組沒有跟踪記憶體分配，則什麼也不做。"

#: ../../library/tracemalloc.rst:341
#, fuzzy
msgid ""
"This function only modifies the recorded peak size, and does not modify or "
"clear any traces, unlike :func:`clear_traces`. Snapshots taken with :func:"
"`take_snapshot` before a call to :func:`reset_peak` can be meaningfully "
"compared to snapshots taken after the call."
msgstr ""
"與 :func:`clear_traces` "
"不同，此函式僅修改記錄的峰大小，不會修改或清除任何痕跡。在呼叫 "
":func:`reset_peak` 之前使用 :func:`take_snapshot` "
"拍攝的快照可以與呼叫之後拍攝的快照進行有意義的比較。"

#: ../../library/tracemalloc.rst:346
msgid "See also :func:`get_traced_memory`."
msgstr "另請參閱 :func:`get_traced_memory`\\ 。"

#: ../../library/tracemalloc.rst:353
#, fuzzy
msgid ""
"Get the memory usage in bytes of the :mod:`tracemalloc` module used to store "
"traces of memory blocks. Return an :class:`int`."
msgstr "獲取用於儲存記憶體塊跟踪的 :mod:`tracemalloc` "
"模組的記憶體使用量（以位元組為單位）。回傳一個 :class:`int`。"

#: ../../library/tracemalloc.rst:360
#, fuzzy
msgid ""
"``True`` if the :mod:`tracemalloc` module is tracing Python memory "
"allocations, ``False`` otherwise."
msgstr "如果 :mod:`tracemalloc` 模組正在跟踪 Python 記憶體分配，則為 ``True``，"
"否則為 ``False``。"

#: ../../library/tracemalloc.rst:363
msgid "See also :func:`start` and :func:`stop` functions."
msgstr "另請參閱 :func:`start` 與 :func:`stop` 函式。"

#: ../../library/tracemalloc.rst:368
#, fuzzy
msgid ""
"Start tracing Python memory allocations: install hooks on Python memory "
"allocators. Collected tracebacks of traces will be limited to *nframe* "
"frames. By default, a trace of a memory block only stores the most recent "
"frame: the limit is ``1``. *nframe* must be greater or equal to ``1``."
msgstr ""
"開始跟踪 Python 記憶體分配：在 Python 記憶體分配器上安裝掛鉤。"
"收集的跟踪回溯將限於 *nframe* "
"幀。預設情況下，記憶體塊的踪跡僅儲存最近的幀：限制為 ``1``。 *nframe* "
"必須大於或等於 ``1``。"

#: ../../library/tracemalloc.rst:373
#, fuzzy
msgid ""
"You can still read the original number of total frames that composed the "
"traceback by looking at the :attr:`Traceback.total_nframe` attribute."
msgstr "您仍然可以通過查看 :attr:`Traceback.total_nframe` "
"屬性來讀取構成回溯的原始總幀數。"

#: ../../library/tracemalloc.rst:376
#, fuzzy
msgid ""
"Storing more than ``1`` frame is only useful to compute statistics grouped "
"by ``'traceback'`` or to compute cumulative statistics: see the :meth:"
"`Snapshot.compare_to` and :meth:`Snapshot.statistics` methods."
msgstr ""
"儲存超過 ``1`` 幀僅對計算按 ``'traceback'`` "
"分組的統計資料或計算累積統計資料有用：請參閱 :meth:`Snapshot.compare_to` "
"和 :meth:`Snapshot.statistics` ."

#: ../../library/tracemalloc.rst:380
#, fuzzy
msgid ""
"Storing more frames increases the memory and CPU overhead of the :mod:"
"`tracemalloc` module. Use the :func:`get_tracemalloc_memory` function to "
"measure how much memory is used by the :mod:`tracemalloc` module."
msgstr ""
"儲存更多幀會增加 :mod:`tracemalloc` 模組的記憶體和 CPU 開銷。使用 "
":func:`get_tracemalloc_memory` 函式測量 :mod:`tracemalloc` "
"模組使用了多少記憶體。"

#: ../../library/tracemalloc.rst:384
#, fuzzy
msgid ""
"The :envvar:`PYTHONTRACEMALLOC` environment variable "
"(``PYTHONTRACEMALLOC=NFRAME``) and the :option:`-X` ``tracemalloc=NFRAME`` "
"command line option can be used to start tracing at startup."
msgstr ""
":envvar:`PYTHONTRACEMALLOC` 環境變數 (``PYTHONTRACEMALLOC=NFRAME``) 和 "
":option:`-X` ``tracemalloc=NFRAME`` 命令列選項可用於在啟動時開始跟踪。"

#: ../../library/tracemalloc.rst:388
#, fuzzy
msgid ""
"See also :func:`stop`, :func:`is_tracing` and :func:`get_traceback_limit` "
"functions."
msgstr "另見 :func:`stop`、:func:`is_tracing` 和 :func:`get_traceback_limit` 函式。"

#: ../../library/tracemalloc.rst:394
#, fuzzy
msgid ""
"Stop tracing Python memory allocations: uninstall hooks on Python memory "
"allocators. Also clears all previously collected traces of memory blocks "
"allocated by Python."
msgstr "停止跟踪 Python 記憶體分配：卸載 Python 記憶體分配器上的掛鉤。"
"還清除所有以前收集的由 Python 分配的記憶體塊的痕跡。"

#: ../../library/tracemalloc.rst:398
#, fuzzy
msgid ""
"Call :func:`take_snapshot` function to take a snapshot of traces before "
"clearing them."
msgstr "在清除跟踪之前呼叫 :func:`take_snapshot` 函式拍攝跟踪快照。"

#: ../../library/tracemalloc.rst:401
#, fuzzy
msgid ""
"See also :func:`start`, :func:`is_tracing` and :func:`clear_traces` "
"functions."
msgstr "另見 :func:`start`、:func:`is_tracing` 和 :func:`clear_traces` 函式。"

#: ../../library/tracemalloc.rst:407
#, fuzzy
msgid ""
"Take a snapshot of traces of memory blocks allocated by Python. Return a "
"new :class:`Snapshot` instance."
msgstr "對 Python 分配的記憶體塊的痕跡進行快照。回傳一個新的 Snapshot 實例。"

#: ../../library/tracemalloc.rst:410
#, fuzzy
msgid ""
"The snapshot does not include memory blocks allocated before the :mod:"
"`tracemalloc` module started to trace memory allocations."
msgstr "快照不包括在 :mod:`tracemalloc` 模組開始跟踪記憶體分配之前分配的記憶體塊。"

#: ../../library/tracemalloc.rst:413
#, fuzzy
msgid ""
"Tracebacks of traces are limited to :func:`get_traceback_limit` frames. Use "
"the *nframe* parameter of the :func:`start` function to store more frames."
msgstr ""
"跟踪的回溯僅限於 :func:`get_traceback_limit` 幀。使用 :func:`start` 函式的 "
"*nframe* 參數來儲存更多幀。"

#: ../../library/tracemalloc.rst:416
#, fuzzy
msgid ""
"The :mod:`tracemalloc` module must be tracing memory allocations to take a "
"snapshot, see the :func:`start` function."
msgstr ":mod:`tracemalloc` 模組必須跟踪記憶體分配以獲取快照，請參閱 :func:`start` "
"函式。"

#: ../../library/tracemalloc.rst:419
msgid "See also the :func:`get_object_traceback` function."
msgstr "另請參閱 :func:`get_object_traceback` 函式。"

#: ../../library/tracemalloc.rst:423
msgid "DomainFilter"
msgstr "DomainFilter"

#: ../../library/tracemalloc.rst:427
#, fuzzy
msgid "Filter traces of memory blocks by their address space (domain)."
msgstr "按地址空間（域）過濾記憶體塊的踪跡。"

#: ../../library/tracemalloc.rst:433
#, fuzzy
msgid ""
"If *inclusive* is ``True`` (include), match memory blocks allocated in the "
"address space :attr:`domain`."
msgstr "如果 *inclusive* 為 ``True``（包含），則匹配分配在地址空間 :attr:`domain` "
"中的記憶體塊。"

#: ../../library/tracemalloc.rst:436
#, fuzzy
msgid ""
"If *inclusive* is ``False`` (exclude), match memory blocks not allocated in "
"the address space :attr:`domain`."
msgstr "如果*inclusive* "
"為``False``（排除），則匹配未在地址空間中分配的記憶體塊 :attr:`domain`。"

#: ../../library/tracemalloc.rst:441 ../../library/tracemalloc.rst:693
#, fuzzy
msgid "Address space of a memory block (``int``). Read-only property."
msgstr "記憶體塊的地址空間（``int``）。只讀屬性。"

#: ../../library/tracemalloc.rst:445
#, fuzzy
msgid "Filter"
msgstr "篩選"

#: ../../library/tracemalloc.rst:449
#, fuzzy
msgid "Filter on traces of memory blocks."
msgstr "過濾記憶體塊的痕跡。"

#: ../../library/tracemalloc.rst:451
#, fuzzy
msgid ""
"See the :func:`fnmatch.fnmatch` function for the syntax of "
"*filename_pattern*. The ``'.pyc'`` file extension is replaced with ``'.py'``."
msgstr ""
"請參閱 :func:`fnmatch.fnmatch` 函式了解 *filename_pattern* 的語法。 ``'."
"pyc'`` 文件擴充名替換為 ``'.py'``。"

#: ../../library/tracemalloc.rst:455
msgid "Examples:"
msgstr "範例："

#: ../../library/tracemalloc.rst:457
#, fuzzy
msgid ""
"``Filter(True, subprocess.__file__)`` only includes traces of the :mod:"
"`subprocess` module"
msgstr "``Filter(True, subprocess.__file__)`` 僅包括 :mod:`subprocess` 模組的痕跡"

#: ../../library/tracemalloc.rst:459
#, fuzzy
msgid ""
"``Filter(False, tracemalloc.__file__)`` excludes traces of the :mod:"
"`tracemalloc` module"
msgstr "``Filter(False, tracemalloc.__file__)`` 排除了 tracemalloc 模組的痕跡"

#: ../../library/tracemalloc.rst:461
#, fuzzy
msgid "``Filter(False, \"<unknown>\")`` excludes empty tracebacks"
msgstr "``Filter(False, \"<unknown>\")`` 排除空回溯"

#: ../../library/tracemalloc.rst:464
#, fuzzy
msgid "The ``'.pyo'`` file extension is no longer replaced with ``'.py'``."
msgstr "``'.pyo'`` 文件擴充名不再替換為 ``'.py'``。"

#: ../../library/tracemalloc.rst:467 ../../library/tracemalloc.rst:688
msgid "Added the :attr:`domain` attribute."
msgstr "新增 :attr:`domain` 屬性。"

#: ../../library/tracemalloc.rst:473
#, fuzzy
msgid "Address space of a memory block (``int`` or ``None``)."
msgstr "記憶體塊的地址空間（``int`` 或``None``）。"

#: ../../library/tracemalloc.rst:475 ../../library/tracemalloc.rst:695
#, fuzzy
msgid ""
"tracemalloc uses the domain ``0`` to trace memory allocations made by "
"Python. C extensions can use other domains to trace other resources."
msgstr "tracemalloc 使用域 ``0``來跟踪 Python 進行的記憶體分配。 C "
"擴充可以使用其他域來跟踪其他資源。"

#: ../../library/tracemalloc.rst:480
#, fuzzy
msgid ""
"If *inclusive* is ``True`` (include), only match memory blocks allocated in "
"a file with a name matching :attr:`filename_pattern` at line number :attr:"
"`lineno`."
msgstr ""
"如果 *inclusive* 為 ``True``（包含），則僅匹配文件中分配的記憶體塊，"
"該文件的名稱與 :attr:`filename_pattern` 在行號 :attr:`lineno` 匹配。"

#: ../../library/tracemalloc.rst:484
#, fuzzy
msgid ""
"If *inclusive* is ``False`` (exclude), ignore memory blocks allocated in a "
"file with a name matching :attr:`filename_pattern` at line number :attr:"
"`lineno`."
msgstr ""
"如果*inclusive* "
"為``False``（排除），則忽略在名稱匹配 :attr:`filename_pattern` "
"行號 :attr:`lineno` 的文件中分配的記憶體塊。"

#: ../../library/tracemalloc.rst:490
#, fuzzy
msgid ""
"Line number (``int``) of the filter. If *lineno* is ``None``, the filter "
"matches any line number."
msgstr "過濾器的行號（``int``）。如果 *lineno* 是 ``None``，過濾器匹配任何行號。"

#: ../../library/tracemalloc.rst:495
#, fuzzy
msgid "Filename pattern of the filter (``str``). Read-only property."
msgstr "過濾器的文件名模式（``str``）。只讀屬性。"

#: ../../library/tracemalloc.rst:499
#, fuzzy
msgid ""
"If *all_frames* is ``True``, all frames of the traceback are checked. If "
"*all_frames* is ``False``, only the most recent frame is checked."
msgstr "如果 *all_frames* 為 ``True``，則檢查回溯的所有幀。如果*all_frames* "
"為 ``False``，則只檢查最近的幀。"

#: ../../library/tracemalloc.rst:502
#, fuzzy
msgid ""
"This attribute has no effect if the traceback limit is ``1``.  See the :func:"
"`get_traceback_limit` function and :attr:`Snapshot.traceback_limit` "
"attribute."
msgstr ""
"如果回溯限制為 ``1``，則此屬性無效。請參閱 :func:`get_traceback_limit` "
"函式和 :attr:`Snapshot.traceback limit` 屬性。"

#: ../../library/tracemalloc.rst:508
#, fuzzy
msgid "Frame"
msgstr "框架"

#: ../../library/tracemalloc.rst:512
#, fuzzy
msgid "Frame of a traceback."
msgstr "追溯的框架。"

#: ../../library/tracemalloc.rst:514
#, fuzzy
msgid "The :class:`Traceback` class is a sequence of :class:`Frame` instances."
msgstr ":class:`Traceback` 類是一系列 :class:`Frame` 實例。"

#: ../../library/tracemalloc.rst:518
#, fuzzy
msgid "Filename (``str``)."
msgstr "文件名（``str``）。"

#: ../../library/tracemalloc.rst:522
#, fuzzy
msgid "Line number (``int``)."
msgstr "行號（``int``）。"

#: ../../library/tracemalloc.rst:526
#, fuzzy
msgid "Snapshot"
msgstr "快照"

#: ../../library/tracemalloc.rst:530
#, fuzzy
msgid "Snapshot of traces of memory blocks allocated by Python."
msgstr "Python 分配的記憶體塊痕蹟的快照。"

#: ../../library/tracemalloc.rst:532
#, fuzzy
msgid "The :func:`take_snapshot` function creates a snapshot instance."
msgstr ":func:`take_snapshot` 函式建立一個快照實例。"

#: ../../library/tracemalloc.rst:536
#, fuzzy
msgid ""
"Compute the differences with an old snapshot. Get statistics as a sorted "
"list of :class:`StatisticDiff` instances grouped by *key_type*."
msgstr "計算與舊快照的差異。將統計資訊作為按 *key_type* 分組的 StatisticDiff "
"實例的排序列表獲取。"

#: ../../library/tracemalloc.rst:539
#, fuzzy
msgid ""
"See the :meth:`Snapshot.statistics` method for *key_type* and *cumulative* "
"parameters."
msgstr "請參閱 *key_type* 和 *cumulative* 參數的 Snapshot.statistics 方法。"

#: ../../library/tracemalloc.rst:542
#, fuzzy
msgid ""
"The result is sorted from the biggest to the smallest by: absolute value of :"
"attr:`StatisticDiff.size_diff`, :attr:`StatisticDiff.size`, absolute value "
"of :attr:`StatisticDiff.count_diff`, :attr:`Statistic.count` and then by :"
"attr:`StatisticDiff.traceback`."
msgstr ""
"結果按以下方式從大到小排序：:attr:`StatisticDiff.size_diff` "
"的絕對值、:attr:`StatisticDiff.size`、:attr:`StatisticDiff.count_diff` "
"的絕對值、:attr:`Statistic .count`，然後通過 :attr:`StatisticDiff."
"traceback`。"

#: ../../library/tracemalloc.rst:550
#, fuzzy
msgid "Write the snapshot into a file."
msgstr "將快照寫入文件。"

#: ../../library/tracemalloc.rst:552
#, fuzzy
msgid "Use :meth:`load` to reload the snapshot."
msgstr "使用 :meth:`load` 重新加載快照。"

#: ../../library/tracemalloc.rst:557
#, fuzzy
msgid ""
"Create a new :class:`Snapshot` instance with a filtered :attr:`traces` "
"sequence, *filters* is a list of :class:`DomainFilter` and :class:`Filter` "
"instances.  If *filters* is an empty list, return a new :class:`Snapshot` "
"instance with a copy of the traces."
msgstr ""
"使用過濾的 traces 序列建立一個新的 Snapshot 實例，*filters* 是 DomainFilter "
"和 Filter 實例的列表。如果 *filters* 是一個空列表，回傳一個新的 "
":class:`Snapshot` 實例，其中包含跟踪的副本。"

#: ../../library/tracemalloc.rst:562
#, fuzzy
msgid ""
"All inclusive filters are applied at once, a trace is ignored if no "
"inclusive filters match it. A trace is ignored if at least one exclusive "
"filter matches it."
msgstr "立即應用所有包容性過濾器，如果沒有包容性過濾器匹配，則忽略跟踪。如果至少有一"
"個獨占篩選器匹配某個跟踪，則該跟踪將被忽略。"

#: ../../library/tracemalloc.rst:566
#, fuzzy
msgid ":class:`DomainFilter` instances are now also accepted in *filters*."
msgstr ":class:`DomainFilter` 實例現在也被 *filters* 接受。"

#: ../../library/tracemalloc.rst:572
#, fuzzy
msgid "Load a snapshot from a file."
msgstr "從文件加載快照。"

#: ../../library/tracemalloc.rst:574
msgid "See also :meth:`dump`."
msgstr "另請參閱 :meth:`dump`\\ 。"

#: ../../library/tracemalloc.rst:579
#, fuzzy
msgid ""
"Get statistics as a sorted list of :class:`Statistic` instances grouped by "
"*key_type*:"
msgstr "將統計資訊作為按 *key_type* 分組的 :class:`Statistic` 實例的排序列表獲取："

#: ../../library/tracemalloc.rst:583
msgid "key_type"
msgstr "key_type"

#: ../../library/tracemalloc.rst:583
msgid "description"
msgstr "描述"

#: ../../library/tracemalloc.rst:585
msgid "``'filename'``"
msgstr "``'filename'``"

#: ../../library/tracemalloc.rst:585
#, fuzzy
msgid "filename"
msgstr "文件名"

#: ../../library/tracemalloc.rst:586
msgid "``'lineno'``"
msgstr "``'lineno'``"

#: ../../library/tracemalloc.rst:586
#, fuzzy
msgid "filename and line number"
msgstr "文件名和行號"

#: ../../library/tracemalloc.rst:587
msgid "``'traceback'``"
msgstr "``'traceback'``"

#: ../../library/tracemalloc.rst:587
#, fuzzy
msgid "traceback"
msgstr "追溯"

#: ../../library/tracemalloc.rst:590
#, fuzzy
msgid ""
"If *cumulative* is ``True``, cumulate size and count of memory blocks of all "
"frames of the traceback of a trace, not only the most recent frame. The "
"cumulative mode can only be used with *key_type* equals to ``'filename'`` "
"and ``'lineno'``."
msgstr ""
"如果 *cumulative* "
"為 ``True``，則累積跟踪的所有幀的記憶體塊的大小和計數，而不僅僅是最近的幀。"
"累積模式只能與 *key_type* 等於 ``'filename'`` 和 ``'lineno'`` 一起使用。"

#: ../../library/tracemalloc.rst:595
#, fuzzy
msgid ""
"The result is sorted from the biggest to the smallest by: :attr:`Statistic."
"size`, :attr:`Statistic.count` and then by :attr:`Statistic.traceback`."
msgstr ""
"結果按以下順序從最大到最小排序：:attr:`Statistic.size`、:attr:`Statistic."
"count`，然後按 :attr:`Statistic.traceback`。"

#: ../../library/tracemalloc.rst:602
#, fuzzy
msgid ""
"Maximum number of frames stored in the traceback of :attr:`traces`: result "
"of the :func:`get_traceback_limit` when the snapshot was taken."
msgstr "traces 的回溯中儲存的最大幀數：拍攝快照時 get_traceback_limit 的結果。"

#: ../../library/tracemalloc.rst:607
#, fuzzy
msgid ""
"Traces of all memory blocks allocated by Python: sequence of :class:`Trace` "
"instances."
msgstr "Python 分配的所有記憶體塊的跟踪：Trace 實例序列。"

#: ../../library/tracemalloc.rst:610
#, fuzzy
msgid ""
"The sequence has an undefined order. Use the :meth:`Snapshot.statistics` "
"method to get a sorted list of statistics."
msgstr "該序列具有未定義的順序。使用 :meth:`Snapshot.statistics` "
"方法獲取統計資訊的排序列表。"

#: ../../library/tracemalloc.rst:615
#, fuzzy
msgid "Statistic"
msgstr "統計"

#: ../../library/tracemalloc.rst:619
#, fuzzy
msgid "Statistic on memory allocations."
msgstr "有關記憶體分配的統計資訊。"

#: ../../library/tracemalloc.rst:621
#, fuzzy
msgid ""
":func:`Snapshot.statistics` returns a list of :class:`Statistic` instances."
msgstr ":func:`Snapshot.statistics` 回傳一個列表 :class:`Statistic` 實例。"

#: ../../library/tracemalloc.rst:623
#, fuzzy
msgid "See also the :class:`StatisticDiff` class."
msgstr "另請參見 StatisticDiff 類。"

#: ../../library/tracemalloc.rst:627
#, fuzzy
msgid "Number of memory blocks (``int``)."
msgstr "記憶體塊數（``int``）。"

#: ../../library/tracemalloc.rst:631
#, fuzzy
msgid "Total size of memory blocks in bytes (``int``)."
msgstr "以位元組為單位的記憶體塊總大小（``int``）。"

#: ../../library/tracemalloc.rst:635 ../../library/tracemalloc.rst:704
#, fuzzy
msgid ""
"Traceback where the memory block was allocated, :class:`Traceback` instance."
msgstr "分配記憶體塊的追溯，:class:`Traceback` 實例。"

#: ../../library/tracemalloc.rst:640
msgid "StatisticDiff"
msgstr "StatisticDiff"

#: ../../library/tracemalloc.rst:644
#, fuzzy
msgid ""
"Statistic difference on memory allocations between an old and a new :class:"
"`Snapshot` instance."
msgstr "舊實例和新實例之間記憶體分配的統計差異。"

#: ../../library/tracemalloc.rst:647
#, fuzzy
msgid ""
":func:`Snapshot.compare_to` returns a list of :class:`StatisticDiff` "
"instances. See also the :class:`Statistic` class."
msgstr ""
":func:`Snapshot.compare_to` 回傳一個列表 :class:`StatisticDiff` "
"實例。另見 :class:`Statistic` 類。"

#: ../../library/tracemalloc.rst:652
#, fuzzy
msgid ""
"Number of memory blocks in the new snapshot (``int``): ``0`` if the memory "
"blocks have been released in the new snapshot."
msgstr "新快照中的記憶體塊數（``int``）：如果記憶體塊已在新快照中釋放，則為``0``。"

#: ../../library/tracemalloc.rst:657
#, fuzzy
msgid ""
"Difference of number of memory blocks between the old and the new snapshots "
"(``int``): ``0`` if the memory blocks have been allocated in the new "
"snapshot."
msgstr "新舊快照之間的記憶體塊數量差異（``int``）：如果記憶體塊已在新快照中分配，則為"
"``0``。"

#: ../../library/tracemalloc.rst:663
#, fuzzy
msgid ""
"Total size of memory blocks in bytes in the new snapshot (``int``): ``0`` if "
"the memory blocks have been released in the new snapshot."
msgstr "新快照中記憶體塊的總大小（以位元組為單位）（ ``int``）：如果記憶體塊已在新快照中"
"釋放，則為 ``0``。"

#: ../../library/tracemalloc.rst:668
#, fuzzy
msgid ""
"Difference of total size of memory blocks in bytes between the old and the "
"new snapshots (``int``): ``0`` if the memory blocks have been allocated in "
"the new snapshot."
msgstr "舊快照和新快照之間記憶體塊總大小的差異（以位元組為單位）（ ``int``）：如果記憶體"
"塊已在新快照中分配，則為 ``0``。"

#: ../../library/tracemalloc.rst:674
#, fuzzy
msgid ""
"Traceback where the memory blocks were allocated, :class:`Traceback` "
"instance."
msgstr "分配記憶體塊的追溯，:class:`Traceback` 實例。"

#: ../../library/tracemalloc.rst:679
#, fuzzy
msgid "Trace"
msgstr "痕跡"

#: ../../library/tracemalloc.rst:683
#, fuzzy
msgid "Trace of a memory block."
msgstr "記憶體塊的踪跡。"

#: ../../library/tracemalloc.rst:685
#, fuzzy
msgid ""
"The :attr:`Snapshot.traces` attribute is a sequence of :class:`Trace` "
"instances."
msgstr ":attr:`Snapshot.traces` 屬性是一系列 :class:`Trace` 實例。"

#: ../../library/tracemalloc.rst:700
#, fuzzy
msgid "Size of the memory block in bytes (``int``)."
msgstr "記憶體塊的大小（以位元組為單位）（``int``）。"

#: ../../library/tracemalloc.rst:709
#, fuzzy
msgid "Traceback"
msgstr "追溯"

#: ../../library/tracemalloc.rst:713
#, fuzzy
msgid ""
"Sequence of :class:`Frame` instances sorted from the oldest frame to the "
"most recent frame."
msgstr ":class:`Frame` 實例的序列，從最舊的幀到最新的幀排序。"

#: ../../library/tracemalloc.rst:716
#, fuzzy
msgid ""
"A traceback contains at least ``1`` frame. If the ``tracemalloc`` module "
"failed to get a frame, the filename ``\"<unknown>\"`` at line number ``0`` "
"is used."
msgstr ""
"回溯至少包含 ``1``幀。如果 ``tracemalloc`` 模組無法獲取幀，則使用行號 ``0`` "
"處的文件名 ``\"<unknown>\"``。"

#: ../../library/tracemalloc.rst:720
#, fuzzy
msgid ""
"When a snapshot is taken, tracebacks of traces are limited to :func:"
"`get_traceback_limit` frames. See the :func:`take_snapshot` function. The "
"original number of frames of the traceback is stored in the :attr:`Traceback."
"total_nframe` attribute. That allows to know if a traceback has been "
"truncated by the traceback limit."
msgstr ""
"拍攝快照時，跟踪的回溯僅限於 :func:`get_traceback_limit` "
"幀。請參閱 :func:`take_snapshot` 函式。 traceback 的原始幀數儲存在 "
"Traceback.total_nframe 屬性中。這允許知道回溯是否已被回溯限制截斷。"

#: ../../library/tracemalloc.rst:726
#, fuzzy
msgid ""
"The :attr:`Trace.traceback` attribute is an instance of :class:`Traceback` "
"instance."
msgstr ":attr:`Trace.traceback` 屬性是 :class:`Traceback` 實例的一個實例。"

#: ../../library/tracemalloc.rst:729
#, fuzzy
msgid ""
"Frames are now sorted from the oldest to the most recent, instead of most "
"recent to oldest."
msgstr "幀現在從最舊到最近排序，而不是從最近到最舊。"

#: ../../library/tracemalloc.rst:734
#, fuzzy
msgid ""
"Total number of frames that composed the traceback before truncation. This "
"attribute can be set to ``None`` if the information is not available."
msgstr "構成截斷前回溯的幀總數。如果資訊不可用，可以將此屬性設定為 ``None`` 。"

#: ../../library/tracemalloc.rst:738
#, fuzzy
msgid "The :attr:`Traceback.total_nframe` attribute was added."
msgstr "新增了 :attr:`Traceback.total_nframe` 屬性。"

#: ../../library/tracemalloc.rst:743
#, fuzzy
msgid ""
"Format the traceback as a list of lines. Use the :mod:`linecache` module to "
"retrieve lines from the source code. If *limit* is set, format the *limit* "
"most recent frames if *limit* is positive. Otherwise, format the "
"``abs(limit)`` oldest frames. If *most_recent_first* is ``True``, the order "
"of the formatted frames is reversed, returning the most recent frame first "
"instead of last."
msgstr ""
"將回溯格式化為行列表。使用 :mod:`linecache` 模組從源程式碼中檢索行。"
"如果設定了 *limit*，如果 *limit* 為正，則格式化 *limit* 最近的幀。否則，"
"格式化 ``abs(limit)`` 最舊的幀。如果 *most_recent_first* 為 "
"``True``，則格式化幀的順序顛倒，首先回傳最近的幀而不是最後一個。"

#: ../../library/tracemalloc.rst:750
#, fuzzy
msgid ""
"Similar to the :func:`traceback.format_tb` function, except that :meth:`."
"format` does not include newlines."
msgstr "類似於 :func:`traceback.format_tb` 函式，只是 :meth:`.format` 不包括換行符。"

#: ../../library/tracemalloc.rst:753
msgid "Example::"
msgstr ""
"範例：\n"
"\n"
"::"
