# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-16 00:18+0000\n"
"PO-Revision-Date: 2018-05-23 16:15+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/venv.rst:2
msgid ":mod:`venv` --- Creation of virtual environments"
msgstr ":mod:`venv` --- 建立虛擬環境"

#: ../../library/venv.rst:12
msgid "**Source code:** :source:`Lib/venv/`"
msgstr "**原始碼：**\\ :source:`Lib/venv/`"

#: ../../library/venv.rst:21
#, fuzzy
msgid ""
"The :mod:`!venv` module supports creating lightweight \"virtual "
"environments\", each with their own independent set of Python packages "
"installed in their :mod:`site` directories. A virtual environment is created "
"on top of an existing Python installation, known as the virtual "
"environment's \"base\" Python, and may optionally be isolated from the "
"packages in the base environment, so only those explicitly installed in the "
"virtual environment are available."
msgstr ""
":mod:`!venv` 模組支援建立輕量級“虛擬環境”，每個環境都有自己獨立的 Python "
"包集安裝在它們的 :mod:`site` 目錄中。虛擬環境是在現有 Python 安裝之上建立的，"
"稱為虛擬環境的“基礎”Python，並且可以選擇與基礎環境中的包隔離，因此只有明確安"
"裝在虛擬環境中的那些才可用。"

#: ../../library/venv.rst:29
#, fuzzy
msgid ""
"When used from within a virtual environment, common installation tools such "
"as `pip`_ will install Python packages into a virtual environment without "
"needing to be told to do so explicitly."
msgstr ""
"當在虛擬環境中使用時，諸如 pip 之類的常用安裝工具會將 Python "
"包安裝到虛擬環境中，而無需明確告知這樣做。"

#: ../../library/venv.rst:33
msgid "See :pep:`405` for more background on Python virtual environments."
msgstr "更多關於 Python 虛擬環境的背景資訊請見 :pep:`405`\\ 。"

#: ../../library/venv.rst:37
#, fuzzy
msgid ""
"`Python Packaging User Guide: Creating and using virtual environments "
"<https://packaging.python.org/guides/installing-using-pip-and-virtual-"
"environments/#creating-a-virtual-environment>`__"
msgstr ""
"`Python 打包使用者指南：建立和使用虛擬環境 <https://packaging.python.org/"
"guides/installing-using-pip-and-virtual-environments/#creating-a-virtual-"
"environment>`__"

#: ../../includes/wasm-notavail.rst:3
#, fuzzy
msgid ":ref:`Availability <availability>`: not Emscripten, not WASI."
msgstr ":ref:`Availability <availability>`：不是 Emscripten，不是 WASI。"

#: ../../includes/wasm-notavail.rst:5
#, fuzzy
msgid ""
"This module does not work or is not available on WebAssembly platforms "
"``wasm32-emscripten`` and ``wasm32-wasi``. See :ref:`wasm-availability` for "
"more information."
msgstr ""
"此模組在 WebAssembly 平台 ``wasm32-emscripten`` 和 ``wasm32-wasi`` 上不起作用或不可用"
"。有關更多資訊，請參閱 :ref:`wasm-availability`。"

#: ../../library/venv.rst:43
#, fuzzy
msgid "Creating virtual environments"
msgstr "建立虛擬環境"

#: ../../using/venv-create.inc:1
#, fuzzy
msgid ""
"Creation of :ref:`virtual environments <venv-def>` is done by executing the "
"command ``venv``::"
msgstr ":ref:`虛擬環境 <venv-def>` 的建立是通過執行命令 ``venv``::"

#: ../../using/venv-create.inc:6
#, fuzzy
msgid ""
"Running this command creates the target directory (creating any parent "
"directories that don't exist already) and places a ``pyvenv.cfg`` file in it "
"with a ``home`` key pointing to the Python installation from which the "
"command was run (a common name for the target directory is ``.venv``).  It "
"also creates a ``bin`` (or ``Scripts`` on Windows) subdirectory containing a "
"copy/symlink of the Python binary/binaries (as appropriate for the platform "
"or arguments used at environment creation time). It also creates an "
"(initially empty) ``lib/pythonX.Y/site-packages`` subdirectory (on Windows, "
"this is ``Lib\\site-packages``). If an existing directory is specified, it "
"will be re-used."
msgstr ""
"運行此命令會建立目標目錄（建立任何尚不存在的父目錄）"
"並在其中放置一個 ``pyvenv.cfg`` 文件，其中的 ``home`` 鍵指向命令所在的 "
"Python 安裝運行（目標目錄的通用名稱是 ``.venv``）。它還會建立一個 ``bin``（"
"或 Windows 上的``Scripts``）子目錄，其中包含 Python 二進位文件/二進位文件的副"
"本/符號鏈接（適用於平台或在環境建立時使用的參數）。它還建立了一個（最初是空的"
"）``lib/pythonX.Y/site-packages`` 子目錄（在 Windows 上，這是 ``Lib\\site"
"-packages``）。如果指定了現有目錄，它將被重新使用。"

#: ../../using/venv-create.inc:17
#, fuzzy
msgid ""
"``pyvenv`` was the recommended tool for creating virtual environments for "
"Python 3.3 and 3.4, and is :ref:`deprecated in Python 3.6 <whatsnew36-venv>`."
msgstr ""
"``pyvenv`` 是為 Python 3.3 和 3.4 建立虛擬環境的推薦工具，在 Python 3.6 "
"<whatsnew36-venv> 中已棄用 :ref:`。"

#: ../../using/venv-create.inc:22
#, fuzzy
msgid ""
"The use of ``venv`` is now recommended for creating virtual environments."
msgstr "現在建議使用 ``venv`` 來建立虛擬環境。"

#: ../../using/venv-create.inc:27
#, fuzzy
msgid "On Windows, invoke the ``venv`` command as follows::"
msgstr "在 Windows 上，呼叫 ``venv`` 命令如下："

#: ../../using/venv-create.inc:31
#, fuzzy
msgid ""
"Alternatively, if you configured the ``PATH`` and ``PATHEXT`` variables for "
"your :ref:`Python installation <using-on-windows>`::"
msgstr ""
"或者，如果您為您的 :ref:`Python 安裝 <using-on-windows>`:: 配置了 ``PATH`` "
"和 ``PATHEXT`` 變數："

#: ../../using/venv-create.inc:36
#, fuzzy
msgid "The command, if run with ``-h``, will show the available options::"
msgstr "如果使用 ``-h`` 運行該命令，將顯示可用選項::"

#: ../../using/venv-create.inc:70
#, fuzzy
msgid ""
"Add ``--upgrade-deps`` option to upgrade pip + setuptools to the latest on "
"PyPI"
msgstr "新增 ``--upgrade-deps`` 選項以將 pip + setuptools 升級到 PyPI 上的最新版本"

#: ../../using/venv-create.inc:73
#, fuzzy
msgid ""
"Installs pip by default, added the ``--without-pip``  and ``--copies`` "
"options"
msgstr "預設安裝 pip，新增了 ``--without-pip`` 和 ``--copies`` 選項"

#: ../../using/venv-create.inc:77
#, fuzzy
msgid ""
"In earlier versions, if the target directory already existed, an error was "
"raised, unless the ``--clear`` or ``--upgrade`` option was provided."
msgstr "在早期版本中，如果目標目錄已經存在，則會引發錯誤，除非提供了 ``--clear`` 或 "
"``--upgrade`` 選項。"

#: ../../using/venv-create.inc:82
#, fuzzy
msgid ""
"While symlinks are supported on Windows, they are not recommended. Of "
"particular note is that double-clicking ``python.exe`` in File Explorer will "
"resolve the symlink eagerly and ignore the virtual environment."
msgstr ""
"雖然 Windows 支援符號鏈接，但不推薦使用。需要特別注意的是，"
"在文件資源管理器中雙擊 ``python.exe`` 會立即解析符號鏈接並忽略虛擬環境。"

#: ../../using/venv-create.inc:87
#, fuzzy
msgid ""
"On Microsoft Windows, it may be required to enable the ``Activate.ps1`` "
"script by setting the execution policy for the user. You can do this by "
"issuing the following PowerShell command:"
msgstr ""
"在 Microsoft Windows 上，可能需要通過為使用者設定執行策略來啟用“Activate."
"ps1”腳本。您可以通過發出以下 PowerShell 命令來執行此操作："

#: ../../using/venv-create.inc:91
#, fuzzy
msgid ""
"PS C:\\> Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser"
msgstr ""
"PS C:\\> Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser"

#: ../../using/venv-create.inc:93
#, fuzzy
msgid ""
"See `About Execution Policies <https://go.microsoft.com/fwlink/?"
"LinkID=135170>`_ for more information."
msgstr "有關詳細資訊，請參閱`關於執行策略 <https://go.microsoft.com/fwlink/"
"?LinkID=135170>`_。"

#: ../../using/venv-create.inc:97
#, fuzzy
msgid ""
"The created ``pyvenv.cfg`` file also includes the ``include-system-site-"
"packages`` key, set to ``true`` if ``venv`` is run with the ``--system-site-"
"packages`` option, ``false`` otherwise."
msgstr ""
"建立的 ``pyvenv.cfg`` 文件還包括 ``include-system-site-packages`` 鍵，如果 "
"``venv`` 使用 ``--system-site 運行，則設定為 ``true`` -packages`` 選項，"
"否則為 ``false``。"

#: ../../using/venv-create.inc:101
#, fuzzy
msgid ""
"Unless the ``--without-pip`` option is given, :mod:`ensurepip` will be "
"invoked to bootstrap ``pip`` into the virtual environment."
msgstr "除非給出 ``--without-pip`` 選項，否則將呼叫 :mod:`ensurepip` 將 ``pip`` "
"引導到虛擬環境中。"

#: ../../using/venv-create.inc:104
#, fuzzy
msgid ""
"Multiple paths can be given to ``venv``, in which case an identical virtual "
"environment will be created, according to the given options, at each "
"provided path."
msgstr "可以為 ``venv`` 提供多個路徑，在這種情況下，將根據給定的選項在每個提供的路徑"
"上建立相同的虛擬環境。"

#: ../../library/venv.rst:50
#, fuzzy
msgid "How venvs work"
msgstr "靜脈如何工作"

#: ../../library/venv.rst:52
#, fuzzy
msgid ""
"When a Python interpreter is running from a virtual environment, :data:`sys."
"prefix` and :data:`sys.exec_prefix` point to the directories of the virtual "
"environment, whereas :data:`sys.base_prefix` and :data:`sys."
"base_exec_prefix` point to those of the base Python used to create the "
"environment. It is sufficient to check ``sys.prefix == sys.base_prefix`` to "
"determine if the current interpreter is running from a virtual environment."
msgstr ""
"當 Python 直譯器從虛擬環境運行時，:data:`sys.prefix` 和 :data:`sys."
"exec_prefix` 指向虛擬環境的目錄，而 :data:`sys.base_prefix` 和:data: `sys."
"base_exec_prefix` 指向用於建立環境的基本 Python 的那些。檢查 ``sys.prefix == "
"sys.base_prefix`` 就足以確定當前直譯器是否在虛擬環境中運行。"

#: ../../library/venv.rst:61
#, fuzzy
msgid ""
"A virtual environment may be \"activated\" using a script in its binary "
"directory (``bin`` on POSIX; ``Scripts`` on Windows). This will prepend that "
"directory to your :envvar:`!PATH`, so that running :program:`python` will "
"invoke the environment's Python interpreter and you can run installed "
"scripts without having to use their full path. The invocation of the "
"activation script is platform-specific (:samp:`{<venv>}` must be replaced by "
"the path to the directory containing the virtual environment):"
msgstr ""
"可以使用二進位目錄中的腳本“激活”虛擬環境（在 POSIX 上為 ``bin``；在 Windows "
"上為``Scripts``）。這會將那個目錄新增到您的 :envvar:`!PATH` 中，以便運行 "
":program:`python` 將呼叫環境的 Python 直譯器，並且您可以運行已安裝的腳本而無"
"需使用它們的完整路徑。激活腳本的呼叫是特定於平台的（:samp:`{<venv>}` "
"必須替換為包含虛擬環境的目錄的路徑）："

#: ../../library/venv.rst:71
msgid "Platform"
msgstr "平台"

#: ../../library/venv.rst:71
#, fuzzy
msgid "Shell"
msgstr "殼"

#: ../../library/venv.rst:71
#, fuzzy
msgid "Command to activate virtual environment"
msgstr "激活虛擬環境的命令"

#: ../../library/venv.rst:73
msgid "POSIX"
msgstr "POSIX"

#: ../../library/venv.rst:73
msgid "bash/zsh"
msgstr "bash/zsh"

#: ../../library/venv.rst:73
msgid ":samp:`$ source {<venv>}/bin/activate`"
msgstr ":samp:`$ source {<venv>}/bin/activate`"

#: ../../library/venv.rst:75
msgid "fish"
msgstr "fish"

#: ../../library/venv.rst:75
msgid ":samp:`$ source {<venv>}/bin/activate.fish`"
msgstr ":samp:`$ source {<venv>}/bin/activate.fish`"

#: ../../library/venv.rst:77
msgid "csh/tcsh"
msgstr "csh/tcsh"

#: ../../library/venv.rst:77
msgid ":samp:`$ source {<venv>}/bin/activate.csh`"
msgstr ":samp:`$ source {<venv>}/bin/activate.csh`"

#: ../../library/venv.rst:79 ../../library/venv.rst:83
msgid "PowerShell"
msgstr "PowerShell"

#: ../../library/venv.rst:79
msgid ":samp:`$ {<venv>}/bin/Activate.ps1`"
msgstr ":samp:`$ {<venv>}/bin/Activate.ps1`"

#: ../../library/venv.rst:81
msgid "Windows"
msgstr "Windows"

#: ../../library/venv.rst:81
msgid "cmd.exe"
msgstr "cmd.exe"

#: ../../library/venv.rst:81
msgid ":samp:`C:\\\\> {<venv>}\\\\Scripts\\\\activate.bat`"
msgstr ":samp:`C:\\\\> {<venv>}\\\\Scripts\\\\activate.bat`"

#: ../../library/venv.rst:83
msgid ":samp:`PS C:\\\\> {<venv>}\\\\Scripts\\\\Activate.ps1`"
msgstr ":samp:`PS C:\\\\> {<venv>}\\\\Scripts\\\\Activate.ps1`"

#: ../../library/venv.rst:86
#, fuzzy
msgid ":program:`fish` and :program:`csh` activation scripts."
msgstr ":program:`fish` 和 :program:`csh` 激活腳本。"

#: ../../library/venv.rst:89
#, fuzzy
msgid ""
"PowerShell activation scripts installed under POSIX for PowerShell Core "
"support."
msgstr "在 POSIX 下安裝的 PowerShell 激活腳本用於 PowerShell Core 支援。"

#: ../../library/venv.rst:93
#, fuzzy
msgid ""
"You don't specifically *need* to activate a virtual environment, as you can "
"just specify the full path to that environment's Python interpreter when "
"invoking Python. Furthermore, all scripts installed in the environment "
"should be runnable without activating it."
msgstr ""
"您不需要特別*需要*激活虛擬環境，因為您可以在呼叫 Python 時指定該環境的 "
"Python 直譯器的完整路徑。此外，環境中安裝的所有腳本都應該無需激活即可運行。"

#: ../../library/venv.rst:99
#, fuzzy
msgid ""
"In order to achieve this, scripts installed into virtual environments have a "
"\"shebang\" line which points to the environment's Python interpreter, i.e. :"
"samp:`#!/{<path-to-venv>}/bin/python`. This means that the script will run "
"with that interpreter regardless of the value of :envvar:`!PATH`. On "
"Windows, \"shebang\" line processing is supported if you have the :ref:"
"`launcher` installed. Thus, double-clicking an installed script in a Windows "
"Explorer window should run it with the correct interpreter without the "
"environment needing to be activated or on the :envvar:`!PATH`."
msgstr ""
"為了實作這一點，安裝到虛擬環境中的腳本有一個 ``shebang`` 行，它指向環境的 Python "
"直譯器，即 :samp:`#!/{<path-to-venv>}/bin/python`。這意味著無論 "
":envvar:`!PATH` 的值如何，腳本都將使用該直譯器運行。在 Windows 上，"
"如果安裝了 :ref:`launcher`，則支援 ``shebang`` 行處理。因此，在 Windows "
"資源管理器窗口中雙擊已安裝的腳本應該使用正確的直譯器運行它，"
"而無需激活環境或在 :envvar:`!PATH` 上。"

#: ../../library/venv.rst:108
#, fuzzy
msgid ""
"When a virtual environment has been activated, the :envvar:`!VIRTUAL_ENV` "
"environment variable is set to the path of the environment. Since explicitly "
"activating a virtual environment is not required to use it, :envvar:`!"
"VIRTUAL_ENV` cannot be relied upon to determine whether a virtual "
"environment is being used."
msgstr ""
"激活虛擬環境後，:envvar:`!VIRTUAL_ENV` "
"環境變數將設定為環境路徑。由於不需要顯式激活虛擬環境即可使用它，因此不能依賴 "
":envvar:`!VIRTUAL_ENV` 來確定是否正在使用虛擬環境。"

#: ../../library/venv.rst:114
#, fuzzy
msgid ""
"Because scripts installed in environments should not expect the environment "
"to be activated, their shebang lines contain the absolute paths to their "
"environment's interpreters. Because of this, environments are inherently non-"
"portable, in the general case. You should always have a simple means of "
"recreating an environment (for example, if you have a requirements file "
"``requirements.txt``, you can invoke ``pip install -r requirements.txt`` "
"using the environment's ``pip`` to install all of the packages needed by the "
"environment). If for any reason you need to move the environment to a new "
"location, you should recreate it at the desired location and delete the one "
"at the old location. If you move an environment because you moved a parent "
"directory of it, you should recreate the environment in its new location. "
"Otherwise, software installed into the environment may not work as expected."
msgstr ""
"因為安裝在環境中的腳本不應該期望環境被激活，所以它們的 shebang 行包含到它們環"
"境的直譯器的絕對路徑。因此，在一般情況下，環境本質上是不可移植的。您應該始終"
"有一種重新建立環境的簡單方法（例如，如果您有一個需求文件“requirements."
"txt”，您可以使用環境的 ``pip``呼叫“pip install -r requirements.txt” ` 以安裝環境"
"所需的所有包）。如果出於任何原因您需要將環境移動到新位置，您應該在所需位置重"
"新建立它並刪除舊位置的環境。如果因為移動了環境的父目錄而移動環境，則應在其新"
"位置重新建立環境。否則，安裝到環境中的軟件可能無法按預期運行。"

#: ../../library/venv.rst:128
#, fuzzy
msgid ""
"You can deactivate a virtual environment by typing ``deactivate`` in your "
"shell. The exact mechanism is platform-specific and is an internal "
"implementation detail (typically, a script or shell function will be used)."
msgstr ""
"您可以通過在 shell 中鍵入 ``deactivate``來停用虛擬環境。確切的機制是特定於平台的"
"，並且是內部實作細節（通常會使用腳本或 shell 函式）。"

#: ../../library/venv.rst:136
msgid "API"
msgstr "API"

#: ../../library/venv.rst:140
#, fuzzy
msgid ""
"The high-level method described above makes use of a simple API which "
"provides mechanisms for third-party virtual environment creators to "
"customize environment creation according to their needs, the :class:"
"`EnvBuilder` class."
msgstr ""
"上面描述的高階方法使用了一個簡單的 "
"API，它為第三方虛擬環境建立者提供了根據他們的需要定制環境建立的機制，即 "
":class:`EnvBuilder` 類。"

#: ../../library/venv.rst:148
#, fuzzy
msgid ""
"The :class:`EnvBuilder` class accepts the following keyword arguments on "
"instantiation:"
msgstr ":class:`EnvBuilder` 類在實例化時接受以下關鍵字參數："

#: ../../library/venv.rst:151
#, fuzzy
msgid ""
"``system_site_packages`` -- a Boolean value indicating that the system "
"Python site-packages should be available to the environment (defaults to "
"``False``)."
msgstr ""
"``system_site_packages`` -- 一個布爾值，表示系統 Python "
"站點包應該對環境可用（預設為 ``False``）。"

#: ../../library/venv.rst:154
#, fuzzy
msgid ""
"``clear`` -- a Boolean value which, if true, will delete the contents of any "
"existing target directory, before creating the environment."
msgstr "``clear`` -- "
"一個布爾值，如果為真，將在建立環境之前刪除任何現有目標目錄的內容。"

#: ../../library/venv.rst:157
#, fuzzy
msgid ""
"``symlinks`` -- a Boolean value indicating whether to attempt to symlink the "
"Python binary rather than copying."
msgstr "``symlinks`` -- 一個布爾值，指示是否嘗試符號鏈接 Python "
"二進位文件而不是複制。"

#: ../../library/venv.rst:160
#, fuzzy
msgid ""
"``upgrade`` -- a Boolean value which, if true, will upgrade an existing "
"environment with the running Python - for use when that Python has been "
"upgraded in-place (defaults to ``False``)."
msgstr ""
"``upgrade`` -- 一個布爾值，如果為真，將使用正在運行的 Python 升級現有環境 - "
"在 Python 已就地升級時使用（預設為 ``False``）。"

#: ../../library/venv.rst:164
#, fuzzy
msgid ""
"``with_pip`` -- a Boolean value which, if true, ensures pip is installed in "
"the virtual environment. This uses :mod:`ensurepip` with the ``--default-"
"pip`` option."
msgstr ""
"``with_pip`` -- 一個布爾值，如果為真，則確保 pip 安裝在虛擬環境中。這使用 "
":mod:`ensurepip` 和 ``--default-pip`` 選項。"

#: ../../library/venv.rst:168
#, fuzzy
msgid ""
"``prompt`` -- a String to be used after virtual environment is activated "
"(defaults to ``None`` which means directory name of the environment would be "
"used). If the special string ``\".\"`` is provided, the basename of the "
"current directory is used as the prompt."
msgstr ""
"``prompt`` -- 激活虛擬環境後要使用的字串（預設為 "
"``None``，這意味著將使用環境的目錄名稱）。如果提供特殊字串``\".\""
"``，則當前目錄的基本名稱用作提示符。"

#: ../../library/venv.rst:173
#, fuzzy
msgid "``upgrade_deps`` -- Update the base venv modules to the latest on PyPI"
msgstr "``upgrade_deps`` -- 將基本的 venv 模組更新到 PyPI 上的最新版本"

#: ../../library/venv.rst:175 ../../library/venv.rst:350
msgid "Added the ``with_pip`` parameter"
msgstr "新增 ``with_pip`` 參數"

#: ../../library/venv.rst:178 ../../library/venv.rst:353
msgid "Added the ``prompt`` parameter"
msgstr "新增 ``prompt`` 參數"

#: ../../library/venv.rst:181 ../../library/venv.rst:356
msgid "Added the ``upgrade_deps`` parameter"
msgstr "新增 ``upgrade_deps`` 參數"

#: ../../library/venv.rst:184
#, fuzzy
msgid ""
"Creators of third-party virtual environment tools will be free to use the "
"provided :class:`EnvBuilder` class as a base class."
msgstr "第三方虛擬環境工具的建立者可以免費使用提供的 EnvBuilder 類作為基底類別。"

#: ../../library/venv.rst:187
#, fuzzy
msgid "The returned env-builder is an object which has a method, ``create``:"
msgstr "回傳的 env-builder 是一個物件，它有一個方法，``create``："

#: ../../library/venv.rst:191
#, fuzzy
msgid ""
"Create a virtual environment by specifying the target directory (absolute or "
"relative to the current directory) which is to contain the virtual "
"environment.  The ``create`` method will either create the environment in "
"the specified directory, or raise an appropriate exception."
msgstr "通過指定包含虛擬環境的目標目錄（絕對或相對於當前目錄）來建立虛擬環境。 "
"``create`` 方法將在指定目錄中建立環境，或者引發適當的例外。"

#: ../../library/venv.rst:197
#, fuzzy
msgid ""
"The ``create`` method of the :class:`EnvBuilder` class illustrates the hooks "
"available for subclass customization::"
msgstr "EnvBuilder 類的 ``create`` 方法說明了可用於子類別定制的掛鉤::"

#: ../../library/venv.rst:212
#, fuzzy
msgid ""
"Each of the methods :meth:`ensure_directories`, :meth:"
"`create_configuration`, :meth:`setup_python`, :meth:`setup_scripts` and :"
"meth:`post_setup` can be overridden."
msgstr ""
"每個方法 :meth:`ensure_directories`、:meth:`create_configuration`、:meth:`set"
"up_python`、:meth:`setup_scripts` 和 :meth:`post_setup` 都可以被覆蓋。"

#: ../../library/venv.rst:218
#, fuzzy
msgid ""
"Creates the environment directory and all necessary subdirectories that "
"don't already exist, and returns a context object.  This context object is "
"just a holder for attributes (such as paths) for use by the other methods.  "
"If the :class:`EnvBuilder` is created with the arg ``clear=True``, contents "
"of the environment directory will be cleared and then all necessary "
"subdirectories will be recreated."
msgstr ""
"建立環境目錄和所有尚不存在的必要子目錄，並回傳一個上下文物件。此上下文對像只"
"是供其他方法使用的屬性（例如路徑）的容器。如果 :class:`EnvBuilder` 是使用 "
"arg ``clear=True`` "
"建立的，環境目錄的內容將被清除，然後所有必要的子目錄將被重新建立。"

#: ../../library/venv.rst:225
#, fuzzy
msgid ""
"The returned context object is a :class:`types.SimpleNamespace` with the "
"following attributes:"
msgstr "回傳的上下文對像是一個具有以下屬性的 :class:`types.SimpleNamespace`："

#: ../../library/venv.rst:228
#, fuzzy
msgid ""
"``env_dir`` - The location of the virtual environment. Used for "
"``__VENV_DIR__`` in activation scripts (see :meth:`install_scripts`)."
msgstr ""
"``env_dir`` - 虛擬環境的位置。用於激活腳本中的``__VENV_DIR__``（參見 :meth:`"
"install_scripts`）。"

#: ../../library/venv.rst:231
#, fuzzy
msgid ""
"``env_name`` - The name of the virtual environment. Used for "
"``__VENV_NAME__`` in activation scripts (see :meth:`install_scripts`)."
msgstr ""
"``env_name`` - 虛擬環境的名稱。用於激活腳本中的``__VENV_NAME__``（參見：meth"
"：`install_scripts`）。"

#: ../../library/venv.rst:234
#, fuzzy
msgid ""
"``prompt`` - The prompt to be used by the activation scripts. Used for "
"``__VENV_PROMPT__`` in activation scripts (see :meth:`install_scripts`)."
msgstr ""
"``prompt`` - 激活腳本使用的提示符。用於激活腳本中的``__VENV_PROMPT__``（參見"
" :meth:`install_scripts`）。"

#: ../../library/venv.rst:237
#, fuzzy
msgid ""
"``executable`` - The underlying Python executable used by the virtual "
"environment. This takes into account the case where a virtual environment is "
"created from another virtual environment."
msgstr "``executable`` - 虛擬環境使用的底層 Python "
"可執行文件。這考慮了從另一個虛擬環境建立虛擬環境的情況。"

#: ../../library/venv.rst:241
#, fuzzy
msgid "``inc_path`` - The include path for the virtual environment."
msgstr "``inc_path`` - 虛擬環境的包含路徑。"

#: ../../library/venv.rst:243
#, fuzzy
msgid "``lib_path`` - The purelib path for the virtual environment."
msgstr "``lib_path`` - 虛擬環境的 purelib 路徑。"

#: ../../library/venv.rst:245
#, fuzzy
msgid "``bin_path`` - The script path for the virtual environment."
msgstr "``bin_path`` - 虛擬環境的腳本路徑。"

#: ../../library/venv.rst:247
#, fuzzy
msgid ""
"``bin_name`` - The name of the script path relative to the virtual "
"environment location. Used for ``__VENV_BIN_NAME__`` in activation scripts "
"(see :meth:`install_scripts`)."
msgstr ""
"``bin_name`` - 相對於虛擬環境位置的腳本路徑的名稱。用於激活腳本中的 "
"`__VENV_BIN_NAME__``（參見 :meth:`install_scripts`）。"

#: ../../library/venv.rst:251
#, fuzzy
msgid ""
"``env_exe`` - The name of the Python interpreter in the virtual environment. "
"Used for ``__VENV_PYTHON__`` in activation scripts (see :meth:"
"`install_scripts`)."
msgstr ""
"``env_exe`` - 虛擬環境中 Python 直譯器的名稱。用於激活腳本中的``__VENV_PYTHON"
"__``（參見 :meth:`install_scripts`）。"

#: ../../library/venv.rst:255
#, fuzzy
msgid ""
"``env_exec_cmd`` - The name of the Python interpreter, taking into account "
"filesystem redirections. This can be used to run Python in the virtual "
"environment."
msgstr "``env_exec_cmd`` - Python 直譯器的名稱，考慮到文件系統重定向。"
"這可用於在虛擬環境中運行 Python。"

#: ../../library/venv.rst:260
#, fuzzy
msgid ""
"The attribute ``lib_path`` was added to the context, and the context object "
"was documented."
msgstr "屬性 ``lib_path`` 被新增到上下文中，並且記錄了上下文物件。"

#: ../../library/venv.rst:264
#, fuzzy
msgid ""
"The *venv* :ref:`sysconfig installation scheme <installation_paths>` is used "
"to construct the paths of the created directories."
msgstr "*venv* :ref:`sysconfig 安裝方案 <installation_paths>` "
"用於構建已建立目錄的路徑。"

#: ../../library/venv.rst:271
#, fuzzy
msgid "Creates the ``pyvenv.cfg`` configuration file in the environment."
msgstr "在環境中建立 ``pyvenv.cfg`` 配置文件。"

#: ../../library/venv.rst:275
#, fuzzy
msgid ""
"Creates a copy or symlink to the Python executable in the environment. On "
"POSIX systems, if a specific executable ``python3.x`` was used, symlinks to "
"``python`` and ``python3`` will be created pointing to that executable, "
"unless files with those names already exist."
msgstr ""
"在環境中建立指向 Python 可執行文件的副本或符號鏈接。在 POSIX 系統上，"
"如果使用了特定的可執行文件 ``python3.x``，將建立指向該可執行文件的``python`` "
"和``python3`` 的符號鏈接，除非具有這些名稱的文件已經存在。"

#: ../../library/venv.rst:282
#, fuzzy
msgid ""
"Installs activation scripts appropriate to the platform into the virtual "
"environment."
msgstr "將適合平台的激活腳本安裝到虛擬環境中。"

#: ../../library/venv.rst:287
#, fuzzy
msgid ""
"Upgrades the core venv dependency packages (currently ``pip`` and "
"``setuptools``) in the environment. This is done by shelling out to the "
"``pip`` executable in the environment."
msgstr ""
"升級環境中的核心 venv 依賴包（當前為 ``pip`` 和 ``setuptools``）。"
"這是通過對環境中的 ``pip`` 可執行文件進行脫殼來完成的。"

#: ../../library/venv.rst:295
#, fuzzy
msgid ""
"A placeholder method which can be overridden in third party implementations "
"to pre-install packages in the virtual environment or perform other post-"
"creation steps."
msgstr "一種佔位符方法，可以在第三方實作中覆蓋以在虛擬環境中預安裝包或執行其他建立後"
"步驟。"

#: ../../library/venv.rst:299
#, fuzzy
msgid ""
"Windows now uses redirector scripts for ``python[w].exe`` instead of copying "
"the actual binaries. In 3.7.2 only :meth:`setup_python` does nothing unless "
"running from a build in the source tree."
msgstr ""
"Windows 現在使用 ``python[w].exe`` "
"的重定向器腳本，而不是複制實際的二進位文件。僅在 3.7.2 中 "
":meth:`setup_python` 不執行任何操作，除非從源程式碼樹中的構建運行。"

#: ../../library/venv.rst:304
#, fuzzy
msgid ""
"Windows copies the redirector scripts as part of :meth:`setup_python` "
"instead of :meth:`setup_scripts`. This was not the case in 3.7.2. When using "
"symlinks, the original executables will be linked."
msgstr ""
"Windows 將重定向器腳本複制為 setup_python 的一部分，而不是 setup_scripts "
"的一部分。 3.7.2 中不是這種情況。使用符號鏈接時，將鏈接原始可執行文件。"

#: ../../library/venv.rst:309
#, fuzzy
msgid ""
"In addition, :class:`EnvBuilder` provides this utility method that can be "
"called from :meth:`setup_scripts` or :meth:`post_setup` in subclasses to "
"assist in installing custom scripts into the virtual environment."
msgstr ""
"此外，:class:`EnvBuilder` "
"提供了這個實用方法，可以從子類別中的 :meth:`setup_scripts` "
"或 :meth:`post_setup` 呼叫，以幫助將自定義腳本安裝到虛擬環境中。"

#: ../../library/venv.rst:315
#, fuzzy
msgid ""
"*path* is the path to a directory that should contain subdirectories "
"\"common\", \"posix\", \"nt\", each containing scripts destined for the bin "
"directory in the environment.  The contents of \"common\" and the directory "
"corresponding to :data:`os.name` are copied after some text replacement of "
"placeholders:"
msgstr ""
"*path* 是一個目錄的路徑，該目錄應包含子目錄 ``common``、 ``posix``、 ``nt``，"
"每個子目錄都包含指向環境中 bin 目錄的腳本。  ``common``的內容和對應於 :data:`os."
"name` 的目錄在佔位符的一些文本替換後被複製："

#: ../../library/venv.rst:321
#, fuzzy
msgid ""
"``__VENV_DIR__`` is replaced with the absolute path of the environment "
"directory."
msgstr "``__VENV_DIR__`` 替換為環境目錄的絕對路徑。"

#: ../../library/venv.rst:324
#, fuzzy
msgid ""
"``__VENV_NAME__`` is replaced with the environment name (final path segment "
"of environment directory)."
msgstr "``__VENV_NAME__`` 替換為環境名稱（環境目錄的最終路徑段）。"

#: ../../library/venv.rst:327
#, fuzzy
msgid ""
"``__VENV_PROMPT__`` is replaced with the prompt (the environment name "
"surrounded by parentheses and with a following space)"
msgstr "``__VENV_PROMPT__`` 替換為提示符（括號中的環境名稱，後面有空格）"

#: ../../library/venv.rst:330
#, fuzzy
msgid ""
"``__VENV_BIN_NAME__`` is replaced with the name of the bin directory (either "
"``bin`` or ``Scripts``)."
msgstr "``__VENV_BIN_NAME__`` 替換為 bin 目錄的名稱（``bin`` 或 ``Scripts``）。"

#: ../../library/venv.rst:333
#, fuzzy
msgid ""
"``__VENV_PYTHON__`` is replaced with the absolute path of the environment's "
"executable."
msgstr "``__VENV_PYTHON__`` 替換為環境可執行文件的絕對路徑。"

#: ../../library/venv.rst:336
#, fuzzy
msgid ""
"The directories are allowed to exist (for when an existing environment is "
"being upgraded)."
msgstr "允許目錄存在（在升級現有環境時）。"

#: ../../library/venv.rst:339
#, fuzzy
msgid "There is also a module-level convenience function:"
msgstr "還有一個模組級的便利功能："

#: ../../library/venv.rst:345
#, fuzzy
msgid ""
"Create an :class:`EnvBuilder` with the given keyword arguments, and call "
"its :meth:`~EnvBuilder.create` method with the *env_dir* argument."
msgstr ""
"使用給定的關鍵字參數建立一個 :class:`EnvBuilder`，並使用 *env_dir* "
"參數呼叫其 :meth:`~EnvBuilder.create` 方法。"

#: ../../library/venv.rst:360
#, fuzzy
msgid "An example of extending ``EnvBuilder``"
msgstr "擴充 ``EnvBuilder`` 的例子"

#: ../../library/venv.rst:362
#, fuzzy
msgid ""
"The following script shows how to extend :class:`EnvBuilder` by implementing "
"a subclass which installs setuptools and pip into a created virtual "
"environment::"
msgstr "以下腳本顯示瞭如何通過實作一個將 setuptools 和 pip "
"安裝到建立的虛擬環境中的子類別來擴充 EnvBuilder::"

#: ../../library/venv.rst:581
#, fuzzy
msgid ""
"This script is also available for download `online <https://gist.github.com/"
"vsajip/4673395>`_."
msgstr "此腳本也可在線下載 <https://gist.github.com/vsajip/4673395>`_。"
