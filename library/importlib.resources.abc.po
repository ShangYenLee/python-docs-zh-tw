# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-26 00:19+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../library/importlib.resources.abc.rst:2
msgid ":mod:`importlib.resources.abc` -- Abstract base classes for resources"
msgstr ":mod:`importlib.resources.abc` -- 資源的抽象基底類別"

#: ../../library/importlib.resources.abc.rst:7
msgid "**Source code:** :source:`Lib/importlib/resources/abc.py`"
msgstr "**原始碼：**\\ :source:`Lib/importlib/resources/abc.py`"

#: ../../library/importlib.resources.abc.rst:15
#, fuzzy
msgid "*Superseded by TraversableResources*"
msgstr "*被TraversableResources取代*"

#: ../../library/importlib.resources.abc.rst:17
#, fuzzy
msgid ""
"An :term:`abstract base class` to provide the ability to read *resources*."
msgstr "一個 :term:`abstract base class` 提供讀取*資源*的能力。"

#: ../../library/importlib.resources.abc.rst:20
#, fuzzy
msgid ""
"From the perspective of this ABC, a *resource* is a binary artifact that is "
"shipped within a package. Typically this is something like a data file that "
"lives next to the ``__init__.py`` file of the package. The purpose of this "
"class is to help abstract out the accessing of such data files so that it "
"does not matter if the package and its data file(s) are stored in a e.g. zip "
"file versus on the file system."
msgstr ""
"從本 ABC 的角度來看，*資源* 是在包中提供的二進位工件。通常這類似於資料文件，"
"位於包的 ``__init__.py`` 文件旁邊。此類的目的是幫助抽像出對此類資料文件的訪問"
"，以便包及其資料文件是否儲存在例如文件中無關緊要。 zip 文件與文件系統。"

#: ../../library/importlib.resources.abc.rst:28
#, fuzzy
msgid ""
"For any of methods of this class, a *resource* argument is expected to be a :"
"term:`path-like object` which represents conceptually just a file name. This "
"means that no subdirectory paths should be included in the *resource* "
"argument. This is because the location of the package the reader is for, "
"acts as the \"directory\". Hence the metaphor for directories and file names "
"is packages and resources, respectively. This is also why instances of this "
"class are expected to directly correlate to a specific package (instead of "
"potentially representing multiple packages or a module)."
msgstr ""
"對於此類的任何方法，*resource* "
"參數應該是一個類似路徑的物件，它在概念上僅代表一個文件名。這意味著 *resource*"
" 參數中不應包含任何子目錄路徑。這是因為閱讀器所在的包的位置充當“目錄”。因此，"
"目錄和文件名的隱喻分別是包和資源。這也是為什麼此類的實例應該直接關聯到特定的"
"包（而不是可能代表多個包或一個模組）。"

#: ../../library/importlib.resources.abc.rst:39
#, fuzzy
msgid ""
"Loaders that wish to support resource reading are expected to provide a "
"method called ``get_resource_reader(fullname)`` which returns an object "
"implementing this ABC's interface. If the module specified by fullname is "
"not a package, this method should return :const:`None`. An object compatible "
"with this ABC should only be returned when the specified module is a package."
msgstr ""
"希望支援資源讀取的加載器應該提供一個名為 ``get_resource_reader(fullname)`` "
"的方法，該方法回傳一個實作此 ABC 介面的物件。如果 fullname 指定的模組不是包，"
"則此方法應回傳 :const:`None`。只有當指定的模組是一個包時，才應回傳與此 ABC "
"相容的物件。"

#: ../../library/importlib.resources.abc.rst:50
#, fuzzy
msgid ""
"Returns an opened, :term:`file-like object` for binary reading of the "
"*resource*."
msgstr "回傳一個打開的，:term:`file-like object` 用於 *resource* 的二進位讀取。"

#: ../../library/importlib.resources.abc.rst:53
#, fuzzy
msgid "If the resource cannot be found, :exc:`FileNotFoundError` is raised."
msgstr "如果找不到資源，則會引發 :exc:`FileNotFoundError`。"

#: ../../library/importlib.resources.abc.rst:58
#, fuzzy
msgid "Returns the file system path to the *resource*."
msgstr "回傳 *resource* 的文件系統路徑。"

#: ../../library/importlib.resources.abc.rst:60
#, fuzzy
msgid ""
"If the resource does not concretely exist on the file system, raise :exc:"
"`FileNotFoundError`."
msgstr "如果文件系統中具體不存在該資源，則引發 :exec:`FileNotFoundError`。"

#: ../../library/importlib.resources.abc.rst:65
#, fuzzy
msgid ""
"Returns ``True`` if the named *name* is considered a resource. :exc:"
"`FileNotFoundError` is raised if *name* does not exist."
msgstr ""
"如果指定的 *name* 被認為是資源，則回傳 ``True``。如果 *name* 不存在，"
"則會引發 :exc:`FileNotFoundError`。"

#: ../../library/importlib.resources.abc.rst:70
#, fuzzy
msgid ""
"Returns an :term:`iterable` of strings over the contents of the package. Do "
"note that it is not required that all names returned by the iterator be "
"actual resources, e.g. it is acceptable to return names for which :meth:"
"`is_resource` would be false."
msgstr ""
"在包的內容上回傳一個 :term:`iterable` "
"的字串。請注意，不需要疊代器回傳的所有名稱都是實際資源，例如回傳 "
":meth:`is_resource` 為假的名稱是可以接受的。"

#: ../../library/importlib.resources.abc.rst:76
#, fuzzy
msgid ""
"Allowing non-resource names to be returned is to allow for situations where "
"how a package and its resources are stored are known a priori and the non-"
"resource names would be useful. For instance, returning subdirectory names "
"is allowed so that when it is known that the package and resources are "
"stored on the file system then those subdirectory names can be used directly."
msgstr ""
"允許回傳非資源名稱是為了允許包及其資源的儲存方式是先驗已知的情況，並且非資源"
"名稱將是有用的。例如，允許回傳子目錄名稱，以便當知道包和資源儲存在文件系統中"
"時，可以直接使用這些子目錄名稱。"

#: ../../library/importlib.resources.abc.rst:84
#, fuzzy
msgid "The abstract method returns an iterable of no items."
msgstr "抽象方法回傳一個沒有項目的疊代。"

#: ../../library/importlib.resources.abc.rst:89
#, fuzzy
msgid ""
"An object with a subset of :class:`pathlib.Path` methods suitable for "
"traversing directories and opening files."
msgstr "具有 :class:`pathlib.Path` 方法子集的物件，適用於遍歷目錄和打開文件。"

#: ../../library/importlib.resources.abc.rst:92
#, fuzzy
msgid ""
"For a representation of the object on the file-system, use :meth:`importlib."
"resources.as_file`."
msgstr "要在文件系統上表示物件，請使用 :meth:`importlib.resources.as_file`。"

#: ../../library/importlib.resources.abc.rst:99
#, fuzzy
msgid "Abstract. The base name of this object without any parent references."
msgstr "抽象的。此物件的基本名稱，沒有任何父引用。"

#: ../../library/importlib.resources.abc.rst:103
#, fuzzy
msgid "Yield Traversable objects in self."
msgstr "Yield Traversable objects in self."

#: ../../library/importlib.resources.abc.rst:107
#, fuzzy
msgid "Return True if self is a directory."
msgstr "如果 self 是目錄，則回傳 True。"

#: ../../library/importlib.resources.abc.rst:111
#, fuzzy
msgid "Return True if self is a file."
msgstr "如果 self 是文件，則回傳 True。"

#: ../../library/importlib.resources.abc.rst:115
#: ../../library/importlib.resources.abc.rst:119
#, fuzzy
msgid "Return Traversable child in self."
msgstr "回傳 Traversable child in self。"

#: ../../library/importlib.resources.abc.rst:123
#, fuzzy
msgid ""
"*mode* may be 'r' or 'rb' to open as text or binary. Return a handle "
"suitable for reading (same as :attr:`pathlib.Path.open`)."
msgstr ""
"*mode* 可以是 'r' 或 'rb' 以文本或二進位形式打開。回傳適合讀取的句柄（與 "
":attr:`pathlib.Path.open` 相同）。"

#: ../../library/importlib.resources.abc.rst:126
#, fuzzy
msgid ""
"When opening as text, accepts encoding parameters such as those accepted by :"
"attr:`io.TextIOWrapper`."
msgstr "當以文本形式打開時，接受編碼參數，例如 io.TextIOWrapper 接受的參數。"

#: ../../library/importlib.resources.abc.rst:131
#, fuzzy
msgid "Read contents of self as bytes."
msgstr "以位元組形式讀取 self 的內容。"

#: ../../library/importlib.resources.abc.rst:135
#, fuzzy
msgid "Read contents of self as text."
msgstr "閱讀自我的內容作為文本。"

#: ../../library/importlib.resources.abc.rst:140
#, fuzzy
msgid ""
"An abstract base class for resource readers capable of serving the :meth:"
"`importlib.resources.files` interface. Subclasses :class:`importlib."
"resources.abc.ResourceReader` and provides concrete implementations of the :"
"class:`importlib.resources.abc.ResourceReader`'s abstract methods. "
"Therefore, any loader supplying :class:`importlib.abc.TraversableResources` "
"also supplies ResourceReader."
msgstr ""
"資源讀取器的抽象基底類別，能夠為 importlib.resources.files 介面提供服務。"
"子類別 importlib.resources.abc.ResourceReader 並提供 "
"importlib.resources.abc.ResourceReader 的抽象方法的具體實作。因此，任何提供 "
"importlib.abc.TraversableResources 的加載器也提供 ResourceReader。"

#: ../../library/importlib.resources.abc.rst:147
#, fuzzy
msgid ""
"Loaders that wish to support resource reading are expected to implement this "
"interface."
msgstr "希望支援資源讀取的加載器應實作此介面。"

#: ../../library/importlib.resources.abc.rst:154
#, fuzzy
msgid ""
"Returns a :class:`importlib.resources.abc.Traversable` object for the loaded "
"package."
msgstr "為加載的包回傳一個 importlib.resources.abc.Traversable 物件。"
