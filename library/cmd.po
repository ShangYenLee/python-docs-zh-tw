# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-15 20:43+0000\n"
"PO-Revision-Date: 2018-05-23 14:40+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/cmd.rst:2
#, fuzzy
msgid ":mod:`cmd` --- Support for line-oriented command interpreters"
msgstr ":mod:`cmd` --- 支援面向行的命令直譯器"

#: ../../library/cmd.rst:9
msgid "**Source code:** :source:`Lib/cmd.py`"
msgstr "**原始碼：**\\ :source:`Lib/cmd.py`"

#: ../../library/cmd.rst:13
#, fuzzy
msgid ""
"The :class:`Cmd` class provides a simple framework for writing line-oriented "
"command interpreters.  These are often useful for test harnesses, "
"administrative tools, and prototypes that will later be wrapped in a more "
"sophisticated interface."
msgstr ""
":class:`Cmd` 類為編寫面向行的命令直譯器提供了一個簡單的框架。這些通常對測試工"
"具、管理工具和稍後將被包裝在更複雜的界面中的原型很有用。"

#: ../../library/cmd.rst:20
#, fuzzy
msgid ""
"A :class:`Cmd` instance or subclass instance is a line-oriented interpreter "
"framework.  There is no good reason to instantiate :class:`Cmd` itself; "
"rather, it's useful as a superclass of an interpreter class you define "
"yourself in order to inherit :class:`Cmd`'s methods and encapsulate action "
"methods."
msgstr ""
":class:`Cmd` 實例或子類別實例是面向行的直譯器框架。沒有充分的理由實例化 Cmd "
"本身；相反，它作為您自己定義的直譯器類的超類很有用，以便繼承 Cmd "
"的方法並封裝操作方法。"

#: ../../library/cmd.rst:25
#, fuzzy
msgid ""
"The optional argument *completekey* is the :mod:`readline` name of a "
"completion key; it defaults to :kbd:`Tab`. If *completekey* is not :const:"
"`None` and :mod:`readline` is available, command completion is done "
"automatically."
msgstr ""
"可選參數 *completekey* 是完成鍵的 :mod:`readline` 名稱；它預設為 :kbd:`Tab`。"
"如果 *completekey* 不是 :const:`None` 並且 :mod:`readline` "
"可用，則自動完成命令完成。"

#: ../../library/cmd.rst:29
#, fuzzy
msgid ""
"The optional arguments *stdin* and *stdout* specify the  input and output "
"file objects that the Cmd instance or subclass  instance will use for input "
"and output. If not specified, they will default to :data:`sys.stdin` and :"
"data:`sys.stdout`."
msgstr ""
"可選參數 *stdin* 和 *stdout* 指定 Cmd "
"實例或子類別實例將用於輸入和輸出的輸入和輸出文件物件。如果未指定，"
"它們將預設為 :data:`sys.stdin` 和 :data:`sys.stdout`。"

#: ../../library/cmd.rst:34
#, fuzzy
msgid ""
"If you want a given *stdin* to be used, make sure to set the instance's :"
"attr:`use_rawinput` attribute to ``False``, otherwise *stdin* will be "
"ignored."
msgstr ""
"如果要使用給定的 *stdin*，請確保將實例的 :attr:`use_rawinput` 屬性設定為 "
"``False``，否則 *stdin* 將被忽略。"

#: ../../library/cmd.rst:42
msgid "Cmd Objects"
msgstr "Cmd 物件"

#: ../../library/cmd.rst:44
#, fuzzy
msgid "A :class:`Cmd` instance has the following methods:"
msgstr ":class:`Cmd` 實例具有以下方法："

#: ../../library/cmd.rst:49
#, fuzzy
msgid ""
"Repeatedly issue a prompt, accept input, parse an initial prefix off the "
"received input, and dispatch to action methods, passing them the remainder "
"of the line as argument."
msgstr "重複發出提示，接受輸入，從接收到的輸入中解析初始前綴，並分派給操作方法，將行"
"的其餘部分作為參數傳遞給它們。"

#: ../../library/cmd.rst:53
#, fuzzy
msgid ""
"The optional argument is a banner or intro string to be issued before the "
"first prompt (this overrides the :attr:`intro` class attribute)."
msgstr "可選參數是在第一個提示之前發出的橫幅或介紹字串（這會覆蓋 :attr:`intro` "
"類屬性）。"

#: ../../library/cmd.rst:56
#, fuzzy
msgid ""
"If the :mod:`readline` module is loaded, input will automatically inherit :"
"program:`bash`\\ -like history-list editing (e.g. :kbd:`Control-P` scrolls "
"back to the last command, :kbd:`Control-N` forward to the next one, :kbd:"
"`Control-F` moves the cursor to the right non-destructively, :kbd:`Control-"
"B` moves the cursor to the left non-destructively, etc.)."
msgstr ""
"如果加載了 :mod:`readline` 模組，輸入將自動繼承 :program:`bash`\\ - "
"類似歷史列表編輯（例如 :kbd:`Control-P` 滾動回最後一個命令，:kbd:` Control-N`"
" 前進到下一個，:kbd:`Control-F` 將光標非破壞性地向右移動，:kbd:`Control-B` "
"將光標非破壞性地向左移動，等等）。"

#: ../../library/cmd.rst:62
#, fuzzy
msgid "An end-of-file on input is passed back as the string ``'EOF'``."
msgstr "輸入的文件結尾作為字串 ``EOF``傳回。"

#: ../../library/cmd.rst:68
#, fuzzy
msgid ""
"An interpreter instance will recognize a command name ``foo`` if and only if "
"it has a method :meth:`do_foo`.  As a special case, a line beginning with "
"the character ``'?'`` is dispatched to the method :meth:`do_help`.  As "
"another special case, a line beginning with the character ``'!'`` is "
"dispatched to the method :meth:`do_shell` (if such a method is defined)."
msgstr ""
"當且僅當直譯器實例具有方法 :meth:`do_foo` "
"時，它才會識別命令名稱 ``foo``。作為一種特殊情況，以字元 ``'?'`` "
"開頭的行被分派給方法 :meth:`do_help`。作為另一種特殊情況，以字元 ``'!'`` "
"開頭的行被分派到方法 :meth:`do_shell`（如果定義了這樣的方法）。"

#: ../../library/cmd.rst:74
#, fuzzy
msgid ""
"This method will return when the :meth:`postcmd` method returns a true "
"value. The *stop* argument to :meth:`postcmd` is the return value from the "
"command's corresponding :meth:`do_\\*` method."
msgstr ""
"當 :meth:`postcmd` 方法回傳真值時，此方法將回傳。 :meth:`postcmd` 的 *stop* "
"參數是命令對應的 :meth:`do_\\*` 方法的回傳值。"

#: ../../library/cmd.rst:78
#, fuzzy
msgid ""
"If completion is enabled, completing commands will be done automatically, "
"and completing of commands args is done by calling :meth:`complete_foo` with "
"arguments *text*, *line*, *begidx*, and *endidx*.  *text* is the string "
"prefix we are attempting to match: all returned matches must begin with it. "
"*line* is the current input line with leading whitespace removed, *begidx* "
"and *endidx* are the beginning and ending indexes of the prefix text, which "
"could be used to provide different completion depending upon which position "
"the argument is in."
msgstr ""
"如果啟用了完成，完成命令將自動完成，並且通過呼叫帶有參數 "
"*text*、*line*、*begidx* 和 *endidx* 的 :meth:`complete_foo` 來完成命令 "
"args。 *text* 是我們試圖匹配的字串前綴：所有回傳的匹配項都必須以它開頭。 "
"*line* 是刪除前導空格的當前輸入行，*begidx* 和 *endidx* "
"是前綴文本的開始和結束索引，可用於根據參數所在的位置提供不同的補全。"

#: ../../library/cmd.rst:86
#, fuzzy
msgid ""
"All subclasses of :class:`Cmd` inherit a predefined :meth:`do_help`.  This "
"method, called with an argument ``'bar'``, invokes the corresponding method :"
"meth:`help_bar`, and if that is not present, prints the docstring of :meth:"
"`do_bar`, if available.  With no argument, :meth:`do_help` lists all "
"available help topics (that is, all commands with corresponding :meth:`help_"
"\\*` methods or commands that have docstrings), and also lists any "
"undocumented commands."
msgstr ""
":class:`Cmd` 的所有子類別都繼承了預定義的 "
":meth:`do_help`。此方法使用參數 ``bar``呼叫，呼叫相應的方法 "
"help_bar，如果該方法不存在，則印出 do_bar "
"的文檔字串（如果可用）。如果沒有參數，do_help 會列出所有可用的幫助主題（"
"即具有相應 :meth:`help_\\*` "
"方法的所有命令或具有文檔字串的命令），還列出所有未記錄的命令。"

#: ../../library/cmd.rst:97
#, fuzzy
msgid ""
"Interpret the argument as though it had been typed in response to the "
"prompt. This may be overridden, but should not normally need to be; see the :"
"meth:`precmd` and :meth:`postcmd` methods for useful execution hooks.  The "
"return value is a flag indicating whether interpretation of commands by the "
"interpreter should stop.  If there is a :meth:`do_\\*` method for the "
"command *str*, the return value of that method is returned, otherwise the "
"return value from the :meth:`default` method is returned."
msgstr ""
"解釋該參數，就好像它是根據提示輸入的一樣。這可能會被覆蓋，但通常不需要被覆蓋"
"；請參閱 :meth:`precmd` 和 :meth:`postcmd` 方法以獲得有用的執行掛鉤。回傳值是"
"一個旗標，指示直譯器對命令的解釋是否應該停止。如果命令 *str* 有 :meth:`do_\\"
"*` 方法，則回傳該方法的回傳值，否則回傳 :meth:`default` 方法的回傳值。"

#: ../../library/cmd.rst:108
#, fuzzy
msgid ""
"Method called when an empty line is entered in response to the prompt. If "
"this method is not overridden, it repeats the last nonempty command entered."
msgstr "當輸入空行以響應提示時呼叫的方法。如果未覆蓋此方法，它將重複輸入的最後一個非"
"空命令。"

#: ../../library/cmd.rst:114
#, fuzzy
msgid ""
"Method called on an input line when the command prefix is not recognized. If "
"this method is not overridden, it prints an error message and returns."
msgstr "無法識別命令前綴時在輸入行上呼叫的方法。如果此方法未被覆蓋，它會印出一條錯誤"
"消息並回傳。"

#: ../../library/cmd.rst:120
#, fuzzy
msgid ""
"Method called to complete an input line when no command-specific :meth:"
"`complete_\\*` method is available.  By default, it returns an empty list."
msgstr "當沒有特定於命令的 :meth:`complete_\\*` "
"方法可用時，呼叫方法來完成輸入行。預設情況下，它回傳一個空列表。"

#: ../../library/cmd.rst:126
#, fuzzy
msgid ""
"Method called to display a list of strings as a compact set of columns. Each "
"column is only as wide as necessary. Columns are separated by two spaces for "
"readability."
msgstr "呼叫的方法將字串列表顯示為一組緊湊的列。每列的寬度僅在必要時才寬。為了便於閱"
"讀，列由兩個空格分隔。"

#: ../../library/cmd.rst:133
#, fuzzy
msgid ""
"Hook method executed just before the command line *line* is interpreted, but "
"after the input prompt is generated and issued.  This method is a stub in :"
"class:`Cmd`; it exists to be overridden by subclasses.  The return value is "
"used as the command which will be executed by the :meth:`onecmd` method; "
"the :meth:`precmd` implementation may re-write the command or simply return "
"*line* unchanged."
msgstr ""
"鉤子方法在解釋命令列 *line* 之前執行，但在生成和發出輸入提示之後執行。"
"此方法是 :class:`Cmd` 中的存根；它的存在是為了被子類別覆蓋。回傳值用作將由 "
":meth:`onecmd` 方法執行的命令； :meth:`precmd` "
"實作可能會重寫命令或簡單地回傳 *line* 不變。"

#: ../../library/cmd.rst:143
#, fuzzy
msgid ""
"Hook method executed just after a command dispatch is finished.  This method "
"is a stub in :class:`Cmd`; it exists to be overridden by subclasses.  *line* "
"is the command line which was executed, and *stop* is a flag which indicates "
"whether execution will be terminated after the call to :meth:`postcmd`; this "
"will be the return value of the :meth:`onecmd` method.  The return value of "
"this method will be used as the new value for the internal flag which "
"corresponds to *stop*; returning false will cause interpretation to continue."
msgstr ""
"命令分派完成後立即執行的掛鉤方法。此方法是 :class:`Cmd` "
"中的存根；它的存在是為了被子類別覆蓋。 *line* 是執行的命令列"
"，*stop* 是一個旗標，表示呼叫 :meth:`postcmd` 後是否終止執行；這將是 onecmd "
"方法的回傳值。該方法的回傳值將作為對應於*stop*的內部旗標的新值；回傳 false "
"將導致解釋繼續。"

#: ../../library/cmd.rst:154
#, fuzzy
msgid ""
"Hook method executed once when :meth:`cmdloop` is called.  This method is a "
"stub in :class:`Cmd`; it exists to be overridden by subclasses."
msgstr "呼叫 :meth:`cmdloop` 時執行一次 Hook 方法。此方法是 :class:`Cmd` "
"中的存根；它的存在是為了被子類別覆蓋。"

#: ../../library/cmd.rst:160
#, fuzzy
msgid ""
"Hook method executed once when :meth:`cmdloop` is about to return. This "
"method is a stub in :class:`Cmd`; it exists to be overridden by subclasses."
msgstr ""
"Hook 方法在 :meth:`cmdloop` 即將回傳時執行一次。此方法是 :class:`Cmd` "
"中的存根；它的存在是為了被子類別覆蓋。"

#: ../../library/cmd.rst:164
#, fuzzy
msgid ""
"Instances of :class:`Cmd` subclasses have some public instance variables:"
msgstr ":class:`Cmd` 子類別的實例有一些公開實例變數："

#: ../../library/cmd.rst:168
#, fuzzy
msgid "The prompt issued to solicit input."
msgstr "發出征求輸入的提示。"

#: ../../library/cmd.rst:173
#, fuzzy
msgid "The string of characters accepted for the command prefix."
msgstr "命令前綴接受的字串。"

#: ../../library/cmd.rst:178
#, fuzzy
msgid "The last nonempty command prefix seen."
msgstr "看到的最後一個非空命令前綴。"

#: ../../library/cmd.rst:183
#, fuzzy
msgid ""
"A list of queued input lines.  The cmdqueue list is checked in :meth:"
"`cmdloop` when new input is needed; if it is nonempty, its elements will be "
"processed in order, as if entered at the prompt."
msgstr ""
"排隊輸入行的列表。當需要新的輸入時，在 cmdloop 中檢查 cmdqueue "
"列表；如果它是非空的，它的元素將按順序處理，就像在提示符下輸入一樣。"

#: ../../library/cmd.rst:190
#, fuzzy
msgid ""
"A string to issue as an intro or banner.  May be overridden by giving the :"
"meth:`cmdloop` method an argument."
msgstr "作為介紹或橫幅發布的字串。可以通過給 :meth:`cmdloop` 方法一個參數來覆蓋。"

#: ../../library/cmd.rst:196
#, fuzzy
msgid ""
"The header to issue if the help output has a section for documented commands."
msgstr "如果幫助輸出有記錄命令的部分，則要發出的標題。"

#: ../../library/cmd.rst:201
#, fuzzy
msgid ""
"The header to issue if the help output has a section for miscellaneous  help "
"topics (that is, there are :meth:`help_\\*` methods without corresponding :"
"meth:`do_\\*` methods)."
msgstr ""
"如果幫助輸出有一個用於雜項幫助主題的部分（即，有 :meth:`help_\\*` "
"方法沒有相應的 :meth:`do_\\*` 方法），則要發出的標題。"

#: ../../library/cmd.rst:208
#, fuzzy
msgid ""
"The header to issue if the help output has a section for undocumented  "
"commands (that is, there are :meth:`do_\\*` methods without corresponding :"
"meth:`help_\\*` methods)."
msgstr ""
"如果幫助輸出包含未記錄命令的部分（即，有 :meth:`do_\\*` 方法但沒有對應的 "
":meth:`help_\\*` 方法），則要發出的標頭。"

#: ../../library/cmd.rst:215
#, fuzzy
msgid ""
"The character used to draw separator lines under the help-message headers.  "
"If empty, no ruler line is drawn.  It defaults to ``'='``."
msgstr "用於在幫助消息標題下繪製分隔線的字元。如果為空，則不繪製標尺線。它預設為``'='"
"``。"

#: ../../library/cmd.rst:221
#, fuzzy
msgid ""
"A flag, defaulting to true.  If true, :meth:`cmdloop` uses :func:`input` to "
"display a prompt and read the next command; if false, :meth:`sys.stdout."
"write` and :meth:`sys.stdin.readline` are used. (This means that by "
"importing :mod:`readline`, on systems that support it, the interpreter will "
"automatically support :program:`Emacs`\\ -like line editing  and command-"
"history keystrokes.)"
msgstr ""
"一個旗標，預設為 true。如果為真，:meth:`cmdloop` 使用 :func:`input` "
"顯示提示並讀取下一個命令；如果為假，則使用 :meth:`sys.stdout.write` 和 "
":meth:`sys.stdin.readline`。 （這意味著通過導入 "
":mod:`readline`，在支援它的系統上，直譯器將自動支援 :program:`Emacs`\\ -like "
"行編輯和命令歷史擊鍵。）"

#: ../../library/cmd.rst:231
#, fuzzy
msgid "Cmd Example"
msgstr "命令示例"

#: ../../library/cmd.rst:235
#, fuzzy
msgid ""
"The :mod:`cmd` module is mainly useful for building custom shells that let a "
"user work with a program interactively."
msgstr ":mod:`cmd` 模組主要用於構建自定義 shell，讓使用者以交互方式使用程式。"

#: ../../library/cmd.rst:238
#, fuzzy
msgid ""
"This section presents a simple example of how to build a shell around a few "
"of the commands in the :mod:`turtle` module."
msgstr "本節介紹一個簡單示例，說明如何圍繞 :mod:`turtle` 模組中的一些命令構建 shell。"

#: ../../library/cmd.rst:241
#, fuzzy
msgid ""
"Basic turtle commands such as :meth:`~turtle.forward` are added to a :class:"
"`Cmd` subclass with method named :meth:`do_forward`.  The argument is "
"converted to a number and dispatched to the turtle module.  The docstring is "
"used in the help utility provided by the shell."
msgstr ""
"基本的 turtle 命令，如 :meth:`~turtle.forward` 被新增到一個 :class:`Cmd` "
"子類別，其方法名為 :meth:`do_forward`。參數被轉換為數字並發送到 turtle 模組。"
"文檔字串用於 shell 提供的幫助實用程式。"

#: ../../library/cmd.rst:246
#, fuzzy
msgid ""
"The example also includes a basic record and playback facility implemented "
"with the :meth:`~Cmd.precmd` method which is responsible for converting the "
"input to lowercase and writing the commands to a file.  The :meth:"
"`do_playback` method reads the file and adds the recorded commands to the :"
"attr:`cmdqueue` for immediate playback::"
msgstr ""
"該示例還包括使用 :meth:`~Cmd.precmd` "
"方法實作的基本記錄和回放功能，該方法負責將輸入轉換為小寫並將命令寫入文件。 "
":meth:`do_playback` 方法讀取文件並將記錄的命令新增到 :attr:`cmdqueue` "
"以立即播放::"

#: ../../library/cmd.rst:327
#, fuzzy
msgid ""
"Here is a sample session with the turtle shell showing the help functions, "
"using blank lines to repeat commands, and the simple record and playback "
"facility:"
msgstr "下面是一個帶有 turtle shell "
"的示例會話，顯示了幫助功能，使用空行重複命令，以及簡單的記錄和回放功能："
