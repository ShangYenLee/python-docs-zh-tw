# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-15 20:43+0000\n"
"PO-Revision-Date: 2018-05-23 16:01+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/fileinput.rst:2
#, fuzzy
msgid ":mod:`fileinput` --- Iterate over lines from multiple input streams"
msgstr ":mod:`fileinput` --- 疊代來自多個輸入串流的列"

#: ../../library/fileinput.rst:10
msgid "**Source code:** :source:`Lib/fileinput.py`"
msgstr "**原始碼：**\\ :source:`Lib/fileinput.py`"

#: ../../library/fileinput.rst:14
#, fuzzy
msgid ""
"This module implements a helper class and functions to quickly write a loop "
"over standard input or a list of files. If you just want to read or write "
"one file see :func:`open`."
msgstr "該模組實作了一個輔助類和功能，可以快速編寫標準輸入或文件列表的循環。如果您只"
"想讀取或寫入一個文件，請參閱 :func:`open`。"

#: ../../library/fileinput.rst:18
#, fuzzy
msgid "The typical use is::"
msgstr "典型的用法是："

#: ../../library/fileinput.rst:24
#, fuzzy
msgid ""
"This iterates over the lines of all files listed in ``sys.argv[1:]``, "
"defaulting to ``sys.stdin`` if the list is empty.  If a filename is ``'-'``, "
"it is also replaced by ``sys.stdin`` and the optional arguments *mode* and "
"*openhook* are ignored.  To specify an alternative list of filenames, pass "
"it as the first argument to :func:`.input`.  A single file name is also "
"allowed."
msgstr ""
"這將遍歷 ``sys.argv[1:]`` 中列出的所有文件的行，如果列表為空，則預設為 ``sys."
"stdin``。如果文件名是 ``'-'``，它也會被 ``sys.stdin`` 替換，並且忽略可選參數 "
"*mode* 和 *openhook*。要指定替代的文件名列表，請將其作為第一個參數傳遞給 "
":func:`.input`。也允許使用單個文件名。"

#: ../../library/fileinput.rst:30
#, fuzzy
msgid ""
"All files are opened in text mode by default, but you can override this by "
"specifying the *mode* parameter in the call to :func:`.input` or :class:"
"`FileInput`.  If an I/O error occurs during opening or reading a file, :exc:"
"`OSError` is raised."
msgstr ""
"預設情況下，所有文件都以文本模式打開，但您可以通過在呼叫 :func:`.input` 或 "
":class:`FileInput` 時指定 *mode* 參數來覆蓋它。如果在打開或讀取文件期間發生 "
"I/O 錯誤，則會引發 :exc:`OSError`。"

#: ../../library/fileinput.rst:35
#, fuzzy
msgid ":exc:`IOError` used to be raised; it is now an alias of :exc:`OSError`."
msgstr ":exc:`IOError` 曾經被提出；它現在是 :exc:`OSError` 的別名。"

#: ../../library/fileinput.rst:38
#, fuzzy
msgid ""
"If ``sys.stdin`` is used more than once, the second and further use will "
"return no lines, except perhaps for interactive use, or if it has been "
"explicitly reset (e.g. using ``sys.stdin.seek(0)``)."
msgstr ""
"如果 ``sys.stdin`` 被使用了不止一次，第二次和進一步的使用將不回傳任何行，除了"
"可能用於交互使用，或者如果它已被顯式重置（例如使用 ``sys.stdin.seek(0) ``）。"

#: ../../library/fileinput.rst:42
#, fuzzy
msgid ""
"Empty files are opened and immediately closed; the only time their presence "
"in the list of filenames is noticeable at all is when the last file opened "
"is empty."
msgstr "打開並立即關閉空文件；它們出現在文件名列表中的唯一時間是當最後打開的文件為空"
"時。"

#: ../../library/fileinput.rst:46
#, fuzzy
msgid ""
"Lines are returned with any newlines intact, which means that the last line "
"in a file may not have one."
msgstr "回傳的行帶有完整的換行符，這意味著文件中的最後一行可能沒有。"

#: ../../library/fileinput.rst:49
#, fuzzy
msgid ""
"You can control how files are opened by providing an opening hook via the "
"*openhook* parameter to :func:`fileinput.input` or :class:`FileInput()`. The "
"hook must be a function that takes two arguments, *filename* and *mode*, and "
"returns an accordingly opened file-like object. If *encoding* and/or "
"*errors* are specified, they will be passed to the hook as additional "
"keyword arguments. This module provides a :func:`hook_compressed` to support "
"compressed files."
msgstr ""
"您可以通過 *openhook* 參數向 :func:`fileinput.input` 或 :class:`FileInput()` "
"提供打開掛鉤來控制文件的打開方式。鉤子必須是一個函式，它接受兩個參數，*filena"
"me* 和 *mode*，並回傳相應打開的類似文件的物件。如果指定了 *encoding* 和/或 "
"*errors*，它們將作為附加關鍵字參數傳遞給掛鉤。這個模組提供了一個 "
":func:`hook_compressed` 來支援壓縮文件。"

#: ../../library/fileinput.rst:56
#, fuzzy
msgid "The following function is the primary interface of this module:"
msgstr "以下函式是該模組的主要介面："

#: ../../library/fileinput.rst:61
#, fuzzy
msgid ""
"Create an instance of the :class:`FileInput` class.  The instance will be "
"used as global state for the functions of this module, and is also returned "
"to use during iteration.  The parameters to this function will be passed "
"along to the constructor of the :class:`FileInput` class."
msgstr ""
"建立 :class:`FileInput` "
"類的實例。該實例將用作此模組功能的全局狀態，並在疊代期間回傳使用。"
"此函式的參數將傳遞給 FileInput 類的構造函式。"

#: ../../library/fileinput.rst:66
#, fuzzy
msgid ""
"The :class:`FileInput` instance can be used as a context manager in the :"
"keyword:`with` statement.  In this example, *input* is closed after the :"
"keyword:`!with` statement is exited, even if an exception occurs::"
msgstr ""
":class:`FileInput` 實例可以用作 :keyword:`with` "
"語句中的情境管理器。在這個例子中，*input* 在 :keyword:`!with` "
"語句退出後關閉，即使發生例外::"

#: ../../library/fileinput.rst:74 ../../library/fileinput.rst:170
#, fuzzy
msgid "Can be used as a context manager."
msgstr "可以用作情境管理器。"

#: ../../library/fileinput.rst:77
#, fuzzy
msgid "The keyword parameters *mode* and *openhook* are now keyword-only."
msgstr "關鍵字參數 *mode* 和 *openhook* 現在是僅限關鍵字的。"

#: ../../library/fileinput.rst:80 ../../library/fileinput.rst:176
#: ../../library/fileinput.rst:210
#, fuzzy
msgid "The keyword-only parameter *encoding* and *errors* are added."
msgstr "新增了僅關鍵字參數 *encoding* 和 *errors*。"

#: ../../library/fileinput.rst:84
#, fuzzy
msgid ""
"The following functions use the global state created by :func:`fileinput."
"input`; if there is no active state, :exc:`RuntimeError` is raised."
msgstr ""
"以下函式使用由 :func:`fileinput.input` 建立的全局狀態；如果沒有活動狀態，"
"則會引發 :exc:`RuntimeError`。"

#: ../../library/fileinput.rst:90
#, fuzzy
msgid ""
"Return the name of the file currently being read.  Before the first line has "
"been read, returns ``None``."
msgstr "回傳當前正在讀取的文件的名稱。在讀取第一行之前，回傳 ``None`` 。"

#: ../../library/fileinput.rst:96
#, fuzzy
msgid ""
"Return the integer \"file descriptor\" for the current file. When no file is "
"opened (before the first line and between files), returns ``-1``."
msgstr "回傳當前文件的整數“文件描述器”。當沒有文件打開時（在第一行之前和文件之間），"
"回傳 ``-1``。"

#: ../../library/fileinput.rst:102
#, fuzzy
msgid ""
"Return the cumulative line number of the line that has just been read.  "
"Before the first line has been read, returns ``0``.  After the last line of "
"the last file has been read, returns the line number of that line."
msgstr "回傳剛剛讀取的行的累積行號。在讀取第一行之前，回傳 "
"``0``。讀取最後一個文件的最後一行後，回傳該行的行號。"

#: ../../library/fileinput.rst:109
#, fuzzy
msgid ""
"Return the line number in the current file.  Before the first line has been "
"read, returns ``0``.  After the last line of the last file has been read, "
"returns the line number of that line within the file."
msgstr "回傳當前文件中的行號。在讀取第一行之前，回傳 "
"``0``。讀取最後一個文件的最後一行後，回傳文件中該行的行號。"

#: ../../library/fileinput.rst:116
#, fuzzy
msgid ""
"Return ``True`` if the line just read is the first line of its file, "
"otherwise return ``False``."
msgstr "如果剛剛讀取的行是其文件的第一行，則回傳 ``True``，否則回傳 ``False``。"

#: ../../library/fileinput.rst:122
#, fuzzy
msgid ""
"Return ``True`` if the last line was read from ``sys.stdin``, otherwise "
"return ``False``."
msgstr "如果最後一行是從 sys.stdin 中讀取的，則回傳 True，否則回傳 False。"

#: ../../library/fileinput.rst:128
#, fuzzy
msgid ""
"Close the current file so that the next iteration will read the first line "
"from the next file (if any); lines not read from the file will not count "
"towards the cumulative line count.  The filename is not changed until after "
"the first line of the next file has been read.  Before the first line has "
"been read, this function has no effect; it cannot be used to skip the first "
"file.  After the last line of the last file has been read, this function has "
"no effect."
msgstr ""
"關閉當前文件，以便下一次疊代從下一個文件（如果有）讀取第一行；未從文件中讀取"
"的行將不計入累積行數。直到讀取下一個文件的第一行後，文件名才會更改。在讀取第"
"一行之前，此函式無效；它不能用於跳過第一個文件。讀取完最後一個文件的最後一行"
"後，此函式無效。"

#: ../../library/fileinput.rst:138
#, fuzzy
msgid "Close the sequence."
msgstr "關閉序列。"

#: ../../library/fileinput.rst:140
#, fuzzy
msgid ""
"The class which implements the sequence behavior provided by the module is "
"available for subclassing as well:"
msgstr "實作模組提供的序列行為的類也可用於子類別化："

#: ../../library/fileinput.rst:146
#, fuzzy
msgid ""
"Class :class:`FileInput` is the implementation; its methods :meth:"
"`filename`, :meth:`fileno`, :meth:`lineno`, :meth:`filelineno`, :meth:"
"`isfirstline`, :meth:`isstdin`, :meth:`nextfile` and :meth:`close` "
"correspond to the functions of the same name in the module. In addition it "
"is :term:`iterable` and has a :meth:`~io.TextIOBase.readline` method which "
"returns the next input line. The sequence must be accessed in strictly "
"sequential order; random access and :meth:`~io.TextIOBase.readline` cannot "
"be mixed."
msgstr ""
"Class :class:`FileInput` 是實作；它的方法 :meth:`filename`, :meth:`fileno`, "
":meth:`lineno`, :meth:`filelineno`, :meth:`isfirstline`, :meth:`isstdin`, "
":meth:`nextfile`和 :meth:`close` 對應模組中的同名函式。此外，它是 "
":term:`iterable` 並且有一個 :meth:`~io.TextIOBase.readline` "
"方法回傳下一個輸入行。必須嚴格按順序訪問序列；隨機訪問和 :meth:`~io."
"TextIOBase.readline` 不能混合使用。"

#: ../../library/fileinput.rst:154
#, fuzzy
msgid ""
"With *mode* you can specify which file mode will be passed to :func:`open`. "
"It must be one of ``'r'`` and ``'rb'``."
msgstr "使用 *mode* 您可以指定將傳遞給 :func:`open` 的文件模式。它必須是 ``'r'`` 和 "
"``'rb'`` 之一。"

#: ../../library/fileinput.rst:157
#, fuzzy
msgid ""
"The *openhook*, when given, must be a function that takes two arguments, "
"*filename* and *mode*, and returns an accordingly opened file-like object. "
"You cannot use *inplace* and *openhook* together."
msgstr ""
"*openhook*，當給定時，必須是一個函式，它接受兩個參數，*filename* 和 "
"*mode*，並回傳相應打開的類似文件的物件。您不能同時使用 *inplace* 和 "
"*openhook*。"

#: ../../library/fileinput.rst:161
#, fuzzy
msgid ""
"You can specify *encoding* and *errors* that is passed to :func:`open` or "
"*openhook*."
msgstr "您可以指定傳遞給 :func:`open` 或 *openhook* 的 *encoding* 和 *errors*。"

#: ../../library/fileinput.rst:163
#, fuzzy
msgid ""
"A :class:`FileInput` instance can be used as a context manager in the :"
"keyword:`with` statement.  In this example, *input* is closed after the :"
"keyword:`!with` statement is exited, even if an exception occurs::"
msgstr ""
":class:`FileInput` 實例可以用作 :keyword:`with` "
"語句中的情境管理器。在這個例子中，*input* 在 :keyword:`!with` "
"語句退出後關閉，即使發生例外::"

#: ../../library/fileinput.rst:173
#, fuzzy
msgid "The keyword parameter *mode* and *openhook* are now keyword-only."
msgstr "關鍵字參數 *mode* 和 *openhook* 現在是僅限關鍵字的。"

#: ../../library/fileinput.rst:179
#, fuzzy
msgid ""
"The ``'rU'`` and ``'U'`` modes and the :meth:`__getitem__` method have been "
"removed."
msgstr "``'rU'`` 和 ``'U'`` 模式以及 :meth:`__getitem__` 方法已被刪除。"

#: ../../library/fileinput.rst:184
#, fuzzy
msgid ""
"**Optional in-place filtering:** if the keyword argument ``inplace=True`` is "
"passed to :func:`fileinput.input` or to the :class:`FileInput` constructor, "
"the file is moved to a backup file and standard output is directed to the "
"input file (if a file of the same name as the backup file already exists, it "
"will be replaced silently).  This makes it possible to write a filter that "
"rewrites its input file in place.  If the *backup* parameter is given "
"(typically as ``backup='.<some extension>'``), it specifies the extension "
"for the backup file, and the backup file remains around; by default, the "
"extension is ``'.bak'`` and it is deleted when the output file is closed.  "
"In-place filtering is disabled when standard input is read."
msgstr ""
"**可選的就地過濾：**如果關鍵字參數 ``inplace=True`` 傳遞給 :func:`fileinput."
"input` 或 :class:`FileInput` 構造函式，文件將被移動到備份文件和標準輸出被定向"
"到輸入文件（如果與備份文件同名的文件已經存在，它將被靜默替換）。這使得編寫一"
"個過濾器來重寫其輸入文件成為可能。如果給出了 *backup* 參數（通常為 ``"
"backup='.<some "
"extension>'``），它指定了備份文件的擴充名，並且備份文件仍然存在；預設情況下，"
"擴充名是 ``'.bak'`` 並在輸出文件關閉時刪除。讀取標準輸入時禁用就地過濾。"

#: ../../library/fileinput.rst:196
#, fuzzy
msgid "The two following opening hooks are provided by this module:"
msgstr "本模組提供了以下兩個開啟掛鉤："

#: ../../library/fileinput.rst:200
#, fuzzy
msgid ""
"Transparently opens files compressed with gzip and bzip2 (recognized by the "
"extensions ``'.gz'`` and ``'.bz2'``) using the :mod:`gzip` and :mod:`bz2` "
"modules.  If the filename extension is not ``'.gz'`` or ``'.bz2'``, the file "
"is opened normally (ie, using :func:`open` without any decompression)."
msgstr ""
"使用 :mod:`gzip` 和 :mod:`bz2` 模組透明地打開使用 gzip 和 bzip2 壓縮的文件（"
"由擴充名 ``'.gz'`` 和 ``'.bz2'`` 識別）。如果文件擴充名不是 ``'.gz'`` 或 ``'."
"bz2'``，文件將正常打開（即，使用 :func:`open` 而不進行任何解壓）。"

#: ../../library/fileinput.rst:205
#, fuzzy
msgid ""
"The *encoding* and *errors* values are passed to :class:`io.TextIOWrapper` "
"for compressed files and open for normal files."
msgstr "*encoding* 和 *errors* 值傳遞給壓縮文件的 io.TextIOWrapper 並打開普通文件。"

#: ../../library/fileinput.rst:208
#, fuzzy
msgid ""
"Usage example:  ``fi = fileinput.FileInput(openhook=fileinput."
"hook_compressed, encoding=\"utf-8\")``"
msgstr ""
"使用示例：``fi = fileinput.FileInput(openhook=fileinput.hook_compressed, "
"encoding=\"utf-8\")``"

#: ../../library/fileinput.rst:216
#, fuzzy
msgid ""
"Returns a hook which opens each file with :func:`open`, using the given "
"*encoding* and *errors* to read the file."
msgstr "回傳一個鉤子，它使用 :func:`open` 打開每個文件，使用給定的 *encoding* 和 "
"*errors* 來讀取文件。"

#: ../../library/fileinput.rst:219
#, fuzzy
msgid ""
"Usage example: ``fi = fileinput.FileInput(openhook=fileinput."
"hook_encoded(\"utf-8\", \"surrogateescape\"))``"
msgstr ""
"使用示例：``fi = fileinput.FileInput(openhook=fileinput.hook_encoded(\"utf-"
"8\", \"surrogateescape\"))``"

#: ../../library/fileinput.rst:223
msgid "Added the optional *errors* parameter."
msgstr "新增可選參數 *errors*\\ 。"

#: ../../library/fileinput.rst:226
#, fuzzy
msgid ""
"This function is deprecated since :func:`fileinput.input` and :class:"
"`FileInput` now have *encoding* and *errors* parameters."
msgstr ""
"此函式已棄用，因為 :func:`fileinput.input` 和 :class:`FileInput` 現在有 "
"*encoding* 和 *errors* 參數。"

#~ msgid "The ``'rU'`` and ``'U'`` modes."
#~ msgstr "``'rU'`` 和 ``'U'`` 模式。"
