# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-15 20:43+0000\n"
"PO-Revision-Date: 2018-05-23 14:42+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/csv.rst:2
msgid ":mod:`csv` --- CSV File Reading and Writing"
msgstr ":mod:`csv` --- CSV 檔案讀寫"

#: ../../library/csv.rst:9
msgid "**Source code:** :source:`Lib/csv.py`"
msgstr "**原始碼：**\\ :source:`Lib/csv.py`"

#: ../../library/csv.rst:17
#, fuzzy
msgid ""
"The so-called CSV (Comma Separated Values) format is the most common import "
"and export format for spreadsheets and databases.  CSV format was used for "
"many years prior to attempts to describe the format in a standardized way "
"in :rfc:`4180`.  The lack of a well-defined standard means that subtle "
"differences often exist in the data produced and consumed by different "
"applications.  These differences can make it annoying to process CSV files "
"from multiple sources. Still, while the delimiters and quoting characters "
"vary, the overall format is similar enough that it is possible to write a "
"single module which can efficiently manipulate such data, hiding the details "
"of reading and writing the data from the programmer."
msgstr ""
"所謂的 CSV（逗號分隔值）格式是電子表格和資料庫最常見的導入和導出格式。在 "
":rfc:`4180` 中嘗試以標準化方式描述格式之前，CSV 格式已使用多年。缺乏明確定義"
"的標準意味著不同應用程式生成和使用的資料通常存在細微差異。"
"這些差異會使處理來自多個來源的 CSV 文件變得煩人。儘管如此，儘管分隔符和引號字"
"元有所不同，但總體格式非常相似，因此可以編寫一個可以有效操作此類資料的模組，"
"從而向程式員隱藏讀取和寫入資料的細節。"

#: ../../library/csv.rst:28
#, fuzzy
msgid ""
"The :mod:`csv` module implements classes to read and write tabular data in "
"CSV format.  It allows programmers to say, \"write this data in the format "
"preferred by Excel,\" or \"read data from this file which was generated by "
"Excel,\" without knowing the precise details of the CSV format used by "
"Excel.  Programmers can also describe the CSV formats understood by other "
"applications or define their own special-purpose CSV formats."
msgstr ""
":mod:`csv` 模組實作了以 CSV 格式讀取和寫入表格資料的類。它允許程式員在不知道 "
"Excel 使用的 CSV 格式的精確細節的情況下說，“以 Excel 首選的格式寫入此資料”或“"
"從 Excel 生成的此文件中讀取資料”。程式員還可以描述其他應用程式理解的 CSV "
"格式或定義他們自己的專用 CSV 格式。"

#: ../../library/csv.rst:35
#, fuzzy
msgid ""
"The :mod:`csv` module's :class:`reader` and :class:`writer` objects read and "
"write sequences.  Programmers can also read and write data in dictionary "
"form using the :class:`DictReader` and :class:`DictWriter` classes."
msgstr ""
":mod:`csv` 模組的 :class:`reader` 和 :class:`writer` 物件讀取和寫入序列。"
"程式員還可以使用 DictReader 和 DictWriter 類以字典形式讀寫資料。"

#: ../../library/csv.rst:41
msgid ":pep:`305` - CSV File API"
msgstr ":pep:`305` - CSV 檔案 API"

#: ../../library/csv.rst:42
#, fuzzy
msgid "The Python Enhancement Proposal which proposed this addition to Python."
msgstr "Python Enhancement Proposal 提出了對 Python 的這一補充。"

#: ../../library/csv.rst:48
msgid "Module Contents"
msgstr "模組內容"

#: ../../library/csv.rst:50
msgid "The :mod:`csv` module defines the following functions:"
msgstr ":mod:`csv` 模組定義了以下函式："

#: ../../library/csv.rst:58
#, fuzzy
msgid ""
"Return a reader object which will iterate over lines in the given *csvfile*. "
"*csvfile* can be any object which supports the :term:`iterator` protocol and "
"returns a string each time its :meth:`!__next__` method is called --- :term:"
"`file objects <file object>` and list objects are both suitable.   If "
"*csvfile* is a file object, it should be opened with ``newline=''``. [1]_  "
"An optional *dialect* parameter can be given which is used to define a set "
"of parameters specific to a particular CSV dialect.  It may be an instance "
"of a subclass of the :class:`Dialect` class or one of the strings returned "
"by the :func:`list_dialects` function.  The other optional *fmtparams* "
"keyword arguments can be given to override individual formatting parameters "
"in the current dialect.  For full details about the dialect and formatting "
"parameters, see section :ref:`csv-fmt-params`."
msgstr ""
"回傳一個讀取器物件，它將遍歷給定 *csvfile* 中的行。 *csvfile* 可以是任何支援 "
":term:`iterator` 協定並在每次呼叫其 :meth:`!__next__` "
"方法時回傳一個字串的物件 --- :term:`file objects <file object>` and "
"list對像都合適。如果 *csvfile* 是一個文件物件，它應該用 ``newline=''`` 打開。"
" [1]_ 可以給出一個可選的 *dialect* 參數，用於定義一組特定於特定 CSV "
"方言的參數。它可能是 Dialect 類的子類別的實例，或者是 list_dialects "
"函式回傳的字串之一。可以給出其他可選的 *fmtparams* 關鍵字參數來覆蓋當前方言中"
"的各個格式化參數。有關方言和格式化參數的完整詳細資訊，請參閱 :ref:`csv-fmt-"
"params` 部分。"

#: ../../library/csv.rst:71
#, fuzzy
msgid ""
"Each row read from the csv file is returned as a list of strings.  No "
"automatic data type conversion is performed unless the ``QUOTE_NONNUMERIC`` "
"format option is specified (in which case unquoted fields are transformed "
"into floats)."
msgstr ""
"從 csv 文件讀取的每一行都作為字串列表回傳。除非指定了“QUOTE_NONNUMERIC”格式選"
"項，否則不會執行自動資料型別轉換（在這種情況下，未加引號的欄位將轉換為浮點數"
"）。"

#: ../../library/csv.rst:75 ../../library/csv.rst:105 ../../library/csv.rst:176
#: ../../library/csv.rst:212
msgid "A short usage example::"
msgstr ""
"一個簡短的用法範例：\n"
"\n"
"::"

#: ../../library/csv.rst:88
#, fuzzy
msgid ""
"Return a writer object responsible for converting the user's data into "
"delimited strings on the given file-like object.  *csvfile* can be any "
"object with a :func:`write` method.  If *csvfile* is a file object, it "
"should be opened with ``newline=''`` [1]_.  An optional *dialect* parameter "
"can be given which is used to define a set of parameters specific to a "
"particular CSV dialect.  It may be an instance of a subclass of the :class:"
"`Dialect` class or one of the strings returned by the :func:`list_dialects` "
"function.  The other optional *fmtparams* keyword arguments can be given to "
"override individual formatting parameters in the current dialect.  For full "
"details about dialects and formatting parameters, see the :ref:`csv-fmt-"
"params` section. To make it as easy as possible to interface with modules "
"which implement the DB API, the value :const:`None` is written as the empty "
"string.  While this isn't a reversible transformation, it makes it easier to "
"dump SQL NULL data values to CSV files without preprocessing the data "
"returned from a ``cursor.fetch*`` call. All other non-string data are "
"stringified with :func:`str` before being written."
msgstr ""
"回傳負責將使用者資料轉換為給定類文件對像上的分隔字串的編寫器物件。 *csvfile* "
"可以是任何具有 :func:`write` 方法的物件。如果 *csvfile* 是一個文件物件，"
"它應該用 ``newline=''`` [1]_ 打開。可以提供可選的 *dialect* 參數，"
"用於定義一組特定於特定 CSV 方言的參數。它可能是 Dialect 類的子類別的實例，"
"或者是 list_dialects 函式回傳的字串之一。可以給出其他可選的 *fmtparams* 關鍵"
"字參數來覆蓋當前方言中的各個格式化參數。有關方言和格式化參數的完整詳細資訊，"
"請參閱 csv-fmt-params 部分。為了盡可能容易地與實作 DB API 的模組進行交互，值 "
":const:`None` 被寫為空字串。雖然這不是可逆轉換，但它可以更輕鬆地將 SQL NULL "
"資料值轉儲到 CSV 文件，而無需預處理從 cursor.fetch* 呼叫回傳的資料。"
"所有其他非字串資料在寫入之前都使用 :func:`str` 進行字串化。"

#: ../../library/csv.rst:117
#, fuzzy
msgid ""
"Associate *dialect* with *name*.  *name* must be a string. The dialect can "
"be specified either by passing a sub-class of :class:`Dialect`, or by "
"*fmtparams* keyword arguments, or both, with keyword arguments overriding "
"parameters of the dialect. For full details about dialects and formatting "
"parameters, see section :ref:`csv-fmt-params`."
msgstr ""
"將 *dialect* 與 *name* 聯繫起來。 *name* 必須是一個字串。方言可以通過傳遞 "
"Dialect 的子類別或 *fmtparams* 關鍵字參數，或兩者兼而有之，關鍵字參數覆蓋方言"
"的參數。有關方言和格式化參數的完整詳細資訊，請參閱 :ref:`csv-fmt-params` "
"部分。"

#: ../../library/csv.rst:126
#, fuzzy
msgid ""
"Delete the dialect associated with *name* from the dialect registry.  An :"
"exc:`Error` is raised if *name* is not a registered dialect name."
msgstr "從方言註冊表中刪除與 *name* 關聯的方言。如果 *name* 不是已註冊的方言名稱，"
"則會引發 :exc:`Error`。"

#: ../../library/csv.rst:132
#, fuzzy
msgid ""
"Return the dialect associated with *name*.  An :exc:`Error` is raised if "
"*name* is not a registered dialect name.  This function returns an "
"immutable :class:`Dialect`."
msgstr ""
"回傳與 *name* 關聯的方言。如果 *name* 不是已註冊的方言名稱，則會引發 "
":exc:`Error`。這個函式回傳一個不可變的 Dialect。"

#: ../../library/csv.rst:138
#, fuzzy
msgid "Return the names of all registered dialects."
msgstr "回傳所有已註冊方言的名稱。"

#: ../../library/csv.rst:143
#, fuzzy
msgid ""
"Returns the current maximum field size allowed by the parser. If *new_limit* "
"is given, this becomes the new limit."
msgstr "回傳解析器允許的當前最大欄位大小。如果給出 *new_limit*，這將成為新的限制。"

#: ../../library/csv.rst:147
#, fuzzy
msgid "The :mod:`csv` module defines the following classes:"
msgstr ":mod:`csv` 模組定義了以下類："

#: ../../library/csv.rst:152
#, fuzzy
msgid ""
"Create an object that operates like a regular reader but maps the "
"information in each row to a :class:`dict` whose keys are given by the "
"optional *fieldnames* parameter."
msgstr "建立一個像普通閱讀器一樣操作的物件，但將每行中的資訊映射到一個 "
":class:`dict`，其鍵由可選的 *fieldnames* 參數給出。"

#: ../../library/csv.rst:156
#, fuzzy
msgid ""
"The *fieldnames* parameter is a :term:`sequence`.  If *fieldnames* is "
"omitted, the values in the first row of file *f* will be used as the "
"fieldnames.  Regardless of how the fieldnames are determined, the dictionary "
"preserves their original ordering."
msgstr ""
"*fieldnames* 參數是一個 :term:`sequence`。如果省略 *fieldnames*，則文件 *f* "
"的第一行中的值將用作欄位名。不管欄位名是如何確定的，字典都會保留它們的原始順"
"序。"

#: ../../library/csv.rst:161
#, fuzzy
msgid ""
"If a row has more fields than fieldnames, the remaining data is put in a "
"list and stored with the fieldname specified by *restkey* (which defaults to "
"``None``).  If a non-blank row has fewer fields than fieldnames, the missing "
"values are filled-in with the value of *restval* (which defaults to "
"``None``)."
msgstr ""
"如果一行的欄位多於欄位名，則剩餘資料將放入列表中並儲存在*restkey*（預設為 ``None`` "
"）指定的欄位名中。如果非空行的欄位少於欄位名，則缺失值將用 *restval* "
"的值（預設為 ``None`` ）填充。"

#: ../../library/csv.rst:167
#, fuzzy
msgid ""
"All other optional or keyword arguments are passed to the underlying :class:"
"`reader` instance."
msgstr "所有其他可選或關鍵字參數都傳遞給底層 reader 實例。"

#: ../../library/csv.rst:170
#, fuzzy
msgid "Returned rows are now of type :class:`OrderedDict`."
msgstr "回傳的行現在是 OrderedDict 型別。"

#: ../../library/csv.rst:173
#, fuzzy
msgid "Returned rows are now of type :class:`dict`."
msgstr "回傳的行現在是 :class:`dict` 型別。"

#: ../../library/csv.rst:194
#, fuzzy
msgid ""
"Create an object which operates like a regular writer but maps dictionaries "
"onto output rows.  The *fieldnames* parameter is a :mod:`sequence "
"<collections.abc>` of keys that identify the order in which values in the "
"dictionary passed to the :meth:`writerow` method are written to file *f*.  "
"The optional *restval* parameter specifies the value to be written if the "
"dictionary is missing a key in *fieldnames*.  If the dictionary passed to "
"the :meth:`writerow` method contains a key not found in *fieldnames*, the "
"optional *extrasaction* parameter indicates what action to take. If it is "
"set to ``'raise'``, the default value, a :exc:`ValueError` is raised. If it "
"is set to ``'ignore'``, extra values in the dictionary are ignored. Any "
"other optional or keyword arguments are passed to the underlying :class:"
"`writer` instance."
msgstr ""
"建立一個像普通編寫器一樣運行但將字典映射到輸出行的物件。 *fieldnames* "
"參數是一個 :mod:`sequence <collections.abc>` 鍵，用於標識傳遞給 writerow "
"方法的字典中的值寫入文件 *f* 的順序。可選的 *restval* 參數指定字典在 "
"*fieldnames* 中缺少鍵時要寫入的值。如果傳遞給 :meth:`writerow` "
"方法的字典包含在 *fieldnames* 中找不到的鍵，則可選的 *extrasaction* "
"參數指示要採取的操作。如果它被設定為 ``'raise'``，預設值，一個 "
":exc:`ValueError` 被引發。如果設定為``'ignore'``，字典中的額外值將被忽略。"
"任何其他可選或關鍵字參數都傳遞給底層 writer 實例。"

#: ../../library/csv.rst:209
#, fuzzy
msgid ""
"Note that unlike the :class:`DictReader` class, the *fieldnames* parameter "
"of the :class:`DictWriter` class is not optional."
msgstr "請注意，與 DictReader 類不同，DictWriter 類的 *fieldnames* 參數不是可選的。"

#: ../../library/csv.rst:228
#, fuzzy
msgid ""
"The :class:`Dialect` class is a container class whose attributes contain "
"information for how to handle doublequotes, whitespace, delimiters, etc. Due "
"to the lack of a strict CSV specification, different applications produce "
"subtly different CSV data.  :class:`Dialect` instances define how :class:"
"`reader` and :class:`writer` instances behave."
msgstr ""
":class:`Dialect` "
"類是一個容器類，其屬性包含有關如何處理雙引號、空格、定界符等的資訊。"
"由於缺乏嚴格的 CSV 規範，不同的應用程式會產生略有不同的 CSV 資料。 "
":class:`Dialect` 實例定義 :class:`reader` 和 :class:`writer` 實例的行為方式。"

#: ../../library/csv.rst:234
#, fuzzy
msgid ""
"All available :class:`Dialect` names are returned by :func:`list_dialects`, "
"and they can be registered with specific :class:`reader` and :class:`writer` "
"classes through their initializer (``__init__``) functions like this::"
msgstr ""
"所有可用的 Dialect 名稱都由 list_dialects 回傳，"
"並且它們可以通過它們的初始化器 (``__init__``) 註冊到特定的 :class:`reader` "
"和 :class:`writer` 類像這樣的功能::"

#: ../../library/csv.rst:247
#, fuzzy
msgid ""
"The :class:`excel` class defines the usual properties of an Excel-generated "
"CSV file.  It is registered with the dialect name ``'excel'``."
msgstr ":class:`excel` 類定義了 Excel 生成的 CSV "
"文件的常用屬性。它以方言名稱 ``'excel'`` 註冊。"

#: ../../library/csv.rst:253
#, fuzzy
msgid ""
"The :class:`excel_tab` class defines the usual properties of an Excel-"
"generated TAB-delimited file.  It is registered with the dialect name "
"``'excel-tab'``."
msgstr ":class:`excel_tab` 類定義了 Excel "
"生成的製表符分隔文件的常用屬性。它以方言名稱 ``'excel-tab'`` 註冊。"

#: ../../library/csv.rst:259
#, fuzzy
msgid ""
"The :class:`unix_dialect` class defines the usual properties of a CSV file "
"generated on UNIX systems, i.e. using ``'\\n'`` as line terminator and "
"quoting all fields.  It is registered with the dialect name ``'unix'``."
msgstr ""
":class:`unix_dialect` 類定義了在 UNIX 系統上生成的 CSV 文件的常用屬性，"
"即使用 ``'\\n"
"'`` 作為行終止符並引用所有欄位。它以方言名稱 ``'unix'`` 註冊。"

#: ../../library/csv.rst:268
#, fuzzy
msgid "The :class:`Sniffer` class is used to deduce the format of a CSV file."
msgstr ":class:`Sniffer` 類用於推斷 CSV 文件的格式。"

#: ../../library/csv.rst:270
#, fuzzy
msgid "The :class:`Sniffer` class provides two methods:"
msgstr ":class:`Sniffer` 類提供了兩種方法："

#: ../../library/csv.rst:274
#, fuzzy
msgid ""
"Analyze the given *sample* and return a :class:`Dialect` subclass reflecting "
"the parameters found.  If the optional *delimiters* parameter is given, it "
"is interpreted as a string containing possible valid delimiter characters."
msgstr ""
"分析給定的 *sample* 並回傳反映找到的參數的 Dialect 子類別。如果給出了可選的 "
"*delimiters* 參數，它將被解釋為包含可能的有效分隔符的字串。"

#: ../../library/csv.rst:282
#, fuzzy
msgid ""
"Analyze the sample text (presumed to be in CSV format) and return :const:"
"`True` if the first row appears to be a series of column headers. Inspecting "
"each column, one of two key criteria will be considered to estimate if the "
"sample contains a header:"
msgstr ""
"分析示例文本（假定為 CSV 格式），如果第一行顯示為一系列列標題，則回傳 "
":const:`True`。檢查每一列，將考慮兩個關鍵標準之一來估計樣本是否包含標題："

#: ../../library/csv.rst:287
#, fuzzy
msgid "the second through n-th rows contain numeric values"
msgstr "第二行到第 n 行包含數值"

#: ../../library/csv.rst:288
#, fuzzy
msgid ""
"the second through n-th rows contain strings where at least one value's "
"length differs from that of the putative header of that column."
msgstr "第二行到第 n 行包含的字串中至少有一個值的長度與該列的假定標題的長度不同。"

#: ../../library/csv.rst:291
#, fuzzy
msgid ""
"Twenty rows after the first row are sampled; if more than half of columns + "
"rows meet the criteria, :const:`True` is returned."
msgstr "第一行之後的二十行被採樣；如果超過一半的列+行符合條件，則回傳 :const:`True`。"

#: ../../library/csv.rst:296
#, fuzzy
msgid ""
"This method is a rough heuristic and may produce both false positives and "
"negatives."
msgstr "這種方法是一種粗略的啟發式方法，可能會產生誤報和漏報。"

#: ../../library/csv.rst:299
#, fuzzy
msgid "An example for :class:`Sniffer` use::"
msgstr ":class:`Sniffer` 使用的一個例子："

#: ../../library/csv.rst:308
#, fuzzy
msgid "The :mod:`csv` module defines the following constants:"
msgstr ":mod:`csv` 模組定義了以下常數："

#: ../../library/csv.rst:312
#, fuzzy
msgid "Instructs :class:`writer` objects to quote all fields."
msgstr "指示 :class:`writer` 物件引用所有欄位。"

#: ../../library/csv.rst:317
#, fuzzy
msgid ""
"Instructs :class:`writer` objects to only quote those fields which contain "
"special characters such as *delimiter*, *quotechar* or any of the characters "
"in *lineterminator*."
msgstr ""
"指示 :class:`writer` 對像只引用那些包含特殊字元的欄位，例如 "
"*delimiter*、*quotechar* 或 *lineterminator* 中的任何字元。"

#: ../../library/csv.rst:324
#, fuzzy
msgid "Instructs :class:`writer` objects to quote all non-numeric fields."
msgstr "指示 :class:`writer` 物件引用所有非數字欄位。"

#: ../../library/csv.rst:326
#, fuzzy
msgid "Instructs the reader to convert all non-quoted fields to type *float*."
msgstr "指示讀者將所有非引號欄位轉換為 *float* 型別。"

#: ../../library/csv.rst:331
#, fuzzy
msgid ""
"Instructs :class:`writer` objects to never quote fields.  When the current "
"*delimiter* occurs in output data it is preceded by the current *escapechar* "
"character.  If *escapechar* is not set, the writer will raise :exc:`Error` "
"if any characters that require escaping are encountered."
msgstr ""
"指示 :class:`writer` 對像從不引用欄位。噹噹前 *delimiter* "
"出現在輸出資料中時，它前面是當前 *escapechar* 字元。如果未設定 "
"*escapechar*，如果遇到任何需要轉義的字元，編寫器將引發 :exc:`Error`。"

#: ../../library/csv.rst:336
#, fuzzy
msgid ""
"Instructs :class:`reader` to perform no special processing of quote "
"characters."
msgstr "指示 reader 不對引號字元執行特殊處理。"

#: ../../library/csv.rst:338
#, fuzzy
msgid "The :mod:`csv` module defines the following exception:"
msgstr ":mod:`csv` 模組定義了以下例外："

#: ../../library/csv.rst:343
#, fuzzy
msgid "Raised by any of the functions when an error is detected."
msgstr "當檢測到錯誤時由任何函式引發。"

#: ../../library/csv.rst:348
#, fuzzy
msgid "Dialects and Formatting Parameters"
msgstr "方言和格式化參數"

#: ../../library/csv.rst:350
#, fuzzy
msgid ""
"To make it easier to specify the format of input and output records, "
"specific formatting parameters are grouped together into dialects.  A "
"dialect is a subclass of the :class:`Dialect` class having a set of specific "
"methods and a single :meth:`validate` method.  When creating :class:`reader` "
"or :class:`writer` objects, the programmer can specify a string or a "
"subclass of the :class:`Dialect` class as the dialect parameter.  In "
"addition to, or instead of, the *dialect* parameter, the programmer can also "
"specify individual formatting parameters, which have the same names as the "
"attributes defined below for the :class:`Dialect` class."
msgstr ""
"為了更容易指定輸入和輸出記錄的格式，特定的格式參數被分組到方言中。方言是 "
":class:`Dialect` 類的子類別，具有一組特定方法和一個 :meth:`validate` 方法。"
"建立 :class:`reader` 或 :class:`writer` 物件時，程式員可以指定字串或 "
":class:`Dialect` 類的子類別作為方言參數。除了 *dialect* 參數之外，或者代替 "
"*dialect* 參數，程式員還可以指定單獨的格式化參數，這些參數與下面為 Dialect "
"類定義的屬性具有相同的名稱。"

#: ../../library/csv.rst:360
#, fuzzy
msgid "Dialects support the following attributes:"
msgstr "方言支援以下屬性："

#: ../../library/csv.rst:365
#, fuzzy
msgid ""
"A one-character string used to separate fields.  It defaults to ``','``."
msgstr "用於分隔欄位的單字元字串。它預設為``','``。"

#: ../../library/csv.rst:370
#, fuzzy
msgid ""
"Controls how instances of *quotechar* appearing inside a field should "
"themselves be quoted.  When :const:`True`, the character is doubled. When :"
"const:`False`, the *escapechar* is used as a prefix to the *quotechar*.  It "
"defaults to :const:`True`."
msgstr ""
"控制出現在欄位中的 *quotechar* 實例本身應該如何被引用。當 :const:`True` "
"時，字元加倍。當 :const:`False` 時，*escapechar* 用作 *quotechar* 的前綴。"
"它預設為 :const:`True`。"

#: ../../library/csv.rst:375
#, fuzzy
msgid ""
"On output, if *doublequote* is :const:`False` and no *escapechar* is set, :"
"exc:`Error` is raised if a *quotechar* is found in a field."
msgstr ""
"在輸出中，如果 *doublequote* 為 :const:`False` 且未設定 *escapechar*，"
"則在欄位中找到 *quotechar* 時引發 :exc:`Error`。"

#: ../../library/csv.rst:381
#, fuzzy
msgid ""
"A one-character string used by the writer to escape the *delimiter* if "
"*quoting* is set to :const:`QUOTE_NONE` and the *quotechar* if *doublequote* "
"is :const:`False`. On reading, the *escapechar* removes any special meaning "
"from the following character. It defaults to :const:`None`, which disables "
"escaping."
msgstr ""
"如果 *quoting* 設定為 :const:`QUOTE_NONE` 和 *quotechar* 如果 *doublequote* "
"設定為 :const:`False`，作者使用一個字元的字串來轉義 "
"*delimiter*。在閱讀時，*escapechar* 會刪除後面字元的任何特殊含義。它預設為 "
":const:`None`，禁用轉義。"

#: ../../library/csv.rst:386
#, fuzzy
msgid "An empty *escapechar* is not allowed."
msgstr "不允許使用空的 *escapechar*。"

#: ../../library/csv.rst:391
#, fuzzy
msgid ""
"The string used to terminate lines produced by the :class:`writer`. It "
"defaults to ``'\\r\\n'``."
msgstr ""
"用於終止 :class:`writer` 生成的行的字串。它預設為 ``'\\r\\n"
"'``。"

#: ../../library/csv.rst:396
#, fuzzy
msgid ""
"The :class:`reader` is hard-coded to recognise either ``'\\r'`` or ``'\\n'`` "
"as end-of-line, and ignores *lineterminator*. This behavior may change in "
"the future."
msgstr ""
":class:`reader` 被硬編碼為將 ``'\\r'`` 或 ``'\\n"
"'`` 識別為行尾，並忽略 *lineterminator*。這種行為將來可能會改變。"

#: ../../library/csv.rst:403
#, fuzzy
msgid ""
"A one-character string used to quote fields containing special characters, "
"such as the *delimiter* or *quotechar*, or which contain new-line "
"characters.  It defaults to ``'\"'``."
msgstr ""
"一個單字元字串，用於引用包含特殊字元（例如 *delimiter* 或 "
"*quotechar*）或包含換行符的欄位。它預設為``\\'\"\\'``。"

#: ../../library/csv.rst:407
#, fuzzy
msgid "An empty *quotechar* is not allowed."
msgstr "不允許使用空的 *quotechar*。"

#: ../../library/csv.rst:412
#, fuzzy
msgid ""
"Controls when quotes should be generated by the writer and recognised by the "
"reader.  It can take on any of the :const:`QUOTE_\\*` constants (see "
"section :ref:`csv-contents`) and defaults to :const:`QUOTE_MINIMAL`."
msgstr ""
"控制何時應由作者生成引文並由讀者識別。它可以採用任何 :const:`QUOTE_\\*` "
"常數（參見 :ref:`csv-contents` 部分）並預設為 :const:`QUOTE_MINIMAL`。"

#: ../../library/csv.rst:419
#, fuzzy
msgid ""
"When :const:`True`, spaces immediately following the *delimiter* are "
"ignored. The default is :const:`False`."
msgstr "當 :const:`True` 時，緊跟在 *delimiter* "
"之後的空格將被忽略。預設值為 :const:`False`。"

#: ../../library/csv.rst:425
#, fuzzy
msgid ""
"When ``True``, raise exception :exc:`Error` on bad CSV input. The default is "
"``False``."
msgstr "當 ``True`` 時，在錯誤的 CSV 輸入上引發例外 :exc:`Error`。預設值為 ``False``。"

#: ../../library/csv.rst:429
#, fuzzy
msgid "Reader Objects"
msgstr "讀者物件"

#: ../../library/csv.rst:431
#, fuzzy
msgid ""
"Reader objects (:class:`DictReader` instances and objects returned by the :"
"func:`reader` function) have the following public methods:"
msgstr "Reader 物件（:class:`DictReader` 實例和 :func:`reader` "
"函式回傳的物件）具有以下公開方法："

#: ../../library/csv.rst:436
#, fuzzy
msgid ""
"Return the next row of the reader's iterable object as a list (if the object "
"was returned from :func:`reader`) or a dict (if it is a :class:`DictReader` "
"instance), parsed according to the current :class:`Dialect`.  Usually you "
"should call this as ``next(reader)``."
msgstr ""
"將讀取器的可疊代物件的下一行回傳為列表（如果對像是從 :func:`reader` "
"回傳的）或字典（如果它是 :class:`DictReader` 實例），根據當前 :class "
"解析:`方言`。通常你應該稱它為``next(reader)``。"

#: ../../library/csv.rst:442
#, fuzzy
msgid "Reader objects have the following public attributes:"
msgstr "Reader 物件具有以下公開屬性："

#: ../../library/csv.rst:446
#, fuzzy
msgid "A read-only description of the dialect in use by the parser."
msgstr "解析器使用的方言的只讀描述。"

#: ../../library/csv.rst:451
#, fuzzy
msgid ""
"The number of lines read from the source iterator. This is not the same as "
"the number of records returned, as records can span multiple lines."
msgstr "從源疊代器讀取的行數。這與回傳的記錄數不同，因為記錄可以跨越多行。"

#: ../../library/csv.rst:455
#, fuzzy
msgid "DictReader objects have the following public attribute:"
msgstr "DictReader 物件具有以下公開屬性："

#: ../../library/csv.rst:459
#, fuzzy
msgid ""
"If not passed as a parameter when creating the object, this attribute is "
"initialized upon first access or when the first record is read from the file."
msgstr "如果在建立物件時未作為參數傳遞，則此屬性將在首次訪問或從文件中讀取第一條記錄"
"時初始化。"

#: ../../library/csv.rst:466
#, fuzzy
msgid "Writer Objects"
msgstr "作家物件"

#: ../../library/csv.rst:468
#, fuzzy
msgid ""
":class:`Writer` objects (:class:`DictWriter` instances and objects returned "
"by the :func:`writer` function) have the following public methods.  A *row* "
"must be an iterable of strings or numbers for :class:`Writer` objects and a "
"dictionary mapping fieldnames to strings or numbers (by passing them "
"through :func:`str` first) for :class:`DictWriter` objects.  Note that "
"complex numbers are written out surrounded by parens. This may cause some "
"problems for other programs which read CSV files (assuming they support "
"complex numbers at all)."
msgstr ""
":class:`Writer` 物件（:class:`DictWriter` 實例和 :func:`writer` "
"函式回傳的物件）具有以下公開方法。 *row* 必須是 :class:`Writer` "
"物件的字串或數字的可疊代，以及 :class:`DictWriter` "
"物件的字典映射欄位名到字串或數字（通過首先將它們傳遞給 :func:`str`） ."
"請注意，複數是用括號括起來的。這可能會導致其他讀取 CSV "
"文件的程式出現問題（假設它們完全支援複數）。"

#: ../../library/csv.rst:479
#, fuzzy
msgid ""
"Write the *row* parameter to the writer's file object, formatted according "
"to the current :class:`Dialect`. Return the return value of the call to the "
"*write* method of the underlying file object."
msgstr "將 *row* 參數寫入作者的文件物件，根據當前的 Dialect 進行格式化。"
"回傳呼叫底層文件物件的 *write* 方法的回傳值。"

#: ../../library/csv.rst:483
#, fuzzy
msgid "Added support of arbitrary iterables."
msgstr "新增了對任意疊代的支援。"

#: ../../library/csv.rst:488
#, fuzzy
msgid ""
"Write all elements in *rows* (an iterable of *row* objects as described "
"above) to the writer's file object, formatted according to the current "
"dialect."
msgstr "將 *rows* 中的所有元素（如上所述的 *row* "
"物件的可疊代）寫入作者的文件物件，根據當前方言格式化。"

#: ../../library/csv.rst:492
#, fuzzy
msgid "Writer objects have the following public attribute:"
msgstr "Writer 物件具有以下公開屬性："

#: ../../library/csv.rst:497
#, fuzzy
msgid "A read-only description of the dialect in use by the writer."
msgstr "作者所用方言的只讀描述。"

#: ../../library/csv.rst:500
#, fuzzy
msgid "DictWriter objects have the following public method:"
msgstr "DictWriter 物件具有以下公開方法："

#: ../../library/csv.rst:505
#, fuzzy
msgid ""
"Write a row with the field names (as specified in the constructor) to the "
"writer's file object, formatted according to the current dialect. Return the "
"return value of the :meth:`csvwriter.writerow` call used internally."
msgstr ""
"將欄位名稱（在構造函式中指定）的一行寫入作者的文件物件，根據當前方言格式化。"
"回傳內部使用的 csvwriter.writerow 呼叫的回傳值。"

#: ../../library/csv.rst:510
#, fuzzy
msgid ""
":meth:`writeheader` now also returns the value returned by the :meth:"
"`csvwriter.writerow` method it uses internally."
msgstr ":meth:`writheader` 現在還回傳它在內部使用的 :meth:`csvwriter.writerow` "
"方法回傳的值。"

#: ../../library/csv.rst:518
msgid "Examples"
msgstr "範例"

#: ../../library/csv.rst:520
#, fuzzy
msgid "The simplest example of reading a CSV file::"
msgstr "讀取 CSV 文件的最簡單示例："

#: ../../library/csv.rst:528
#, fuzzy
msgid "Reading a file with an alternate format::"
msgstr "讀取具有替代格式的文件::"

#: ../../library/csv.rst:536
#, fuzzy
msgid "The corresponding simplest possible writing example is::"
msgstr "對應的最簡單的寫法例子是："

#: ../../library/csv.rst:543
#, fuzzy
msgid ""
"Since :func:`open` is used to open a CSV file for reading, the file will by "
"default be decoded into unicode using the system default encoding (see :func:"
"`locale.getencoding`).  To decode a file using a different encoding, use the "
"``encoding`` argument of open::"
msgstr ""
"由於 :func:`open` 用於打開 CSV 文件進行讀取，"
"該文件將預設使用系統預設編碼解碼為 unicode（請參閱 :func:`locale."
"getencoding`）。要使用不同的編碼解碼文件，請使用 open:: 的 ``encoding`` 參數"

#: ../../library/csv.rst:554
#, fuzzy
msgid ""
"The same applies to writing in something other than the system default "
"encoding: specify the encoding argument when opening the output file."
msgstr "這同樣適用於以系統預設編碼以外的方式編寫：在打開輸出文件時指定編碼參數。"

#: ../../library/csv.rst:557
#, fuzzy
msgid "Registering a new dialect::"
msgstr "註冊新方言::"

#: ../../library/csv.rst:564
#, fuzzy
msgid ""
"A slightly more advanced use of the reader --- catching and reporting "
"errors::"
msgstr "閱讀器稍微高階一點的用法——捕獲和報告錯誤：："

#: ../../library/csv.rst:576
#, fuzzy
msgid ""
"And while the module doesn't directly support parsing strings, it can easily "
"be done::"
msgstr "雖然該模組不直接支援解析字串，但可以輕鬆完成::"

#: ../../library/csv.rst:585
msgid "Footnotes"
msgstr "註解"

#: ../../library/csv.rst:586
#, fuzzy
msgid ""
"If ``newline=''`` is not specified, newlines embedded inside quoted fields "
"will not be interpreted correctly, and on platforms that use ``\\r\\n`` "
"linendings on write an extra ``\\r`` will be added.  It should always be "
"safe to specify ``newline=''``, since the csv module does its own (:term:"
"`universal <universal newlines>`) newline handling."
msgstr ""
"如果沒有指定 ``newline=''``，嵌入在引用欄位中的換行符將不會被正確解釋，"
"並且在使用 ``\\r\\n"
"`` linedings on write 的平台上，一個額外的 ``\\r`` 將是新增。指定 "
"``newline=''`` 應該總是安全的，因為 csv 模組有它自己的（:term:`universal "
"<universal newlines>`）換行處理。"
