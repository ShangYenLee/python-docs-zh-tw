# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# splasky Chang <henrychung860326@gmail.com>, 2017
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-02 00:16+0000\n"
"PO-Revision-Date: 2018-07-27 16:55+0800\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 2.1.1\n"

#: ../../library/dis.rst:2
msgid ":mod:`dis` --- Disassembler for Python bytecode"
msgstr ":mod:`dis` --- Python bytecode 的反組譯器"

#: ../../library/dis.rst:7
msgid "**Source code:** :source:`Lib/dis.py`"
msgstr "**原始碼：**\\ :source:`Lib/dis.py`"

#: ../../library/dis.rst:17
msgid ""
"The :mod:`dis` module supports the analysis of CPython :term:`bytecode` by "
"disassembling it. The CPython bytecode which this module takes as an input "
"is defined in the file :file:`Include/opcode.h` and used by the compiler and "
"the interpreter."
msgstr ""
":mod:`dis` 模組支援反組譯分析 CPython :term:`bytecode`。CPython bytecode 作為"
"輸入的模組被定義於 :file:`Include/opcode.h` 並且被編譯器和直譯器所使用。"

#: ../../library/dis.rst:24
#, fuzzy
msgid ""
"Bytecode is an implementation detail of the CPython interpreter.  No "
"guarantees are made that bytecode will not be added, removed, or changed "
"between versions of Python.  Use of this module should not be considered to "
"work across Python VMs or Python releases."
msgstr ""
"位元組碼是 CPython 直譯器的一個實作細節。不保證不會在 Python "
"版本之間新增、刪除或更改位元組碼。不應將此模組的使用視為跨 Python VM 或 "
"Python 版本工作。"

#: ../../library/dis.rst:29
#, fuzzy
msgid ""
"Use 2 bytes for each instruction. Previously the number of bytes varied by "
"instruction."
msgstr "每條指令使用 2 個位元組。以前位元組數因指令而異。"

#: ../../library/dis.rst:33
#, fuzzy
msgid ""
"The argument of jump, exception handling and loop instructions is now the "
"instruction offset rather than the byte offset."
msgstr "跳轉、例外處理和循環指令的參數現在是指令偏移量而不是位元組偏移量。"

#: ../../library/dis.rst:37
#, fuzzy
msgid ""
"Some instructions are accompanied by one or more inline cache entries, which "
"take the form of :opcode:`CACHE` instructions. These instructions are hidden "
"by default, but can be shown by passing ``show_caches=True`` to any :mod:"
"`dis` utility. Furthermore, the interpreter now adapts the bytecode to "
"specialize it for different runtime conditions. The adaptive bytecode can be "
"shown by passing ``adaptive=True``."
msgstr ""
"一些指令伴隨著一個或多個內聯快取條目，它們採用 :opcode:`CACHE` "
"指令的形式。預設情況下這些指令是隱藏的，但可以通過將 ``show_caches=True`` "
"傳遞給任何 :mod:`dis` "
"實用程式來顯示。此外，直譯器現在調整位元組碼以使其專門用於不同的運行時條件。"
"自適應位元組碼可以通過傳遞 adaptive=True 來顯示。"

#: ../../library/dis.rst:46
#, fuzzy
msgid "Example: Given the function :func:`myfunc`::"
msgstr "示例：給定函式 :func:`myfunc`::"

#: ../../library/dis.rst:51
#, fuzzy
msgid ""
"the following command can be used to display the disassembly of :func:"
"`myfunc`:"
msgstr "以下命令可用於顯示 :func:`myfunc` 的反彙編："

#: ../../library/dis.rst:65
#, fuzzy
msgid "(The \"2\" is a line number)."
msgstr "（ ``2``是行號）。"

#: ../../library/dis.rst:68
#, fuzzy
msgid "Bytecode analysis"
msgstr "位元組碼分析"

#: ../../library/dis.rst:72
#, fuzzy
msgid ""
"The bytecode analysis API allows pieces of Python code to be wrapped in a :"
"class:`Bytecode` object that provides easy access to details of the compiled "
"code."
msgstr ""
"位元組碼分析 API 允許將 Python 程式碼片段包裝在一個 :class:`Bytecode` "
"對像中，該物件提供對編譯程式碼詳細資訊的輕鬆訪問。"

#: ../../library/dis.rst:79
#, fuzzy
msgid ""
"Analyse the bytecode corresponding to a function, generator, asynchronous "
"generator, coroutine, method, string of source code, or a code object (as "
"returned by :func:`compile`)."
msgstr "分析與函式、生成器、非同步生成器、協程、方法、源程式碼字串或程式碼物件（由 "
":func:`compile` 回傳）對應的位元組碼。"

#: ../../library/dis.rst:83
#, fuzzy
msgid ""
"This is a convenience wrapper around many of the functions listed below, "
"most notably :func:`get_instructions`, as iterating over a :class:`Bytecode` "
"instance yields the bytecode operations as :class:`Instruction` instances."
msgstr ""
"這是對下面列出的許多函式的便捷包裝，最著名的是 :func:`get_instructions`，"
"因為疊代 :class:`Bytecode` 實例會產生位元組碼操作作為 :class:`Instruction` "
"實例。"

#: ../../library/dis.rst:87 ../../library/dis.rst:276
#, fuzzy
msgid ""
"If *first_line* is not ``None``, it indicates the line number that should be "
"reported for the first source line in the disassembled code.  Otherwise, the "
"source line information (if any) is taken directly from the disassembled "
"code object."
msgstr ""
"如果*first_line* 不是``None``，它表示應該為反彙編程式碼中的第一個源程式碼行報"
"告的行號。否則，源行資訊（如果有的話）直接取自反彙編程式碼物件。"

#: ../../library/dis.rst:92
#, fuzzy
msgid ""
"If *current_offset* is not ``None``, it refers to an instruction offset in "
"the disassembled code. Setting this means :meth:`.dis` will display a "
"\"current instruction\" marker against the specified opcode."
msgstr ""
"如果 *current_offset* 不是``None``，它指的是反彙編程式碼中的指令偏移量。"
"設定這意味著 :meth:`.dis` 將針對指定的操作碼顯示“當前指令”標記。"

#: ../../library/dis.rst:96
#, fuzzy
msgid ""
"If *show_caches* is ``True``, :meth:`.dis` will display inline cache entries "
"used by the interpreter to specialize the bytecode."
msgstr "如果 *show_caches* 為 ``True``，則 :meth:`.dis` "
"將顯示直譯器用於專門化位元組碼的內聯快取條目。"

#: ../../library/dis.rst:99
#, fuzzy
msgid ""
"If *adaptive* is ``True``, :meth:`.dis` will display specialized bytecode "
"that may be different from the original bytecode."
msgstr "如果 *adaptive* 為 ``True``，:meth:`.dis` "
"將顯示可能與原始位元組碼不同的專用位元組碼。"

#: ../../library/dis.rst:104
#, fuzzy
msgid ""
"Construct a :class:`Bytecode` instance from the given traceback, setting "
"*current_offset* to the instruction responsible for the exception."
msgstr "從給定的回溯構造一個 :class:`Bytecode` 實例，將 *current_offset* "
"設定為負責例外的指令。"

#: ../../library/dis.rst:109
#, fuzzy
msgid "The compiled code object."
msgstr "編譯後的程式碼物件。"

#: ../../library/dis.rst:113
#, fuzzy
msgid "The first source line of the code object (if available)"
msgstr "程式碼物件的第一行源程式碼（如果可用）"

#: ../../library/dis.rst:117
#, fuzzy
msgid ""
"Return a formatted view of the bytecode operations (the same as printed by :"
"func:`dis.dis`, but returned as a multi-line string)."
msgstr "回傳位元組碼操作的格式化視圖（與 :func:`dis.dis` "
"印出的相同，但作為多行字串回傳）。"

#: ../../library/dis.rst:122
#, fuzzy
msgid ""
"Return a formatted multi-line string with detailed information about the "
"code object, like :func:`code_info`."
msgstr "回傳一個格式化的多行字串，其中包含有關程式碼物件的詳細資訊，例如 "
":func:`code_info`。"

#: ../../library/dis.rst:125 ../../library/dis.rst:166
#: ../../library/dis.rst:218
#, fuzzy
msgid "This can now handle coroutine and asynchronous generator objects."
msgstr "現在可以處理協程和非同步生成器物件。"

#: ../../library/dis.rst:128 ../../library/dis.rst:221
#: ../../library/dis.rst:237 ../../library/dis.rst:264
#: ../../library/dis.rst:285
msgid "Added the *show_caches* and *adaptive* parameters."
msgstr "新增 *show_caches* 與 *adaptive* 參數。"

#: ../../library/dis.rst:131
msgid "Example:"
msgstr "範例："

#: ../../library/dis.rst:148
#, fuzzy
msgid "Analysis functions"
msgstr "分析功能"

#: ../../library/dis.rst:150
#, fuzzy
msgid ""
"The :mod:`dis` module also defines the following analysis functions that "
"convert the input directly to the desired output. They can be useful if only "
"a single operation is being performed, so the intermediate analysis object "
"isn't useful:"
msgstr ":mod:`dis` 模組還定義了以下將輸入直接轉換為所需輸出的分析函式。如果僅執行單個"
"操作，它們可能很有用，因此中間分析對像沒有用："

#: ../../library/dis.rst:156
#, fuzzy
msgid ""
"Return a formatted multi-line string with detailed code object information "
"for the supplied function, generator, asynchronous generator, coroutine, "
"method, source code string or code object."
msgstr "回傳格式化的多行字串，其中包含提供的函式、生成器、非同步生成器、協程、方法、"
"源程式碼字串或程式碼物件的詳細程式碼物件資訊。"

#: ../../library/dis.rst:160
#, fuzzy
msgid ""
"Note that the exact contents of code info strings are highly implementation "
"dependent and they may change arbitrarily across Python VMs or Python "
"releases."
msgstr "請注意，程式碼資訊字串的確切內容高度依賴於實作，並且它們可能會在 Python VM "
"或 Python 版本之間任意更改。"

#: ../../library/dis.rst:172
#, fuzzy
msgid ""
"Print detailed code object information for the supplied function, method, "
"source code string or code object to *file* (or ``sys.stdout`` if *file* is "
"not specified)."
msgstr ""
"將提供的函式、方法、源程式碼字串或程式碼物件的詳細程式碼物件資訊印出到 "
"*file*（或 ``sys.stdout``，如果 *file* 未指定）。"

#: ../../library/dis.rst:176
#, fuzzy
msgid ""
"This is a convenient shorthand for ``print(code_info(x), file=file)``, "
"intended for interactive exploration at the interpreter prompt."
msgstr "這是 ``print(code_info(x), file=file)`` "
"的方便簡寫，用於在直譯器提示符下進行交互式探索。"

#: ../../library/dis.rst:181 ../../library/dis.rst:212
#: ../../library/dis.rst:234 ../../library/dis.rst:261
msgid "Added *file* parameter."
msgstr "新增 *file* 參數。"

#: ../../library/dis.rst:187
#, fuzzy
msgid ""
"Disassemble the *x* object.  *x* can denote either a module, a class, a "
"method, a function, a generator, an asynchronous generator, a coroutine, a "
"code object, a string of source code or a byte sequence of raw bytecode. For "
"a module, it disassembles all functions. For a class, it disassembles all "
"methods (including class and static methods). For a code object or sequence "
"of raw bytecode, it prints one line per bytecode instruction. It also "
"recursively disassembles nested code objects (the code of comprehensions, "
"generator expressions and nested functions, and the code used for building "
"nested classes). Strings are first compiled to code objects with the :func:"
"`compile` built-in function before being disassembled.  If no object is "
"provided, this function disassembles the last traceback."
msgstr ""
"反彙編 *x* 物件。 *x* 可以表示模組、類、方法、函式、生成器、非同步生成器、協"
"程、程式碼物件、源程式碼字串或原始位元組碼的位元組序列。對於一個模組，它反彙"
"編了所有的功能。對於一個類，它反彙編所有方法（包括類和靜態方法）。對於程式碼"
"對像或原始位元組碼序列，它為每個位元組碼指令印出一行。它還遞迴地反彙編嵌套程"
"式碼物件（理解、生成器表達式和嵌套函式的程式碼，以及用於構建嵌套類的程式碼）"
"。在反彙編之前，字串首先使用 :func:`compile` "
"內建函式編譯為程式碼物件。如果沒有提供物件，這個函式反彙編最後的回溯。"

#: ../../library/dis.rst:200 ../../library/dis.rst:231
#: ../../library/dis.rst:258
#, fuzzy
msgid ""
"The disassembly is written as text to the supplied *file* argument if "
"provided and to ``sys.stdout`` otherwise."
msgstr "如果提供，反彙編將作為文本寫入提供的 *file* 參數，否則寫入 ``sys.stdout``。"

#: ../../library/dis.rst:203
#, fuzzy
msgid ""
"The maximal depth of recursion is limited by *depth* unless it is ``None``. "
"``depth=0`` means no recursion."
msgstr "遞迴的最大深度受 *depth* 限制，除非它是 ``None``。 ``depth=0`` 表示沒有遞迴。"

#: ../../library/dis.rst:206
#, fuzzy
msgid ""
"If *show_caches* is ``True``, this function will display inline cache "
"entries used by the interpreter to specialize the bytecode."
msgstr "如果 *show_caches* 為 "
"``True``，此函式將顯示直譯器用於專門化位元組碼的內聯快取條目。"

#: ../../library/dis.rst:209
#, fuzzy
msgid ""
"If *adaptive* is ``True``, this function will display specialized bytecode "
"that may be different from the original bytecode."
msgstr "如果 *adaptive* 為 "
"``True``，此函式將顯示可能與原始位元組碼不同的專用位元組碼。"

#: ../../library/dis.rst:215
#, fuzzy
msgid "Implemented recursive disassembling and added *depth* parameter."
msgstr "實作了遞迴反彙編並新增了 *depth* 參數。"

#: ../../library/dis.rst:227
#, fuzzy
msgid ""
"Disassemble the top-of-stack function of a traceback, using the last "
"traceback if none was passed.  The instruction causing the exception is "
"indicated."
msgstr "反彙編回溯的棧頂函式，如果沒有傳遞，則使用最後一個回溯。指示導致例外的指令。"

#: ../../library/dis.rst:244
#, fuzzy
msgid ""
"Disassemble a code object, indicating the last instruction if *lasti* was "
"provided.  The output is divided in the following columns:"
msgstr "反彙編程式碼物件，如果提供了 *lasti*，則指示最後一條指令。輸出分為以下列："

#: ../../library/dis.rst:247
#, fuzzy
msgid "the line number, for the first instruction of each line"
msgstr "行號，每行的第一條指令"

#: ../../library/dis.rst:248
#, fuzzy
msgid "the current instruction, indicated as ``-->``,"
msgstr "當前指令，表示為``-->``，"

#: ../../library/dis.rst:249
#, fuzzy
msgid "a labelled instruction, indicated with ``>>``,"
msgstr "一條帶標籤的指令，用``>>``表示，"

#: ../../library/dis.rst:250
#, fuzzy
msgid "the address of the instruction,"
msgstr "指令的地址，"

#: ../../library/dis.rst:251
#, fuzzy
msgid "the operation code name,"
msgstr "操作程式碼名稱，"

#: ../../library/dis.rst:252
#, fuzzy
msgid "operation parameters, and"
msgstr "操作參數，和"

#: ../../library/dis.rst:253
#, fuzzy
msgid "interpretation of the parameters in parentheses."
msgstr "括號中參數的解釋。"

#: ../../library/dis.rst:255
#, fuzzy
msgid ""
"The parameter interpretation recognizes local and global variable names, "
"constant values, branch targets, and compare operators."
msgstr "參數解釋識別局部和全局變數名稱、常數值、分支目標和比較運算符。"

#: ../../library/dis.rst:270
#, fuzzy
msgid ""
"Return an iterator over the instructions in the supplied function, method, "
"source code string or code object."
msgstr "在提供的函式、方法、源程式碼字串或程式碼對像中的指令上回傳一個疊代器。"

#: ../../library/dis.rst:273
#, fuzzy
msgid ""
"The iterator generates a series of :class:`Instruction` named tuples giving "
"the details of each operation in the supplied code."
msgstr "疊代器生成一系列 :class:`Instruction` "
"命名元組，給出所提供程式碼中每個操作的詳細資訊。"

#: ../../library/dis.rst:281
#, fuzzy
msgid ""
"The *show_caches* and *adaptive* parameters work as they do in :func:`dis`."
msgstr "*show_caches* 和 *adaptive* 參數的工作方式與它們在 :func:`dis` "
"中的工作方式相同。"

#: ../../library/dis.rst:291
#, fuzzy
msgid ""
"This generator function uses the ``co_lines`` method of the code object "
"*code* to find the offsets which are starts of lines in the source code.  "
"They are generated as ``(offset, lineno)`` pairs."
msgstr ""
"這個生成器函式使用程式碼物件 *code* 的 ``co_lines`` "
"方法來查找源程式碼中行開始的偏移量。它們生成為“(offset, lineno)”對。"

#: ../../library/dis.rst:295
#, fuzzy
msgid "Line numbers can be decreasing. Before, they were always increasing."
msgstr "行號可以減少。以前，它們總是在增加。"

#: ../../library/dis.rst:298
#, fuzzy
msgid ""
"The :pep:`626` ``co_lines`` method is used instead of the ``co_firstlineno`` "
"and ``co_lnotab`` attributes of the code object."
msgstr ""
":pep:`626` ``co_lines`` 方法用於代替程式碼物件的 ``co_firstlineno`` 和 "
"``co_lnotab`` 屬性。"

#: ../../library/dis.rst:305
#, fuzzy
msgid ""
"Detect all offsets in the raw compiled bytecode string *code* which are jump "
"targets, and return a list of these offsets."
msgstr "檢測作為跳轉目標的原始編譯位元組碼字串 *code* "
"中的所有偏移量，並回傳這些偏移量的列表。"

#: ../../library/dis.rst:311
#, fuzzy
msgid "Compute the stack effect of *opcode* with argument *oparg*."
msgstr "使用參數 *oparg* 計算 *opcode* 的堆疊效應。"

#: ../../library/dis.rst:313
#, fuzzy
msgid ""
"If the code has a jump target and *jump* is ``True``, :func:`~stack_effect` "
"will return the stack effect of jumping.  If *jump* is ``False``, it will "
"return the stack effect of not jumping. And if *jump* is ``None`` (default), "
"it will return the maximal stack effect of both cases."
msgstr ""
"如果程式碼有跳轉目標，並且 *jump* 為 ``True``，:func:`~stack_effect` "
"將回傳跳轉的堆疊效果。如果*jump*為``False``，將回傳不跳躍的疊加效果。如果 "
"*jump* 是``None``（預設），它將回傳兩種情況下的最大疊加效果。"

#: ../../library/dis.rst:320
msgid "Added *jump* parameter."
msgstr "新增 *jump* 參數。"

#: ../../library/dis.rst:327
#, fuzzy
msgid "Python Bytecode Instructions"
msgstr "Python 位元組碼指令"

#: ../../library/dis.rst:329
#, fuzzy
msgid ""
"The :func:`get_instructions` function and :class:`Bytecode` class provide "
"details of bytecode instructions as :class:`Instruction` instances:"
msgstr ""
":func:`get_instructions` 函式和 :class:`Bytecode` "
"類提供位元組碼指令的詳細資訊作為 :class:`Instruction` 實例："

#: ../../library/dis.rst:334
#, fuzzy
msgid "Details for a bytecode operation"
msgstr "位元組碼操作的詳細資訊"

#: ../../library/dis.rst:338
#, fuzzy
msgid ""
"numeric code for operation, corresponding to the opcode values listed below "
"and the bytecode values in the :ref:`opcode_collections`."
msgstr "操作的數字程式碼，對應於下面列出的操作碼值和 :ref:`opcode_collections` "
"中的位元組碼值。"

#: ../../library/dis.rst:344
#, fuzzy
msgid "human readable name for operation"
msgstr "人類可讀的操作名稱"

#: ../../library/dis.rst:349
#, fuzzy
msgid "numeric argument to operation (if any), otherwise ``None``"
msgstr "操作的數字參數（如果有），否則為 ``None`` "

#: ../../library/dis.rst:354
#, fuzzy
msgid "resolved arg value (if any), otherwise ``None``"
msgstr "已解析的 arg 值（如果有），否則為 ``None`` "

#: ../../library/dis.rst:359
#, fuzzy
msgid ""
"human readable description of operation argument (if any), otherwise an "
"empty string."
msgstr "操作參數的人類可讀描述（如果有），否則為空字串。"

#: ../../library/dis.rst:365
#, fuzzy
msgid "start index of operation within bytecode sequence"
msgstr "位元組碼序列中操作的起始索引"

#: ../../library/dis.rst:370
#, fuzzy
msgid "line started by this opcode (if any), otherwise ``None``"
msgstr "由該操作碼（如果有）開始的行，否則為 ``None`` "

#: ../../library/dis.rst:375
#, fuzzy
msgid "``True`` if other code jumps to here, otherwise ``False``"
msgstr "``True`` 如果其他程式碼跳轉到這裡，否則``False``"

#: ../../library/dis.rst:380
#, fuzzy
msgid ""
":class:`dis.Positions` object holding the start and end locations that are "
"covered by this instruction."
msgstr ":class:`dis.Positions` 物件包含此指令涵蓋的開始和結束位置。"

#: ../../library/dis.rst:387
#, fuzzy
msgid "Field ``positions`` is added."
msgstr "新增了“位置”欄位。"

#: ../../library/dis.rst:392
#, fuzzy
msgid ""
"In case the information is not available, some fields might be ``None``."
msgstr "如果資訊不可用，某些欄位可能為 ``None`` 。"

#: ../../library/dis.rst:402
#, fuzzy
msgid ""
"The Python compiler currently generates the following bytecode instructions."
msgstr "Python 編譯器當前生成以下位元組碼指令。"

#: ../../library/dis.rst:405
#, fuzzy
msgid "**General instructions**"
msgstr "**一般說明**"

#: ../../library/dis.rst:409
#, fuzzy
msgid ""
"Do nothing code.  Used as a placeholder by the bytecode optimizer, and to "
"generate line tracing events."
msgstr "什麼都不做程式碼。用作位元組碼最佳化器的佔位符，並生成行跟踪事件。"

#: ../../library/dis.rst:415
#, fuzzy
msgid "Removes the top-of-stack (TOS) item."
msgstr "移除棧頂 (TOS) 項。"

#: ../../library/dis.rst:420
#, fuzzy
msgid ""
"Push the *i*-th item to the top of the stack. The item is not removed from "
"its original location."
msgstr "將第 *i* 個項目推到堆疊的頂部。該項目不會從其原始位置移除。"

#: ../../library/dis.rst:428
#, fuzzy
msgid "Swap TOS with the item at position *i*."
msgstr "將 TOS 與位置 *i* 的項目交換。"

#: ../../library/dis.rst:435
#, fuzzy
msgid ""
"Rather than being an actual instruction, this opcode is used to mark extra "
"space for the interpreter to cache useful data directly in the bytecode "
"itself. It is automatically hidden by all ``dis`` utilities, but can be "
"viewed with ``show_caches=True``."
msgstr ""
"該操作碼不是實際指令，而是用於標記額外空間，以便直譯器直接在位元組碼本身中快"
"取有用資料。它會被所有 ``dis`` 實用程式自動隱藏，但可以使用 "
"``show_caches=True`` 查看。"

#: ../../library/dis.rst:440
#, fuzzy
msgid ""
"Logically, this space is part of the preceding instruction. Many opcodes "
"expect to be followed by an exact number of caches, and will instruct the "
"interpreter to skip over them at runtime."
msgstr "從邏輯上講，這個空格是前面指令的一部分。許多操作碼期望後面跟有確切數量的快取"
"，並指示直譯器在運行時跳過它們。"

#: ../../library/dis.rst:444
#, fuzzy
msgid ""
"Populated caches can look like arbitrary instructions, so great care should "
"be taken when reading or modifying raw, adaptive bytecode containing "
"quickened data."
msgstr "填充的快取看起來像任意指令，因此在讀取或修改包含加速資料的原始自適應位元組碼"
"時應格外小心。"

#: ../../library/dis.rst:451
#, fuzzy
msgid "**Unary operations**"
msgstr "**一元運算**"

#: ../../library/dis.rst:453
#, fuzzy
msgid ""
"Unary operations take the top of the stack, apply the operation, and push "
"the result back on the stack."
msgstr "一元操作獲取棧頂，應用操作，並將結果推回棧中。"

#: ../../library/dis.rst:458
#, fuzzy
msgid "Implements ``TOS = +TOS``."
msgstr "實作“TOS = +TOS”。"

#: ../../library/dis.rst:463
#, fuzzy
msgid "Implements ``TOS = -TOS``."
msgstr "實作“TOS = -TOS”。"

#: ../../library/dis.rst:468
#, fuzzy
msgid "Implements ``TOS = not TOS``."
msgstr "實施“TOS = not TOS”。"

#: ../../library/dis.rst:473
#, fuzzy
msgid "Implements ``TOS = ~TOS``."
msgstr "實作“TOS = ~TOS”。"

#: ../../library/dis.rst:478
#, fuzzy
msgid "Implements ``TOS = iter(TOS)``."
msgstr "實作``TOS = iter(TOS)``。"

#: ../../library/dis.rst:483
#, fuzzy
msgid ""
"If ``TOS`` is a :term:`generator iterator` or :term:`coroutine` object it is "
"left as is.  Otherwise, implements ``TOS = iter(TOS)``."
msgstr ""
"如果 ``TOS`` 是 :term:`generator iterator` 或 :term:`coroutine` "
"物件，則保持原樣。否則，實作“TOS = iter(TOS)”。"

#: ../../library/dis.rst:489
#, fuzzy
msgid "**Binary and in-place operations**"
msgstr "**二進位和就地操作**"

#: ../../library/dis.rst:491
#, fuzzy
msgid ""
"Binary operations remove the top of the stack (TOS) and the second top-most "
"stack item (TOS1) from the stack.  They perform the operation, and put the "
"result back on the stack."
msgstr "二元運算從棧中移除棧頂 (TOS) 和第二個最頂層棧項 "
"(TOS1)。他們執行操作，並將結果放回堆疊。"

#: ../../library/dis.rst:495
#, fuzzy
msgid ""
"In-place operations are like binary operations, in that they remove TOS and "
"TOS1, and push the result back on the stack, but the operation is done in-"
"place when TOS1 supports it, and the resulting TOS may be (but does not have "
"to be) the original TOS1."
msgstr ""
"就地操作類似於二進位操作，因為它們刪除了 TOS 和 TOS1，並將結果壓回堆疊，"
"但操作是在 TOS1 支援的情況下就地完成的，並且生成的 TOS 可能是（但沒有是）"
"原始的 TOS1。"

#: ../../library/dis.rst:503
#, fuzzy
msgid ""
"Implements the binary and in-place operators (depending on the value of "
"*op*)."
msgstr "實作二進位和就地運算符（取決於 *op* 的值）。"

#: ../../library/dis.rst:511
#, fuzzy
msgid "Implements ``TOS = TOS1[TOS]``."
msgstr "實作“TOS = TOS1[TOS]”。"

#: ../../library/dis.rst:516
#, fuzzy
msgid "Implements ``TOS1[TOS] = TOS2``."
msgstr "實作“TOS1[TOS] = TOS2”。"

#: ../../library/dis.rst:521
#, fuzzy
msgid "Implements ``del TOS1[TOS]``."
msgstr "實作 ``del TOS1[TOS]``。"

#: ../../library/dis.rst:524
#, fuzzy
msgid "**Coroutine opcodes**"
msgstr "**協程操作碼**"

#: ../../library/dis.rst:528
#, fuzzy
msgid ""
"Implements ``TOS = get_awaitable(TOS)``, where ``get_awaitable(o)`` returns "
"``o`` if ``o`` is a coroutine object or a generator object with the "
"CO_ITERABLE_COROUTINE flag, or resolves ``o.__await__``."
msgstr ""
"實作 ``TOS = get_awaitable(TOS)``，其中 ``get_awaitable(o)`` 回傳 ``o`` 如果 "
"``o`` 是協程對像或帶有 CO_ITERABLE_COROUTINE 旗標的生成器物件，或者解析 `` o."
"__await__``。"

#: ../../library/dis.rst:533
#, fuzzy
msgid ""
"If the ``where`` operand is nonzero, it indicates where the instruction "
"occurs:"
msgstr "如果 ``where`` 操作數不為零，則表示指令發生的位置："

#: ../../library/dis.rst:536
#, fuzzy
msgid "``1`` After a call to ``__aenter__``"
msgstr "``1`` 在呼叫``__aenter__`` 之後"

#: ../../library/dis.rst:537
#, fuzzy
msgid "``2`` After a call to ``__aexit__``"
msgstr "``2`` 在呼叫``__aexit__`` 之後"

#: ../../library/dis.rst:541
#, fuzzy
msgid "Previously, this instruction did not have an oparg."
msgstr "以前，該指令沒有 oparg。"

#: ../../library/dis.rst:547
#, fuzzy
msgid "Implements ``TOS = TOS.__aiter__()``."
msgstr "實作“TOS = TOS.__aiter__()”。"

#: ../../library/dis.rst:550
#, fuzzy
msgid "Returning awaitable objects from ``__aiter__`` is no longer supported."
msgstr "不再支援從 __aiter__ 回傳可等待物件。"

#: ../../library/dis.rst:557
#, fuzzy
msgid ""
"Pushes ``get_awaitable(TOS.__anext__())`` to the stack.  See "
"``GET_AWAITABLE`` for details about ``get_awaitable``."
msgstr ""
"將 get_awaitable(TOS.__anext__()) "
"推送到堆疊。有關“get_awaitable”的詳細資訊，請參閱“GET_AWAITABLE”。"

#: ../../library/dis.rst:565
#, fuzzy
msgid ""
"Terminates an :keyword:`async for` loop.  Handles an exception raised when "
"awaiting a next item. The stack contains the async iterable in TOS1 and the "
"raised exception in TOS. Both are popped. If the exception is not :exc:"
"`StopAsyncIteration`, it is re-raised."
msgstr ""
"終止 :keyword:`async for` 循環。處理等待下一項時引發的例外。堆疊包含 TOS1 "
"中的非同步可疊代物件和 TOS 中引發的例外。兩者都彈出。如果例外不是 :exec:`StopA"
"syncIteration`，則會重新引發。"

#: ../../library/dis.rst:572 ../../library/dis.rst:650
#: ../../library/dis.rst:661
#, fuzzy
msgid ""
"Exception representation on the stack now consist of one, not three, items."
msgstr "堆疊上的例外表示現在由一項而不是三項組成。"

#: ../../library/dis.rst:577
#, fuzzy
msgid ""
"Resolves ``__aenter__`` and ``__aexit__`` from the object on top of the "
"stack.  Pushes ``__aexit__`` and result of ``__aenter__()`` to the stack."
msgstr ""
"從堆疊頂部的物件解析``__aenter__`` 和``__aexit__``。將 ``__aexit__`` 和 "
"``__aenter__()`` 的結果推入堆疊。"

#: ../../library/dis.rst:584
#, fuzzy
msgid "**Miscellaneous opcodes**"
msgstr "**雜項操作碼**"

#: ../../library/dis.rst:588
#, fuzzy
msgid ""
"Implements the expression statement for the interactive mode.  TOS is "
"removed from the stack and printed.  In non-interactive mode, an expression "
"statement is terminated with :opcode:`POP_TOP`."
msgstr "實作交互模式的表達式語句。 TOS 從堆疊中移除並印出。在非交互模式下，"
"表達式語句以 :opcode:`POP_TOP` 結束。"

#: ../../library/dis.rst:595
#, fuzzy
msgid ""
"Calls ``set.add(TOS1[-i], TOS)``.  Used to implement set comprehensions."
msgstr "呼叫 ``set.add(TOS1[-i], TOS)``。用於實作集合推導。"

#: ../../library/dis.rst:600
#, fuzzy
msgid ""
"Calls ``list.append(TOS1[-i], TOS)``.  Used to implement list comprehensions."
msgstr "呼叫 ``list.append(TOS1[-i], TOS)``。用於實作列表理解。"

#: ../../library/dis.rst:605
#, fuzzy
msgid ""
"Calls ``dict.__setitem__(TOS1[-i], TOS1, TOS)``.  Used to implement dict "
"comprehensions."
msgstr "呼叫``dict.__setitem__(TOS1[-i], TOS1, TOS)``。用於實作字典理解。"

#: ../../library/dis.rst:609
#, fuzzy
msgid "Map value is TOS and map key is TOS1. Before, those were reversed."
msgstr "映射值為 TOS，映射鍵為 TOS1。以前，這些是相反的。"

#: ../../library/dis.rst:612
#, fuzzy
msgid ""
"For all of the :opcode:`SET_ADD`, :opcode:`LIST_APPEND` and :opcode:"
"`MAP_ADD` instructions, while the added value or key/value pair is popped "
"off, the container object remains on the stack so that it is available for "
"further iterations of the loop."
msgstr ""
"對於所有 :opcode:`SET_ADD`、:opcode:`LIST_APPEND` 和 :opcode:`MAP_ADD` 指令，"
"當新增的值或鍵/值對被彈出時，容器物件保留在堆疊中，因此它是可用於循環的進一步"
"疊代。"

#: ../../library/dis.rst:620
#, fuzzy
msgid "Returns with TOS to the caller of the function."
msgstr "與 TOS 一起回傳給函式的呼叫者。"

#: ../../library/dis.rst:625
#, fuzzy
msgid "Pops TOS and yields it from a :term:`generator`."
msgstr "彈出 TOS 並從 :term:`generator` 產生它。"

#: ../../library/dis.rst:631
#, fuzzy
msgid ""
"Checks whether ``__annotations__`` is defined in ``locals()``, if not it is "
"set up to an empty ``dict``. This opcode is only emitted if a class or "
"module body contains :term:`variable annotations <variable annotation>` "
"statically."
msgstr ""
"檢查 ``__annotations__`` 是否在 ``locals()`` 中定義，如果沒有，"
"它被設定為一個空的 ``dict``。此操作碼僅在類或模組主體靜態包含 :term:`"
"variable annotations <variable annotations>` 時才會發出。"

#: ../../library/dis.rst:641
#, fuzzy
msgid ""
"Loads all symbols not starting with ``'_'`` directly from the module TOS to "
"the local namespace. The module is popped after loading all names. This "
"opcode implements ``from module import *``."
msgstr ""
"將所有不以 ``_``開頭的符號直接從模組 TOS "
"加載到本地命名空間。加載所有名稱後彈出模組。這個操作碼實作了``from module "
"import *``。"

#: ../../library/dis.rst:648
#, fuzzy
msgid ""
"Pops a value from the stack, which is used to restore the exception state."
msgstr "從堆疊中彈出一個值，用於恢復例外狀態。"

#: ../../library/dis.rst:655
#, fuzzy
msgid ""
"Re-raises the exception currently on top of the stack. If oparg is non-zero, "
"pops an additional value from the stack which is used to set ``f_lasti`` of "
"the current frame."
msgstr "重新引發當前位於堆疊頂部的例外。如果 oparg "
"非零，則從堆疊中彈出一個附加值，用於設定當前幀的“f_lasti”。"

#: ../../library/dis.rst:666
#, fuzzy
msgid ""
"Pops a value from the stack. Pushes the current exception to the top of the "
"stack. Pushes the value originally popped back to the stack. Used in "
"exception handlers."
msgstr "從堆疊中彈出一個值。將當前例外推送到堆疊頂部。將最初彈出的值推回堆疊。在例外"
"處理程式中使用。"

#: ../../library/dis.rst:674
#, fuzzy
msgid ""
"Performs exception matching for ``except``. Tests whether the TOS1 is an "
"exception matching TOS. Pops TOS and pushes the boolean result of the test."
msgstr "為 ``except`` 執行例外匹配。測試 TOS1 是否為與 TOS 匹配的例外。彈出 TOS "
"並推送測試的布爾結果。"

#: ../../library/dis.rst:681
#, fuzzy
msgid ""
"Performs exception matching for ``except*``. Applies ``split(TOS)`` on the "
"exception group representing TOS1."
msgstr "為 ``except*`` 執行例外匹配。在代表 TOS1 的例外組上應用 ``split(TOS)``。"

#: ../../library/dis.rst:684
#, fuzzy
msgid ""
"In case of a match, pops two items from the stack and pushes the non-"
"matching subgroup (``None`` in case of full match) followed by the matching "
"subgroup. When there is no match, pops one item (the match type) and pushes "
"``None``."
msgstr ""
"在匹配的情況下，從堆疊中彈出兩個項目並推送不匹配的子組（在完全匹配的情況下為“"
"無”），然後是匹配的子組。當沒有匹配項時，彈出一個項目（匹配型別）並推送 ``None`` 。"

#: ../../library/dis.rst:693
#, fuzzy
msgid ""
"Combines the raised and reraised exceptions list from TOS, into an exception "
"group to propagate from a try-except* block. Uses the original exception "
"group from TOS1 to reconstruct the structure of reraised exceptions. Pops "
"two items from the stack and pushes the exception to reraise or ``None`` if "
"there isn't one."
msgstr ""
"將來自 TOS 的引發和重新引發的例外列表組合到一個例外組中，以從 try-except* "
"塊傳播。使用來自 TOS1 的原始例外組來重建重新引發的例外的結構。"
"從堆疊中彈出兩項並將例外推送到 reraise 或 ``None`` 如果沒有。"

#: ../../library/dis.rst:703
#, fuzzy
msgid ""
"Calls the function in position 4 on the stack with arguments (type, val, tb) "
"representing the exception at the top of the stack. Used to implement the "
"call ``context_manager.__exit__(*exc_info())`` when an exception has "
"occurred in a :keyword:`with` statement."
msgstr ""
"使用表示堆疊頂部例外的參數 (type, val, tb) 呼叫堆疊位置 4 中的函式。用於在 "
":keyword:`with` 語句中發生例外時實作呼叫 ``context_manager."
"__exit__(*exc_info())``。"

#: ../../library/dis.rst:710
#, fuzzy
msgid ""
"The ``__exit__`` function is in position 4 of the stack rather than 7. "
"Exception representation on the stack now consist of one, not three, items."
msgstr "``__exit__`` 函式位於堆疊的位置 4 而不是 "
"7。堆疊上的例外表示現在由一項而不是三項組成。"

#: ../../library/dis.rst:717
#, fuzzy
msgid ""
"Pushes :exc:`AssertionError` onto the stack.  Used by the :keyword:`assert` "
"statement."
msgstr "將 :exc:`AssertionError` 推入堆疊。由 :keyword:`assert` 語句使用。"

#: ../../library/dis.rst:725
#, fuzzy
msgid ""
"Pushes :func:`builtins.__build_class__` onto the stack.  It is later called "
"to construct a class."
msgstr "將 :func:`builtins.__build_class__` 推入堆疊。稍後呼叫它來構造一個類。"

#: ../../library/dis.rst:731
#, fuzzy
msgid ""
"This opcode performs several operations before a with block starts.  First, "
"it loads :meth:`~object.__exit__` from the context manager and pushes it "
"onto the stack for later use by :opcode:`WITH_EXCEPT_START`.  Then, :meth:"
"`~object.__enter__` is called. Finally, the result of calling the "
"``__enter__()`` method is pushed onto the stack."
msgstr ""
"這個操作碼在 with 塊開始之前執行幾個操作。首先，它從上下文管理器加載 "
":meth:`~object.__exit__` 並將其壓入堆疊以供 :opcode:`WITH_EXCEPT_START` "
"使用。然後，:meth:`~object.__enter__` 被呼叫。最後，呼叫 __enter__() "
"方法的結果被壓入堆疊。"

#: ../../library/dis.rst:742
#, fuzzy
msgid "Push ``len(TOS)`` onto the stack."
msgstr "將 ``len(TOS)`` 壓入堆疊。"

#: ../../library/dis.rst:749
#, fuzzy
msgid ""
"If TOS is an instance of :class:`collections.abc.Mapping` (or, more "
"technically: if it has the :const:`Py_TPFLAGS_MAPPING` flag set in its :c:"
"member:`~PyTypeObject.tp_flags`), push ``True`` onto the stack.  Otherwise, "
"push ``False``."
msgstr ""
"如果 TOS 是 :class:`collections.abc.Mapping` 的一個實例（或者，更技術地說："
"如果它在其 :c:member:`~PyTypeObject.tp_flags` "
"中設定了 :const:`Py_TPFLAGS_MAPPING` 旗標），推送``True`` 入棧。否則，推 ``False``。"

#: ../../library/dis.rst:759
#, fuzzy
msgid ""
"If TOS is an instance of :class:`collections.abc.Sequence` and is *not* an "
"instance of :class:`str`/:class:`bytes`/:class:`bytearray` (or, more "
"technically: if it has the :const:`Py_TPFLAGS_SEQUENCE` flag set in its :c:"
"member:`~PyTypeObject.tp_flags`), push ``True`` onto the stack.  Otherwise, "
"push ``False``."
msgstr ""
"如果 TOS 是 :class:`collections.abc.Sequence` 的實例並且*不是* "
":class:`str`/:class:`bytes`/:class:`bytearray` "
"的實例（或者，更專業地說：如果它在其:c:member:`~PyTypeObject.tp_flags` "
"中設定了 :const:`Py_TPFLAGS_SEQUENCE` 旗標)，將``True`` "
"壓入堆疊。否則，推 ``False``。"

#: ../../library/dis.rst:769
#, fuzzy
msgid ""
"TOS is a tuple of mapping keys, and TOS1 is the match subject.  If TOS1 "
"contains all of the keys in TOS, push a :class:`tuple` containing the "
"corresponding values. Otherwise, push ``None``."
msgstr "TOS 是映射鍵的元組，TOS1 是匹配主題。如果 TOS1 包含 TOS "
"中的所有鍵，則推送一個包含相應值的元組。否則，按 ``None`` 。"

#: ../../library/dis.rst:775 ../../library/dis.rst:1320
#, fuzzy
msgid ""
"Previously, this instruction also pushed a boolean value indicating success "
"(``True``) or failure (``False``)."
msgstr "以前，該指令還推送一個布爾值，指示成功（``True``）或失敗（``False``）。"

#: ../../library/dis.rst:782
#, fuzzy
msgid ""
"Implements ``name = TOS``. *namei* is the index of *name* in the attribute :"
"attr:`co_names` of the code object. The compiler tries to use :opcode:"
"`STORE_FAST` or :opcode:`STORE_GLOBAL` if possible."
msgstr ""
"實作 ``name = TOS``。 *namei* 是 *name* 在程式碼物件的屬性 :attr:`co_names` "
"中的索引。如果可能，編譯器會嘗試使用 STORE_FAST 或 STORE_GLOBAL。"

#: ../../library/dis.rst:789
#, fuzzy
msgid ""
"Implements ``del name``, where *namei* is the index into :attr:`co_names` "
"attribute of the code object."
msgstr "實作 ``del name``，其中 *namei* 是程式碼物件的 :attr:`co_names` 屬性的索引。"

#: ../../library/dis.rst:795
#, fuzzy
msgid ""
"Unpacks TOS into *count* individual values, which are put onto the stack "
"right-to-left."
msgstr "將 TOS 解包為 *count* 個單獨的值，這些值從右到左放入堆疊。"

#: ../../library/dis.rst:801
#, fuzzy
msgid ""
"Implements assignment with a starred target: Unpacks an iterable in TOS into "
"individual values, where the total number of values can be smaller than the "
"number of items in the iterable: one of the new values will be a list of all "
"leftover items."
msgstr "使用星號目標實作賦值：將 TOS 中的可疊代物件解包為單個值，其中值的總數可以小於"
"可疊代對像中的項目數：其中一個新值將是所有剩餘項目的列表。"

#: ../../library/dis.rst:806
#, fuzzy
msgid ""
"The low byte of *counts* is the number of values before the list value, the "
"high byte of *counts* the number of values after it.  The resulting values "
"are put onto the stack right-to-left."
msgstr "*counts* 的低位元組是列表值之前的值的數量，*counts* "
"的高位元組是它之後的值的數量。結果值從右到左放入堆疊。"

#: ../../library/dis.rst:813
#, fuzzy
msgid ""
"Implements ``TOS.name = TOS1``, where *namei* is the index of name in :attr:"
"`co_names`."
msgstr "實作 ``TOS.name = TOS1``，其中 *namei* 是名稱在 :attr:`co_names` 中的索引。"

#: ../../library/dis.rst:819
#, fuzzy
msgid ""
"Implements ``del TOS.name``, using *namei* as index into :attr:`co_names`."
msgstr "實作 ``del TOS.name``，使用 *namei* 作為 :attr:`co_names` 的索引。"

#: ../../library/dis.rst:824
#, fuzzy
msgid "Works as :opcode:`STORE_NAME`, but stores the name as a global."
msgstr "作為 :opcode:`STORE_NAME` 工作，但將名稱儲存為全局名稱。"

#: ../../library/dis.rst:829
#, fuzzy
msgid "Works as :opcode:`DELETE_NAME`, but deletes a global name."
msgstr "作為 :opcode:`DELETE_NAME` 工作，但刪除全局名稱。"

#: ../../library/dis.rst:834
#, fuzzy
msgid "Pushes ``co_consts[consti]`` onto the stack."
msgstr "將 ``co_consts[consti]`` 推入堆疊。"

#: ../../library/dis.rst:839
#, fuzzy
msgid "Pushes the value associated with ``co_names[namei]`` onto the stack."
msgstr "將與 ``co_names[namei]`` 關聯的值推入堆疊。"

#: ../../library/dis.rst:844
#, fuzzy
msgid ""
"Creates a tuple consuming *count* items from the stack, and pushes the "
"resulting tuple onto the stack."
msgstr "從堆疊中建立一個消耗 *count* 項的元組，並將生成的元組壓入堆疊。"

#: ../../library/dis.rst:850
#, fuzzy
msgid "Works as :opcode:`BUILD_TUPLE`, but creates a list."
msgstr "作為 :opcode:`BUILD_TUPLE` 工作，但建立一個列表。"

#: ../../library/dis.rst:855
#, fuzzy
msgid "Works as :opcode:`BUILD_TUPLE`, but creates a set."
msgstr "作為 :opcode:`BUILD_TUPLE` 工作，但建立一個集合。"

#: ../../library/dis.rst:860
#, fuzzy
msgid ""
"Pushes a new dictionary object onto the stack.  Pops ``2 * count`` items so "
"that the dictionary holds *count* entries: ``{..., TOS3: TOS2, TOS1: TOS}``."
msgstr ""
"將新的字典物件推入堆疊。彈出 ``2 * count`` 項，以便字典包含 *count* 條目：``{"
"..., TOS3: TOS2, TOS1: TOS}``。"

#: ../../library/dis.rst:864
#, fuzzy
msgid ""
"The dictionary is created from stack items instead of creating an empty "
"dictionary pre-sized to hold *count* items."
msgstr "該字典是從堆疊項目建立的，而不是建立一個預先調整大小以容納 *count* "
"項目的空字典。"

#: ../../library/dis.rst:871
#, fuzzy
msgid ""
"The version of :opcode:`BUILD_MAP` specialized for constant keys. Pops the "
"top element on the stack which contains a tuple of keys, then starting from "
"``TOS1``, pops *count* values to form values in the built dictionary."
msgstr ""
":opcode:`BUILD_MAP` "
"的版本專用於常數鍵。彈出堆疊中包含鍵元組的頂部元素，然後從 ``TOS1``開始，彈出 "
"*count* 個值以在構建的字典中形成值。"

#: ../../library/dis.rst:880
#, fuzzy
msgid ""
"Concatenates *count* strings from the stack and pushes the resulting string "
"onto the stack."
msgstr "連接堆疊中的 *count* 個字串並將生成的字串壓入堆疊。"

#: ../../library/dis.rst:888
#, fuzzy
msgid ""
"Pops a list from the stack and pushes a tuple containing the same values."
msgstr "從堆疊中彈出一個列表並壓入一個包含相同值的元組。"

#: ../../library/dis.rst:895
#, fuzzy
msgid "Calls ``list.extend(TOS1[-i], TOS)``.  Used to build lists."
msgstr "呼叫 ``list.extend(TOS1[-i], TOS)``。用於構建列表。"

#: ../../library/dis.rst:902
#, fuzzy
msgid "Calls ``set.update(TOS1[-i], TOS)``.  Used to build sets."
msgstr "呼叫 ``set.update(TOS1[-i], TOS)``。用於構建集合。"

#: ../../library/dis.rst:909
#, fuzzy
msgid "Calls ``dict.update(TOS1[-i], TOS)``.  Used to build dicts."
msgstr "呼叫 ``dict.update(TOS1[-i], TOS)``。用於構建字典。"

#: ../../library/dis.rst:916
#, fuzzy
msgid "Like :opcode:`DICT_UPDATE` but raises an exception for duplicate keys."
msgstr "類似於 :opcode:`DICT_UPDATE` 但會引發重複鍵的例外。"

#: ../../library/dis.rst:923
#, fuzzy
msgid "Replaces TOS with ``getattr(TOS, co_names[namei])``."
msgstr "用 ``getattr(TOS, co_names[namei])`` 替換 TOS。"

#: ../../library/dis.rst:928
#, fuzzy
msgid ""
"Performs a Boolean operation.  The operation name can be found in "
"``cmp_op[opname]``."
msgstr "執行布爾運算。操作名稱可以在“cmp_op[opname]”中找到。"

#: ../../library/dis.rst:934
#, fuzzy
msgid "Performs ``is`` comparison, or ``is not`` if ``invert`` is 1."
msgstr "執行 ``is``比較，如果 ``invert``為 1，則執行“is not”。"

#: ../../library/dis.rst:941
#, fuzzy
msgid "Performs ``in`` comparison, or ``not in`` if ``invert`` is 1."
msgstr "執行 ``in`` 比較，如果 ``invert`` 為 1，則執行 ``not in``。"

#: ../../library/dis.rst:948
#, fuzzy
msgid ""
"Imports the module ``co_names[namei]``.  TOS and TOS1 are popped and provide "
"the *fromlist* and *level* arguments of :func:`__import__`.  The module "
"object is pushed onto the stack.  The current namespace is not affected: for "
"a proper import statement, a subsequent :opcode:`STORE_FAST` instruction "
"modifies the namespace."
msgstr ""
"導入模組 ``co_names[namei]``。 TOS 和 TOS1 被彈出並提供 :func:`__import__` "
"的 *fromlist* 和 *level* 參數。模組對像被壓入堆疊。當前命名空間不受影響："
"對於正確的 import 語句，後續的 STORE_FAST 指令會修改命名空間。"

#: ../../library/dis.rst:957
#, fuzzy
msgid ""
"Loads the attribute ``co_names[namei]`` from the module found in TOS. The "
"resulting object is pushed onto the stack, to be subsequently stored by a :"
"opcode:`STORE_FAST` instruction."
msgstr "從 TOS 中找到的模組加載屬性 ``co_names[namei]``。結果對像被壓入堆疊，隨後由 "
"STORE_FAST 指令儲存。"

#: ../../library/dis.rst:964
#, fuzzy
msgid "Increments bytecode counter by *delta*."
msgstr "將位元組碼計數器增加 *delta*。"

#: ../../library/dis.rst:969
#, fuzzy
msgid "Decrements bytecode counter by *delta*. Checks for interrupts."
msgstr "將位元組碼計數器遞減 *delta*。檢查中斷。"

#: ../../library/dis.rst:976
#, fuzzy
msgid "Decrements bytecode counter by *delta*. Does not check for interrupts."
msgstr "將位元組碼計數器遞減 *delta*。不檢查中斷。"

#: ../../library/dis.rst:983
#, fuzzy
msgid ""
"If TOS is true, increments the bytecode counter by *delta*.  TOS is popped."
msgstr "如果 TOS 為真，則將位元組碼計數器遞增 *delta*。 TOS 彈出。"

#: ../../library/dis.rst:990
#, fuzzy
msgid ""
"If TOS is true, decrements the bytecode counter by *delta*.  TOS is popped."
msgstr "如果 TOS 為真，則將位元組碼計數器遞減 *delta*。 TOS 彈出。"

#: ../../library/dis.rst:997
#, fuzzy
msgid ""
"If TOS is false, increments the bytecode counter by *delta*.  TOS is popped."
msgstr "如果 TOS 為假，則將位元組碼計數器遞增 *delta*。 TOS 彈出。"

#: ../../library/dis.rst:1004
#, fuzzy
msgid ""
"If TOS is false, decrements the bytecode counter by *delta*.  TOS is popped."
msgstr "如果 TOS 為假，則將位元組碼計數器遞減 *delta*。 TOS 彈出。"

#: ../../library/dis.rst:1011
#, fuzzy
msgid ""
"If TOS is not ``None``, increments the bytecode counter by *delta*.  TOS is "
"popped."
msgstr "如果 TOS 不是 ``None`` ，則將位元組碼計數器遞增 *delta*。 TOS 彈出。"

#: ../../library/dis.rst:1018
#, fuzzy
msgid ""
"If TOS is not ``None``, decrements the bytecode counter by *delta*.  TOS is "
"popped."
msgstr "如果 TOS 不是 ``None`` ，則將位元組碼計數器遞減 *delta*。 TOS 彈出。"

#: ../../library/dis.rst:1025
#, fuzzy
msgid ""
"If TOS is ``None``, increments the bytecode counter by *delta*.  TOS is "
"popped."
msgstr "如果 TOS 為 ``None`` ，則將位元組碼計數器遞增 *delta*。 TOS 彈出。"

#: ../../library/dis.rst:1032
#, fuzzy
msgid ""
"If TOS is ``None``, decrements the bytecode counter by *delta*.  TOS is "
"popped."
msgstr "如果 TOS 為 ``None`` ，則將位元組碼計數器遞減 *delta*。 TOS 彈出。"

#: ../../library/dis.rst:1039
#, fuzzy
msgid ""
"If TOS is true, increments the bytecode counter by *delta* and leaves TOS on "
"the stack.  Otherwise (TOS is false), TOS is popped."
msgstr "如果 TOS 為真，則將位元組碼計數器遞增 *delta* 並將 TOS 留在堆疊中。否則（TOS "
"為假），彈出 TOS。"

#: ../../library/dis.rst:1044 ../../library/dis.rst:1054
#, fuzzy
msgid "The oparg is now a relative delta rather than an absolute target."
msgstr "oparg 現在是相對增量而不是絕對目標。"

#: ../../library/dis.rst:1049
#, fuzzy
msgid ""
"If TOS is false, increments the bytecode counter by *delta* and leaves TOS "
"on the stack.  Otherwise (TOS is true), TOS is popped."
msgstr "如果 TOS 為假，則將位元組碼計數器遞增 *delta* 並將 TOS 留在堆疊中。否則（TOS "
"為真），彈出 TOS。"

#: ../../library/dis.rst:1060
#, fuzzy
msgid ""
"TOS is an :term:`iterator`.  Call its :meth:`~iterator.__next__` method.  If "
"this yields a new value, push it on the stack (leaving the iterator below "
"it).  If the iterator indicates it is exhausted, TOS is popped, and the byte "
"code counter is incremented by *delta*."
msgstr ""
"TOS 是一個疊代器。呼叫它的 :meth:`~iterator.__next__` 方法。如果這產生一個新"
"值，將它壓入堆疊（將疊代器留在它下面）。如果疊代器指示它已耗盡，則彈出 TOS，"
"並且位元組碼計數器遞增 *delta*。"

#: ../../library/dis.rst:1068
#, fuzzy
msgid "Loads the global named ``co_names[namei>>1]`` onto the stack."
msgstr "將名為 ``co_names[namei>>1]`` 的全局變數加載到堆疊中。"

#: ../../library/dis.rst:1070
#, fuzzy
msgid ""
"If the low bit of ``namei`` is set, then a ``NULL`` is pushed to the stack "
"before the global variable."
msgstr "如果設定了 namei 的低位，則在全局變數之前將 NULL 壓入堆疊。"

#: ../../library/dis.rst:1076
#, fuzzy
msgid ""
"Pushes a reference to the local ``co_varnames[var_num]`` onto the stack."
msgstr "將對本地 ``co_varnames[var_num]`` 的引用推送到堆疊上。"

#: ../../library/dis.rst:1081
#, fuzzy
msgid "Stores TOS into the local ``co_varnames[var_num]``."
msgstr "將 TOS 儲存到本地 ``co_varnames[var_num]``。"

#: ../../library/dis.rst:1086
#, fuzzy
msgid "Deletes local ``co_varnames[var_num]``."
msgstr "刪除本地 ``co_varnames[var_num]``。"

#: ../../library/dis.rst:1091
#, fuzzy
msgid ""
"Creates a new cell in slot ``i``.  If that slot is empty then that value is "
"stored into the new cell."
msgstr "在插槽 ``i``中建立一個新單元格。如果該插槽為空，則該值將儲存到新單元格中。"

#: ../../library/dis.rst:1099
#, fuzzy
msgid ""
"Pushes a reference to the cell contained in slot ``i`` of the \"fast "
"locals\" storage.  The name of the variable is ``co_fastlocalnames[i]``."
msgstr "推送對“快速本地”儲存的插槽 ``i``中包含的單元格的引用。變數的名稱是 "
"``co_fastlocalnames[i]``。"

#: ../../library/dis.rst:1102
#, fuzzy
msgid ""
"Note that ``LOAD_CLOSURE`` is effectively an alias for ``LOAD_FAST``. It "
"exists to keep bytecode a little more readable."
msgstr "請注意，``LOAD_CLOSURE`` 實際上是 ``LOAD_FAST`` "
"的別名。它的存在是為了讓位元組碼更具可讀性。"

#: ../../library/dis.rst:1105 ../../library/dis.rst:1114
#: ../../library/dis.rst:1126 ../../library/dis.rst:1135
#: ../../library/dis.rst:1146
#, fuzzy
msgid "``i`` is no longer offset by the length of ``co_varnames``."
msgstr "``i`` 不再被 ``co_varnames`` 的長度偏移。"

#: ../../library/dis.rst:1111
#, fuzzy
msgid ""
"Loads the cell contained in slot ``i`` of the \"fast locals\" storage. "
"Pushes a reference to the object the cell contains on the stack."
msgstr "加載“快速本地”儲存的插槽 ``i``中包含的單元格。將對單元格包含的物件的引用推送到堆"
"疊中。"

#: ../../library/dis.rst:1120
#, fuzzy
msgid ""
"Much like :opcode:`LOAD_DEREF` but first checks the locals dictionary before "
"consulting the cell.  This is used for loading free variables in class "
"bodies."
msgstr "很像 :opcode:`LOAD_DEREF` "
"但在查詢單元之前首先檢查本地字典。這用於在類主體中加載自由變數。"

#: ../../library/dis.rst:1132
#, fuzzy
msgid ""
"Stores TOS into the cell contained in slot ``i`` of the \"fast locals\" "
"storage."
msgstr "將 TOS 儲存到“快速本地”儲存的插槽 ``i``中包含的單元格中。"

#: ../../library/dis.rst:1141
#, fuzzy
msgid ""
"Empties the cell contained in slot ``i`` of the \"fast locals\" storage. "
"Used by the :keyword:`del` statement."
msgstr "清空“快速本地”儲存的插槽 ``i``中包含的單元格。由 :keyword:`del` 語句使用。"

#: ../../library/dis.rst:1152
#, fuzzy
msgid ""
"Copies the ``n`` free variables from the closure into the frame. Removes the "
"need for special code on the caller's side when calling closures."
msgstr "將閉包中的 ``n`` "
"自由變數複製到框架中。在呼叫閉包時，呼叫方不再需要特殊程式碼。"

#: ../../library/dis.rst:1161
#, fuzzy
msgid ""
"Raises an exception using one of the 3 forms of the ``raise`` statement, "
"depending on the value of *argc*:"
msgstr "根據 *argc* 的值，使用 ``raise`` 語句的 3 種形式之一引發例外："

#: ../../library/dis.rst:1164
#, fuzzy
msgid "0: ``raise`` (re-raise previous exception)"
msgstr "0：``raise``（重新引發先前的例外）"

#: ../../library/dis.rst:1165
#, fuzzy
msgid "1: ``raise TOS`` (raise exception instance or type at ``TOS``)"
msgstr "1：``raise TOS``（在``TOS``處引發例外實例或型別）"

#: ../../library/dis.rst:1166
#, fuzzy
msgid ""
"2: ``raise TOS1 from TOS`` (raise exception instance or type at ``TOS1`` "
"with ``__cause__`` set to ``TOS``)"
msgstr "2：``從 TOS`` 引發 TOS1（引發例外實例或型別為 ``TOS1`` 並將 `__cause__`` "
"設定為 ``TOS``）"

#: ../../library/dis.rst:1172
#, fuzzy
msgid ""
"Calls a callable object with the number of arguments specified by ``argc``, "
"including the named arguments specified by the preceding :opcode:`KW_NAMES`, "
"if any. On the stack are (in ascending order), either:"
msgstr ""
"使用 ``argc`` 指定的參數數量呼叫可呼叫物件，包括前面 :opcode:`KW_NAMES` "
"指定的命名參數，如果有的話。在堆疊上（按升序），要么："

#: ../../library/dis.rst:1177
#, fuzzy
msgid "NULL"
msgstr "無效的"

#: ../../library/dis.rst:1178 ../../library/dis.rst:1184
#, fuzzy
msgid "The callable"
msgstr "可呼叫的"

#: ../../library/dis.rst:1179
#, fuzzy
msgid "The positional arguments"
msgstr "位置參數"

#: ../../library/dis.rst:1180 ../../library/dis.rst:1187
#, fuzzy
msgid "The named arguments"
msgstr "命名參數"

#: ../../library/dis.rst:1182
#, fuzzy
msgid "or:"
msgstr "或者："

#: ../../library/dis.rst:1185
#, fuzzy
msgid "``self``"
msgstr "``自己``"

#: ../../library/dis.rst:1186
#, fuzzy
msgid "The remaining positional arguments"
msgstr "剩餘的位置參數"

#: ../../library/dis.rst:1189
#, fuzzy
msgid ""
"``argc`` is the total of the positional and named arguments, excluding "
"``self`` when a ``NULL`` is not present."
msgstr "``argc`` 是位置參數和命名參數的總和，當不存在 ``NULL`` 時不包括 ``self``。"

#: ../../library/dis.rst:1192
#, fuzzy
msgid ""
"``CALL`` pops all arguments and the callable object off the stack, calls the "
"callable object with those arguments, and pushes the return value returned "
"by the callable object."
msgstr "``CALL`` 從堆疊中彈出所有參數和可呼叫物件，使用這些參數呼叫可呼叫物件，並壓入"
"可呼叫物件回傳的回傳值。"

#: ../../library/dis.rst:1201
#, fuzzy
msgid ""
"Calls a callable object with variable set of positional and keyword "
"arguments.  If the lowest bit of *flags* is set, the top of the stack "
"contains a mapping object containing additional keyword arguments. Before "
"the callable is called, the mapping object and iterable object are each "
"\"unpacked\" and their contents passed in as keyword and positional "
"arguments respectively. ``CALL_FUNCTION_EX`` pops all arguments and the "
"callable object off the stack, calls the callable object with those "
"arguments, and pushes the return value returned by the callable object."
msgstr ""
"使用可變的位置參數和關鍵字參數集呼叫可呼叫物件。如果設定了 *flags* 的最低位，"
"則堆疊頂部包含一個包含附加關鍵字參數的映射物件。在呼叫可呼叫物件之前，映射物"
"件和可疊代對像都被“解包”，它們的內容分別作為關鍵字和位置參數傳入。 "
"``CALL_FUNCTION_EX`` 將所有參數和可呼叫對像從堆疊中彈出，使用這些參數呼叫可呼"
"叫物件，並推送可呼叫物件回傳的回傳值。"

#: ../../library/dis.rst:1216
#, fuzzy
msgid ""
"Loads a method named ``co_names[namei]`` from the TOS object. TOS is popped. "
"This bytecode distinguishes two cases: if TOS has a method with the correct "
"name, the bytecode pushes the unbound method and TOS. TOS will be used as "
"the first argument (``self``) by :opcode:`CALL` when calling the unbound "
"method. Otherwise, ``NULL`` and the object return by the attribute lookup "
"are pushed."
msgstr ""
"從 TOS 物件加載名為 ``co_names[namei]`` 的方法。 TOS "
"彈出。此位元組碼區分兩種情況：如果 TOS 具有名稱正確的方法，"
"則位元組碼推送未綁定的方法和 TOS。呼叫未綁定方法時，TOS 將用作 CALL "
"的第一個參數（``self``）。否則，將推送 ``NULL`` 和屬性查找回傳的物件。"

#: ../../library/dis.rst:1228
#, fuzzy
msgid ""
"Prefixes :opcode:`CALL`. Logically this is a no op. It exists to enable "
"effective specialization of calls. ``argc`` is the number of arguments as "
"described in :opcode:`CALL`."
msgstr ""
"前綴 :opcode:`CALL`。從邏輯上講，這是一個禁止操作。它的存在是為了實作呼叫的"
"有效專業化。 ``argc`` 是 :opcode:`CALL` 中描述的參數數量。"

#: ../../library/dis.rst:1237
#, fuzzy
msgid ""
"Pushes a ``NULL`` to the stack. Used in the call sequence to match the "
"``NULL`` pushed by :opcode:`LOAD_METHOD` for non-method calls."
msgstr "將 ``NULL`` 推入堆疊。在呼叫序列中用於匹配 LOAD_METHOD 為非方法呼叫推送的 NULL。"

#: ../../library/dis.rst:1246
#, fuzzy
msgid ""
"Prefixes :opcode:`PRECALL`. Stores a reference to ``co_consts[consti]`` into "
"an internal variable for use by :opcode:`CALL`. ``co_consts[consti]`` must "
"be a tuple of strings."
msgstr ""
"前綴 :opcode:`PRECALL`。將對 ``co_consts[consti]`` "
"的引用儲存到一個內部變數中，供 CALL 使用。 ``co_consts[consti]`` "
"必須是一個字串元組。"

#: ../../library/dis.rst:1255
#, fuzzy
msgid ""
"Pushes a new function object on the stack.  From bottom to top, the consumed "
"stack must consist of values if the argument carries a specified flag value"
msgstr "將新的函式物件壓入堆疊。從下到上，如果參數帶有指定的旗標值，則消耗的堆疊必須"
"由值組成"

#: ../../library/dis.rst:1258
#, fuzzy
msgid ""
"``0x01`` a tuple of default values for positional-only and positional-or-"
"keyword parameters in positional order"
msgstr "``0x01`` 位置順序的僅位置參數和位置或關鍵字參數的預設值元組"

#: ../../library/dis.rst:1260
#, fuzzy
msgid "``0x02`` a dictionary of keyword-only parameters' default values"
msgstr "``0x02`` 僅包含關鍵字參數預設值的字典"

#: ../../library/dis.rst:1261
#, fuzzy
msgid "``0x04`` a tuple of strings containing parameters' annotations"
msgstr "``0x04`` 包含參數註釋的字串元組"

#: ../../library/dis.rst:1262
#, fuzzy
msgid "``0x08`` a tuple containing cells for free variables, making a closure"
msgstr "``0x08`` 一個包含自由變數單元格的元組，形成一個閉包"

#: ../../library/dis.rst:1263
#, fuzzy
msgid "the code associated with the function (at TOS1)"
msgstr "與函式關聯的程式碼（在 TOS1）"

#: ../../library/dis.rst:1264
#, fuzzy
msgid "the :term:`qualified name` of the function (at TOS)"
msgstr "函式的 :term:`qualified name` (at TOS)"

#: ../../library/dis.rst:1266
#, fuzzy
msgid "Flag value ``0x04`` is a tuple of strings instead of dictionary"
msgstr "旗標值 ``0x04`` 是一個字串元組而不是字典"

#: ../../library/dis.rst:1273
#, fuzzy
msgid ""
"Pushes a slice object on the stack.  *argc* must be 2 or 3.  If it is 2, "
"``slice(TOS1, TOS)`` is pushed; if it is 3, ``slice(TOS2, TOS1, TOS)`` is "
"pushed. See the :func:`slice` built-in function for more information."
msgstr ""
"將切片物件壓入堆疊。 *argc* 必須為 2 或 3。如果為 2，則推送 ``slice(TOS1, "
"TOS)``；如果是 3，則推送 ``slice(TOS2, TOS1, TOS)``。有關詳細資訊，請參閱 "
":func:`slice` 內建函式。"

#: ../../library/dis.rst:1280
#, fuzzy
msgid ""
"Prefixes any opcode which has an argument too big to fit into the default "
"one byte. *ext* holds an additional byte which act as higher bits in the "
"argument. For each opcode, at most three prefixal ``EXTENDED_ARG`` are "
"allowed, forming an argument from two-byte to four-byte."
msgstr ""
"為參數太大而無法放入預設位元組的任何操作碼新增前綴。 *ext* 包含一個額外的位元"
"組，作為參數中的高位。對於每個操作碼，最多允許三個前綴“EXTENDED_ARG”，形成一"
"個從兩位元組到四位元組的參數。"

#: ../../library/dis.rst:1288
#, fuzzy
msgid ""
"Used for implementing formatted literal strings (f-strings).  Pops an "
"optional *fmt_spec* from the stack, then a required *value*. *flags* is "
"interpreted as follows:"
msgstr ""
"用於實作格式化文字字串 (f-strings)。從堆疊中彈出一個可選的 *fmt_spec*，"
"然後是一個必需的 *value*。 *flags* 解釋如下："

#: ../../library/dis.rst:1292
#, fuzzy
msgid "``(flags & 0x03) == 0x00``: *value* is formatted as-is."
msgstr "``(flags & 0x03) == 0x00``：*value* 按原樣格式化。"

#: ../../library/dis.rst:1293
#, fuzzy
msgid ""
"``(flags & 0x03) == 0x01``: call :func:`str` on *value* before formatting it."
msgstr "``(flags & 0x03) == 0x01``：在格式化 *value* 之前呼叫 :func:`str`。"

#: ../../library/dis.rst:1295
#, fuzzy
msgid ""
"``(flags & 0x03) == 0x02``: call :func:`repr` on *value* before formatting "
"it."
msgstr "``(flags & 0x03) == 0x02``：在格式化 *value* 之前呼叫 :func:`repr`。"

#: ../../library/dis.rst:1297
#, fuzzy
msgid ""
"``(flags & 0x03) == 0x03``: call :func:`ascii` on *value* before formatting "
"it."
msgstr "``(flags & 0x03) == 0x03``：在格式化 *value* 之前呼叫 :func:`ascii`。"

#: ../../library/dis.rst:1299
#, fuzzy
msgid ""
"``(flags & 0x04) == 0x04``: pop *fmt_spec* from the stack and use it, else "
"use an empty *fmt_spec*."
msgstr "``(flags & 0x04) == 0x04``：從堆疊中彈出 *fmt_spec* 並使用它，否則使用空的 "
"*fmt_spec*。"

#: ../../library/dis.rst:1302
#, fuzzy
msgid ""
"Formatting is performed using :c:func:`PyObject_Format`.  The result is "
"pushed on the stack."
msgstr "格式化是使用 PyObject Format 執行的。結果被壓入堆疊。"

#: ../../library/dis.rst:1310
#, fuzzy
msgid ""
"TOS is a tuple of keyword attribute names, TOS1 is the class being matched "
"against, and TOS2 is the match subject.  *count* is the number of positional "
"sub-patterns."
msgstr "TOS 是關鍵字屬性名稱的元組，TOS1 是要匹配的類，TOS2 是匹配主題。 *count* "
"是位置子模式的數量。"

#: ../../library/dis.rst:1314
#, fuzzy
msgid ""
"Pop TOS, TOS1, and TOS2.  If TOS2 is an instance of TOS1 and has the "
"positional and keyword attributes required by *count* and TOS, push a tuple "
"of extracted attributes.  Otherwise, push ``None``."
msgstr ""
"彈出 TOS、TOS1 和 TOS2。如果 TOS2 是 TOS1 的實例並且具有 *count* 和 TOS "
"所需的位置和關鍵字屬性，則推送提取屬性的元組。否則，按 ``None`` 。"

#: ../../library/dis.rst:1327
#, fuzzy
msgid "A no-op. Performs internal tracing, debugging and optimization checks."
msgstr "禁止操作。執行內部跟踪、除錯和最佳化檢查。"

#: ../../library/dis.rst:1329
#, fuzzy
msgid "The ``where`` operand marks where the ``RESUME`` occurs:"
msgstr "``where`` 操作數標記 ``RESUME`` 發生的位置："

#: ../../library/dis.rst:1331
#, fuzzy
msgid "``0`` The start of a function"
msgstr "``0`` 函式的開始"

#: ../../library/dis.rst:1332
#, fuzzy
msgid "``1`` After a ``yield`` expression"
msgstr "``1`` 在``yield`` 表達式之後"

#: ../../library/dis.rst:1333
#, fuzzy
msgid "``2`` After a ``yield from`` expression"
msgstr "``2`` 在 ``yield from`` 表達式之後"

#: ../../library/dis.rst:1334
#, fuzzy
msgid "``3`` After an ``await`` expression"
msgstr "``3`` 在``await`` 表達式之後"

#: ../../library/dis.rst:1341
#, fuzzy
msgid ""
"Create a generator, coroutine, or async generator from the current frame. "
"Clear the current frame and return the newly created generator."
msgstr "從當前幀建立生成器、協程或非同步生成器。清除當前幀並回傳新建立的生成器。"

#: ../../library/dis.rst:1349
#, fuzzy
msgid ""
"Sends ``None`` to the sub-generator of this generator. Used in ``yield "
"from`` and ``await`` statements."
msgstr "將 ``None`` 發送到此生成器的子生成器。用於 ``yield from`` 和 ``await`` 語句。"

#: ../../library/dis.rst:1357
#, fuzzy
msgid ""
"Wraps the value on top of the stack in an ``async_generator_wrapped_value``. "
"Used to yield in async generators."
msgstr "將值包裝在“async_generator_wrapped_value”中的堆疊頂部。用於在非同步生成器中產"
"生。"

#: ../../library/dis.rst:1365
#, fuzzy
msgid ""
"This is not really an opcode.  It identifies the dividing line between "
"opcodes which don't use their argument and those that do (``< "
"HAVE_ARGUMENT`` and ``>= HAVE_ARGUMENT``, respectively)."
msgstr ""
"這不是真正的操作碼。它標識了不使用參數的操作碼和使用參數的操作碼之間的分界線"
"（分別為``< HAVE_ARGUMENT`` 和``>= HAVE_ARGUMENT``）。"

#: ../../library/dis.rst:1369
#, fuzzy
msgid ""
"Now every instruction has an argument, but opcodes ``< HAVE_ARGUMENT`` "
"ignore it. Before, only opcodes ``>= HAVE_ARGUMENT`` had an argument."
msgstr ""
"現在每條指令都有一個參數，但操作碼 ``< HAVE_ARGUMENT`` 忽略它。以前，"
"只有操作碼 ``>= HAVE_ARGUMENT`` 有參數。"

#: ../../library/dis.rst:1377
#, fuzzy
msgid "Opcode collections"
msgstr "操作碼集合"

#: ../../library/dis.rst:1379
#, fuzzy
msgid ""
"These collections are provided for automatic introspection of bytecode "
"instructions:"
msgstr "這些集合用於位元組碼指令的自動內省："

#: ../../library/dis.rst:1384
#, fuzzy
msgid "Sequence of operation names, indexable using the bytecode."
msgstr "操作名稱序列，可使用位元組碼進行索引。"

#: ../../library/dis.rst:1389
#, fuzzy
msgid "Dictionary mapping operation names to bytecodes."
msgstr "字典將操作名稱映射到位元組碼。"

#: ../../library/dis.rst:1394
#, fuzzy
msgid "Sequence of all compare operation names."
msgstr "所有比較操作名稱的序列。"

#: ../../library/dis.rst:1399
#, fuzzy
msgid "Sequence of bytecodes that access a constant."
msgstr "訪問常數的位元組碼序列。"

#: ../../library/dis.rst:1404
#, fuzzy
msgid ""
"Sequence of bytecodes that access a free variable (note that 'free' in this "
"context refers to names in the current scope that are referenced by inner "
"scopes or names in outer scopes that are referenced from this scope.  It "
"does *not* include references to global or builtin scopes)."
msgstr ""
"訪問自由變數的位元組碼序列（請注意，此上下文中的“自由”指的是當前作用域中被內"
"部作用域引用的名稱或外部作用域中從該作用域引用的名稱。它*不*包括對全局或內建"
"範圍）。"

#: ../../library/dis.rst:1412
#, fuzzy
msgid "Sequence of bytecodes that access an attribute by name."
msgstr "按名稱訪問屬性的位元組碼序列。"

#: ../../library/dis.rst:1417
#, fuzzy
msgid "Sequence of bytecodes that have a relative jump target."
msgstr "具有相對跳轉目標的位元組碼序列。"

#: ../../library/dis.rst:1422
#, fuzzy
msgid "Sequence of bytecodes that have an absolute jump target."
msgstr "具有絕對跳轉目標的位元組碼序列。"

#: ../../library/dis.rst:1427
#, fuzzy
msgid "Sequence of bytecodes that access a local variable."
msgstr "訪問局部變數的位元組碼序列。"

#: ../../library/dis.rst:1432
#, fuzzy
msgid "Sequence of bytecodes of Boolean operations."
msgstr "布爾運算的位元組碼序列。"
