# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-13 00:17+0000\n"
"PO-Revision-Date: 2018-05-23 16:09+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/selectors.rst:2
msgid ":mod:`selectors` --- High-level I/O multiplexing"
msgstr ":mod:`selectors` --- 高階 I/O 多工"

#: ../../library/selectors.rst:9
msgid "**Source code:** :source:`Lib/selectors.py`"
msgstr "**原始碼：**\\ :source:`Lib/selectors.py`"

#: ../../library/selectors.rst:14
msgid "Introduction"
msgstr "簡介"

#: ../../library/selectors.rst:16
#, fuzzy
msgid ""
"This module allows high-level and efficient I/O multiplexing, built upon "
"the :mod:`select` module primitives. Users are encouraged to use this module "
"instead, unless they want precise control over the OS-level primitives used."
msgstr ""
"這個模組允許高階和高效的 I/O 多路復用，建立在 :mod:`select` 模組原語之上。鼓"
"勵使用者改用此模組，除非他們想要精確控制所使用的操作系統級原語。"

#: ../../library/selectors.rst:20
#, fuzzy
msgid ""
"It defines a :class:`BaseSelector` abstract base class, along with several "
"concrete implementations (:class:`KqueueSelector`, :class:"
"`EpollSelector`...), that can be used to wait for I/O readiness notification "
"on multiple file objects. In the following, \"file object\" refers to any "
"object with a :meth:`fileno()` method, or a raw file descriptor. See :term:"
"`file object`."
msgstr ""
"它定義了一個 :class:`BaseSelector` "
"抽象基底類別，以及幾個具體實作（:class:`KqueueSelector`, "
":class:`EpollSelector`...），可用於等待 I/O "
"就緒通知多個文件物件。在下文中，“文件物件”是指具有 :meth:`fileno()` "
"方法或原始文件描述器的任何物件。請參閱 :term:`文件物件`。"

#: ../../library/selectors.rst:26
#, fuzzy
msgid ""
":class:`DefaultSelector` is an alias to the most efficient implementation "
"available on the current platform: this should be the default choice for "
"most users."
msgstr ":class:`DefaultSelector` "
"是當前平台上可用的最有效實作的別名：這應該是大多數使用者的預設選擇。"

#: ../../library/selectors.rst:31
#, fuzzy
msgid ""
"The type of file objects supported depends on the platform: on Windows, "
"sockets are supported, but not pipes, whereas on Unix, both are supported "
"(some other types may be supported as well, such as fifos or special file "
"devices)."
msgstr ""
"支援的文件物件型別取決於平台：在 Windows 上，支援 socket ，但不支援管道，而在 "
"Unix 上，兩者都支援（也可能支援一些其他型別，例如 fifos 或特殊文件設備）。"

#: ../../library/selectors.rst:38
msgid ":mod:`select`"
msgstr ":mod:`select`"

#: ../../library/selectors.rst:39
msgid "Low-level I/O multiplexing module."
msgstr "低階 I/O 多工模組。"

#: ../../includes/wasm-notavail.rst:3
msgid ":ref:`Availability <availability>`: not Emscripten, not WASI."
msgstr ":ref:`Availability <availability>`：非 Emscripten、非 WASI。"

#: ../../includes/wasm-notavail.rst:5
#, fuzzy
msgid ""
"This module does not work or is not available on WebAssembly platforms "
"``wasm32-emscripten`` and ``wasm32-wasi``. See :ref:`wasm-availability` for "
"more information."
msgstr ""
"此模組在 WebAssembly 平台 ``wasm32-emscripten`` 和 ``wasm32-wasi`` 上不起作用或不可用"
"。有關更多資訊，請參閱 :ref:`wasm-availability`。"

#: ../../library/selectors.rst:44
msgid "Classes"
msgstr "類別"

#: ../../library/selectors.rst:46
#, fuzzy
msgid "Classes hierarchy::"
msgstr "類別層次結構::"

#: ../../library/selectors.rst:56
#, fuzzy
msgid ""
"In the following, *events* is a bitwise mask indicating which I/O events "
"should be waited for on a given file object. It can be a combination of the "
"modules constants below:"
msgstr "在下文中，*events* 是一個按位掩碼，指示應在給定文件物件上等待哪些 I/O "
"事件。它可以是以下模組常數的組合："

#: ../../library/selectors.rst:61
msgid "Constant"
msgstr "常數"

#: ../../library/selectors.rst:61
msgid "Meaning"
msgstr "意義"

#: ../../library/selectors.rst:63
msgid ":const:`EVENT_READ`"
msgstr ":const:`EVENT_READ`"

#: ../../library/selectors.rst:63
#, fuzzy
msgid "Available for read"
msgstr "可供閱讀"

#: ../../library/selectors.rst:65
msgid ":const:`EVENT_WRITE`"
msgstr ":const:`EVENT_WRITE`"

#: ../../library/selectors.rst:65
#, fuzzy
msgid "Available for write"
msgstr "可寫"

#: ../../library/selectors.rst:71
#, fuzzy
msgid ""
"A :class:`SelectorKey` is a :class:`~collections.namedtuple` used to "
"associate a file object to its underlying file descriptor, selected event "
"mask and attached data. It is returned by several :class:`BaseSelector` "
"methods."
msgstr ""
":class:`SelectorKey` 是一個 :class:`~collections.namedtuple` "
"用於將文件物件與其基礎文件描述器、選定事件掩碼和附加資料相關聯。它由幾個 "
":class:`BaseSelector` 方法回傳。"

#: ../../library/selectors.rst:78
#, fuzzy
msgid "File object registered."
msgstr "文件物件已註冊。"

#: ../../library/selectors.rst:82
#, fuzzy
msgid "Underlying file descriptor."
msgstr "底層文件描述器。"

#: ../../library/selectors.rst:86
#, fuzzy
msgid "Events that must be waited for on this file object."
msgstr "必須在此文件物件上等待的事件。"

#: ../../library/selectors.rst:90
#, fuzzy
msgid ""
"Optional opaque data associated to this file object: for example, this could "
"be used to store a per-client session ID."
msgstr "與此文件物件關聯的可選不透明資料：例如，這可用於儲存每個客戶端的會話 ID。"

#: ../../library/selectors.rst:96
#, fuzzy
msgid ""
"A :class:`BaseSelector` is used to wait for I/O event readiness on multiple "
"file objects. It supports file stream registration, unregistration, and a "
"method to wait for I/O events on those streams, with an optional timeout. "
"It's an abstract base class, so cannot be instantiated. Use :class:"
"`DefaultSelector` instead, or one of :class:`SelectSelector`, :class:"
"`KqueueSelector` etc. if you want to specifically use an implementation, and "
"your platform supports it. :class:`BaseSelector` and its concrete "
"implementations support the :term:`context manager` protocol."
msgstr ""
":class:`BaseSelector` 用於等待多個文件物件上的 I/O "
"事件就緒。它支援文件流註冊、註銷和等待這些流上的 I/O 事件的方法，帶有可選的超"
"時。它是一個抽象基底類別，因此不能被實例化。如果您想專門使用一個實作，並且您"
"的平台支援它，請改用 DefaultSelector 或 SelectSelector、KqueueSelector "
"等之一。 :class:`BaseSelector` 及其具體實作支援 :term:`context manager` "
"協定。"

#: ../../library/selectors.rst:108
#, fuzzy
msgid "Register a file object for selection, monitoring it for I/O events."
msgstr "註冊一個文件物件以供選擇，監視它的 I/O 事件。"

#: ../../library/selectors.rst:110
#, fuzzy
msgid ""
"*fileobj* is the file object to monitor.  It may either be an integer file "
"descriptor or an object with a ``fileno()`` method. *events* is a bitwise "
"mask of events to monitor. *data* is an opaque object."
msgstr ""
"*fileobj* 是要監視的文件物件。它可以是整數文件描述器或具有 ``fileno()`` "
"方法的物件。 *events* 是要監視的事件的按位掩碼。 *data* 是一個不透明的物件。"

#: ../../library/selectors.rst:115
#, fuzzy
msgid ""
"This returns a new :class:`SelectorKey` instance, or raises a :exc:"
"`ValueError` in case of invalid event mask or file descriptor, or :exc:"
"`KeyError` if the file object is already registered."
msgstr ""
"這將回傳一個新的 SelectorKey 實例，"
"或者在事件掩碼或文件描述器無效的情況下引發 ValueError ，"
"或者如果文件物件已經註冊則引發 KeyError 。"

#: ../../library/selectors.rst:121
#, fuzzy
msgid ""
"Unregister a file object from selection, removing it from monitoring. A file "
"object shall be unregistered prior to being closed."
msgstr "從選擇中取消註冊文件物件，將其從監視中刪除。文件物件應在關閉前註銷。"

#: ../../library/selectors.rst:124
#, fuzzy
msgid "*fileobj* must be a file object previously registered."
msgstr "*fileobj* 必須是先前註冊的文件物件。"

#: ../../library/selectors.rst:126
#, fuzzy
msgid ""
"This returns the associated :class:`SelectorKey` instance, or raises a :exc:"
"`KeyError` if *fileobj* is not registered.  It will raise :exc:`ValueError` "
"if *fileobj* is invalid (e.g. it has no ``fileno()`` method or its "
"``fileno()`` method has an invalid return value)."
msgstr ""
"這將回傳關聯的 :class:`SelectorKey` 實例，或者如果 *fileobj* 未註冊則引發 "
":exc:`KeyError`。如果 *fileobj* 無效（例如，它沒有 ``fileno()`` 方法或它的 "
"``fileno()`` 方法具有無效的回傳值），它將引發 :exc:`ValueError`。"

#: ../../library/selectors.rst:133
#, fuzzy
msgid "Change a registered file object's monitored events or attached data."
msgstr "更改已註冊文件物件的監視事件或附加資料。"

#: ../../library/selectors.rst:135
#, fuzzy
msgid ""
"This is equivalent to :meth:`BaseSelector.unregister(fileobj)` followed by :"
"meth:`BaseSelector.register(fileobj, events, data)`, except that it can be "
"implemented more efficiently."
msgstr ""
"這相當於 :meth:`BaseSelector.unregister(fileobj)` 後跟 :meth:`BaseSelector."
"register(fileobj, events, data)`，除了它可以更有效地實作。"

#: ../../library/selectors.rst:139
#, fuzzy
msgid ""
"This returns a new :class:`SelectorKey` instance, or raises a :exc:"
"`ValueError` in case of invalid event mask or file descriptor, or :exc:"
"`KeyError` if the file object is not registered."
msgstr ""
"這將回傳一個新的 SelectorKey 實例，"
"或者在事件掩碼或文件描述器無效的情況下引發 ValueError ，"
"或者如果文件物件未註冊則引發 KeyError 。"

#: ../../library/selectors.rst:145
#, fuzzy
msgid ""
"Wait until some registered file objects become ready, or the timeout expires."
msgstr "等到某些已註冊的文件物件準備就緒，或者超時到期。"

#: ../../library/selectors.rst:148
#, fuzzy
msgid ""
"If ``timeout > 0``, this specifies the maximum wait time, in seconds. If "
"``timeout <= 0``, the call won't block, and will report the currently ready "
"file objects. If *timeout* is ``None``, the call will block until a "
"monitored file object becomes ready."
msgstr ""
"如果 ``timeout > 0``，這指定了最長等待時間，以秒為單位。如果``timeout <= "
"0``，呼叫不會阻塞，並且會報告當前就緒的文件物件。如果 *timeout* "
"為 ``None``，則呼叫將阻塞，直到受監視的文件物件準備就緒。"

#: ../../library/selectors.rst:154
#, fuzzy
msgid ""
"This returns a list of ``(key, events)`` tuples, one for each ready file "
"object."
msgstr "這將回傳一個 ``(key, events)`` 元組列表，每個就緒文件物件一個。"

#: ../../library/selectors.rst:157
#, fuzzy
msgid ""
"*key* is the :class:`SelectorKey` instance corresponding to a ready file "
"object. *events* is a bitmask of events ready on this file object."
msgstr "*key* 是對應於就緒文件物件的 SelectorKey 實例。 *events* "
"是在此文件物件上準備好的事件的位掩碼。"

#: ../../library/selectors.rst:162
#, fuzzy
msgid ""
"This method can return before any file object becomes ready or the timeout "
"has elapsed if the current process receives a signal: in this case, an empty "
"list will be returned."
msgstr "如果當前行程收到信號，此方法可以在任何文件物件準備就緒或超時已過之前回傳：在"
"這種情況下，將回傳一個空列表。"

#: ../../library/selectors.rst:166
#, fuzzy
msgid ""
"The selector is now retried with a recomputed timeout when interrupted by a "
"signal if the signal handler did not raise an exception (see :pep:`475` for "
"the rationale), instead of returning an empty list of events before the "
"timeout."
msgstr ""
"如果信號處理程式沒有引發例外（請參閱 :pep:`475` 了解基本原理），當被信號中斷"
"時，選擇器現在會重新計算超時，而不是在超時前回傳一個空的事件列表。"

#: ../../library/selectors.rst:174
#, fuzzy
msgid "Close the selector."
msgstr "關閉選擇器。"

#: ../../library/selectors.rst:176
#, fuzzy
msgid ""
"This must be called to make sure that any underlying resource is freed. The "
"selector shall not be used once it has been closed."
msgstr "必須呼叫它以確保釋放任何底層資源。選擇器關閉後不得使用。"

#: ../../library/selectors.rst:181
#, fuzzy
msgid "Return the key associated with a registered file object."
msgstr "回傳與已註冊文件物件關聯的鍵。"

#: ../../library/selectors.rst:183
#, fuzzy
msgid ""
"This returns the :class:`SelectorKey` instance associated to this file "
"object, or raises :exc:`KeyError` if the file object is not registered."
msgstr "這將回傳與此文件物件相關聯的 SelectorKey 實例，或者如果文件物件未註冊則引發 "
"KeyError。"

#: ../../library/selectors.rst:188
#, fuzzy
msgid "Return a mapping of file objects to selector keys."
msgstr "回傳文件物件到選擇器鍵的映射。"

#: ../../library/selectors.rst:190
#, fuzzy
msgid ""
"This returns a :class:`~collections.abc.Mapping` instance mapping registered "
"file objects to their associated :class:`SelectorKey` instance."
msgstr ""
"這將回傳一個 :class:`~collections.abc.Mapping` 實例，"
"將註冊的文件物件映射到它們關聯的 :class:`SelectorKey` 實例。"

#: ../../library/selectors.rst:197
#, fuzzy
msgid ""
"The default selector class, using the most efficient implementation "
"available on the current platform. This should be the default choice for "
"most users."
msgstr "預設選擇器類，使用當前平台上最有效的實作。這應該是大多數使用者的預設選擇。"

#: ../../library/selectors.rst:204
#, fuzzy
msgid ":func:`select.select`-based selector."
msgstr "基於 :func:`select.select` 的選擇器。"

#: ../../library/selectors.rst:209
#, fuzzy
msgid ":func:`select.poll`-based selector."
msgstr "基於 :func:`select.poll` 的選擇器。"

#: ../../library/selectors.rst:214
#, fuzzy
msgid ":func:`select.epoll`-based selector."
msgstr "基於 :func:`select.epoll` 的選擇器。"

#: ../../library/selectors.rst:218
#, fuzzy
msgid ""
"This returns the file descriptor used by the underlying :func:`select.epoll` "
"object."
msgstr "這將回傳底層 :func:`select.epoll` 物件使用的文件描述器。"

#: ../../library/selectors.rst:223
#, fuzzy
msgid ":func:`select.devpoll`-based selector."
msgstr "基於 :func:`select.devpoll` 的選擇器。"

#: ../../library/selectors.rst:227
#, fuzzy
msgid ""
"This returns the file descriptor used by the underlying :func:`select."
"devpoll` object."
msgstr "這將回傳底層 :func:`select.devpoll` 物件使用的文件描述器。"

#: ../../library/selectors.rst:234
#, fuzzy
msgid ":func:`select.kqueue`-based selector."
msgstr "基於 :func:`select.kqueue` 的選擇器。"

#: ../../library/selectors.rst:238
#, fuzzy
msgid ""
"This returns the file descriptor used by the underlying :func:`select."
"kqueue` object."
msgstr "這將回傳底層 :func:`select.kqueue` 物件使用的文件描述器。"

#: ../../library/selectors.rst:243
msgid "Examples"
msgstr "範例"

#: ../../library/selectors.rst:245
#, fuzzy
msgid "Here is a simple echo server implementation::"
msgstr "這是一個簡單的回顯伺服器實作::"
