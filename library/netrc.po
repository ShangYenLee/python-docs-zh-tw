# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-15 20:43+0000\n"
"PO-Revision-Date: 2018-05-23 16:06+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/netrc.rst:3
msgid ":mod:`netrc` --- netrc file processing"
msgstr ":mod:`netrc` --- netrc 檔案處理"

#: ../../library/netrc.rst:11
msgid "**Source code:** :source:`Lib/netrc.py`"
msgstr "**原始碼：**\\ :source:`Lib/netrc.py`"

#: ../../library/netrc.rst:15
#, fuzzy
msgid ""
"The :class:`~netrc.netrc` class parses and encapsulates the netrc file "
"format used by the Unix :program:`ftp` program and other FTP clients."
msgstr ""
":class:`~netrc.netrc` 類解析並封裝 Unix :program:`ftp` 程式和其他 FTP "
"客戶端使用的 netrc 文件格式。"

#: ../../library/netrc.rst:21
#, fuzzy
msgid ""
"A :class:`~netrc.netrc` instance or subclass instance encapsulates data "
"from  a netrc file.  The initialization argument, if present, specifies the "
"file to parse.  If no argument is given, the file :file:`.netrc` in the "
"user's home directory -- as determined by :func:`os.path.expanduser` -- will "
"be read.  Otherwise, a :exc:`FileNotFoundError` exception will be raised. "
"Parse errors will raise :exc:`NetrcParseError` with diagnostic information "
"including the file name, line number, and terminating token. If no argument "
"is specified on a POSIX system, the presence of passwords in the :file:`."
"netrc` file will raise a :exc:`NetrcParseError` if the file ownership or "
"permissions are insecure (owned by a user other than the user running the "
"process, or accessible for read or write by any other user). This implements "
"security behavior equivalent to that of ftp and other programs that use :"
"file:`.netrc`."
msgstr ""
":class:`~netrc.netrc` 實例或子類別實例封裝來自 netrc 文件的資料。初始化參數（"
"如果存在）指定要解析的文件。如果沒有給出參數，將讀取使用者主目錄中的文件:file"
":`.netrc`——由 :func:`os.path.expanduser` 確定。否則，將引發 "
":exc:`FileNotFoundError` 例外。解析錯誤將引發 :exc:`NetrcParseError` "
"以及包括文件名、行號和終止標記在內的診斷資訊。如果在 POSIX "
"系統上沒有指定參數，如果文件所有權或權限不安全（由使用者以外的使用者擁有），."
"netrc 文件中存在密碼將引發 "
"NetrcParseError運行行程，或可供任何其他使用者讀取或寫入）。這實作了與 ftp "
"和其他使用 :file:`.netrc` 的程式等效的安全行為。"

#: ../../library/netrc.rst:35
#, fuzzy
msgid "Added the POSIX permission check."
msgstr "新增了 POSIX 權限檢查。"

#: ../../library/netrc.rst:37
#, fuzzy
msgid ""
":func:`os.path.expanduser` is used to find the location of the :file:`."
"netrc` file when *file* is not passed as argument."
msgstr ":func:`os.path.expanduser` 用於在 *file* 未作為參數傳遞時查找 :file:`.netrc` "
"文件的位置。"

#: ../../library/netrc.rst:41
#, fuzzy
msgid ""
":class:`netrc` try UTF-8 encoding before using locale specific encoding. The "
"entry in the netrc file no longer needs to contain all tokens.  The missing "
"tokens' value default to an empty string.  All the tokens and their values "
"now can contain arbitrary characters, like whitespace and non-ASCII "
"characters. If the login name is anonymous, it won't trigger the security "
"check."
msgstr ""
":class:`netrc` 在使用區域設定特定編碼之前嘗試 UTF-8 編碼。 netrc 文件中的條目"
"不再需要包含所有標記。缺少的標記的值預設為空字串。所有標記及其值現在都可以包"
"含任意字元，例如空格和非 ASCII 字元。如果登錄名是匿名的，則不會觸發安全檢查。"

#: ../../library/netrc.rst:52
#, fuzzy
msgid ""
"Exception raised by the :class:`~netrc.netrc` class when syntactical errors "
"are encountered in source text.  Instances of this exception provide three "
"interesting attributes:  :attr:`msg` is a textual explanation of the error, :"
"attr:`filename` is the name of the source file, and :attr:`lineno` gives the "
"line number on which the error was found."
msgstr ""
"當在源文本中遇到語法錯誤時，由 :class:`~netrc.netrc` "
"類引發的例外。此例外的實例提供了三個有趣的屬性：:attr:`msg` "
"是錯誤的文本解釋，:attr:`filename` 是源文件的名稱，:attr:`lineno` "
"給出了錯誤所在的行號發現錯誤。"

#: ../../library/netrc.rst:62
msgid "netrc Objects"
msgstr "netrc 物件"

#: ../../library/netrc.rst:64
#, fuzzy
msgid "A :class:`~netrc.netrc` instance has the following methods:"
msgstr ":class:`~netrc.netrc` 實例具有以下方法："

#: ../../library/netrc.rst:69
#, fuzzy
msgid ""
"Return a 3-tuple ``(login, account, password)`` of authenticators for "
"*host*. If the netrc file did not contain an entry for the given host, "
"return the tuple associated with the 'default' entry.  If neither matching "
"host nor default entry is available, return ``None``."
msgstr ""
"回傳 *host* 的身份驗證器的三元組``（登錄名，帳戶，密碼）``。如果 netrc 文件不"
"包含給定主機的條目，則回傳與“預設”條目關聯的元組。如果匹配的主機和預設條目均"
"不可用，則回傳 ``None`` 。"

#: ../../library/netrc.rst:77
#, fuzzy
msgid ""
"Dump the class data as a string in the format of a netrc file. (This "
"discards comments and may reorder the entries.)"
msgstr "將類資料轉儲為 netrc 文件格式的字串。 （這會丟棄註釋並可能重新排序條目。）"

#: ../../library/netrc.rst:80
#, fuzzy
msgid "Instances of :class:`~netrc.netrc` have public instance variables:"
msgstr ":class:`~netrc.netrc` 的實例具有公開實例變數："

#: ../../library/netrc.rst:85
#, fuzzy
msgid ""
"Dictionary mapping host names to ``(login, account, password)`` tuples.  The "
"'default' entry, if any, is represented as a pseudo-host by that name."
msgstr "將主機名映射到“（登錄名、帳戶、密碼）”元組的字典。 "
"“預設”條目（如果有）表示為該名稱的偽主機。"

#: ../../library/netrc.rst:91
#, fuzzy
msgid "Dictionary mapping macro names to string lists."
msgstr "將巨集名稱映射到字串列表的字典。"
