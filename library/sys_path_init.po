# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-15 20:43+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../library/sys_path_init.rst:4
msgid "The initialization of the :data:`sys.path` module search path"
msgstr ":data:`sys.path` 模組搜索路徑的初始化"

#: ../../library/sys_path_init.rst:6
#, fuzzy
msgid ""
"A module search path is initialized when Python starts. This module search "
"path may be accessed at :data:`sys.path`."
msgstr "模組搜索路徑在 Python 啟動時被初始化。此模組搜索路徑可以在 :data:`sys.path` "
"訪問。"

#: ../../library/sys_path_init.rst:9
#, fuzzy
msgid ""
"The first entry in the module search path is the directory that contains the "
"input script, if there is one. Otherwise, the first entry is the current "
"directory, which is the case when executing the interactive shell, a :option:"
"`-c` command, or :option:`-m` module."
msgstr ""
"模組搜索路徑中的第一個條目是包含輸入腳本的目錄（如果有的話）。否則，第一個條"
"目是當前目錄，這是執行交互式 shell、:option:`-c` 命令或 :option:`-m` "
"模組時的情況。"

#: ../../library/sys_path_init.rst:14
#, fuzzy
msgid ""
"The :envvar:`PYTHONPATH` environment variable is often used to add "
"directories to the search path. If this environment variable is found then "
"the contents are added to the module search path."
msgstr ":envvar:`PYTHONPATH` 環境變數通常用於將目錄新增到搜索路徑。如果找到此環境變數"
"，則將內容新增到模組搜索路徑中。"

#: ../../library/sys_path_init.rst:20
#, fuzzy
msgid ""
":envvar:`PYTHONPATH` will affect all installed Python versions/environments. "
"Be wary of setting this in your shell profile or global environment "
"variables. The :mod:`site` module offers more nuanced techniques as "
"mentioned below."
msgstr ""
":envvar:`PYTHONPATH` 將影響所有已安裝的 Python 版本/環境。在您的 shell "
"配置文件或全局環境變數中設定它時要小心。 :mod:`site` "
"模組提供了更細微的技術，如下所述。"

#: ../../library/sys_path_init.rst:24
#, fuzzy
msgid ""
"The next items added are the directories containing standard Python modules "
"as well as any :term:`extension module`\\s that these modules depend on. "
"Extension modules are ``.pyd`` files on Windows and ``.so`` files on other "
"platforms. The directory with the platform-independent Python modules is "
"called ``prefix``. The directory with the extension modules is called "
"``exec_prefix``."
msgstr ""
"接下來新增的項目是包含標準 Python "
"模組以及這些模組所依賴的任何擴充模組的目錄。擴充模組在 Windows 上是 ``.pyd`` "
"文件，在其他平台上是 ``.so`` 文件。具有獨立於平台的 Python "
"模組的目錄稱為 ``prefix``。包含擴充模組的目錄稱為“exec_prefix”。"

#: ../../library/sys_path_init.rst:30
#, fuzzy
msgid ""
"The :envvar:`PYTHONHOME` environment variable may be used to set the "
"``prefix`` and ``exec_prefix`` locations. Otherwise these directories are "
"found by using the Python executable as a starting point and then looking "
"for various 'landmark' files and directories. Note that any symbolic links "
"are followed so the real Python executable location is used as the search "
"starting point. The Python executable location is called ``home``."
msgstr ""
":envvar:`PYTHONHOME` 環境變數可用於設定 ``prefix`` 和 ``exec_prefix`` "
"位置。否則，這些目錄是通過使用 Python 可執行文件作為起點然後查找各種“地標”文"
"件和目錄來找到的。請注意，後面是任何符號鏈接，因此真正的 Python "
"可執行文件位置被用作搜索起點。 Python 可執行文件位置稱為 ``home``。"

#: ../../library/sys_path_init.rst:37
#, fuzzy
msgid ""
"Once ``home`` is determined, the ``prefix`` directory is found by first "
"looking for :file:`python{majorversion}{minorversion}.zip` (``python311."
"zip``). On Windows the zip archive is searched for in ``home`` and on Unix "
"the archive is expected to be in :file:`lib`. Note that the expected zip "
"archive location is added to the module search path even if the archive does "
"not exist. If no archive was found, Python on Windows will continue the "
"search for ``prefix`` by looking for :file:`Lib\\\\os.py`. Python on Unix "
"will look for :file:`lib/python{majorversion}.{minorversion}/os.py` (``lib/"
"python3.11/os.py``). On Windows ``prefix`` and ``exec_prefix`` are the same, "
"however on other platforms :file:`lib/python{majorversion}.{minorversion}/"
"lib-dynload` (``lib/python3.11/lib-dynload``) is searched for and used as an "
"anchor for ``exec_prefix``. On some platforms :file:`lib` may be :file:"
"`lib64` or another value, see :data:`sys.platlibdir` and :envvar:"
"`PYTHONPLATLIBDIR`."
msgstr ""
"一旦 ``home`` 被確定，``prefix`` 目錄首先通過查找 "
":file:`python{majorversion}{minorversion}.zip` (``python311.zip``) 找到。在 "
"Windows 上，zip 存檔在 ``home`` 中搜索，而在 Unix 上，存檔應位於 :file:`lib` "
"中。請注意，即使存檔不存在，預期的 zip "
"存檔位置也會新增到模組搜索路徑中。如果未找到存檔，Windows 上的 Python "
"將通過查找 :file:`Lib\\\\os.py` 繼續搜索 ``prefix``。 Unix 上的 Python "
"將查找 :file:`lib/python{majorversion}.{minorversion}/os.py` (``lib/python3."
"11/os.py``)。在 Windows 上，``prefix`` 和 ``exec_prefix`` "
"是相同的，但是在其他平台上 :file:`lib/python{majorversion}.{minorversion"
"}/lib-dynload` (``lib/python3.11/lib -dynload``) 被搜索並用作 ``exec_prefix``"
" 的錨點。在某些平台上 :file:`lib` 可能是 :file:`lib64` "
"或其他值，請參閱 :data:`sys.platlibdir` 和 :envvar:`PYTHONPLATLIBDIR`。"

#: ../../library/sys_path_init.rst:50
#, fuzzy
msgid ""
"Once found, ``prefix`` and ``exec_prefix`` are available at :data:`sys."
"prefix` and :data:`sys.exec_prefix` respectively."
msgstr ""
"一旦找到，``prefix`` 和 ``exec_prefix`` 分別在 :data:`sys.prefix` 和 "
":data:`sys.exec_prefix` 可用。"

#: ../../library/sys_path_init.rst:53
#, fuzzy
msgid ""
"Finally, the :mod:`site` module is processed and :file:`site-packages` "
"directories are added to the module search path. A common way to customize "
"the search path is to create :mod:`sitecustomize` or :mod:`usercustomize` "
"modules as described in the :mod:`site` module documentation."
msgstr ""
"最後，處理 :mod:`site` 模組並將 :file:`site-packages` "
"目錄新增到模組搜索路徑中。自定義搜索路徑的常用方法是建立 :mod:`sitecustomize`"
" 或 :mod:`usercustomize` 模組，如 :mod:`site` 模組文檔中所述。"

#: ../../library/sys_path_init.rst:60
#, fuzzy
msgid ""
"Certain command line options may further affect path calculations. See :"
"option:`-E`, :option:`-I`, :option:`-s` and :option:`-S` for further details."
msgstr "某些命令列選項可能會進一步影響路徑計算。有關更多詳細資訊，請參見 :option:`-E`"
"、 :option:`-I`、 :option:`-s` 和 :option:`-S`。"

#: ../../library/sys_path_init.rst:64
#, fuzzy
msgid "Virtual environments"
msgstr "虛擬環境"

#: ../../library/sys_path_init.rst:66
#, fuzzy
msgid ""
"If Python is run in a virtual environment (as described at :ref:`tut-venv`) "
"then ``prefix`` and ``exec_prefix`` are specific to the virtual environment."
msgstr ""
"如果 Python 在虛擬環境中運行（如 :ref:`tut-venv` 中所述），則 ``prefix`` 和 "
"``exec_prefix`` 特定於虛擬環境。"

#: ../../library/sys_path_init.rst:69
#, fuzzy
msgid ""
"If a ``pyvenv.cfg`` file is found alongside the main executable, or in the "
"directory one level above the executable, the following variations apply:"
msgstr "如果 ``pyvenv.cfg`` 文件與主可執行文件一起被發現，或者在可執行文件的上一級目"
"錄中，則適用以下變體："

#: ../../library/sys_path_init.rst:72
#, fuzzy
msgid ""
"If ``home`` is an absolute path and :envvar:`PYTHONHOME` is not set, this "
"path is used instead of the path to the main executable when deducing "
"``prefix`` and ``exec_prefix``."
msgstr ""
"如果 ``home`` 是絕對路徑並且未設定 :envvar:`PYTHONHOME`，則在推導 ``prefix`` "
"和 ``exec_prefix`` 時使用此路徑而不是主可執行文件的路徑。"

#: ../../library/sys_path_init.rst:77
#, fuzzy
msgid "_pth files"
msgstr "_pth 個文件"

#: ../../library/sys_path_init.rst:79
#, fuzzy
msgid ""
"To completely override :data:`sys.path` create a ``._pth`` file with the "
"same name as the shared library or executable (``python._pth`` or "
"``python311._pth``). The shared library path is always known on Windows, "
"however it may not be available on other platforms. In the ``._pth`` file "
"specify one line for each path to add to :data:`sys.path`. The file based on "
"the shared library name overrides the one based on the executable, which "
"allows paths to be restricted for any program loading the runtime if desired."
msgstr ""
"要完全覆蓋 :data:`sys.path`，請建立一個與共享庫或可執行文件同名的 `._pth`` "
"文件（``python._pth`` 或 ``python311._pth``）。共享庫路徑在 Windows "
"上始終是已知的，但在其他平台上可能不可用。在 ``._pth`` 文件中，為要新增到 "
":data:`sys.path` 的每個路徑指定一行。基於共享庫名稱的文件會覆蓋基於可執行文件"
"的文件，這允許在需要時限制任何加載運行時的程式的路徑。"

#: ../../library/sys_path_init.rst:87
#, fuzzy
msgid ""
"When the file exists, all registry and environment variables are ignored, "
"isolated mode is enabled, and :mod:`site` is not imported unless one line in "
"the file specifies ``import site``. Blank paths and lines starting with "
"``#`` are ignored. Each path may be absolute or relative to the location of "
"the file. Import statements other than to ``site`` are not permitted, and "
"arbitrary code cannot be specified."
msgstr ""
"當文件存在時，將忽略所有註冊表和環境變數，啟用隔離模式，並且不會導入 "
":mod:`site`，除非文件中的一行指定 ``import site``。空白路徑和以 ``#``開頭的行將"
"被忽略。每個路徑可以是絕對路徑或相對於文件位置的路徑。不允許導入除“站點”以外"
"的語句，並且不能指定任意程式碼。"

#: ../../library/sys_path_init.rst:94
#, fuzzy
msgid ""
"Note that ``.pth`` files (without leading underscore) will be processed "
"normally by the :mod:`site` module when ``import site`` has been specified."
msgstr "請注意，當指定了 import site 時， .pth 文件（不帶前導底線）將由 :mod: site "
"模組正常處理。"

#: ../../library/sys_path_init.rst:98
#, fuzzy
msgid "Embedded Python"
msgstr "嵌入式Python"

#: ../../library/sys_path_init.rst:100
#, fuzzy
msgid ""
"If Python is embedded within another application :c:func:"
"`Py_InitializeFromConfig` and the :c:type:`PyConfig` structure can be used "
"to initialize Python. The path specific details are described at :ref:`init-"
"path-config`. Alternatively the older :c:func:`Py_SetPath` can be used to "
"bypass the initialization of the module search path."
msgstr ""
"如果 Python 嵌入到另一個應用程式中 :c:func:`Py_InitializeFromConfig` "
"和:c:type:`PyConfig` 結構可用於初始化 Python。路徑特定的詳細資訊在 :ref"
":`init-path-config` 中進行了描述。或者，較舊的 :c:func:`Py_SetPath` "
"可用於繞過模組搜索路徑的初始化。"

#: ../../library/sys_path_init.rst:107
#, fuzzy
msgid ":ref:`windows_finding_modules` for detailed Windows notes."
msgstr ":ref:`windows_finding_modules` 獲取詳細的 Windows 說明。"

#: ../../library/sys_path_init.rst:108
#, fuzzy
msgid ":ref:`using-on-unix` for Unix details."
msgstr ":ref:`using-on-unix` 了解 Unix 的詳細資訊。"
