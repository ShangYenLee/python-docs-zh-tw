# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-31 08:13+0000\n"
"PO-Revision-Date: 2018-05-23 16:03+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/hashlib.rst:2
#, fuzzy
msgid ":mod:`hashlib` --- Secure hashes and message digests"
msgstr ":mod:`hashlib` --- 安全雜湊和訊息摘要"

#: ../../library/hashlib.rst:10
msgid "**Source code:** :source:`Lib/hashlib.py`"
msgstr "**原始碼：**\\ :source:`Lib/hashlib.py`"

#: ../../library/hashlib.rst:23
#, fuzzy
msgid ""
"This module implements a common interface to many different secure hash and "
"message digest algorithms.  Included are the FIPS secure hash algorithms "
"SHA1, SHA224, SHA256, SHA384, and SHA512 (defined in FIPS 180-2) as well as "
"RSA's MD5 algorithm (defined in internet :rfc:`1321`).  The terms \"secure "
"hash\" and \"message digest\" are interchangeable.  Older algorithms were "
"called message digests.  The modern term is secure hash."
msgstr ""
"該模組為許多不同的安全雜湊和訊息摘要演算法實作了一個通用介面。其中包括 FIPS "
"安全雜湊演算法 SHA1、SHA224、SHA256、SHA384 和 SHA512（在 FIPS 180-2 中定義）"
"以及 RSA 的 MD5 演算法（在 internet :rfc:`1321` 中定義）。術語“安全雜湊”和“消"
"息摘要”可以互換。較舊的演算法稱為訊息摘要。現代術語是安全雜湊。"

#: ../../library/hashlib.rst:32
#, fuzzy
msgid ""
"If you want the adler32 or crc32 hash functions, they are available in the :"
"mod:`zlib` module."
msgstr "如果你想要 adler32 或 crc32 雜湊函式，它們在 :mod:`zlib` 模組中可用。"

#: ../../library/hashlib.rst:37
#, fuzzy
msgid ""
"Some algorithms have known hash collision weaknesses, refer to the \"See also"
"\" section at the end."
msgstr "一些演算法具有已知的雜湊衝突弱點，請參閱末尾的“另請參閱”部分。"

#: ../../library/hashlib.rst:44
#, fuzzy
msgid "Hash algorithms"
msgstr "雜湊演算法"

#: ../../library/hashlib.rst:46
#, fuzzy
msgid ""
"There is one constructor method named for each type of :dfn:`hash`.  All "
"return a hash object with the same simple interface. For example: use :func:"
"`sha256` to create a SHA-256 hash object. You can now feed this object with :"
"term:`bytes-like objects <bytes-like object>` (normally :class:`bytes`) "
"using the :meth:`update` method. At any point you can ask it for the :dfn:"
"`digest` of the concatenation of the data fed to it so far using the :meth:"
"`digest` or :meth:`hexdigest` methods."
msgstr ""
"有一個為每種型別的 :dfn:`hash` "
"命名的構造方法。所有這些都回傳一個具有相同簡單介面的雜湊物件。例如：使用 "
":func:`sha256` 建立一個 SHA-256 雜湊物件。您現在可以使用 :meth:`update` "
"方法為該物件提供 :term:`bytes-like objects <bytes-like object>`（通常是 "
":class:`bytes`）。在任何時候，您都可以使用 :meth:`digest` 或 "
":meth:`hexdigest` 方法向它請求迄今為止提供給它的資料串聯的 :dfn:`digest`。"

#: ../../library/hashlib.rst:56
#, fuzzy
msgid ""
"For better multithreading performance, the Python :term:`GIL` is released "
"for data larger than 2047 bytes at object creation or on update."
msgstr "為了獲得更好的多執行緒性能，Python :term:`GIL` 在物件建立或更新時針對大於 "
"2047 位元組的資料發布。"

#: ../../library/hashlib.rst:61
#, fuzzy
msgid ""
"Feeding string objects into :meth:`update` is not supported, as hashes work "
"on bytes, not on characters."
msgstr "不支援將字串物件提供給 "
":meth:`update`，因為雜湊值是按位元組計算的，而不是按字元計算的。"

#: ../../library/hashlib.rst:66
#, fuzzy
msgid ""
"Constructors for hash algorithms that are always present in this module are :"
"func:`sha1`, :func:`sha224`, :func:`sha256`, :func:`sha384`, :func:"
"`sha512`, :func:`blake2b`, and :func:`blake2s`. :func:`md5` is normally "
"available as well, though it may be missing or blocked if you are using a "
"rare \"FIPS compliant\" build of Python. Additional algorithms may also be "
"available depending upon the OpenSSL library that Python uses on your "
"platform. On most platforms the :func:`sha3_224`, :func:`sha3_256`, :func:"
"`sha3_384`, :func:`sha3_512`, :func:`shake_128`, :func:`shake_256` are also "
"available."
msgstr ""
"此模組中始終存在的雜湊演算法的構造函式是 :func:`sha1`、:func:`sha224`、:func:"
"`sha256`、:func:`sha384`、:func:`sha512`、:func: `blake2b` 和 "
":func:`blake2s`。 :func:`md5` 通常也可用，但如果您使用罕見的“FIPS 相容”"
"構建的 Python，它可能會丟失或被阻止。根據 Python 在您的平台上使用的 OpenSSL "
"庫，還可以使用其他演算法。在大多數平台上，:func:`sha3_224`、:func:`sha3_256`"
"、:func:`sha3_384`、:func:`sha3_512`、:func:`shake_128`、:func:`shake_256` "
"也可用。"

#: ../../library/hashlib.rst:76
#, fuzzy
msgid ""
"SHA3 (Keccak) and SHAKE constructors :func:`sha3_224`, :func:`sha3_256`, :"
"func:`sha3_384`, :func:`sha3_512`, :func:`shake_128`, :func:`shake_256`."
msgstr ""
"SHA3 (Keccak) 和 SHAKE 構造函式 :func:`sha3_224`、:func:`sha3_2"
"56`、:func:`sha3_384`、:func:`sha3_512`、:func:`shake_128`、:func:`shake_256`"
"。"

#: ../../library/hashlib.rst:80
msgid ":func:`blake2b` and :func:`blake2s` were added."
msgstr "加入 :func:`blake2b` 和 :func:`blake2s`\\ 。"

#: ../../library/hashlib.rst:85
#, fuzzy
msgid ""
"All hashlib constructors take a keyword-only argument *usedforsecurity* with "
"default value ``True``. A false value allows the use of insecure and blocked "
"hashing algorithms in restricted environments. ``False`` indicates that the "
"hashing algorithm is not used in a security context, e.g. as a non-"
"cryptographic one-way compression function."
msgstr ""
"所有 hashlib 構造函式都採用關鍵字參數*usedforsecurity*，預設值為 ``True``。 "
"false 值允許在受限環境中使用不安全和被阻止的雜湊演算法。 ``False`` "
"表示雜湊演算法未在安全上下文中使用，例如作為一種非加密的單向壓縮函式。"

#: ../../library/hashlib.rst:92
#, fuzzy
msgid "Hashlib now uses SHA3 and SHAKE from OpenSSL 1.1.1 and newer."
msgstr "Hashlib 現在使用來自 OpenSSL 1.1.1 和更新版本的 SHA3 和 SHAKE。"

#: ../../library/hashlib.rst:94
#, fuzzy
msgid ""
"For example, to obtain the digest of the byte string ``b\"Nobody inspects "
"the spammish repetition\"``::"
msgstr "例如，要獲取位元組字串``b\"Nobody inspects the spammish repetition\""
"``的摘要："

#: ../../library/hashlib.rst:106
#, fuzzy
msgid "More condensed:"
msgstr "更濃縮："

#: ../../library/hashlib.rst:113
#, fuzzy
msgid ""
"Is a generic constructor that takes the string *name* of the desired "
"algorithm as its first parameter.  It also exists to allow access to the "
"above listed hashes as well as any other algorithms that your OpenSSL "
"library may offer.  The named constructors are much faster than :func:`new` "
"and should be preferred."
msgstr ""
"是一個通用構造函式，它將所需演算法的字串 *name* 作為其第一個參數。"
"它還允許訪問上面列出的雜湊值以及您的 OpenSSL 庫可能提供的任何其他演算法。"
"命名構造函式比 :func:`new` 快得多，應該是首選。"

#: ../../library/hashlib.rst:119
#, fuzzy
msgid "Using :func:`new` with an algorithm provided by OpenSSL:"
msgstr "將 :func:`new` 與 OpenSSL 提供的演算法結合使用："

#: ../../library/hashlib.rst:126
#, fuzzy
msgid "Hashlib provides the following constant attributes:"
msgstr "Hashlib 提供以下常數屬性："

#: ../../library/hashlib.rst:130
#, fuzzy
msgid ""
"A set containing the names of the hash algorithms guaranteed to be supported "
"by this module on all platforms.  Note that 'md5' is in this list despite "
"some upstream vendors offering an odd \"FIPS compliant\" Python build that "
"excludes it."
msgstr ""
"包含保證在所有平台上此模組都支援的雜湊演算法名稱的集合。請注意， ``md5``在此列表"
"中，儘管一些上游供應商提供了一個奇怪的“符合 FIPS 標準”的 Python "
"構建，將其排除在外。"

#: ../../library/hashlib.rst:139
#, fuzzy
msgid ""
"A set containing the names of the hash algorithms that are available in the "
"running Python interpreter.  These names will be recognized when passed to :"
"func:`new`.  :attr:`algorithms_guaranteed` will always be a subset.  The "
"same algorithm may appear multiple times in this set under different names "
"(thanks to OpenSSL)."
msgstr ""
"包含運行中的 Python 直譯器中可用的雜湊演算法名稱的集合。這些名稱在傳遞給 "
":func:`new` 時將被識別。 :attr:`algorithms_guaranteed` "
"將始終是一個子集。相同的演算法可能會以不同的名稱在此集合中出現多次（感謝 "
"OpenSSL）。"

#: ../../library/hashlib.rst:147
#, fuzzy
msgid ""
"The following values are provided as constant attributes of the hash objects "
"returned by the constructors:"
msgstr "以下值作為構造函式回傳的雜湊物件的常數屬性提供："

#: ../../library/hashlib.rst:153
#, fuzzy
msgid "The size of the resulting hash in bytes."
msgstr "生成的雜湊的大小（以位元組為單位）。"

#: ../../library/hashlib.rst:157
#, fuzzy
msgid "The internal block size of the hash algorithm in bytes."
msgstr "雜湊演算法的內部塊大小（以位元組為單位）。"

#: ../../library/hashlib.rst:159
#, fuzzy
msgid "A hash object has the following attributes:"
msgstr "雜湊物件具有以下屬性："

#: ../../library/hashlib.rst:163
#, fuzzy
msgid ""
"The canonical name of this hash, always lowercase and always suitable as a "
"parameter to :func:`new` to create another hash of this type."
msgstr "此雜湊的規範名稱，始終小寫並且始終適合作為 :func:`new` "
"的參數以建立此型別的另一個雜湊。"

#: ../../library/hashlib.rst:166
#, fuzzy
msgid ""
"The name attribute has been present in CPython since its inception, but "
"until Python 3.4 was not formally specified, so may not exist on some "
"platforms."
msgstr "name 屬性從一開始就存在於 CPython 中，但直到 Python 3.4 "
"才被正式指定，因此在某些平台上可能不存在。"

#: ../../library/hashlib.rst:171
#, fuzzy
msgid "A hash object has the following methods:"
msgstr "雜湊物件具有以下方法："

#: ../../library/hashlib.rst:176
#, fuzzy
msgid ""
"Update the hash object with the :term:`bytes-like object`. Repeated calls "
"are equivalent to a single call with the concatenation of all the arguments: "
"``m.update(a); m.update(b)`` is equivalent to ``m.update(a+b)``."
msgstr ""
"用 :term:`bytes-like object` "
"更新雜湊物件。重複呼叫等同於連接所有參數的單個呼叫：``m.update(a); m."
"update(b)`` 等同於``m.update(a+b)``。"

#: ../../library/hashlib.rst:181
#, fuzzy
msgid ""
"The Python GIL is released to allow other threads to run while hash updates "
"on data larger than 2047 bytes is taking place when using hash algorithms "
"supplied by OpenSSL."
msgstr "當使用 OpenSSL 提供的雜湊演算法時，Python GIL 的發布允許其他執行緒在對大於 "
"2047 位元組的資料進行雜湊更新時運行。"

#: ../../library/hashlib.rst:189
#, fuzzy
msgid ""
"Return the digest of the data passed to the :meth:`update` method so far. "
"This is a bytes object of size :attr:`digest_size` which may contain bytes "
"in the whole range from 0 to 255."
msgstr ""
"回傳到目前為止傳遞給 update 方法的資料的摘要。這是一個大小為 "
":attr:`digest_size` 的位元組物件，它可能包含 0 到 255 整個範圍內的位元組。"

#: ../../library/hashlib.rst:196 ../../library/hashlib.rst:224
#, fuzzy
msgid ""
"Like :meth:`digest` except the digest is returned as a string object of "
"double length, containing only hexadecimal digits.  This may be used to "
"exchange the value safely in email or other non-binary environments."
msgstr ""
"與 :meth:`digest` 類似，除了摘要作為雙倍長度的字串物件回傳，僅包含十六進位數"
"字。這可用於在電子郵件或其他非二進位環境中安全地交換值。"

#: ../../library/hashlib.rst:203
#, fuzzy
msgid ""
"Return a copy (\"clone\") of the hash object.  This can be used to "
"efficiently compute the digests of data sharing a common initial substring."
msgstr "回傳雜湊物件的副本（“克隆”）。這可用於有效地計算共享公開初始子字串的資料摘要"
"。"

#: ../../library/hashlib.rst:208
#, fuzzy
msgid "SHAKE variable length digests"
msgstr "SHAKE 可變長度摘要"

#: ../../library/hashlib.rst:210
#, fuzzy
msgid ""
"The :func:`shake_128` and :func:`shake_256` algorithms provide variable "
"length digests with length_in_bits//2 up to 128 or 256 bits of security. As "
"such, their digest methods require a length. Maximum length is not limited "
"by the SHAKE algorithm."
msgstr ""
":func:`shake_128` 和 :func:`shake_256` 演算法提供長度為 length_in_bits//2 "
"的可變長度摘要，最高可達 128 或 256 "
"位的安全性。因此，他們的摘要方法需要一個長度。最大長度不受 SHAKE "
"演算法的限制。"

#: ../../library/hashlib.rst:217
#, fuzzy
msgid ""
"Return the digest of the data passed to the :meth:`update` method so far. "
"This is a bytes object of size *length* which may contain bytes in the whole "
"range from 0 to 255."
msgstr ""
"回傳到目前為止傳遞給 update 方法的資料的摘要。這是一個大小為 *length* "
"的位元組物件，它可能包含從 0 到 255 整個範圍內的位元組。"

#: ../../library/hashlib.rst:230
#, fuzzy
msgid "File hashing"
msgstr "文件雜湊"

#: ../../library/hashlib.rst:232
#, fuzzy
msgid ""
"The hashlib module provides a helper function for efficient hashing of a "
"file or file-like object."
msgstr "hashlib 模組提供了一個輔助函式，用於對文件或類文件物件進行有效的雜湊處理。"

#: ../../library/hashlib.rst:237
#, fuzzy
msgid ""
"Return a digest object that has been updated with contents of file object."
msgstr "回傳已使用文件物件的內容更新的摘要物件。"

#: ../../library/hashlib.rst:239
#, fuzzy
msgid ""
"*fileobj* must be a file-like object opened for reading in binary mode. It "
"accepts file objects from  builtin :func:`open`, :class:`~io.BytesIO` "
"instances, SocketIO objects from :meth:`socket.socket.makefile`, and "
"similar. The function may bypass Python's I/O and use the file descriptor "
"from :meth:`~io.IOBase.fileno` directly. *fileobj* must be assumed to be in "
"an unknown state after this function returns or raises. It is up to the "
"caller to close *fileobj*."
msgstr ""
"*fileobj* 必須是以二進位模式打開用於讀取的類文件物件。它接受來自內建 "
":func:`open` 的文件物件、:class:`~io.BytesIO` 實例、來自 :meth:`socket.socket"
".makefile` 的 SocketIO 物件，以及類似的。該函式可以繞過 Python 的 I/O "
"並直接使用 :meth:`~io.IOBase.fileno` 中的文件描述器。 *fileobj* "
"必須假定在此函式回傳或引發後處於未知狀態。關閉 *fileobj* 取決於呼叫者。"

#: ../../library/hashlib.rst:247
#, fuzzy
msgid ""
"*digest* must either be a hash algorithm name as a *str*, a hash "
"constructor, or a callable that returns a hash object."
msgstr "*digest* 必須是作為 *str* "
"的雜湊演算法名稱、雜湊構造函式或回傳雜湊物件的可呼叫物件。"

#: ../../library/hashlib.rst:250
msgid "Example:"
msgstr "範例："

#: ../../library/hashlib.rst:273
#, fuzzy
msgid "Key derivation"
msgstr "密鑰推導"

#: ../../library/hashlib.rst:275
#, fuzzy
msgid ""
"Key derivation and key stretching algorithms are designed for secure "
"password hashing. Naive algorithms such as ``sha1(password)`` are not "
"resistant against brute-force attacks. A good password hashing function must "
"be tunable, slow, and include a `salt <https://en.wikipedia.org/wiki/Salt_"
"%28cryptography%29>`_."
msgstr ""
"密鑰派生和密鑰擴充演算法專為安全密碼雜湊而設計。 ``sha1(password)`` 等樸素演"
"算法不能抵抗暴力攻擊。一個好的密碼雜湊函式必須是可調的、慢的，並且包含一個`"
"salt <https://en.wikipedia.org/wiki/Salt_%28cryptography%29>`_。"

#: ../../library/hashlib.rst:283
#, fuzzy
msgid ""
"The function provides PKCS#5 password-based key derivation function 2. It "
"uses HMAC as pseudorandom function."
msgstr "該函式提供PKCS#5基於密碼的密鑰推導函式2。它使用HMAC作為偽隨機函式。"

#: ../../library/hashlib.rst:286
#, fuzzy
msgid ""
"The string *hash_name* is the desired name of the hash digest algorithm for "
"HMAC, e.g. 'sha1' or 'sha256'. *password* and *salt* are interpreted as "
"buffers of bytes. Applications and libraries should limit *password* to a "
"sensible length (e.g. 1024). *salt* should be about 16 or more bytes from a "
"proper source, e.g. :func:`os.urandom`."
msgstr ""
"字串 *hash_name* 是 HMAC 雜湊摘要演算法的所需名稱，例如'sha1' 或 'sha256'。 "
"*password* 和 *salt* 被解釋為位元組緩衝區。應用程式和庫應將 *password* "
"限制為合理的長度（例如 1024）。 *salt* 應該是來自適當來源的大約 16 "
"個或更多位元組，例如 :func:`os.urandom`。"

#: ../../library/hashlib.rst:292
#, fuzzy
msgid ""
"The number of *iterations* should be chosen based on the hash algorithm and "
"computing power. As of 2022, hundreds of thousands of iterations of SHA-256 "
"are suggested. For rationale as to why and how to choose what is best for "
"your application, read *Appendix A.2.2* of NIST-SP-800-132_. The answers on "
"the `stackexchange pbkdf2 iterations question`_ explain in detail."
msgstr ""
"*疊代次數*應根據雜湊演算法和計算能力來選擇。截至 2022 年，建議對 SHA-256 "
"進行數十萬次疊代。有關為什麼以及如何選擇最適合您的應用程式的基本原理，請閱讀 "
"NIST-SP-800-132_ 的*附錄 A.2.2*。 `stackexchange pbkdf2 iterations question` "
"的答案有詳細解釋。"

#: ../../library/hashlib.rst:298
#, fuzzy
msgid ""
"*dklen* is the length of the derived key. If *dklen* is ``None`` then the "
"digest size of the hash algorithm *hash_name* is used, e.g. 64 for SHA-512."
msgstr ""
"*dklen* 是派生密鑰的長度。如果 *dklen* 為 ``None`` ，則使用雜湊演算法 *hash_name* "
"的摘要大小，例如SHA-512 為 64。"

#: ../../library/hashlib.rst:311
#, fuzzy
msgid ""
"A fast implementation of *pbkdf2_hmac* is available with OpenSSL.  The "
"Python implementation uses an inline version of :mod:`hmac`. It is about "
"three times slower and doesn't release the GIL."
msgstr ""
"*pbkdf2_hmac* 的快速實作可用於 OpenSSL。 Python 實作使用 :mod:`hmac` "
"的內聯版本。它慢了大約三倍，並且不釋放 GIL。"

#: ../../library/hashlib.rst:317
#, fuzzy
msgid ""
"Slow Python implementation of *pbkdf2_hmac* is deprecated. In the future the "
"function will only be available when Python is compiled with OpenSSL."
msgstr "*pbkdf2_hmac* 的慢速 Python 實作已棄用。將來該功能將僅在使用 OpenSSL 編譯 "
"Python 時可用。"

#: ../../library/hashlib.rst:323
#, fuzzy
msgid ""
"The function provides scrypt password-based key derivation function as "
"defined in :rfc:`7914`."
msgstr "該函式提供 scrypt 基於密碼的密鑰派生函式，如 :rfc:`7914` 中所定義。"

#: ../../library/hashlib.rst:326
#, fuzzy
msgid ""
"*password* and *salt* must be :term:`bytes-like objects <bytes-like "
"object>`.  Applications and libraries should limit *password* to a sensible "
"length (e.g. 1024).  *salt* should be about 16 or more bytes from a proper "
"source, e.g. :func:`os.urandom`."
msgstr ""
"*password* 和 *salt* 必須是 :term:`bytes-like objects <bytes-like object>`。"
"應用程式和庫應將 *password* 限制為合理的長度（例如 1024）。 *salt* "
"應該是來自適當來源的大約 16 個或更多位元組，例如 :func:`os.urandom`。"

#: ../../library/hashlib.rst:331
#, fuzzy
msgid ""
"*n* is the CPU/Memory cost factor, *r* the block size, *p* parallelization "
"factor and *maxmem* limits memory (OpenSSL 1.1.0 defaults to 32 MiB). "
"*dklen* is the length of the derived key."
msgstr ""
"*n* 是 CPU/記憶體成本因素，*r* 塊大小，*p* 並行化因素和 *maxmem* 限制記憶體（"
"OpenSSL 1.1.0 預設為 32 MiB）。 *dklen* 是派生密鑰的長度。"

#: ../../library/hashlib.rst:339
msgid "BLAKE2"
msgstr "BLAKE2"

#: ../../library/hashlib.rst:346
#, fuzzy
msgid ""
"BLAKE2_ is a cryptographic hash function defined in :rfc:`7693` that comes "
"in two flavors:"
msgstr "BLAKE2_ 是 :rfc:`7693` 中定義的加密雜湊函式，有兩種形式："

#: ../../library/hashlib.rst:349
#, fuzzy
msgid ""
"**BLAKE2b**, optimized for 64-bit platforms and produces digests of any size "
"between 1 and 64 bytes,"
msgstr "**BLAKE2b**，針對 64 位平台進行了最佳化，可生成 1 到 64 "
"位元組之間任意大小的摘要，"

#: ../../library/hashlib.rst:352
#, fuzzy
msgid ""
"**BLAKE2s**, optimized for 8- to 32-bit platforms and produces digests of "
"any size between 1 and 32 bytes."
msgstr "**BLAKE2s**，針對 8 位到 32 位平台進行了最佳化，並生成 1 到 32 "
"位元組之間任意大小的摘要。"

#: ../../library/hashlib.rst:355
#, fuzzy
msgid ""
"BLAKE2 supports **keyed mode** (a faster and simpler replacement for HMAC_), "
"**salted hashing**, **personalization**, and **tree hashing**."
msgstr ""
"BLAKE2 支援 **keyed mode**（HMAC_ 更快更簡單的替代品）、**salted "
"hashing**、**personalization** 和 **tree hashing**。"

#: ../../library/hashlib.rst:358
#, fuzzy
msgid ""
"Hash objects from this module follow the API of standard library's :mod:"
"`hashlib` objects."
msgstr "此模組中的雜湊物件遵循標準庫的 :mod:`hashlib` 物件的 API。"

#: ../../library/hashlib.rst:363
#, fuzzy
msgid "Creating hash objects"
msgstr "建立雜湊物件"

#: ../../library/hashlib.rst:365
#, fuzzy
msgid "New hash objects are created by calling constructor functions:"
msgstr "通過呼叫構造函式建立新的雜湊物件："

#: ../../library/hashlib.rst:379
#, fuzzy
msgid ""
"These functions return the corresponding hash objects for calculating "
"BLAKE2b or BLAKE2s. They optionally take these general parameters:"
msgstr "這些函式回傳相應的雜湊物件，用於計算 BLAKE2b 或 "
"BLAKE2s。他們可以選擇採用這些通用參數："

#: ../../library/hashlib.rst:382
#, fuzzy
msgid ""
"*data*: initial chunk of data to hash, which must be :term:`bytes-like "
"object`.  It can be passed only as positional argument."
msgstr "*data*：要雜湊的初始資料塊，必須是 :term:`bytes-like "
"object`。它只能作為位置參數傳遞。"

#: ../../library/hashlib.rst:385
#, fuzzy
msgid "*digest_size*: size of output digest in bytes."
msgstr "*digest_size*：輸出摘要的大小（以位元組為單位）。"

#: ../../library/hashlib.rst:387
#, fuzzy
msgid ""
"*key*: key for keyed hashing (up to 64 bytes for BLAKE2b, up to 32 bytes for "
"BLAKE2s)."
msgstr "*key*：密鑰雜湊的密鑰（BLAKE2b 最多 64 個位元組，BLAKE2s 最多 32 個位元組）。"

#: ../../library/hashlib.rst:390
#, fuzzy
msgid ""
"*salt*: salt for randomized hashing (up to 16 bytes for BLAKE2b, up to 8 "
"bytes for BLAKE2s)."
msgstr "*salt*：用於隨機雜湊的鹽（BLAKE2b 最多 16 個位元組，BLAKE2s 最多 8 "
"個位元組）。"

#: ../../library/hashlib.rst:393
#, fuzzy
msgid ""
"*person*: personalization string (up to 16 bytes for BLAKE2b, up to 8 bytes "
"for BLAKE2s)."
msgstr "*person*：個性化字串（BLAKE2b 最多 16 個位元組，BLAKE2s 最多 8 個位元組）。"

#: ../../library/hashlib.rst:396
#, fuzzy
msgid "The following table shows limits for general parameters (in bytes):"
msgstr "下表顯示了一般參數的限制（以位元組為單位）："

#: ../../library/hashlib.rst:399
#, fuzzy
msgid "Hash"
msgstr "雜湊"

#: ../../library/hashlib.rst:399
msgid "digest_size"
msgstr "digest_size"

#: ../../library/hashlib.rst:399
msgid "len(key)"
msgstr "len(key)"

#: ../../library/hashlib.rst:399
msgid "len(salt)"
msgstr "len(salt)"

#: ../../library/hashlib.rst:399
msgid "len(person)"
msgstr "len(person)"

#: ../../library/hashlib.rst:401
msgid "BLAKE2b"
msgstr "BLAKE2b"

#: ../../library/hashlib.rst:401
msgid "64"
msgstr "64"

#: ../../library/hashlib.rst:401
msgid "16"
msgstr "16"

#: ../../library/hashlib.rst:402
msgid "BLAKE2s"
msgstr "BLAKE2s"

#: ../../library/hashlib.rst:402
msgid "32"
msgstr "32"

#: ../../library/hashlib.rst:402
msgid "8"
msgstr "8"

#: ../../library/hashlib.rst:407
#, fuzzy
msgid ""
"BLAKE2 specification defines constant lengths for salt and personalization "
"parameters, however, for convenience, this implementation accepts byte "
"strings of any size up to the specified length. If the length of the "
"parameter is less than specified, it is padded with zeros, thus, for "
"example, ``b'salt'`` and ``b'salt\\x00'`` is the same value. (This is not "
"the case for *key*.)"
msgstr ""
"BLAKE2 規範為 salt 和個性化參數定義了常數長度，但是，為了方便起見，此實作接受"
"不超過指定長度的任何大小的位元組字串。如果參數的長度小於指定的長度，則用零填"
"充，因此，例如，``b'salt'`` 和 ``b'salt\\x00'`` 是相同的值。 （*key* "
"不是這種情況。）"

#: ../../library/hashlib.rst:414
#, fuzzy
msgid "These sizes are available as module `constants`_ described below."
msgstr "這些大小可用作下面描述的模組“常數”。"

#: ../../library/hashlib.rst:416
#, fuzzy
msgid ""
"Constructor functions also accept the following tree hashing parameters:"
msgstr "構造函式還接受以下樹雜湊參數："

#: ../../library/hashlib.rst:418
#, fuzzy
msgid "*fanout*: fanout (0 to 255, 0 if unlimited, 1 in sequential mode)."
msgstr "*fanout*：扇出（0 到 255，如果無限制則為 0，在順序模式下為 1）。"

#: ../../library/hashlib.rst:420
#, fuzzy
msgid ""
"*depth*: maximal depth of tree (1 to 255, 255 if unlimited, 1 in sequential "
"mode)."
msgstr "*depth*：樹的最大深度（1 到 255，如果無限制則為 255，在順序模式下為 1）。"

#: ../../library/hashlib.rst:423
#, fuzzy
msgid ""
"*leaf_size*: maximal byte length of leaf (0 to ``2**32-1``, 0 if unlimited "
"or in sequential mode)."
msgstr "*leaf_size*：葉的最大位元組長度（0 到 ``2**32-1``，"
"如果無限製或在順序模式下則為 0）。"

#: ../../library/hashlib.rst:426
#, fuzzy
msgid ""
"*node_offset*: node offset (0 to ``2**64-1`` for BLAKE2b, 0 to ``2**48-1`` "
"for BLAKE2s, 0 for the first, leftmost, leaf, or in sequential mode)."
msgstr ""
"*node_offset*：節點偏移量（BLAKE2b 為 0 到 ``2**64-1``，BLAKE2s 為 0 到 "
"``2**48-1``，第一個、最左邊、葉子或順序模式下為 0 )."

#: ../../library/hashlib.rst:429
#, fuzzy
msgid ""
"*node_depth*: node depth (0 to 255, 0 for leaves, or in sequential mode)."
msgstr "*node_depth*：節點深度（0 到 255，葉為 0，或在順序模式下）。"

#: ../../library/hashlib.rst:431
#, fuzzy
msgid ""
"*inner_size*: inner digest size (0 to 64 for BLAKE2b, 0 to 32 for BLAKE2s, 0 "
"in sequential mode)."
msgstr "*inner_size*：內部摘要大小（BLAKE2b 為 0 到 64，BLAKE2s 為 0 到 32，"
"順序模式為 0）。"

#: ../../library/hashlib.rst:434
#, fuzzy
msgid ""
"*last_node*: boolean indicating whether the processed node is the last one "
"(``False`` for sequential mode)."
msgstr "*last_node*：布爾值，指示處理的節點是否是最後一個節點（對於順序模式為 ``False``"
"）。"

#: ../../library/hashlib.rst:-1
#, fuzzy
msgid "Explanation of tree mode parameters."
msgstr "樹模式參數說明。"

#: ../../library/hashlib.rst:440
#, fuzzy
msgid ""
"See section 2.10 in `BLAKE2 specification <https://blake2.net/"
"blake2_20130129.pdf>`_ for comprehensive review of tree hashing."
msgstr ""
"請參閱`BLAKE2 規範 <https://blake2.net/blake2_20130129.pdf>`_ 中的第 2.10 "
"節以全面回顧樹雜湊。"

#: ../../library/hashlib.rst:446
msgid "Constants"
msgstr "常數"

#: ../../library/hashlib.rst:451
#, fuzzy
msgid "Salt length (maximum length accepted by constructors)."
msgstr "鹽長度（構造函式接受的最大長度）。"

#: ../../library/hashlib.rst:457
#, fuzzy
msgid ""
"Personalization string length (maximum length accepted by constructors)."
msgstr "個性化字串長度（構造函式接受的最大長度）。"

#: ../../library/hashlib.rst:463
#, fuzzy
msgid "Maximum key size."
msgstr "最大密鑰大小。"

#: ../../library/hashlib.rst:469
#, fuzzy
msgid "Maximum digest size that the hash function can output."
msgstr "雜湊函式可以輸出的最大摘要大小。"

#: ../../library/hashlib.rst:473
msgid "Examples"
msgstr "範例"

#: ../../library/hashlib.rst:476
#, fuzzy
msgid "Simple hashing"
msgstr "簡單雜湊"

#: ../../library/hashlib.rst:478
#, fuzzy
msgid ""
"To calculate hash of some data, you should first construct a hash object by "
"calling the appropriate constructor function (:func:`blake2b` or :func:"
"`blake2s`), then update it with the data by calling :meth:`update` on the "
"object, and, finally, get the digest out of the object by calling :meth:"
"`digest` (or :meth:`hexdigest` for hex-encoded string)."
msgstr ""
"要計算某些資料的雜湊值，您應該首先通過呼叫適當的構造函式（:func:`blake2b` "
"或 :func:`blake2s`）構造一個雜湊物件，然後通過呼叫 :meth:`update` "
"用資料更新它在對像上，最後，通過呼叫 :meth:`digest`（或 :meth:`hexdigest` "
"用於十六進位編碼的字串）從對像中獲取摘要。"

#: ../../library/hashlib.rst:491
#, fuzzy
msgid ""
"As a shortcut, you can pass the first chunk of data to update directly to "
"the constructor as the positional argument:"
msgstr "作為一種快捷方式，您可以將要更新的第一塊資料作為位置參數直接傳遞給構造函式："

#: ../../library/hashlib.rst:498
#, fuzzy
msgid ""
"You can call :meth:`hash.update` as many times as you need to iteratively "
"update the hash:"
msgstr "您可以根據需要多次呼叫 hash.update 以疊代更新雜湊："

#: ../../library/hashlib.rst:511
#, fuzzy
msgid "Using different digest sizes"
msgstr "使用不同的摘要大小"

#: ../../library/hashlib.rst:513
#, fuzzy
msgid ""
"BLAKE2 has configurable size of digests up to 64 bytes for BLAKE2b and up to "
"32 bytes for BLAKE2s. For example, to replace SHA-1 with BLAKE2b without "
"changing the size of output, we can tell BLAKE2b to produce 20-byte digests:"
msgstr ""
"BLAKE2 具有可配置的摘要大小，BLAKE2b 最多 64 位元組，BLAKE2s 最多 32 "
"位元組。例如，要在不改變輸出大小的情況下用 BLAKE2b 替換 SHA-1，我們可以告訴 "
"BLAKE2b 生成 20 位元組的摘要："

#: ../../library/hashlib.rst:527
#, fuzzy
msgid ""
"Hash objects with different digest sizes have completely different outputs "
"(shorter hashes are *not* prefixes of longer hashes); BLAKE2b and BLAKE2s "
"produce different outputs even if the output length is the same:"
msgstr ""
"具有不同摘要大小的雜湊物件具有完全不同的輸出（較短的雜湊*不是*較長雜湊的前綴"
"）；即使輸出長度相同，BLAKE2b 和 BLAKE2s 也會產生不同的輸出："

#: ../../library/hashlib.rst:543
#, fuzzy
msgid "Keyed hashing"
msgstr "鍵控雜湊"

#: ../../library/hashlib.rst:545
#, fuzzy
msgid ""
"Keyed hashing can be used for authentication as a faster and simpler "
"replacement for `Hash-based message authentication code <https://en."
"wikipedia.org/wiki/HMAC>`_ (HMAC). BLAKE2 can be securely used in prefix-MAC "
"mode thanks to the indifferentiability property inherited from BLAKE."
msgstr ""
"Keyed hashing 可用於身份驗證，作為“基於雜湊的訊息身份驗證程式碼 <https://en."
"wikipedia.org/wiki/HMAC>”`_ (HMAC) 的更快、更簡單的替代品。由於從 BLAKE "
"繼承的不可區分性屬性，BLAKE2 可以安全地用於前綴 MAC 模式。"

#: ../../library/hashlib.rst:551
#, fuzzy
msgid ""
"This example shows how to get a (hex-encoded) 128-bit authentication code "
"for message ``b'message data'`` with key ``b'pseudorandom key'``::"
msgstr ""
"此示例顯示如何使用密鑰 ``b'pseudorandom key'`` 為訊息``b'message data'`` "
"獲取（十六進位編碼的）128 位身份驗證程式碼："

#: ../../library/hashlib.rst:561
#, fuzzy
msgid ""
"As a practical example, a web application can symmetrically sign cookies "
"sent to users and later verify them to make sure they weren't tampered with::"
msgstr "作為一個實際示例，Web 應用程式可以對發送給使用者的 cookie "
"進行對稱簽名，然後驗證它們以確保它們未被篡改::"

#: ../../library/hashlib.rst:590
#, fuzzy
msgid ""
"Even though there's a native keyed hashing mode, BLAKE2 can, of course, be "
"used in HMAC construction with :mod:`hmac` module::"
msgstr "即使有一個原生的鍵控雜湊模式，BLAKE2 當然也可以用於 HMAC 模組的 HMAC "
"構建 :mod:`hmac` 模組::"

#: ../../library/hashlib.rst:601
#, fuzzy
msgid "Randomized hashing"
msgstr "隨機雜湊"

#: ../../library/hashlib.rst:603
#, fuzzy
msgid ""
"By setting *salt* parameter users can introduce randomization to the hash "
"function. Randomized hashing is useful for protecting against collision "
"attacks on the hash function used in digital signatures."
msgstr "通過設定 *salt* 參數，使用者可以將隨機化引入雜湊函式。隨機雜湊對於防止對數字"
"簽名中使用的雜湊函式的碰撞攻擊很有用。"

#: ../../library/hashlib.rst:607
#, fuzzy
msgid ""
"Randomized hashing is designed for situations where one party, the message "
"preparer, generates all or part of a message to be signed by a second party, "
"the message signer. If the message preparer is able to find cryptographic "
"hash function collisions (i.e., two messages producing the same hash value), "
"then they might prepare meaningful versions of the message that would "
"produce the same hash value and digital signature, but with different "
"results (e.g., transferring $1,000,000 to an account, rather than $10). "
"Cryptographic hash functions have been designed with collision resistance as "
"a major goal, but the current concentration on attacking cryptographic hash "
"functions may result in a given cryptographic hash function providing less "
"collision resistance than expected. Randomized hashing offers the signer "
"additional protection by reducing the likelihood that a preparer can "
"generate two or more messages that ultimately yield the same hash value "
"during the digital signature generation process --- even if it is practical "
"to find collisions for the hash function. However, the use of randomized "
"hashing may reduce the amount of security provided by a digital signature "
"when all portions of the message are prepared by the signer."
msgstr ""
"隨機雜湊是為一方（訊息準備者）生成全部或部分訊息以供第二方（訊息簽名者）簽名"
"的情況而設計的。如果訊息準備者能夠找到加密雜湊函式衝突（即，兩條訊息產生相同"
"的雜湊值），那麼他們可能會準備訊息的有意義的版本，這些版本將產生相同的雜湊值"
"和數字簽名，但具有不同的結果（例如，將 1,000,000 美元轉入一個賬戶，而不是 10 "
"美元）。密碼雜湊函式的設計以抗碰撞性為主要目標，但當前對攻擊密碼雜湊函式的關"
"注可能導致給定的密碼雜湊函式提供的抗碰撞性低於預期。隨機雜湊通過降低準備者在"
"數字簽名生成過程中生成最終產生相同雜湊值的兩個或更多訊息的可能性來為簽名者提"
"供額外的保護——即使查找雜湊函式的衝突是可行的。但是，當訊息的所有部分都由簽名"
"者準備時，使用隨機雜湊可能會降低數字簽名提供的安全性。"

#: ../../library/hashlib.rst:626
#, fuzzy
msgid ""
"(`NIST SP-800-106 \"Randomized Hashing for Digital Signatures\" <https://"
"csrc.nist.gov/publications/detail/sp/800-106/final>`_)"
msgstr ""
"（`NIST SP-800-106“數字簽名的隨機雜湊”<https://csrc.nist.gov/publications/"
"detail/sp/800-106/final>`_）"

#: ../../library/hashlib.rst:629
#, fuzzy
msgid ""
"In BLAKE2 the salt is processed as a one-time input to the hash function "
"during initialization, rather than as an input to each compression function."
msgstr "在 BLAKE2 中，salt "
"在初始化期間作為雜湊函式的一次性輸入處理，而不是作為每個壓縮函式的輸入。"

#: ../../library/hashlib.rst:634
#, fuzzy
msgid ""
"*Salted hashing* (or just hashing) with BLAKE2 or any other general-purpose "
"cryptographic hash function, such as SHA-256, is not suitable for hashing "
"passwords.  See `BLAKE2 FAQ <https://blake2.net/#qa>`_ for more information."
msgstr ""
"*用 BLAKE2 或任何其他通用加密雜湊函式（例如 SHA-256）進行的*加鹽雜湊*（或只是"
"雜湊）不適用於雜湊密碼。有關更多資訊，請參閱`BLAKE2 FAQ <https://blake2.net/"
"#qa>`_。"

#: ../../library/hashlib.rst:657
#, fuzzy
msgid "Personalization"
msgstr "個性化"

#: ../../library/hashlib.rst:659
#, fuzzy
msgid ""
"Sometimes it is useful to force hash function to produce different digests "
"for the same input for different purposes. Quoting the authors of the Skein "
"hash function:"
msgstr "有時強制雜湊函式為不同目的的相同輸入生成不同的摘要是有用的。引用 Skein "
"雜湊函式的作者的話："

#: ../../library/hashlib.rst:663
#, fuzzy
msgid ""
"We recommend that all application designers seriously consider doing this; "
"we have seen many protocols where a hash that is computed in one part of the "
"protocol can be used in an entirely different part because two hash "
"computations were done on similar or related data, and the attacker can "
"force the application to make the hash inputs the same. Personalizing each "
"hash function used in the protocol summarily stops this type of attack."
msgstr ""
"我們建議所有應用程式設計人員認真考慮這樣做；我們已經看到許多協定，其中在協定"
"的一部分中計算的雜湊可以用於完全不同的部分，因為兩次雜湊計算是在相似或相關的"
"資料上完成的，並且攻擊者可以強制應用程式使雜湊輸入相同的。個性化協定中使用的"
"每個雜湊函式可以立即阻止此類攻擊。"

#: ../../library/hashlib.rst:670
#, fuzzy
msgid ""
"(`The Skein Hash Function Family <https://www.schneier.com/wp-content/"
"uploads/2016/02/skein.pdf>`_, p. 21)"
msgstr ""
"（`Skein 雜湊函式係列 <https://www.schneier.com/wp-content/uploads/2016/02/"
"skein.pdf>`_，第 21 頁）"

#: ../../library/hashlib.rst:674
#, fuzzy
msgid "BLAKE2 can be personalized by passing bytes to the *person* argument::"
msgstr "可以通過將位元組傳遞給 *person* 參數來個性化 BLAKE2::"

#: ../../library/hashlib.rst:688
#, fuzzy
msgid ""
"Personalization together with the keyed mode can also be used to derive "
"different keys from a single one."
msgstr "個性化與鍵控模式一起也可用於從單個密鑰派生出不同的密鑰。"

#: ../../library/hashlib.rst:702
#, fuzzy
msgid "Tree mode"
msgstr "樹模式"

#: ../../library/hashlib.rst:704
#, fuzzy
msgid "Here's an example of hashing a minimal tree with two leaf nodes::"
msgstr "這是一個雜湊具有兩個葉節點的最小樹的示例："

#: ../../library/hashlib.rst:710
#, fuzzy
msgid ""
"This example uses 64-byte internal digests, and returns the 32-byte final "
"digest::"
msgstr "此示例使用 64 位元組的內部摘要，並回傳 32 位元組的最終摘要："

#: ../../library/hashlib.rst:740
#, fuzzy
msgid "Credits"
msgstr "學分"

#: ../../library/hashlib.rst:742
#, fuzzy
msgid ""
"BLAKE2_ was designed by *Jean-Philippe Aumasson*, *Samuel Neves*, *Zooko "
"Wilcox-O'Hearn*, and *Christian Winnerlein* based on SHA-3_ finalist BLAKE_ "
"created by *Jean-Philippe Aumasson*, *Luca Henzen*, *Willi Meier*, and "
"*Raphael C.-W. Phan*."
msgstr ""
"BLAKE2_ 由 *Jean-Philippe Aumasson*、*Samuel Neves*、*Zooko "
"Wilcox-O'Hearn* 和 *Christian Winnerlein* 設計，基於由 *Jean-Philippe "
"Aumasson*、*Luca Henzen* 建立的 SHA-3_ 入圍者 BLAKE_ , *Willi "
"Meier* 和 *Raphael C.-W。潘*。"

#: ../../library/hashlib.rst:747
#, fuzzy
msgid ""
"It uses core algorithm from ChaCha_ cipher designed by *Daniel J.  "
"Bernstein*."
msgstr "它使用由 *Daniel J. Bernstein* 設計的 ChaCha_ cipher 的核心演算法。"

#: ../../library/hashlib.rst:749
#, fuzzy
msgid ""
"The stdlib implementation is based on pyblake2_ module. It was written by "
"*Dmitry Chestnykh* based on C implementation written by *Samuel Neves*. The "
"documentation was copied from pyblake2_ and written by *Dmitry Chestnykh*."
msgstr ""
"stdlib 實作基於 pyblake2_ 模組。它由 *Dmitry Chestnykh* 編寫，基於 *Samuel "
"Neves* 編寫的 C 實作。該文檔是從 pyblake2_ 複製的，由 *Dmitry Chestnykh* "
"編寫。"

#: ../../library/hashlib.rst:753
#, fuzzy
msgid "The C code was partly rewritten for Python by *Christian Heimes*."
msgstr "*Christian Heimes* 為 Python 重寫了部分 C 程式碼。"

#: ../../library/hashlib.rst:755
#, fuzzy
msgid ""
"The following public domain dedication applies for both C hash function "
"implementation, extension code, and this documentation:"
msgstr "以下公開領域奉獻適用於 C 雜湊函式實作、擴充程式碼和本文檔："

#: ../../library/hashlib.rst:758
#, fuzzy
msgid ""
"To the extent possible under law, the author(s) have dedicated all copyright "
"and related and neighboring rights to this software to the public domain "
"worldwide. This software is distributed without any warranty."
msgstr "在法律允許的範圍內，作者已將本軟件的所有版權以及相關和鄰接權專用於全球公開領"
"域。該軟件的分發沒有任何保證。"

#: ../../library/hashlib.rst:762
#, fuzzy
msgid ""
"You should have received a copy of the CC0 Public Domain Dedication along "
"with this software. If not, see https://creativecommons.org/publicdomain/"
"zero/1.0/."
msgstr ""
"您應該已經收到一份 CC0 公開領域貢獻書以及此軟件。如果沒有，請參閱 "
"https://creativecommons.org/publicdomain/zero/1.0/。"

#: ../../library/hashlib.rst:766
#, fuzzy
msgid ""
"The following people have helped with development or contributed their "
"changes to the project and the public domain according to the Creative "
"Commons Public Domain Dedication 1.0 Universal:"
msgstr ""
"根據 Creative Commons Public Domain Dedication 1.0 "
"Universal，以下人員幫助開發或貢獻了他們對項目和公開領域的更改："

#: ../../library/hashlib.rst:770
#, fuzzy
msgid "*Alexandr Sokolovskiy*"
msgstr "*亞歷山大·索科洛夫斯基*"

#: ../../library/hashlib.rst:785
msgid "Module :mod:`hmac`"
msgstr ":mod:`hmac` 模組"

#: ../../library/hashlib.rst:785
#, fuzzy
msgid "A module to generate message authentication codes using hashes."
msgstr "使用雜湊生成訊息驗證程式碼的模組。"

#: ../../library/hashlib.rst:788
msgid "Module :mod:`base64`"
msgstr ":mod:`base64` 模組"

#: ../../library/hashlib.rst:788
#, fuzzy
msgid "Another way to encode binary hashes for non-binary environments."
msgstr "另一種為非二進位環境編碼二進位雜湊的方法。"

#: ../../library/hashlib.rst:791
msgid "https://blake2.net"
msgstr "https://blake2.net"

#: ../../library/hashlib.rst:791
msgid "Official BLAKE2 website."
msgstr "BLAKE2 官方網站。"

#: ../../library/hashlib.rst:794
msgid ""
"https://csrc.nist.gov/csrc/media/publications/fips/180/2/archive/2002-08-01/"
"documents/fips180-2.pdf"
msgstr ""
"https://csrc.nist.gov/csrc/media/publications/fips/180/2/archive/2002-08-01/"
"documents/fips180-2.pdf"

#: ../../library/hashlib.rst:794
#, fuzzy
msgid "The FIPS 180-2 publication on Secure Hash Algorithms."
msgstr "關於安全雜湊演算法的 FIPS 180-2 出版物。"

#: ../../library/hashlib.rst:798
msgid ""
"https://en.wikipedia.org/wiki/"
"Cryptographic_hash_function#Cryptographic_hash_algorithms"
msgstr ""
"https://en.wikipedia.org/wiki/"
"Cryptographic_hash_function#Cryptographic_hash_algorithms"

#: ../../library/hashlib.rst:797
#, fuzzy
msgid ""
"Wikipedia article with information on which algorithms have known issues and "
"what that means regarding their use."
msgstr "維基百科文章，其中包含有關哪些演算法存在已知問題以及這對它們的使用意味著什麼"
"的資訊。"

#: ../../library/hashlib.rst:801
msgid "https://www.ietf.org/rfc/rfc8018.txt"
msgstr "https://www.ietf.org/rfc/rfc8018.txt"

#: ../../library/hashlib.rst:801
#, fuzzy
msgid "PKCS #5: Password-Based Cryptography Specification Version 2.1"
msgstr "PKCS #5：基於密碼的密碼術規範版本 2.1"

#: ../../library/hashlib.rst:803
#, fuzzy
msgid ""
"https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf"
msgstr ""
"https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf"

#: ../../library/hashlib.rst:804
#, fuzzy
msgid "NIST Recommendation for Password-Based Key Derivation."
msgstr "NIST 關於基於密碼的密鑰派生的建議。"
