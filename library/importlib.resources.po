# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-15 20:43+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../library/importlib.resources.rst:2
msgid ":mod:`importlib.resources` -- Resources"
msgstr ":mod:`importlib.resources` -- 資源"

#: ../../library/importlib.resources.rst:7
msgid "**Source code:** :source:`Lib/importlib/resources/__init__.py`"
msgstr "**原始碼：**\\ :source:`Lib/importlib/resources/__init__.py`"

#: ../../library/importlib.resources.rst:13
#, fuzzy
msgid ""
"This module leverages Python's import system to provide access to "
"*resources* within *packages*.  If you can import a package, you can access "
"resources within that package.  Resources can be opened or read, in either "
"binary or text mode."
msgstr ""
"該模組利用 Python 的導入系統提供對 *packages* 中的 *resources* 的訪問。如果可"
"以導入包，則可以訪問該包中的資源。可以二進位或文本模式打開或讀取資源。"

#: ../../library/importlib.resources.rst:18
#, fuzzy
msgid ""
"Resources are roughly akin to files inside directories, though it's "
"important to keep in mind that this is just a metaphor.  Resources and "
"packages **do not** have to exist as physical files and directories on the "
"file system: for example, a package and its resources can be imported from a "
"zip file using :py:mod:`zipimport`."
msgstr ""
"資源大致類似於目錄中的文件，但重要的是要記住這只是一個比喻。資源和包**不必**"
"作為文件系統上的物理文件和目錄存在：例如，可以使用 :py:mod:`zipimport` 從 "
"zip 文件導入包及其資源。"

#: ../../library/importlib.resources.rst:26
#, fuzzy
msgid ""
"This module provides functionality similar to `pkg_resources <https://"
"setuptools.readthedocs.io/en/latest/pkg_resources.html>`_ `Basic Resource "
"Access <https://setuptools.readthedocs.io/en/latest/pkg_resources.html#basic-"
"resource-access>`_ without the performance overhead of that package.  This "
"makes reading resources included in packages easier, with more stable and "
"consistent semantics."
msgstr ""
"此模組提供的功能類似於`pkg_resources <https://setuptools.readthedocs.io/en/"
"latest/pkg_resources.html>`_`基本資源訪問<https://setuptools.readthedocs.io/"
"en/latest/pkg_resources。 html#basic-resource-access>`_ "
"沒有該包的性能開銷。這使得閱讀包中包含的資源更容易，語義更穩定和一致。"

#: ../../library/importlib.resources.rst:34
#, fuzzy
msgid ""
"The standalone backport of this module provides more information on `using "
"importlib.resources <https://importlib-resources.readthedocs.io/en/latest/"
"using.html>`_ and `migrating from pkg_resources to importlib.resources "
"<https://importlib-resources.readthedocs.io/en/latest/migration.html>`_."
msgstr ""
"此模組的獨立反向移植提供了更多關於`使用 importlib.resources <https"
"://importlib-resources.readthedocs.io/en/latest/using.html>`_ 和`從 "
"pkg_resources 遷移到 importlib.resources <https: //importlib-resources."
"readthedocs.io/en/latest/migration.html>`_。"

#: ../../library/importlib.resources.rst:40
#, fuzzy
msgid ""
":class:`Loaders <importlib.abc.Loader>` that wish to support resource "
"reading should implement a ``get_resource_reader(fullname)`` method as "
"specified by :class:`importlib.resources.abc.ResourceReader`."
msgstr ""
":class:`Loaders <importlib.abc.Loader>` 希望支援資源讀取的應該實作 "
"``get_resource_reader(fullname)`` 方法，如 :class:`importlib.resources.abc."
"ResourceReader` 所指定。"

#: ../../library/importlib.resources.rst:46
#, fuzzy
msgid ""
"Whenever a function accepts a ``Package`` argument, you can pass in either "
"a :class:`module object <types.ModuleType>` or a module name as a string.  "
"You can only pass module objects whose ``__spec__."
"submodule_search_locations`` is not ``None``."
msgstr ""
"每當函式接受 ``Package`` 參數時，您可以傳入一個 :class:`module object <types."
"ModuleType>` 或一個模組名稱作為字串。您只能傳遞``__spec__."
"submodule_search_locations`` 不是``None`` 的模組物件。"

#: ../../library/importlib.resources.rst:51
#, fuzzy
msgid "The ``Package`` type is defined as ``Union[str, ModuleType]``."
msgstr "``Package`` 型別定義為 ``Union[str, ModuleType]``。"

#: ../../library/importlib.resources.rst:55
#, fuzzy
msgid ""
"Returns a :class:`~importlib.resources.abc.Traversable` object representing "
"the resource container for the package (think directory) and its resources "
"(think files). A Traversable may contain other containers (think "
"subdirectories)."
msgstr ""
"回傳一個 :class:`~importlib.resources.abc.Traversable` 物件，表示包（think "
"目錄）及其資源（think 文件）的資源容器。 Traversable "
"可能包含其他容器（想想子目錄）。"

#: ../../library/importlib.resources.rst:60
#, fuzzy
msgid ""
"*package* is either a name or a module object which conforms to the :data:"
"`Package` requirements."
msgstr "*package* 是符合 :data:`Package` 要求的名稱或模組物件。"

#: ../../library/importlib.resources.rst:67
#, fuzzy
msgid ""
"Given a :class:`~importlib.resources.abc.Traversable` object representing a "
"file, typically from :func:`importlib.resources.files`, return a context "
"manager for use in a :keyword:`with` statement. The context manager provides "
"a :class:`pathlib.Path` object."
msgstr ""
"給定一個代表文件的 :class:`~importlib.resources.abc.Traversable` 物件，"
"通常來自 :func:`importlib.resources.files`，回傳一個上下文管理器以用於 "
":keyword:`with` 語句。上下文管理器提供了一個 :class:`pathlib.Path` 物件。"

#: ../../library/importlib.resources.rst:72
#, fuzzy
msgid ""
"Exiting the context manager cleans up any temporary file created when the "
"resource was extracted from e.g. a zip file."
msgstr "退出上下文管理器會清除在從例如資源中提取資源時建立的任何臨時文件。一個壓縮文"
"件。"

#: ../../library/importlib.resources.rst:75
#, fuzzy
msgid ""
"Use ``as_file`` when the Traversable methods (``read_text``, etc) are "
"insufficient and an actual file on the file system is required."
msgstr "當 Traversable 方法（``read_text`` 等）不足並且需要文件系統上的實際文件時，"
"使用 ``as_file``。"

#: ../../library/importlib.resources.rst:82
msgid "Deprecated functions"
msgstr "已棄用函式"

#: ../../library/importlib.resources.rst:84
#, fuzzy
msgid ""
"An older, deprecated set of functions is still available, but is scheduled "
"for removal in a future version of Python. The main drawback of these "
"functions is that they do not support directories: they assume all resources "
"are located directly within a *package*."
msgstr ""
"一組舊的、已棄用的函式仍然可用，但計劃在未來的 Python 版本中刪除。這些函式的"
"主要缺點是它們不支援目錄：它們假定所有資源都直接位於*包*中。"

#: ../../library/importlib.resources.rst:91
#, fuzzy
msgid ""
"For *resource* arguments of the functions below, you can pass in the name of "
"a resource as a string or a :class:`path-like object <os.PathLike>`."
msgstr "對於以下函式的 *resource* 參數，您可以將資源名稱作為字串或類似路徑的物件 "
"<os.PathLike> 傳入。"

#: ../../library/importlib.resources.rst:95
#, fuzzy
msgid "The ``Resource`` type is defined as ``Union[str, os.PathLike]``."
msgstr "``Resource`` 型別定義為 ``Union[str, os.PathLike]``。"

#: ../../library/importlib.resources.rst:99
#, fuzzy
msgid "Open for binary reading the *resource* within *package*."
msgstr "打開以二進位讀取 *package* 中的 *resource*。"

#: ../../library/importlib.resources.rst:101
#, fuzzy
msgid ""
"*package* is either a name or a module object which conforms to the "
"``Package`` requirements.  *resource* is the name of the resource to open "
"within *package*; it may not contain path separators and it may not have sub-"
"resources (i.e. it cannot be a directory).  This function returns a ``typing."
"BinaryIO`` instance, a binary I/O stream open for reading."
msgstr ""
"*package* 是符合 ``Package`` 要求的名稱或模組物件。 *resource* 是要在 *package* "
"中打開的資源的名稱；它可能不包含路徑分隔符並且它可能沒有子資源（即它不能是目"
"錄）。此函式回傳一個 ``typing.BinaryIO`` 實例，一個打開以供讀取的二進位 I/O "
"流。"

#: ../../library/importlib.resources.rst:109
#: ../../library/importlib.resources.rst:130
#: ../../library/importlib.resources.rst:148
#: ../../library/importlib.resources.rst:167
#: ../../library/importlib.resources.rst:203
#: ../../library/importlib.resources.rst:219
#, fuzzy
msgid "Calls to this function can be replaced by::"
msgstr "對此函式的呼叫可以替換為："

#: ../../library/importlib.resources.rst:116
#, fuzzy
msgid ""
"Open for text reading the *resource* within *package*.  By default, the "
"resource is opened for reading as UTF-8."
msgstr "打開文本閱讀 *package* 中的 *resource*。預設情況下，資源以 UTF-8 "
"格式打開以供讀取。"

#: ../../library/importlib.resources.rst:119
#, fuzzy
msgid ""
"*package* is either a name or a module object which conforms to the "
"``Package`` requirements.  *resource* is the name of the resource to open "
"within *package*; it may not contain path separators and it may not have sub-"
"resources (i.e. it cannot be a directory).  *encoding* and *errors* have the "
"same meaning as with built-in :func:`open`."
msgstr ""
"*package* 是符合 ``Package`` 要求的名稱或模組物件。 *resource* 是要在 *package* "
"中打開的資源的名稱；它可能不包含路徑分隔符並且它可能沒有子資源（即它不能是目"
"錄）。 *encoding* 和 *errors* 與內建 :func:`open` 的含義相同。"

#: ../../library/importlib.resources.rst:125
#, fuzzy
msgid ""
"This function returns a ``typing.TextIO`` instance, a text I/O stream open "
"for reading."
msgstr "此函式回傳一個 ``typing.TextIO`` 實例，一個打開以供讀取的文本 I/O 流。"

#: ../../library/importlib.resources.rst:137
#, fuzzy
msgid ""
"Read and return the contents of the *resource* within *package* as ``bytes``."
msgstr "讀取 *package* 中 *resource* 的內容並將其作為 ``bytes`` 回傳。"

#: ../../library/importlib.resources.rst:140
#, fuzzy
msgid ""
"*package* is either a name or a module object which conforms to the "
"``Package`` requirements.  *resource* is the name of the resource to open "
"within *package*; it may not contain path separators and it may not have sub-"
"resources (i.e. it cannot be a directory).  This function returns the "
"contents of the resource as :class:`bytes`."
msgstr ""
"*package* 是符合 ``Package`` 要求的名稱或模組物件。 *resource* 是要在 *package* "
"中打開的資源的名稱；它可能不包含路徑分隔符並且它可能沒有子資源（即它不能是目"
"錄）。此函式以 :class:`bytes` 的形式回傳資源的內容。"

#: ../../library/importlib.resources.rst:155
#, fuzzy
msgid ""
"Read and return the contents of *resource* within *package* as a ``str``. By "
"default, the contents are read as strict UTF-8."
msgstr "讀取 *package* 中 *resource* 的內容並將其作為 ``str`` 回傳。預設情況下，"
"內容被讀取為嚴格的 UTF-8。"

#: ../../library/importlib.resources.rst:158
#, fuzzy
msgid ""
"*package* is either a name or a module object which conforms to the "
"``Package`` requirements.  *resource* is the name of the resource to open "
"within *package*; it may not contain path separators and it may not have sub-"
"resources (i.e. it cannot be a directory).  *encoding* and *errors* have the "
"same meaning as with built-in :func:`open`.  This function returns the "
"contents of the resource as :class:`str`."
msgstr ""
"*package* 是符合 ``Package`` 要求的名稱或模組物件。 *resource* 是要在 *package* "
"中打開的資源的名稱；它可能不包含路徑分隔符並且它可能沒有子資源（即它不能是目"
"錄）。 *encoding* 和 *errors* 與內建 :func:`open` 的含義相同。"
"此函式將資源的內容回傳為 :class:`str`。"

#: ../../library/importlib.resources.rst:174
#, fuzzy
msgid ""
"Return the path to the *resource* as an actual file system path.  This "
"function returns a context manager for use in a :keyword:`with` statement. "
"The context manager provides a :class:`pathlib.Path` object."
msgstr ""
"將 *resource* 的路徑作為實際文件系統路徑回傳。"
"此函式回傳一個上下文管理器以用於 :keyword:`with` 語句。"
"上下文管理器提供了一個 :class:`pathlib.Path` 物件。"

#: ../../library/importlib.resources.rst:178
#, fuzzy
msgid ""
"Exiting the context manager cleans up any temporary file created when the "
"resource needs to be extracted from e.g. a zip file."
msgstr "退出上下文管理器會清除在需要從中提取資源時建立的任何臨時文件，例如一個壓縮文"
"件。"

#: ../../library/importlib.resources.rst:181
#, fuzzy
msgid ""
"*package* is either a name or a module object which conforms to the "
"``Package`` requirements.  *resource* is the name of the resource to open "
"within *package*; it may not contain path separators and it may not have sub-"
"resources (i.e. it cannot be a directory)."
msgstr ""
"*package* 是符合 ``Package`` 要求的名稱或模組物件。 *resource* 是要在 *package* "
"中打開的資源的名稱；它可能不包含路徑分隔符並且它可能沒有子資源（即它不能是目"
"錄）。"

#: ../../library/importlib.resources.rst:188
#, fuzzy
msgid "Calls to this function can be replaced using :func:`as_file`::"
msgstr "可以使用 :func:`as_file`:: 替換對該函式的呼叫："

#: ../../library/importlib.resources.rst:195
#, fuzzy
msgid ""
"Return ``True`` if there is a resource named *name* in the package, "
"otherwise ``False``. This function does not consider directories to be "
"resources. *package* is either a name or a module object which conforms to "
"the ``Package`` requirements."
msgstr ""
"如果包中有名為 *name* "
"的資源，則回傳 ``True``，否則回傳 ``False``。此函式不將目錄視為資源。 *package* "
"是符合 ``Package`` 要求的名稱或模組物件。"

#: ../../library/importlib.resources.rst:210
#, fuzzy
msgid ""
"Return an iterable over the named items within the package.  The iterable "
"returns :class:`str` resources (e.g. files) and non-resources (e.g. "
"directories).  The iterable does not recurse into subdirectories."
msgstr "回傳包內命名項目的疊代。可疊代回傳 :class:`str` "
"資源（例如文件）和非資源（例如目錄）。可疊代對像不會遞迴到子目錄中。"

#: ../../library/importlib.resources.rst:214
#, fuzzy
msgid ""
"*package* is either a name or a module object which conforms to the "
"``Package`` requirements."
msgstr "*package* 是符合 ``Package`` 要求的名稱或模組物件。"
