# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-20 18:08+0800\n"
"PO-Revision-Date: 2018-05-23 16:13+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/trace.rst:2
#, fuzzy
msgid ":mod:`trace` --- Trace or track Python statement execution"
msgstr ":mod:`trace` --- 跟踪或跟踪 Python 語句的執行"

#: ../../library/trace.rst:7
msgid "**Source code:** :source:`Lib/trace.py`"
msgstr "**原始碼：**\\ :source:`Lib/trace.py`"

#: ../../library/trace.rst:11
#, fuzzy
msgid ""
"The :mod:`trace` module allows you to trace program execution, generate "
"annotated statement coverage listings, print caller/callee relationships and "
"list functions executed during a program run.  It can be used in another "
"program or from the command line."
msgstr ""
":mod:`trace` 模組允許您跟踪程式執行、生成帶註釋的語句覆蓋列表、印出呼叫者/被"
"呼叫者關係以及在程式運行期間執行的列表函式。它可以在另一個程式或命令列中使用"
"。"

#: ../../library/trace.rst:19
msgid "`Coverage.py <https://coverage.readthedocs.io/>`_"
msgstr "`Coverage.py <https://coverage.readthedocs.io/>`_"

#: ../../library/trace.rst:19
#, fuzzy
msgid ""
"A popular third-party coverage tool that provides HTML output along with "
"advanced features such as branch coverage."
msgstr "一種流行的第三方覆蓋工具，提供 HTML 輸出以及分支覆蓋等高階功能。"

#: ../../library/trace.rst:25
#, fuzzy
msgid "Command-Line Usage"
msgstr "命令列用法"

#: ../../library/trace.rst:27
#, fuzzy
msgid ""
"The :mod:`trace` module can be invoked from the command line.  It can be as "
"simple as ::"
msgstr ":mod:`trace` 模組可以從命令列呼叫。它可以像 :: 一樣簡單"

#: ../../library/trace.rst:32
#, fuzzy
msgid ""
"The above will execute :file:`somefile.py` and generate annotated listings "
"of all Python modules imported during the execution into the current "
"directory."
msgstr "上面的程式碼將執行 :file:`somefile.py` "
"並生成在執行期間導入到當前目錄中的所有 Python 模組的註釋列表。"

#: ../../library/trace.rst:39
#, fuzzy
msgid "Display usage and exit."
msgstr "顯示用法並退出。"

#: ../../library/trace.rst:43
#, fuzzy
msgid "Display the version of the module and exit."
msgstr "顯示模組的版本並退出。"

#: ../../library/trace.rst:45
#, fuzzy
msgid "Added ``--module`` option that allows to run an executable module."
msgstr "新增了允許運行可執行模組的 ``--module`` 選項。"

#: ../../library/trace.rst:49
#, fuzzy
msgid "Main options"
msgstr "主要選項"

#: ../../library/trace.rst:51
#, fuzzy
msgid ""
"At least one of the following options must be specified when invoking :mod:"
"`trace`.  The :option:`--listfuncs <-l>` option is mutually exclusive with "
"the :option:`--trace <-t>` and :option:`--count <-c>` options. When :option:"
"`--listfuncs <-l>` is provided, neither :option:`--count <-c>` nor :option:"
"`--trace <-t>` are accepted, and vice versa."
msgstr ""
"呼叫 :mod:`trace` 時必須至少指定以下選項之一。 :option:`--listfuncs <-l>` "
"選項與 :option:`--trace <-t>` 和 :option:`--count <-c>` 選項互斥。當 "
":option:`--listfuncs <-l>` 被提供時，:option:`--count <-c>` 和 :option:`--"
"trace <-t>` 都不被接受，反之亦然。"

#: ../../library/trace.rst:61
#, fuzzy
msgid ""
"Produce a set of annotated listing files upon program completion that shows "
"how many times each statement was executed.  See also :option:`--coverdir <-"
"C>`, :option:`--file <-f>` and :option:`--no-report <-R>` below."
msgstr ""
"在程式完成時生成一組帶註釋的列表文件，顯示每個語句執行了多少次。另請參見下面"
"的 :option:`--coverdir <-C>`、 :option:`--file <-f>` 和 :option:`--no-report "
"<-R>`。"

#: ../../library/trace.rst:68
#, fuzzy
msgid "Display lines as they are executed."
msgstr "在執行時顯示行。"

#: ../../library/trace.rst:72
#, fuzzy
msgid "Display the functions executed by running the program."
msgstr "顯示運行程式所執行的功能。"

#: ../../library/trace.rst:76
#, fuzzy
msgid ""
"Produce an annotated list from an earlier program run that used the :option:"
"`--count <-c>` and :option:`--file <-f>` option.  This does not execute any "
"code."
msgstr ""
"從使用 :option:`--count <-c>` 和 :option:`--file <-f>` "
"選項的早期程式運行中生成帶註釋的列表。這不會執行任何程式碼。"

#: ../../library/trace.rst:82
#, fuzzy
msgid "Display the calling relationships exposed by running the program."
msgstr "顯示程式運行暴露的呼叫關係。"

#: ../../library/trace.rst:85
#, fuzzy
msgid "Modifiers"
msgstr "修飾符"

#: ../../library/trace.rst:91
#, fuzzy
msgid ""
"Name of a file to accumulate counts over several tracing runs.  Should be "
"used with the :option:`--count <-c>` option."
msgstr "用於累積多次跟踪運行計數的文件的名稱。應與 :option:`--count <-c>` "
"選項一起使用。"

#: ../../library/trace.rst:96
#, fuzzy
msgid ""
"Directory where the report files go.  The coverage report for ``package."
"module`` is written to file :file:`{dir}/{package}/{module}.cover`."
msgstr ""
"報告文件所在的目錄。 ``package.module`` "
"的覆蓋率報告被寫入文件 :file:`{dir}/{package}/{module}.cover`。"

#: ../../library/trace.rst:101
#, fuzzy
msgid ""
"When generating annotated listings, mark lines which were not executed with "
"``>>>>>>``."
msgstr "在生成帶註釋的列表時，用``>>>>>>``標記未執行的行。"

#: ../../library/trace.rst:106
#, fuzzy
msgid ""
"When using :option:`--count <-c>` or :option:`--report <-r>`, write a brief "
"summary to stdout for each file processed."
msgstr ""
"使用 :option:`--count <-c>` 或 :option:`--report <-r>` "
"時，為每個處理的文件寫一個簡短的摘要到標準輸出。"

#: ../../library/trace.rst:111
#, fuzzy
msgid ""
"Do not generate annotated listings.  This is useful if you intend to make "
"several runs with :option:`--count <-c>`, and then produce a single set of "
"annotated listings at the end."
msgstr "不要生成帶註釋的列表。如果您打算使用 :option:`--count <-c>` "
"進行多次運行，然後在最後生成一組帶註釋的列表，這將很有用。"

#: ../../library/trace.rst:117
#, fuzzy
msgid ""
"Prefix each line with the time since the program started.  Only used while "
"tracing."
msgstr "在每一行前加上自程式啟動以來的時間。僅在跟踪時使用。"

#: ../../library/trace.rst:121
#, fuzzy
msgid "Filters"
msgstr "過濾器"

#: ../../library/trace.rst:123
#, fuzzy
msgid "These options may be repeated multiple times."
msgstr "這些選項可能會重複多次。"

#: ../../library/trace.rst:129
#, fuzzy
msgid ""
"Ignore each of the given module names and its submodules (if it is a "
"package).  The argument can be a list of names separated by a comma."
msgstr "忽略每個給定的模組名稱及其子模組（如果它是一個包）。參數可以是以逗號分隔的名"
"稱列表。"

#: ../../library/trace.rst:134
#, fuzzy
msgid ""
"Ignore all modules and packages in the named directory and subdirectories. "
"The argument can be a list of directories separated by :data:`os.pathsep`."
msgstr "忽略指定目錄和子目錄中的所有模組和包。參數可以是由 os.pathsep "
"分隔的目錄列表。"

#: ../../library/trace.rst:140
#, fuzzy
msgid "Programmatic Interface"
msgstr "編程介面"

#: ../../library/trace.rst:145
#, fuzzy
msgid ""
"Create an object to trace execution of a single statement or expression.  "
"All parameters are optional.  *count* enables counting of line numbers.  "
"*trace* enables line execution tracing.  *countfuncs* enables listing of the "
"functions called during the run.  *countcallers* enables call relationship "
"tracking.  *ignoremods* is a list of modules or packages to ignore. "
"*ignoredirs* is a list of directories whose modules or packages should be "
"ignored.  *infile* is the name of the file from which to read stored count "
"information.  *outfile* is the name of the file in which to write updated "
"count information.  *timing* enables a timestamp relative to when tracing "
"was started to be displayed."
msgstr ""
"建立一個物件來跟踪單個語句或表達式的執行。所有參數都是可選的。 *count* "
"啟用行號計數。 *trace* 啟用行執行跟踪。 *countfuncs* "
"可以列出運行期間呼叫的函式。 *countcallers* 啟用呼叫關係跟踪。 *ignoremods* "
"是要忽略的模組或包的列表。 *ignoredirs* "
"是一個目錄列表，其模組或包應該被忽略。 *infile* "
"是要從中讀取儲存的計數資訊的文件的名稱。 *outfile* "
"是寫入更新計數資訊的文件的名稱。 *timing* "
"啟用相對於開始顯示跟踪時間的時間戳。"

#: ../../library/trace.rst:158
#, fuzzy
msgid ""
"Execute the command and gather statistics from the execution with the "
"current tracing parameters.  *cmd* must be a string or code object, suitable "
"for passing into :func:`exec`."
msgstr "執行命令並使用當前跟踪參數從執行中收集統計資訊。 *cmd* "
"必須是字串或程式碼物件，適合傳遞到 :func:`exec`。"

#: ../../library/trace.rst:164
#, fuzzy
msgid ""
"Execute the command and gather statistics from the execution with the "
"current tracing parameters, in the defined global and local environments.  "
"If not defined, *globals* and *locals* default to empty dictionaries."
msgstr "在定義的全局和本地環境中使用當前跟踪參數執行命令並從執行中收集統計資訊。如果"
"未定義，*globals* 和 *locals* 預設為空字典。"

#: ../../library/trace.rst:171
#, fuzzy
msgid ""
"Call *func* with the given arguments under control of the :class:`Trace` "
"object with the current tracing parameters."
msgstr "在具有當前跟踪參數的 Trace 物件的控制下，使用給定參數呼叫 *func*。"

#: ../../library/trace.rst:176
#, fuzzy
msgid ""
"Return a :class:`CoverageResults` object that contains the cumulative "
"results of all previous calls to ``run``, ``runctx`` and ``runfunc`` for the "
"given :class:`Trace` instance.  Does not reset the accumulated trace results."
msgstr ""
"回傳一個 CoverageResults 物件，該物件包含對給定 Trace 實例的所有先前呼叫 "
"``run``、``runctx`` 和 ``runfunc`` 的累積結果。不重置累積的跟踪結果。"

#: ../../library/trace.rst:183
#, fuzzy
msgid ""
"A container for coverage results, created by :meth:`Trace.results`.  Should "
"not be created directly by the user."
msgstr "覆蓋結果的容器，由 :meth:`Trace.results` 建立。不應由使用者直接建立。"

#: ../../library/trace.rst:188
#, fuzzy
msgid "Merge in data from another :class:`CoverageResults` object."
msgstr "合併來自另一個 CoverageResults 物件的資料。"

#: ../../library/trace.rst:192
#, fuzzy
msgid ""
"Write coverage results.  Set *show_missing* to show lines that had no hits.  "
"Set *summary* to include in the output the coverage summary per module.  "
"*coverdir* specifies the directory into which the coverage result files will "
"be output.  If ``None``, the results for each source file are placed in its "
"directory."
msgstr ""
"寫入覆蓋率結果。設定 *show_missing* 以顯示沒有命中的行。設定 *summary* "
"以在輸出中包含每個模組的覆蓋率摘要。 *coverdir* "
"指定覆蓋結果文件將輸出到的目錄。如果 ``None`` ，每個源文件的結果都放在它的目錄中。"

#: ../../library/trace.rst:198
#, fuzzy
msgid "A simple example demonstrating the use of the programmatic interface::"
msgstr "一個簡單的例子演示了編程介面的使用："
