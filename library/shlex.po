# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-26 16:47+0000\n"
"PO-Revision-Date: 2018-05-23 16:09+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.2.2\n"

#: ../../library/shlex.rst:2
msgid ":mod:`shlex` --- Simple lexical analysis"
msgstr ":mod:`shlex` --- 簡單的詞法分析"

#: ../../library/shlex.rst:12
msgid "**Source code:** :source:`Lib/shlex.py`"
msgstr "**原始碼：**\\ :source:`Lib/shlex.py`"

#: ../../library/shlex.rst:16
#, fuzzy
msgid ""
"The :class:`~shlex.shlex` class makes it easy to write lexical analyzers for "
"simple syntaxes resembling that of the Unix shell.  This will often be "
"useful for writing minilanguages, (for example, in run control files for "
"Python applications) or for parsing quoted strings."
msgstr ""
":class:`~shlex.shlex` 類使得為類似於 Unix shell 的簡單語法編寫詞法分析器變得"
"容易。這對於編寫微型語言（例如，在 Python 應用程式的運行控制文件中）或剖析帶"
"引號的字串通常很有用。"

#: ../../library/shlex.rst:21
#, fuzzy
msgid "The :mod:`shlex` module defines the following functions:"
msgstr ":mod:`shlex` 模組定義了以下函式："

#: ../../library/shlex.rst:26
#, fuzzy
msgid ""
"Split the string *s* using shell-like syntax. If *comments* is :const:"
"`False` (the default), the parsing of comments in the given string will be "
"disabled (setting the :attr:`~shlex.commenters` attribute of the :class:"
"`~shlex.shlex` instance to the empty string).  This function operates in "
"POSIX mode by default, but uses non-POSIX mode if the *posix* argument is "
"false."
msgstr ""
"使用類似 shell 的語法拆分字串 *s*。如果 *comments* 是 :const:`False`（預設"
"值），將禁用給定字串中註釋的剖析（設定 :class:`~shlex.shlex 的 :attr:`~shlex."
"commenters` 屬性` 實例到空字串）。預設情況下，此函式在 POSIX 模式下運行，但如"
"果 *posix* 參數為 false，則使用非 POSIX 模式。"

#: ../../library/shlex.rst:35
#, fuzzy
msgid ""
"Since the :func:`split` function instantiates a :class:`~shlex.shlex` "
"instance, passing ``None`` for *s* will read the string to split from "
"standard input."
msgstr ""
"由於 :func:`split` 函式實例化一個 :class:`~shlex.shlex` 實例，為 *s* 傳遞 "
"``None`` 將從標準輸入中讀取要拆分的字串。"

#: ../../library/shlex.rst:39
#, fuzzy
msgid ""
"Passing ``None`` for *s* will raise an exception in future Python versions."
msgstr "為 *s* 傳遞 ``None`` 將在未來的 Python 版本中引發例外。"

#: ../../library/shlex.rst:45
#, fuzzy
msgid ""
"Concatenate the tokens of the list *split_command* and return a string. This "
"function is the inverse of :func:`split`."
msgstr ""
"連接列表 *split_command* 的標記並回傳一個字串。這個函式是 :func:`split` 的逆"
"函式。"

#: ../../library/shlex.rst:52
#, fuzzy
msgid ""
"The returned value is shell-escaped to protect against injection "
"vulnerabilities (see :func:`quote`)."
msgstr "回傳值經過 shell 轉義以防止注入漏洞（參見 :func:`quote`）。"

#: ../../library/shlex.rst:60
#, fuzzy
msgid ""
"Return a shell-escaped version of the string *s*.  The returned value is a "
"string that can safely be used as one token in a shell command line, for "
"cases where you cannot use a list."
msgstr ""
"回傳字串 *s* 的 shell 轉義版本。回傳值是一個字串，在您不能使用列表的情況下，"
"可以安全地用作 shell 命令列中的一個標記。"

#: ../../library/shlex.rst:68
#, fuzzy
msgid "The ``shlex`` module is **only designed for Unix shells**."
msgstr "``shlex`` 模組**只為 Unix shells 設計**。"

#: ../../library/shlex.rst:70
#, fuzzy
msgid ""
"The :func:`quote` function is not guaranteed to be correct on non-POSIX "
"compliant shells or shells from other operating systems such as Windows. "
"Executing commands quoted by this module on such shells can open up the "
"possibility of a command injection vulnerability."
msgstr ""
"不保證 :func:`quote` 函式在非 POSIX 相容的 shell 或來自其他操作系統（例如 "
"Windows）的 shell 上是正確的。在此類 shell 上執行此模組引用的命令可能會打開命"
"令注入漏洞的可能性。"

#: ../../library/shlex.rst:75
#, fuzzy
msgid ""
"Consider using functions that pass command arguments with lists such as :"
"func:`subprocess.run` with ``shell=False``."
msgstr ""
"考慮使用通過列表傳遞命令參數的函式，例如 :func:`subprocess.run` 和 "
"``shell=False``。"

#: ../../library/shlex.rst:78
#, fuzzy
msgid "This idiom would be unsafe:"
msgstr "這個成語是不安全的："

#: ../../library/shlex.rst:85
#, fuzzy
msgid ":func:`quote` lets you plug the security hole:"
msgstr ":func:`quote` 讓你堵上安全漏洞："

#: ../../library/shlex.rst:95
#, fuzzy
msgid "The quoting is compatible with UNIX shells and with :func:`split`:"
msgstr "引用與 UNIX shell 和 :func:`split` 相容："

#: ../../library/shlex.rst:107
#, fuzzy
msgid "The :mod:`shlex` module defines the following class:"
msgstr ":mod:`shlex` 模組定義了以下類："

#: ../../library/shlex.rst:112
#, fuzzy
msgid ""
"A :class:`~shlex.shlex` instance or subclass instance is a lexical analyzer "
"object.  The initialization argument, if present, specifies where to read "
"characters from.  It must be a file-/stream-like object with :meth:`~io."
"TextIOBase.read` and :meth:`~io.TextIOBase.readline` methods, or a string.  "
"If no argument is given, input will be taken from ``sys.stdin``. The second "
"optional argument is a filename string, which sets the initial value of the :"
"attr:`~shlex.infile` attribute.  If the *instream* argument is omitted or "
"equal to ``sys.stdin``, this second argument defaults to \"stdin\".  The "
"*posix* argument defines the operational mode: when *posix* is not true "
"(default), the :class:`~shlex.shlex` instance will operate in compatibility "
"mode.  When operating in POSIX mode, :class:`~shlex.shlex` will try to be as "
"close as possible to the POSIX shell parsing rules.  The *punctuation_chars* "
"argument provides a way to make the behaviour even closer to how real shells "
"parse.  This can take a number of values: the default value, ``False``, "
"preserves the behaviour seen under Python 3.5 and earlier.  If set to "
"``True``, then parsing of the characters ``();<>|&`` is changed: any run of "
"these characters (considered punctuation characters) is returned as a single "
"token.  If set to a non-empty string of characters, those characters will be "
"used as the punctuation characters.  Any characters in the :attr:`wordchars` "
"attribute that appear in *punctuation_chars* will be removed from :attr:"
"`wordchars`.  See :ref:`improved-shell-compatibility` for more information. "
"*punctuation_chars* can be set only upon :class:`~shlex.shlex` instance "
"creation and can't be modified later."
msgstr ""
":class:`~shlex.shlex` 實例或子類別實例是詞法分析器物件。初始化參數（如果存"
"在）指定從何處讀取字元。它必須是具有 :meth:`~io.TextIOBase.read` 和 :meth:"
"`~io.TextIOBase.readline` 方法的類文件/流物件，或字串。如果沒有給出參數，輸入"
"將從 sys.stdin 中獲取。第二個可選參數是文件名字串，它設定 :attr:`~shlex."
"infile` 屬性的初始值。如果 *instream* 參數被省略或等於“sys.stdin”，則第二個參"
"數預設為 ``stdin``。 *posix* 參數定義操作模式：當 *posix* 不是 true（預設）"
"時，:class:`~shlex.shlex` 實例將在相容模式下操作。在 POSIX 模式下運行時，:"
"class:`~shlex.shlex` 將嘗試盡可能接近 POSIX shell 剖析規則。 "
"*punctuation_chars* 參數提供了一種使行為更接近真實 shell 剖析方式的方法。這可"
"以採用多個值：預設值 ``False``保留在 Python 3.5 及更早版本下看到的行為。如果"
"設定為 ``True``，則字元 ``();<>|&`` 的剖析會發生變化：這些字元（被視為標點符"
"號）的任何運行都將作為單個標記回傳。如果設定為非空字串，則這些字元將用作標點"
"字元。 :attr:`wordchars` 屬性中出現在 *punctuation_chars* 中的任何字元都將"
"從 :attr:`wordchars` 中刪除。有關更多資訊，請參閱 :ref:`改進的外殼相容性`。 "
"*punctuation_chars* 只能在 :class:`~shlex.shlex` 實例建立時設定，以後不能修"
"改。"

#: ../../library/shlex.rst:137
msgid "The *punctuation_chars* parameter was added."
msgstr "新增 *punctuation_chars* 參數。"

#: ../../library/shlex.rst:142
msgid "Module :mod:`configparser`"
msgstr ":mod:`configparser` 模組"

#: ../../library/shlex.rst:143
msgid ""
"Parser for configuration files similar to the Windows :file:`.ini` files."
msgstr "類似於 Windows :file:`.ini` 檔案的配置檔案剖析器。"

#: ../../library/shlex.rst:149
msgid "shlex Objects"
msgstr "shlex 物件"

#: ../../library/shlex.rst:151
msgid "A :class:`~shlex.shlex` instance has the following methods:"
msgstr ":class:`~shlex.shlex` 實例具有以下方法："

#: ../../library/shlex.rst:156
#, fuzzy
msgid ""
"Return a token.  If tokens have been stacked using :meth:`push_token`, pop a "
"token off the stack.  Otherwise, read one from the input stream.  If reading "
"encounters an immediate end-of-file, :attr:`eof` is returned (the empty "
"string (``''``) in non-POSIX mode, and ``None`` in POSIX mode)."
msgstr ""
"回傳一個令牌。如果已使用 push_token 堆疊令牌，則從堆疊中彈出一個令牌。否則，"
"從輸入流中讀取一個。如果讀取立即遇到文件結尾，則回傳 :attr:`eof`（非 POSIX 模"
"式下為空字串 (``''``)，POSIX 模式下為``None``）。"

#: ../../library/shlex.rst:164
#, fuzzy
msgid "Push the argument onto the token stack."
msgstr "將參數壓入令牌堆疊。"

#: ../../library/shlex.rst:169
#, fuzzy
msgid ""
"Read a raw token.  Ignore the pushback stack, and do not interpret source "
"requests.  (This is not ordinarily a useful entry point, and is documented "
"here only for the sake of completeness.)"
msgstr ""
"讀取原始令牌。忽略推回堆疊，並且不解釋源請求。 （這通常不是一個有用的入口點，"
"在這裡記錄只是為了完整性。）"

#: ../../library/shlex.rst:176
#, fuzzy
msgid ""
"When :class:`~shlex.shlex` detects a source request (see :attr:`source` "
"below) this method is given the following token as argument, and expected to "
"return a tuple consisting of a filename and an open file-like object."
msgstr ""
"當 :class:`~shlex.shlex` 檢測到源請求時（請參閱下面的 :attr:`source` ），此方"
"法被賦予以下標記作為參數，並期望回傳一個由文件名和打開的文件組成的元組目的。"

#: ../../library/shlex.rst:180
#, fuzzy
msgid ""
"Normally, this method first strips any quotes off the argument.  If the "
"result is an absolute pathname, or there was no previous source request in "
"effect, or the previous source was a stream (such as ``sys.stdin``), the "
"result is left alone.  Otherwise, if the result is a relative pathname, the "
"directory part of the name of the file immediately before it on the source "
"inclusion stack is prepended (this behavior is like the way the C "
"preprocessor handles ``#include \"file.h\"``)."
msgstr ""
"通常，此方法首先去除參數中的所有引號。如果結果是絕對路徑名，或者沒有有效的先"
"前源請求，或者先前的源是流（例如 ``sys.stdin``），則結果保持不變。否則，如果"
"結果是相對路徑名，則在源包含堆疊上緊接在它之前的文件名的目錄部分被新增到前面"
"（這種行為類似於 C 預處理器處理``#include \"file.h\"` 的方式`）。"

#: ../../library/shlex.rst:188
#, fuzzy
msgid ""
"The result of the manipulations is treated as a filename, and returned as "
"the first component of the tuple, with :func:`open` called on it to yield "
"the second component. (Note: this is the reverse of the order of arguments "
"in instance initialization!)"
msgstr ""
"操作的結果被視為文件名，並作為元組的第一個組件回傳，呼叫 :func:`open` 以產生"
"第二個組件。 （注意：這與實例初始化中參數的順序相反！）"

#: ../../library/shlex.rst:193
#, fuzzy
msgid ""
"This hook is exposed so that you can use it to implement directory search "
"paths, addition of file extensions, and other namespace hacks. There is no "
"corresponding 'close' hook, but a shlex instance will call the :meth:`~io."
"IOBase.close` method of the sourced input stream when it returns EOF."
msgstr ""
"此掛鉤已公開，因此您可以使用它來實作目錄搜索路徑、新增文件擴充名和其他命名空"
"間技巧。沒有相應的“關閉”掛鉤，但 shlex 實例在回傳 EOF 時將呼叫源輸入流的 :"
"meth:`~io.IOBase.close` 方法。"

#: ../../library/shlex.rst:199
#, fuzzy
msgid ""
"For more explicit control of source stacking, use the :meth:`push_source` "
"and :meth:`pop_source` methods."
msgstr ""
"要更明確地控制源堆疊，請使用 :meth:`push_source` 和 :meth:`pop_source` 方法。"

#: ../../library/shlex.rst:205
#, fuzzy
msgid ""
"Push an input source stream onto the input stack.  If the filename argument "
"is specified it will later be available for use in error messages.  This is "
"the same method used internally by the :meth:`sourcehook` method."
msgstr ""
"將輸入源流推送到輸入堆疊。如果指定了文件名參數，它將在以後可用於錯誤消息中。"
"這與 :meth:`sourcehook` 方法內部使用的方法相同。"

#: ../../library/shlex.rst:212
#, fuzzy
msgid ""
"Pop the last-pushed input source from the input stack. This is the same "
"method used internally when the lexer reaches EOF on a stacked input stream."
msgstr ""
"從輸入堆疊中彈出最後壓入的輸入源。當詞法分析器在堆疊輸入流上到達 EOF 時，這與"
"內部使用的方法相同。"

#: ../../library/shlex.rst:218
#, fuzzy
msgid ""
"This method generates an error message leader in the format of a Unix C "
"compiler error label; the format is ``'\"%s\", line %d: '``, where the "
"``%s`` is replaced with the name of the current source file and the ``%d`` "
"with the current input line number (the optional arguments can be used to "
"override these)."
msgstr ""
"此方法以 Unix C 編譯器錯誤標籤的格式生成錯誤消息前導；格式為 ``\\'\"%s\", "
"line %d: \\'``，其中 ``%s`` 替換為當前源文件的名稱，而 ``%d`` 替換為當前輸入"
"行數字（可選參數可用於覆蓋這些）。"

#: ../../library/shlex.rst:223
#, fuzzy
msgid ""
"This convenience is provided to encourage :mod:`shlex` users to generate "
"error messages in the standard, parseable format understood by Emacs and "
"other Unix tools."
msgstr ""
"提供這種便利是為了鼓勵 :mod:`shlex` 使用者以 Emacs 和其他 Unix 工具可以理解的"
"標準、可剖析格式生成錯誤消息。"

#: ../../library/shlex.rst:227
#, fuzzy
msgid ""
"Instances of :class:`~shlex.shlex` subclasses have some public instance "
"variables which either control lexical analysis or can be used for debugging:"
msgstr ""
":class:`~shlex.shlex` 子類別的實例有一些公開實例變數，這些變數可以控制詞法分"
"析或可用於除錯："

#: ../../library/shlex.rst:233
#, fuzzy
msgid ""
"The string of characters that are recognized as comment beginners. All "
"characters from the comment beginner to end of line are ignored. Includes "
"just ``'#'`` by default."
msgstr ""
"被識別為評論初學者的字串。從註釋開頭到行尾的所有字元都將被忽略。預設情況下只"
"包括``'#'``。"

#: ../../library/shlex.rst:240
#, fuzzy
msgid ""
"The string of characters that will accumulate into multi-character tokens.  "
"By default, includes all ASCII alphanumerics and underscore.  In POSIX mode, "
"the accented characters in the Latin-1 set are also included.  If :attr:"
"`punctuation_chars` is not empty, the characters ``~-./*?=``, which can "
"appear in filename specifications and command line parameters, will also be "
"included in this attribute, and any characters which appear in "
"``punctuation_chars`` will be removed from ``wordchars`` if they are present "
"there. If :attr:`whitespace_split` is set to ``True``, this will have no "
"effect."
msgstr ""
"將累積成多字元標記的字串。預設情況下，包括所有 ASCII 字母數字和底線。在 "
"POSIX 模式下，還包括 Latin-1 集中的重音字元。如果 :attr:`punctuation_chars` "
"不為空，則可以出現在文件名規範和命令列參數中的字元 ``~-./*?=`` 也將包含在此屬"
"性中，並且出現在``punctuation_chars`` 將從 ``wordchars`` 中移除（如果它們存"
"在）。如果 :attr:`whitespace_split` 設定為 ``True``，這將無效。"

#: ../../library/shlex.rst:253
#, fuzzy
msgid ""
"Characters that will be considered whitespace and skipped.  Whitespace "
"bounds tokens.  By default, includes space, tab, linefeed and carriage-"
"return."
msgstr ""
"將被視為空格並被跳過的字元。空格限制標記。預設情況下，包括空格、製表符、換行"
"符和回車符。"

#: ../../library/shlex.rst:259
#, fuzzy
msgid ""
"Characters that will be considered as escape. This will be only used in "
"POSIX mode, and includes just ``'\\'`` by default."
msgstr ""
"將被視為轉義的字元。這將僅在 POSIX 模式下使用，預設情況下僅包含 ``'\\'``。"

#: ../../library/shlex.rst:265
#, fuzzy
msgid ""
"Characters that will be considered string quotes.  The token accumulates "
"until the same quote is encountered again (thus, different quote types "
"protect each other as in the shell.)  By default, includes ASCII single and "
"double quotes."
msgstr ""
"將被視為字串引號的字元。令牌累積直到再次遇到相同的引號（因此，不同的引號型別"
"在 shell 中相互保護。）預設情況下，包括 ASCII 單引號和雙引號。"

#: ../../library/shlex.rst:272
#, fuzzy
msgid ""
"Characters in :attr:`quotes` that will interpret escape characters defined "
"in :attr:`escape`.  This is only used in POSIX mode, and includes just "
"``'\"'`` by default."
msgstr ""
":attr:`quotes` 中的字元將解釋 :attr:`escape` 中定義的轉義字元。這僅用於 "
"POSIX 模式，預設情況下僅包含 ``\\'\"\\'``。"

#: ../../library/shlex.rst:279
#, fuzzy
msgid ""
"If ``True``, tokens will only be split in whitespaces.  This is useful, for "
"example, for parsing command lines with :class:`~shlex.shlex`, getting "
"tokens in a similar way to shell arguments.  When used in combination with :"
"attr:`punctuation_chars`, tokens will be split on whitespace in addition to "
"those characters."
msgstr ""
"如果 ``True``，標記將只在空格中拆分。這很有用，例如，對於使用 :class:`~shlex."
"shlex` 剖析命令列，以類似於 shell 參數的方式獲取標記。當與 :attr:"
"`punctuation_chars` 結合使用時，除這些字元外，標記將在空格處拆分。"

#: ../../library/shlex.rst:285
#, fuzzy
msgid ""
"The :attr:`punctuation_chars` attribute was made compatible with the :attr:"
"`whitespace_split` attribute."
msgstr ":attr:`punctuation_chars` 屬性與 :attr:`whitespace_split` 屬性相容。"

#: ../../library/shlex.rst:292
#, fuzzy
msgid ""
"The name of the current input file, as initially set at class instantiation "
"time or stacked by later source requests.  It may be useful to examine this "
"when constructing error messages."
msgstr ""
"當前輸入文件的名稱，最初在類實例化時設定或由以後的源請求堆疊。在構建錯誤消息"
"時檢查它可能很有用。"

#: ../../library/shlex.rst:299
#, fuzzy
msgid ""
"The input stream from which this :class:`~shlex.shlex` instance is reading "
"characters."
msgstr "此 :class:`~shlex.shlex` 實例從中讀取字元的輸入流。"

#: ../../library/shlex.rst:305
#, fuzzy
msgid ""
"This attribute is ``None`` by default.  If you assign a string to it, that "
"string will be recognized as a lexical-level inclusion request similar to "
"the ``source`` keyword in various shells.  That is, the immediately "
"following token will be opened as a filename and input will be taken from "
"that stream until EOF, at which point the :meth:`~io.IOBase.close` method of "
"that stream will be called and the input source will again become the "
"original input stream.  Source requests may be stacked any number of levels "
"deep."
msgstr ""
"預設情況下，此屬性為 ``None`` 。如果給它分配一個字串，該字串將被識別為詞法級"
"包含請求，類似於各種 shell 中的 ``source`` 關鍵字。也就是說，緊隨其後的標記將"
"作為文件名打開，並從該流中獲取輸入直到 EOF，此時將呼叫該流的 :meth:`~io."
"IOBase.close` 方法並輸入源將再次成為原始輸入流。源請求可以堆疊任意數量的深"
"度。"

#: ../../library/shlex.rst:316
#, fuzzy
msgid ""
"If this attribute is numeric and ``1`` or more, a :class:`~shlex.shlex` "
"instance will print verbose progress output on its behavior.  If you need to "
"use this, you can read the module source code to learn the details."
msgstr ""
"如果此屬性是數字且 ``1``或更多，則 :class:`~shlex.shlex` 實例將在其行為上印出"
"詳細的進度輸出。如果你需要使用這個，你可以閱讀模組源程式碼來了解細節。"

#: ../../library/shlex.rst:323
#, fuzzy
msgid "Source line number (count of newlines seen so far plus one)."
msgstr "源行號（到目前為止看到的換行數加一）。"

#: ../../library/shlex.rst:328
#, fuzzy
msgid ""
"The token buffer.  It may be useful to examine this when catching exceptions."
msgstr "令牌緩衝區。在捕獲例外時檢查它可能很有用。"

#: ../../library/shlex.rst:333
#, fuzzy
msgid ""
"Token used to determine end of file. This will be set to the empty string "
"(``''``), in non-POSIX mode, and to ``None`` in POSIX mode."
msgstr ""
"用於確定文件結尾的令牌。這將在非 POSIX 模式下設定為空字串 (``''``)，在 POSIX "
"模式下設定為``None``。"

#: ../../library/shlex.rst:339
#, fuzzy
msgid ""
"A read-only property. Characters that will be considered punctuation. Runs "
"of punctuation characters will be returned as a single token. However, note "
"that no semantic validity checking will be performed: for example, '>>>' "
"could be returned as a token, even though it may not be recognised as such "
"by shells."
msgstr ""
"只讀屬性。將被視為標點符號的字元。標點字元的運行將作為單個標記回傳。但是，請"
"注意不會執行任何語義有效性檢查：例如，'>>>' 可以作為標記回傳，即使它可能不會"
"被 shell 識別。"

#: ../../library/shlex.rst:350
#, fuzzy
msgid "Parsing Rules"
msgstr "剖析規則"

#: ../../library/shlex.rst:352
#, fuzzy
msgid ""
"When operating in non-POSIX mode, :class:`~shlex.shlex` will try to obey to "
"the following rules."
msgstr "在非 POSIX 模式下運行時，:class:`~shlex.shlex` 將嘗試遵守以下規則。"

#: ../../library/shlex.rst:355
#, fuzzy
msgid ""
"Quote characters are not recognized within words (``Do\"Not\"Separate`` is "
"parsed as the single word ``Do\"Not\"Separate``);"
msgstr ""
"在單詞中無法識別引號字元（``Do\"Not\"Separate`` 被剖析為單個單詞 "
"``Do\"Not\"Separate``）；"

#: ../../library/shlex.rst:358
#, fuzzy
msgid "Escape characters are not recognized;"
msgstr "不識別轉義字元；"

#: ../../library/shlex.rst:360
#, fuzzy
msgid ""
"Enclosing characters in quotes preserve the literal value of all characters "
"within the quotes;"
msgstr "將字元括在引號中會保留引號中所有字元的字面值；"

#: ../../library/shlex.rst:363
#, fuzzy
msgid ""
"Closing quotes separate words (``\"Do\"Separate`` is parsed as ``\"Do\"`` "
"and ``Separate``);"
msgstr ""
"關閉引號分隔單詞（``\"Do\"Separate`` 被剖析為 ``\"Do\"`` 和 ``Separate``）；"

#: ../../library/shlex.rst:366
#, fuzzy
msgid ""
"If :attr:`~shlex.whitespace_split` is ``False``, any character not declared "
"to be a word character, whitespace, or a quote will be returned as a single-"
"character token. If it is ``True``, :class:`~shlex.shlex` will only split "
"words in whitespaces;"
msgstr ""
"如果 :attr:`~shlex.whitespace_split` 為 ``False``，則任何未聲明為單詞字元、空"
"格或引號的字元都將作為單字元標記回傳。如果它是 ``True``，:class:`~shlex."
"shlex` 將只拆分空格中的單詞；"

#: ../../library/shlex.rst:371
#, fuzzy
msgid "EOF is signaled with an empty string (``''``);"
msgstr "EOF 以空字串 (``''``) 發出信號；"

#: ../../library/shlex.rst:373
#, fuzzy
msgid "It's not possible to parse empty strings, even if quoted."
msgstr "無法剖析空字串，即使引用也是如此。"

#: ../../library/shlex.rst:375
#, fuzzy
msgid ""
"When operating in POSIX mode, :class:`~shlex.shlex` will try to obey to the "
"following parsing rules."
msgstr "在 POSIX 模式下運行時，:class:`~shlex.shlex` 將嘗試遵守以下剖析規則。"

#: ../../library/shlex.rst:378
#, fuzzy
msgid ""
"Quotes are stripped out, and do not separate words "
"(``\"Do\"Not\"Separate\"`` is parsed as the single word ``DoNotSeparate``);"
msgstr ""
"引號被剝離，並且不分隔單詞（``\"Do\"Not\"Separate\"`` 被剖析為單個單詞 "
"``DoNotSeparate``）；"

#: ../../library/shlex.rst:381
#, fuzzy
msgid ""
"Non-quoted escape characters (e.g. ``'\\'``) preserve the literal value of "
"the next character that follows;"
msgstr "非引號轉義字元（例如``'\\'``）保留後面的下一個字元的字面值；"

#: ../../library/shlex.rst:384
#, fuzzy
msgid ""
"Enclosing characters in quotes which are not part of :attr:`~shlex."
"escapedquotes` (e.g. ``\"'\"``) preserve the literal value of all characters "
"within the quotes;"
msgstr ""
"將不屬於 :attr:`~shlex.escapedquotes` 的字元括起來（例如 ``\"\\'\"``）保留引"
"號內所有字元的字面值；"

#: ../../library/shlex.rst:388
#, fuzzy
msgid ""
"Enclosing characters in quotes which are part of :attr:`~shlex."
"escapedquotes` (e.g. ``'\"'``) preserves the literal value of all characters "
"within the quotes, with the exception of the characters mentioned in :attr:"
"`~shlex.escape`.  The escape characters retain its special meaning only when "
"followed by the quote in use, or the escape character itself. Otherwise the "
"escape character will be considered a normal character."
msgstr ""
"將作為 :attr:`~shlex.escapedquotes` 一部分的字元括起來（例如 ``\\'\"\\'``）保"
"留引號內所有字元的字面值，但 :attr:` 中提到的字元除外~shlex.escape`。僅當使用"
"中的引號或轉義字元本身時，轉義字元才保留其特殊含義。否則轉義字元將被視為普通"
"字元。"

#: ../../library/shlex.rst:396
#, fuzzy
msgid "EOF is signaled with a :const:`None` value;"
msgstr "EOF 以 :const:`None` 值表示；"

#: ../../library/shlex.rst:398
#, fuzzy
msgid "Quoted empty strings (``''``) are allowed."
msgstr "允許使用帶引號的空字串 (``''``)。"

#: ../../library/shlex.rst:403
#, fuzzy
msgid "Improved Compatibility with Shells"
msgstr "改進了與 Shell 的相容性"

#: ../../library/shlex.rst:407
#, fuzzy
msgid ""
"The :class:`shlex` class provides compatibility with the parsing performed "
"by common Unix shells like ``bash``, ``dash``, and ``sh``.  To take "
"advantage of this compatibility, specify the ``punctuation_chars`` argument "
"in the constructor.  This defaults to ``False``, which preserves pre-3.6 "
"behaviour. However, if it is set to ``True``, then parsing of the characters "
"``();<>|&`` is changed: any run of these characters is returned as a single "
"token.  While this is short of a full parser for shells (which would be out "
"of scope for the standard library, given the multiplicity of shells out "
"there), it does allow you to perform processing of command lines more easily "
"than you could otherwise.  To illustrate, you can see the difference in the "
"following snippet:"
msgstr ""
":class:`shlex` 類提供與常見 Unix shell 執行的剖析的相容性，如 ``bash``、"
"``dash`` 和 ``sh``。要利用這種相容性，請在構造函式中指定“punctuation_chars”參"
"數。這預設為 ``False``，它保留了 3.6 之前的行為。但是，如果將其設定為“True”，"
"則字元“();<>|&”的剖析會發生變化：這些字元的任何運行都將作為單個標記回傳。雖然"
"這缺少一個完整的 shell 剖析器（這將超出標準庫的範圍，因為那裡有多種 shell），"
"但它確實允許您比其他方式更容易地執行命令列處理。為了說明這一點，您可以在以下"
"程式碼片段中看到不同之處："

#: ../../library/shlex.rst:433
#, fuzzy
msgid ""
"Of course, tokens will be returned which are not valid for shells, and "
"you'll need to implement your own error checks on the returned tokens."
msgstr ""
"當然，將回傳對 shell 無效的令牌，您需要對回傳的令牌執行您自己的錯誤檢查。"

#: ../../library/shlex.rst:436
#, fuzzy
msgid ""
"Instead of passing ``True`` as the value for the punctuation_chars "
"parameter, you can pass a string with specific characters, which will be "
"used to determine which characters constitute punctuation. For example::"
msgstr ""
"您可以傳遞一個包含特定字元的字串，而不是傳遞 ``True``作為 punctuation_chars "
"參數的值，該字串將用於確定哪些字元構成標點符號。例如：："

#: ../../library/shlex.rst:445
#, fuzzy
msgid ""
"When ``punctuation_chars`` is specified, the :attr:`~shlex.wordchars` "
"attribute is augmented with the characters ``~-./*?=``.  That is because "
"these characters can appear in file names (including wildcards) and command-"
"line arguments (e.g. ``--color=auto``). Hence::"
msgstr ""
"當指定 ``punctuation_chars`` 時，:attr:`~shlex.wordchars` 屬性會增加字元 "
"``~-./*?=``。這是因為這些字元可以出現在文件名（包括通配符）和命令列參數（例"
"如 ``--color=auto``）中。因此：："

#: ../../library/shlex.rst:456
#, fuzzy
msgid ""
"However, to match the shell as closely as possible, it is recommended to "
"always use ``posix`` and :attr:`~shlex.whitespace_split` when using :attr:"
"`~shlex.punctuation_chars`, which will negate :attr:`~shlex.wordchars` "
"entirely."
msgstr ""
"但是，為了盡可能匹配 shell，建議在使用 :attr:`~shlex.punctuation_chars` 時始"
"終使用 ``posix`` 和 :attr:`~shlex.whitespace_split`，這將否定 :attr: `~shlex."
"wordchars` 完全。"

#: ../../library/shlex.rst:461
#, fuzzy
msgid ""
"For best effect, ``punctuation_chars`` should be set in conjunction with "
"``posix=True``. (Note that ``posix=False`` is the default for :class:`~shlex."
"shlex`.)"
msgstr ""
"為了獲得最佳效果，``punctuation_chars`` 應與 ``posix=True`` 一起設定。 （注"
"意 ``posix=False`` 是 :class:`~shlex.shlex` 的預設值。）"
