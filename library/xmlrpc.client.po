# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-13 00:17+0000\n"
"PO-Revision-Date: 2018-05-23 16:16+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/xmlrpc.client.rst:2
#, fuzzy
msgid ":mod:`xmlrpc.client` --- XML-RPC client access"
msgstr ":mod:`xmlrpc.client` --- XML-RPC 用戶端存取"

#: ../../library/xmlrpc.client.rst:10
msgid "**Source code:** :source:`Lib/xmlrpc/client.py`"
msgstr "**原始碼：**\\ :source:`Lib/xmlrpc/client.py`"

#: ../../library/xmlrpc.client.rst:17
#, fuzzy
msgid ""
"XML-RPC is a Remote Procedure Call method that uses XML passed via HTTP(S) "
"as a transport.  With it, a client can call methods with parameters on a "
"remote server (the server is named by a URI) and get back structured data.  "
"This module supports writing XML-RPC client code; it handles all the details "
"of translating between conformable Python objects and XML on the wire."
msgstr ""
"XML-RPC 是一種遠程過程呼叫方法，它使用通過 HTTP(S) 傳遞的 XML "
"作為傳輸方式。有了它，用戶端可以在遠程伺服器（伺服器由 URI "
"命名）上呼叫帶有參數的方法並取回結構化資料。該模組支援編寫XML-"
"RPC用戶端程式碼；它處理在線路上相容的 Python 物件和 XML 之間轉換的所有細節。"

#: ../../library/xmlrpc.client.rst:26
#, fuzzy
msgid ""
"The :mod:`xmlrpc.client` module is not secure against maliciously "
"constructed data.  If you need to parse untrusted or unauthenticated data "
"see :ref:`xml-vulnerabilities`."
msgstr ""
":mod:`xmlrpc.client` "
"模組對惡意構造的資料不安全。如果您需要解析不受信任或未經身份驗證的資料，"
"請參閱 :ref:`xml-vulnerabilities`。"

#: ../../library/xmlrpc.client.rst:32
#, fuzzy
msgid ""
"For HTTPS URIs, :mod:`xmlrpc.client` now performs all the necessary "
"certificate and hostname checks by default."
msgstr "對於 HTTPS URI，xmlrpc.client 現在預設執行所有必要的證書和主機名檢查。"

#: ../../includes/wasm-notavail.rst:3
#, fuzzy
msgid ":ref:`Availability <availability>`: not Emscripten, not WASI."
msgstr ":ref:`Availability <availability>`：不是 Emscripten，不是 WASI。"

#: ../../includes/wasm-notavail.rst:5
#, fuzzy
msgid ""
"This module does not work or is not available on WebAssembly platforms "
"``wasm32-emscripten`` and ``wasm32-wasi``. See :ref:`wasm-availability` for "
"more information."
msgstr ""
"此模組在 WebAssembly 平台 ``wasm32-emscripten`` 和 ``wasm32-wasi`` 上不起作用或不可用"
"。有關更多資訊，請參閱 :ref:`wasm-availability`。"

#: ../../library/xmlrpc.client.rst:41
#, fuzzy
msgid ""
"A :class:`ServerProxy` instance is an object that manages communication with "
"a remote XML-RPC server.  The required first argument is a URI (Uniform "
"Resource Indicator), and will normally be the URL of the server.  The "
"optional second argument is a transport factory instance; by default it is "
"an internal :class:`SafeTransport` instance for https: URLs and an internal "
"HTTP :class:`Transport` instance otherwise.  The optional third argument is "
"an encoding, by default UTF-8. The optional fourth argument is a debugging "
"flag."
msgstr ""
"ServerProxy 實例是管理與遠程 XML-RPC 伺服器通信的物件。所需的第一個參數是 "
"URI（統一資源指示符），通常是伺服器的 "
"URL。可選的第二個參數是一個傳輸工廠實例；預設情況下，它是 https: URL 的內部 "
"SafeTransport 實例，否則是內部 HTTP Transport "
"實例。可選的第三個參數是一種編碼，預設為 UTF-8。可選的第四個參數是除錯旗標。"

#: ../../library/xmlrpc.client.rst:49
#, fuzzy
msgid ""
"The following parameters govern the use of the returned proxy instance. If "
"*allow_none* is true,  the Python constant ``None`` will be translated into "
"XML; the default behaviour is for ``None`` to raise a :exc:`TypeError`. This "
"is a commonly used extension to the XML-RPC specification, but isn't "
"supported by all clients and servers; see `http://ontosys.com/xml-rpc/"
"extensions.php <https://web.archive.org/web/20130120074804/http://ontosys."
"com/xml-rpc/extensions.php>`_ for a description. The *use_builtin_types* "
"flag can be used to cause date/time values to be presented as :class:"
"`datetime.datetime` objects and binary data to be presented as :class:"
"`bytes` objects; this flag is false by default. :class:`datetime.datetime`, :"
"class:`bytes` and :class:`bytearray` objects may be passed to calls. The "
"*headers* parameter is an optional sequence of HTTP headers to send with "
"each request, expressed as a sequence of 2-tuples representing the header "
"name and value. (e.g. ``[('Header-Name', 'value')]``). The obsolete "
"*use_datetime* flag is similar to *use_builtin_types* but it applies only to "
"date/time values."
msgstr ""
"以下參數控制回傳的代理實例的使用。如果 *allow_none* 為真，則 Python "
"常數 ``None``將被轉換為 XML； ``None`` 的預設行為是引發 :exc:`TypeError`。"
"這是對 XML-RPC "
"規範的常用擴充，但並非所有用戶端和伺服器都支援；參見`http://ontosys.com/"
"xml-rpc/extensions.php <https://web.archive.org/web/20130120074804/"
"http://ontosys.com/xml-rpc/extensions.php>`_以獲得描述。 *use_builtin_types* "
"旗標可用於使日期/時間值顯示為 :class:`datetime.datetime` "
"物件，將二進位資料顯示為 :class:`bytes` 物件；預設情況下此旗標為 false。 "
":class:`datetime.datetime`, :class:`bytes` 和 :class:`bytearray` "
"物件可以傳遞給呼叫。 *headers* 參數是隨每個請求一起發送的可選 HTTP "
"標頭序列，表示為表示標頭名稱和值的二元組序列。 （例如``[（'Header-"
"Name'，'value'）]``）。過時的 *use_datetime* 旗標類似於 *use_builtin_types* "
"但它僅適用於日期/時間值。"

#: ../../library/xmlrpc.client.rst:67 ../../library/xmlrpc.client.rst:548
msgid "The *use_builtin_types* flag was added."
msgstr "新增了 *use_builtin_types* 旗標。"

#: ../../library/xmlrpc.client.rst:70
msgid "The *headers* parameter was added."
msgstr "新增 *headers* 參數。"

#: ../../library/xmlrpc.client.rst:73
#, fuzzy
msgid ""
"Both the HTTP and HTTPS transports support the URL syntax extension for HTTP "
"Basic Authentication: ``http://user:pass@host:port/path``.  The  ``user:"
"pass`` portion will be base64-encoded as an HTTP 'Authorization' header, and "
"sent to the remote server as part of the connection process when invoking an "
"XML-RPC method.  You only need to use this if the remote server requires a "
"Basic Authentication user and password. If an HTTPS URL is provided, "
"*context* may be :class:`ssl.SSLContext` and configures the SSL settings of "
"the underlying HTTPS connection."
msgstr ""
"HTTP 和 HTTPS 傳輸都支援 HTTP 基本身份驗證的 URL "
"語法擴充：``http://user:pass@host:port/path``。 ``user:pass`` 部分將被 "
"base64 編碼為 HTTP“授權”標頭，並在呼叫 XML-RPC 方法時作為連接過程的一部分發送"
"到遠程伺服器。如果遠程伺服器需要基本身份驗證使用者和密碼，您只需要使用它。"
"如果提供了 HTTPS URL，*context* 可能是 :class:`ssl.SSLContext` 並配置底層 "
"HTTPS 連接的 SSL 設定。"

#: ../../library/xmlrpc.client.rst:82
#, fuzzy
msgid ""
"The returned instance is a proxy object with methods that can be used to "
"invoke corresponding RPC calls on the remote server.  If the remote server "
"supports the introspection API, the proxy can also be used to query the "
"remote server for the methods it supports (service discovery) and fetch "
"other server-associated metadata."
msgstr ""
"回傳的實例是一個代理物件，其方法可用於在遠程伺服器上呼叫相應的 RPC 呼叫。"
"如果遠程伺服器支援內省 API，代理也可用於查詢遠程伺服器以獲取它支援的方法（服"
"務發現）並獲取其他與伺服器相關的元資料。"

#: ../../library/xmlrpc.client.rst:88
#, fuzzy
msgid ""
"Types that are conformable (e.g. that can be marshalled through XML), "
"include the following (and except where noted, they are unmarshalled as the "
"same Python type):"
msgstr "符合的型別（例如，可以通過 XML 編組）包括以下內容（除非另有說明，"
"否則它們被解編為相同的 Python 型別）："

#: ../../library/xmlrpc.client.rst:95
#, fuzzy
msgid "XML-RPC type"
msgstr "XML-RPC 型別"

#: ../../library/xmlrpc.client.rst:95
#, fuzzy
msgid "Python type"
msgstr "蟒蛇型別"

#: ../../library/xmlrpc.client.rst:97
msgid "``boolean``"
msgstr "``boolean``"

#: ../../library/xmlrpc.client.rst:97
msgid ":class:`bool`"
msgstr ":class:`bool`"

#: ../../library/xmlrpc.client.rst:99
msgid "``int``, ``i1``, ``i2``,  ``i4``, ``i8`` or ``biginteger``"
msgstr ""
"``int``\\ 、\\ ``i1``\\ 、\\ ``i2``\\ 、\\ ``i4``\\ 、\\ ``i8`` 或 "
"``biginteger``"

#: ../../library/xmlrpc.client.rst:99
#, fuzzy
msgid ""
":class:`int` in range from -2147483648 to 2147483647. Values get the "
"``<int>`` tag."
msgstr ":class:`int` 範圍從 -2147483648 到 2147483647。值獲得 ``<int>`` 標籤。"

#: ../../library/xmlrpc.client.rst:104
msgid "``double`` or ``float``"
msgstr "``double`` 或 ``float``"

#: ../../library/xmlrpc.client.rst:104
#, fuzzy
msgid ":class:`float`.  Values get the ``<double>`` tag."
msgstr ":class:`浮動`。值獲得 ``<double>`` 標籤。"

#: ../../library/xmlrpc.client.rst:107
msgid "``string``"
msgstr "``string``"

#: ../../library/xmlrpc.client.rst:107
msgid ":class:`str`"
msgstr ":class:`str`"

#: ../../library/xmlrpc.client.rst:109
msgid "``array``"
msgstr "``array``"

#: ../../library/xmlrpc.client.rst:109
#, fuzzy
msgid ""
":class:`list` or :class:`tuple` containing conformable elements.  Arrays are "
"returned as :class:`lists <list>`."
msgstr ":class:`list` 或 :class:`tuple` 包含一致的元素。數組回傳為 :class:`lists "
"<list>`。"

#: ../../library/xmlrpc.client.rst:113
msgid "``struct``"
msgstr "``struct``"

#: ../../library/xmlrpc.client.rst:113
#, fuzzy
msgid ""
":class:`dict`.  Keys must be strings, values may be any conformable type.  "
"Objects of user-defined classes can be passed in; only their :attr:`~object."
"__dict__` attribute is transmitted."
msgstr ""
":class:`字典`。鍵必須是字串，值可以是任何符合的型別。可以傳入使用者自定義類的"
"物件；只有它們的 :attr:`~object.__dict__` 屬性被傳輸。"

#: ../../library/xmlrpc.client.rst:118
msgid "``dateTime.iso8601``"
msgstr "``dateTime.iso8601``"

#: ../../library/xmlrpc.client.rst:118
#, fuzzy
msgid ""
":class:`DateTime` or :class:`datetime.datetime`. Returned type depends on "
"values of *use_builtin_types* and *use_datetime* flags."
msgstr ""
":class:`DateTime` 或 :class:`datetime.datetime`。回傳型別取決於 "
"*use_builtin_types* 和 *use_datetime* 旗標的值。"

#: ../../library/xmlrpc.client.rst:122
msgid "``base64``"
msgstr "``base64``"

#: ../../library/xmlrpc.client.rst:122
#, fuzzy
msgid ""
":class:`Binary`, :class:`bytes` or :class:`bytearray`.  Returned type "
"depends on the value of the *use_builtin_types* flag."
msgstr ""
":class:`Binary`, :class:`bytes` 或 :class:`bytearray`。回傳型別取決於 "
"*use_builtin_types* 旗標的值。"

#: ../../library/xmlrpc.client.rst:126
msgid "``nil``"
msgstr "``nil``"

#: ../../library/xmlrpc.client.rst:126
#, fuzzy
msgid ""
"The ``None`` constant.  Passing is allowed only if *allow_none* is true."
msgstr " ``None`` 常數。僅當 *allow_none* 為真時才允許通過。"

#: ../../library/xmlrpc.client.rst:129
msgid "``bigdecimal``"
msgstr "``bigdecimal``"

#: ../../library/xmlrpc.client.rst:129
#, fuzzy
msgid ":class:`decimal.Decimal`.  Returned type only."
msgstr ":class:`decimal.Decimal`。僅回傳型別。"

#: ../../library/xmlrpc.client.rst:132
#, fuzzy
msgid ""
"This is the full set of data types supported by XML-RPC.  Method calls may "
"also raise a special :exc:`Fault` instance, used to signal XML-RPC server "
"errors, or :exc:`ProtocolError` used to signal an error in the HTTP/HTTPS "
"transport layer. Both :exc:`Fault` and :exc:`ProtocolError` derive from a "
"base class called :exc:`Error`.  Note that the xmlrpc client module "
"currently does not marshal instances of subclasses of built-in types."
msgstr ""
"這是 XML-RPC 支援的完整資料型別集。方法呼叫也可能引發一個特殊的 :exc:`Fault` "
"實例，用於發出 XML-RPC 伺服器錯誤信號，或 :exc:`ProtocolError` 用於發出 HTTP/"
"HTTPS 傳輸層錯誤信號。 :exc:`Fault` 和 :exc:`ProtocolError` 都派生自一個名為 "
":exc:`Error` 的基底類別。請注意，xmlrpc "
"用戶端模組當前不編組內建型別子類別的實例。"

#: ../../library/xmlrpc.client.rst:139
#, fuzzy
msgid ""
"When passing strings, characters special to XML such as ``<``, ``>``, and "
"``&`` will be automatically escaped.  However, it's the caller's "
"responsibility to ensure that the string is free of characters that aren't "
"allowed in XML, such as the control characters with ASCII values between 0 "
"and 31 (except, of course, tab, newline and carriage return); failing to do "
"this will result in an XML-RPC request that isn't well-formed XML.  If you "
"have to pass arbitrary bytes via XML-RPC, use :class:`bytes` or :class:"
"`bytearray` classes or the :class:`Binary` wrapper class described below."
msgstr ""
"傳遞字串時，XML 的特殊字元，如``<``、``>`` 和``&`` 將被自動轉義。但是，"
"呼叫者有責任確保該字串不含 XML 中不允許的字元，例如 ASCII 值介於 0 和 31 "
"之間的控制字元（當然，製表符、換行符和回車符除外）；如果不這樣做，將導致 XML-"
"RPC 請求不是格式正確的 XML。如果您必須通過 XML-RPC "
"傳遞任意位元組，請使用 :class:`bytes` 或 :class:`bytearray` "
"類或下面描述的 :class:`Binary` 包裝類。"

#: ../../library/xmlrpc.client.rst:148
#, fuzzy
msgid ""
":class:`Server` is retained as an alias for :class:`ServerProxy` for "
"backwards compatibility.  New code should use :class:`ServerProxy`."
msgstr ""
":class:`Server` 保留為 :class:`ServerProxy` "
"的別名以實作向後相容性。新程式碼應該使用 :class:`ServerProxy`。"

#: ../../library/xmlrpc.client.rst:151
msgid "Added the *context* argument."
msgstr "加入 *context* 引數。"

#: ../../library/xmlrpc.client.rst:154
#, fuzzy
msgid ""
"Added support of type tags with prefixes (e.g. ``ex:nil``). Added support of "
"unmarshalling additional types used by Apache XML-RPC implementation for "
"numerics: ``i1``, ``i2``, ``i8``, ``biginteger``, ``float`` and "
"``bigdecimal``. See https://ws.apache.org/xmlrpc/types.html for a "
"description."
msgstr ""
"新增了對帶有前綴的型別標籤的支援（例如 ``ex:nil``）。新增了對 Apache XML-RPC "
"實作使用的數字解組附加型別的支援：``i1``、``i2``、``i8``、``biginteger``、``f"
"loat`` 和 ``bigdecimal` `。有關說明，請參閱 https://ws.apache.org/xmlrpc/"
"types.html。"

#: ../../library/xmlrpc.client.rst:166
#, fuzzy
msgid "`XML-RPC HOWTO <https://www.tldp.org/HOWTO/XML-RPC-HOWTO/index.html>`_"
msgstr "`XML-RPC HOWTO <https://www.tldp.org/HOWTO/XML-RPC-HOWTO/index.html>`_"

#: ../../library/xmlrpc.client.rst:165
#, fuzzy
msgid ""
"A good description of XML-RPC operation and client software in several "
"languages. Contains pretty much everything an XML-RPC client developer needs "
"to know."
msgstr "用多種語言很好地描述了 XML-RPC 操作和用戶端軟件。幾乎包含 XML-RPC "
"用戶端開發人員需要了解的所有內容。"

#: ../../library/xmlrpc.client.rst:169
#, fuzzy
msgid ""
"`XML-RPC Introspection <https://xmlrpc-c.sourceforge.net/introspection."
"html>`_"
msgstr "`XML-RPC 自省 <https://xmlrpc-c.sourceforge.net/introspection.html>`_"

#: ../../library/xmlrpc.client.rst:169
#, fuzzy
msgid "Describes the XML-RPC protocol extension for introspection."
msgstr "描述用於內省的 XML-RPC 協定擴充。"

#: ../../library/xmlrpc.client.rst:171
#, fuzzy
msgid "`XML-RPC Specification <http://xmlrpc.scripting.com/spec.html>`_"
msgstr "`XML-RPC 規範 <http://xmlrpc.scripting.com/spec.html>`_"

#: ../../library/xmlrpc.client.rst:172
#, fuzzy
msgid "The official specification."
msgstr "官方規範。"

#: ../../library/xmlrpc.client.rst:177
msgid "ServerProxy Objects"
msgstr "ServerProxy 物件"

#: ../../library/xmlrpc.client.rst:179
#, fuzzy
msgid ""
"A :class:`ServerProxy` instance has a method corresponding to each remote "
"procedure call accepted by the XML-RPC server.  Calling the method performs "
"an RPC, dispatched by both name and argument signature (e.g. the same method "
"name can be overloaded with multiple argument signatures).  The RPC finishes "
"by returning a value, which may be either returned data in a conformant type "
"or a :class:`Fault` or :class:`ProtocolError` object indicating an error."
msgstr ""
"ServerProxy 實例有一個對應於 XML-RPC 伺服器接受的每個遠程過程呼叫的方法。"
"呼叫該方法執行 RPC，通過名稱和參數簽名進行分派（例如，可以使用多個參數簽名重"
"載相同的方法名稱）。 RPC 通過回傳一個值來完成，該值可以是符合型別的回傳資料，"
"也可以是指示錯誤的 Fault 或 ProtocolError 物件。"

#: ../../library/xmlrpc.client.rst:186
#, fuzzy
msgid ""
"Servers that support the XML introspection API support some common methods "
"grouped under the reserved :attr:`~ServerProxy.system` attribute:"
msgstr "支援 XML 內省 API 的伺服器支援在保留的 :attr:`~ServerProxy.system` "
"屬性下分組的一些常用方法："

#: ../../library/xmlrpc.client.rst:192
#, fuzzy
msgid ""
"This method returns a list of strings, one for each (non-system) method "
"supported by the XML-RPC server."
msgstr "此方法回傳一個字串列表，每個字串對應 XML-RPC 伺服器支援的每個（非系統）方法。"

#: ../../library/xmlrpc.client.rst:198
#, fuzzy
msgid ""
"This method takes one parameter, the name of a method implemented by the XML-"
"RPC server. It returns an array of possible signatures for this method. A "
"signature is an array of types. The first of these types is the return type "
"of the method, the rest are parameters."
msgstr ""
"該方法有一個參數，即 XML-RPC 伺服器實作的一種方法的名稱。它回傳此方法的可能簽"
"名數組。簽名是一個型別數組。這些型別中的第一個是方法的回傳型別，其餘是參數。"

#: ../../library/xmlrpc.client.rst:203
#, fuzzy
msgid ""
"Because multiple signatures (ie. overloading) is permitted, this method "
"returns a list of signatures rather than a singleton."
msgstr "因為允許多個簽名（即重載），所以此方法回傳簽名列表而不是單例。"

#: ../../library/xmlrpc.client.rst:206
#, fuzzy
msgid ""
"Signatures themselves are restricted to the top level parameters expected by "
"a method. For instance if a method expects one array of structs as a "
"parameter, and it returns a string, its signature is simply \"string, "
"array\". If it expects three integers and returns a string, its signature is "
"\"string, int, int, int\"."
msgstr ""
"簽名本身僅限於方法期望的頂級參數。例如，如果一個方法需要一個結構數組作為參數"
"，並且它回傳一個字串，那麼它的簽名就是“string, "
"array”。如果它需要三個整數並回傳一個字串，那麼它的簽名是“string, int, int, "
"int”。"

#: ../../library/xmlrpc.client.rst:211
#, fuzzy
msgid ""
"If no signature is defined for the method, a non-array value is returned. In "
"Python this means that the type of the returned  value will be something "
"other than list."
msgstr "如果沒有為該方法定義簽名，則回傳一個非數組值。在 Python "
"中，這意味著回傳值的型別不是列表。"

#: ../../library/xmlrpc.client.rst:218
#, fuzzy
msgid ""
"This method takes one parameter, the name of a method implemented by the XML-"
"RPC server.  It returns a documentation string describing the use of that "
"method. If no such string is available, an empty string is returned. The "
"documentation string may contain HTML markup."
msgstr ""
"該方法有一個參數，即 XML-RPC 伺服器實作的一種方法的名稱。它回傳描述該方法使用"
"的文檔字串。如果沒有這樣的字串可用，則回傳一個空字串。文檔字串可能包含 HTML "
"標記。"

#: ../../library/xmlrpc.client.rst:225
#, fuzzy
msgid ""
"Instances of :class:`ServerProxy` support the :term:`context manager` "
"protocol for closing the underlying transport."
msgstr "ServerProxy 的實例支援用於關閉底層傳輸的上下文管理器協定。"

#: ../../library/xmlrpc.client.rst:229 ../../library/xmlrpc.client.rst:275
#, fuzzy
msgid "A working example follows. The server code::"
msgstr "下面是一個工作示例。伺服器程式碼::"

#: ../../library/xmlrpc.client.rst:241 ../../library/xmlrpc.client.rst:290
#: ../../library/xmlrpc.client.rst:400 ../../library/xmlrpc.client.rst:506
#, fuzzy
msgid "The client code for the preceding server::"
msgstr "前面伺服器的用戶端程式碼::"

#: ../../library/xmlrpc.client.rst:252
msgid "DateTime Objects"
msgstr "日期時間物件"

#: ../../library/xmlrpc.client.rst:256
#, fuzzy
msgid ""
"This class may be initialized with seconds since the epoch, a time tuple, an "
"ISO 8601 time/date string, or a :class:`datetime.datetime` instance.  It has "
"the following methods, supported mainly for internal use by the marshalling/"
"unmarshalling code:"
msgstr ""
"此類可以用紀元以來的秒數、時間元組、ISO 8601 時間/日期字串或 "
"datetime.datetime "
"實例進行初始化。它有以下方法，主要支援編組/解組程式碼內部使用："

#: ../../library/xmlrpc.client.rst:264
#, fuzzy
msgid "Accept a string as the instance's new time value."
msgstr "接受一個字串作為實例的新時間值。"

#: ../../library/xmlrpc.client.rst:269
#, fuzzy
msgid ""
"Write the XML-RPC encoding of this :class:`DateTime` item to the *out* "
"stream object."
msgstr "將此 DateTime 項的 XML-RPC 編碼寫入 *out* 流物件。"

#: ../../library/xmlrpc.client.rst:272
#, fuzzy
msgid ""
"It also supports certain of Python's built-in operators through rich "
"comparison and :meth:`__repr__` methods."
msgstr "它還通過豐富的比較和 :meth:`__repr__` 方法支援某些 Python 的內建運算符。"

#: ../../library/xmlrpc.client.rst:305
#, fuzzy
msgid "Binary Objects"
msgstr "二進位物件"

#: ../../library/xmlrpc.client.rst:309
#, fuzzy
msgid ""
"This class may be initialized from bytes data (which may include NULs). The "
"primary access to the content of a :class:`Binary` object is provided by an "
"attribute:"
msgstr "此類可以從位元組資料（可能包括 NUL）初始化。對 :class:`Binary` "
"物件內容的主要訪問由屬性提供："

#: ../../library/xmlrpc.client.rst:316
#, fuzzy
msgid ""
"The binary data encapsulated by the :class:`Binary` instance.  The data is "
"provided as a :class:`bytes` object."
msgstr ":class:`Binary` 實例封裝的二進位資料。資料以 :class:`bytes` 物件的形式提供。"

#: ../../library/xmlrpc.client.rst:319
#, fuzzy
msgid ""
":class:`Binary` objects have the following methods, supported mainly for "
"internal use by the marshalling/unmarshalling code:"
msgstr ":class:`Binary` 物件具有以下方法，主要支援編組/解組程式碼在內部使用："

#: ../../library/xmlrpc.client.rst:325
#, fuzzy
msgid ""
"Accept a base64 :class:`bytes` object and decode it as the instance's new "
"data."
msgstr "接受 base64 :class:`bytes` 物件並將其解碼為實例的新資料。"

#: ../../library/xmlrpc.client.rst:330
#, fuzzy
msgid ""
"Write the XML-RPC base 64 encoding of this binary item to the *out* stream "
"object."
msgstr "將此二進位項的 XML-RPC base 64 編碼寫入 *out* 流物件。"

#: ../../library/xmlrpc.client.rst:332
#, fuzzy
msgid ""
"The encoded data will have newlines every 76 characters as per :rfc:`RFC "
"2045 section 6.8 <2045#section-6.8>`, which was the de facto standard base64 "
"specification when the XML-RPC spec was written."
msgstr ""
"根據 :rfc:`RFC 2045 第 6.8 節 <2045#section-6.8>`，編碼資料將每 76 "
"個字元換行一次，這是編寫 XML-RPC 規範時事實上的標準 base64 規範。"

#: ../../library/xmlrpc.client.rst:337
#, fuzzy
msgid ""
"It also supports certain of Python's built-in operators through :meth:"
"`__eq__` and :meth:`__ne__` methods."
msgstr "它還通過 :meth:`__eq__` 和 :meth:`__ne__` 方法支援某些 Python 的內建運算符。"

#: ../../library/xmlrpc.client.rst:340
#, fuzzy
msgid ""
"Example usage of the binary objects.  We're going to transfer an image over "
"XMLRPC::"
msgstr "二進位物件的示例用法。我們將通過 XMLRPC:: 傳輸圖像"

#: ../../library/xmlrpc.client.rst:356
#, fuzzy
msgid "The client gets the image and saves it to a file::"
msgstr "用戶端獲取圖像並將其保存到文件::"

#: ../../library/xmlrpc.client.rst:367
#, fuzzy
msgid "Fault Objects"
msgstr "故障物件"

#: ../../library/xmlrpc.client.rst:371
#, fuzzy
msgid ""
"A :class:`Fault` object encapsulates the content of an XML-RPC fault tag. "
"Fault objects have the following attributes:"
msgstr ":class:`Fault` 物件封裝了 XML-RPC 錯誤標記的內容。故障物件具有以下屬性："

#: ../../library/xmlrpc.client.rst:377
#, fuzzy
msgid "An int indicating the fault type."
msgstr "指示故障型別的 int。"

#: ../../library/xmlrpc.client.rst:382
#, fuzzy
msgid "A string containing a diagnostic message associated with the fault."
msgstr "包含與故障關聯的診斷訊息的字串。"

#: ../../library/xmlrpc.client.rst:384
#, fuzzy
msgid ""
"In the following example we're going to intentionally cause a :exc:`Fault` "
"by returning a complex type object.  The server code::"
msgstr "在下面的示例中，我們將通過回傳複雜型別物件來故意引發 "
":exc:`Fault`。伺服器程式碼::"

#: ../../library/xmlrpc.client.rst:417
msgid "ProtocolError Objects"
msgstr "ProtocolError 物件"

#: ../../library/xmlrpc.client.rst:421
#, fuzzy
msgid ""
"A :class:`ProtocolError` object describes a protocol error in the underlying "
"transport layer (such as a 404 'not found' error if the server named by the "
"URI does not exist).  It has the following attributes:"
msgstr ""
":class:`ProtocolError` 物件描述底層傳輸層中的協定錯誤（例如，如果 URI "
"指定的伺服器不存在，則會出現 404“未找到”錯誤）。它具有以下屬性："

#: ../../library/xmlrpc.client.rst:428
#, fuzzy
msgid "The URI or URL that triggered the error."
msgstr "觸發錯誤的 URI 或 URL。"

#: ../../library/xmlrpc.client.rst:433
#, fuzzy
msgid "The error code."
msgstr "錯誤程式碼。"

#: ../../library/xmlrpc.client.rst:438
#, fuzzy
msgid "The error message or diagnostic string."
msgstr "錯誤訊息或診斷字串。"

#: ../../library/xmlrpc.client.rst:443
#, fuzzy
msgid ""
"A dict containing the headers of the HTTP/HTTPS request that triggered the "
"error."
msgstr "包含觸發錯誤的 HTTP/HTTPS 請求標頭的字典。"

#: ../../library/xmlrpc.client.rst:446
#, fuzzy
msgid ""
"In the following example we're going to intentionally cause a :exc:"
"`ProtocolError` by providing an invalid URI::"
msgstr "在下面的示例中，我們將通過提供無效的 URI:: 故意導致 ProtocolError ："

#: ../../library/xmlrpc.client.rst:464
msgid "MultiCall Objects"
msgstr "MultiCall 物件"

#: ../../library/xmlrpc.client.rst:466
#, fuzzy
msgid ""
"The :class:`MultiCall` object provides a way to encapsulate multiple calls "
"to a remote server into a single request [#]_."
msgstr ":class:`MultiCall` "
"物件提供了一種將對遠程伺服器的多個呼叫封裝到單個請求中的方法 [#]_。"

#: ../../library/xmlrpc.client.rst:472
#, fuzzy
msgid ""
"Create an object used to boxcar method calls. *server* is the eventual "
"target of the call. Calls can be made to the result object, but they will "
"immediately return ``None``, and only store the call name and parameters in "
"the :class:`MultiCall` object. Calling the object itself causes all stored "
"calls to be transmitted as a single ``system.multicall`` request. The result "
"of this call is a :term:`generator`; iterating over this generator yields "
"the individual results."
msgstr ""
"建立一個用於 boxcar 方法呼叫的物件。 *server* "
"是呼叫的最終目標。可以對結果物件進行呼叫，但它們會立即回傳 ``None``，"
"並且只會將呼叫名稱和參數儲存在 MultiCall "
"物件中。呼叫物件本身會導致所有儲存的呼叫作為單個“system.multicall”請求傳輸。"
"這個呼叫的結果是一個 :term:`generator`;疊代這個生成器會產生單獨的結果。"

#: ../../library/xmlrpc.client.rst:480
#, fuzzy
msgid "A usage example of this class follows.  The server code::"
msgstr "此類的用法示例如下。伺服器程式碼::"

#: ../../library/xmlrpc.client.rst:522
#, fuzzy
msgid "Convenience Functions"
msgstr "便利功能"

#: ../../library/xmlrpc.client.rst:526
#, fuzzy
msgid ""
"Convert *params* into an XML-RPC request. or into a response if "
"*methodresponse* is true. *params* can be either a tuple of arguments or an "
"instance of the :exc:`Fault` exception class.  If *methodresponse* is true, "
"only a single value can be returned, meaning that *params* must be of length "
"1. *encoding*, if supplied, is the encoding to use in the generated XML; the "
"default is UTF-8. Python's :const:`None` value cannot be used in standard "
"XML-RPC; to allow using it via an extension,  provide a true value for "
"*allow_none*."
msgstr ""
"將 *params* 轉換為 XML-RPC 請求。如果 *methodresponse* 為真，則進入響應。 "
"*params* 可以是參數元組或 :exc:`Fault` 例外類的實例。如果*methodresponse* "
"為真，則只能回傳一個值，這意味著*params* 的長度必須為 "
"1。*encoding*（如果提供）是要在生成的 XML 中使用的編碼；預設為 UTF-8。 "
"Python 的 :const:`None` 值不能在標準 XML-RPC 中使用；要允許通過擴充使用它，"
"請為 *allow_none* 提供一個真值。"

#: ../../library/xmlrpc.client.rst:537
#, fuzzy
msgid ""
"Convert an XML-RPC request or response into Python objects, a ``(params, "
"methodname)``.  *params* is a tuple of argument; *methodname* is a string, "
"or ``None`` if no method name is present in the packet. If the XML-RPC "
"packet represents a fault condition, this function will raise a :exc:`Fault` "
"exception. The *use_builtin_types* flag can be used to cause date/time "
"values to be presented as :class:`datetime.datetime` objects and binary data "
"to be presented as :class:`bytes` objects; this flag is false by default."
msgstr ""
"將 XML-RPC 請求或響應轉換為 Python 物件，``(params, methodname)``。 *params* "
"是參數元組； *methodname* 是一個字串，如果資料包中沒有方法名稱，則為 "
"``None``。如果 XML-RPC 資料包表示故障情況，此函式將引發 :exc:`Fault` 例外。 "
"*use_builtin_types* 旗標可用於使日期/時間值顯示為 :class:`datetime.datetime` "
"物件，將二進位資料顯示為 :class:`bytes` 物件；預設情況下此旗標為 false。"

#: ../../library/xmlrpc.client.rst:545
#, fuzzy
msgid ""
"The obsolete *use_datetime* flag is similar to *use_builtin_types* but it "
"applies only to date/time values."
msgstr "過時的 *use_datetime* 旗標類似於 *use_builtin_types* "
"但它僅適用於日期/時間值。"

#: ../../library/xmlrpc.client.rst:555
#, fuzzy
msgid "Example of Client Usage"
msgstr "用戶端使用示例"

#: ../../library/xmlrpc.client.rst:572
#, fuzzy
msgid ""
"To access an XML-RPC server through a HTTP proxy, you need to define a "
"custom transport.  The following example shows how::"
msgstr "要通過 HTTP 代理訪問 XML-RPC "
"伺服器，您需要定義自定義傳輸。以下示例顯示瞭如何："

#: ../../library/xmlrpc.client.rst:597
#, fuzzy
msgid "Example of Client and Server Usage"
msgstr "用戶端和伺服器使用示例"

#: ../../library/xmlrpc.client.rst:599
#, fuzzy
msgid "See :ref:`simplexmlrpcserver-example`."
msgstr "請參閱 :ref:`simplexmlrpcserver-example`。"

#: ../../library/xmlrpc.client.rst:603
msgid "Footnotes"
msgstr "註解"

#: ../../library/xmlrpc.client.rst:604
#, fuzzy
msgid ""
"This approach has been first presented in `a discussion on xmlrpc.com "
"<https://web.archive.org/web/20060624230303/http://www.xmlrpc.com/discuss/"
"msgReader$1208?mode=topic>`_."
msgstr ""
"這種方法首先出現在`關於 xmlrpc.com 的討論 <https://web.archive.org/web/"
"20060624230303/http://www.xmlrpc.com/discuss/msgReader$1208?mode=topic>`_ ."
