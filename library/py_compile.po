# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-30 00:15+0000\n"
"PO-Revision-Date: 2018-05-23 16:08+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/py_compile.rst:2
msgid ":mod:`py_compile` --- Compile Python source files"
msgstr ":mod:`py_compile` --- 編譯 Python 原始檔案"

#: ../../library/py_compile.rst:10
msgid "**Source code:** :source:`Lib/py_compile.py`"
msgstr "**原始碼：**\\ :source:`Lib/py_compile.py`"

#: ../../library/py_compile.rst:16
#, fuzzy
msgid ""
"The :mod:`py_compile` module provides a function to generate a byte-code "
"file from a source file, and another function used when the module source "
"file is invoked as a script."
msgstr ":mod:`py_compile` 模組提供了從源文件生成位元組碼文件的功能，以及模組源文件作"
"為腳本呼叫時使用的另一個功能。"

#: ../../library/py_compile.rst:20
#, fuzzy
msgid ""
"Though not often needed, this function can be useful when installing modules "
"for shared use, especially if some of the users may not have permission to "
"write the byte-code cache files in the directory containing the source code."
msgstr "雖然不經常需要，但在安裝共享使用的模組時此功能很有用，尤其是當某些使用者可能"
"沒有權限在包含源程式碼的目錄中寫入位元組碼快取文件時。"

#: ../../library/py_compile.rst:27
#, fuzzy
msgid ""
"Exception raised when an error occurs while attempting to compile the file."
msgstr "嘗試編譯文件時發生錯誤時引發例外。"

#: ../../library/py_compile.rst:32
#, fuzzy
msgid ""
"Compile a source file to byte-code and write out the byte-code cache file. "
"The source code is loaded from the file named *file*.  The byte-code is "
"written to *cfile*, which defaults to the :pep:`3147`/:pep:`488` path, "
"ending in ``.pyc``. For example, if *file* is ``/foo/bar/baz.py`` *cfile* "
"will default to ``/foo/bar/__pycache__/baz.cpython-32.pyc`` for Python 3.2.  "
"If *dfile* is specified, it is used instead of *file* as the name of the "
"source file from which source lines are obtained for display in exception "
"tracebacks. If *doraise* is true, a :exc:`PyCompileError` is raised when an "
"error is encountered while compiling *file*. If *doraise* is false (the "
"default), an error string is written to ``sys.stderr``, but no exception is "
"raised.  This function returns the path to byte-compiled file, i.e. whatever "
"*cfile* value was used."
msgstr ""
"將源文件編譯為位元組碼並寫出位元組碼快取文件。源程式碼從名為 *file* "
"的文件中加載。位元組碼寫入 *cfile*，預設為 :pep:`3147`/:pep:`488` 路徑，以 ``"
".pyc`` 結尾。例如，如果 *file* 是 ``/foo/bar/baz.py`` 對於 Python 3."
"2，*cfile* 將預設為 ``/foo/bar/__pycache__/baz.cpython-32.pyc``。如果指定了 "
"*dfile*，則使用它代替 *file* "
"作為源文件的名稱，從中獲取源行以在例外回溯中顯示。如果 *doraise* 為真，"
"則在編譯 *file* 時遇到錯誤時會引發 :exc:`PyCompileError`。如果 *doraise* 為 "
"false（預設值），則會將錯誤字串寫入 ``sys."
"stderr``，但不會引發例外。此函式回傳位元組編譯文件的路徑，即使用的任何 "
"*cfile* 值。"

#: ../../library/py_compile.rst:46
#, fuzzy
msgid ""
"The *doraise* and *quiet* arguments determine how errors are handled while "
"compiling file. If *quiet* is 0 or 1, and *doraise* is false, the default "
"behaviour is enabled: an error string is written to ``sys.stderr``, and the "
"function returns ``None`` instead of a path. If *doraise* is true, a :exc:"
"`PyCompileError` is raised instead. However if *quiet* is 2, no message is "
"written, and *doraise* has no effect."
msgstr ""
"*doraise* 和 *quiet* 參數決定了編譯文件時如何處理錯誤。如果 *quiet* 為 0 或 "
"1，並且 *doraise* 為 false，則啟用預設行為：將錯誤字串寫入 ``sys.stderr``，"
"函式回傳 ``None`` 而不是路徑。如果 *doraise* 為真，則會引發 "
":exc:`PyCompileError`。但是，如果 *quiet* 為 2，則不會寫入任何消息，並且 "
"*doraise* 無效。"

#: ../../library/py_compile.rst:53
#, fuzzy
msgid ""
"If the path that *cfile* becomes (either explicitly specified or computed) "
"is a symlink or non-regular file, :exc:`FileExistsError` will be raised. "
"This is to act as a warning that import will turn those paths into regular "
"files if it is allowed to write byte-compiled files to those paths. This is "
"a side-effect of import using file renaming to place the final byte-compiled "
"file into place to prevent concurrent file writing issues."
msgstr ""
"如果 *cfile* 成為（顯式指定或計算）的路徑是符號鏈接或非常規文件，則會引發 :ex"
"c:`FileExistsError`。這是作為一個警告，如果允許將位元組編譯文件寫入這些路徑，"
"則 import 會將這些路徑轉換為常規文件。這是使用文件重命名將最終位元組編譯文件"
"放置到位以防止並發文件寫入問題的導入的副作用。"

#: ../../library/py_compile.rst:60
#, fuzzy
msgid ""
"*optimize* controls the optimization level and is passed to the built-in :"
"func:`compile` function.  The default of ``-1`` selects the optimization "
"level of the current interpreter."
msgstr "*optimize* 控制最佳化級別並傳遞給內建的 :func:`compile` 函式。預設值 ``-1`` "
"選擇當前直譯器的最佳化級別。"

#: ../../library/py_compile.rst:64
#, fuzzy
msgid ""
"*invalidation_mode* should be a member of the :class:`PycInvalidationMode` "
"enum and controls how the generated bytecode cache is invalidated at "
"runtime.  The default is :attr:`PycInvalidationMode.CHECKED_HASH` if the :"
"envvar:`SOURCE_DATE_EPOCH` environment variable is set, otherwise the "
"default is :attr:`PycInvalidationMode.TIMESTAMP`."
msgstr ""
"*invalidation_mode* 應該是 PycInvalidationMode "
"枚舉的成員，並控制生成的位元組碼快取在運行時如何失效。如果設定了 "
"SOURCE_DATE_EPOCH 環境變數，則預設值為 PycInvalidationMode.CHECKED_HASH，"
"否則預設值為 PycInvalidationMode.TIMESTAMP。"

#: ../../library/py_compile.rst:70
#, fuzzy
msgid ""
"Changed default value of *cfile* to be :PEP:`3147`-compliant.  Previous "
"default was *file* + ``'c'`` (``'o'`` if optimization was enabled). Also "
"added the *optimize* parameter."
msgstr ""
"將 *cfile* 的預設值更改為符合 :PEP:`3147` 標準。以前的預設值是 *file* + "
"``'c'``（如果啟用了最佳化，則為 ``'o'``）。還新增了 *optimize* 參數。"

#: ../../library/py_compile.rst:75
#, fuzzy
msgid ""
"Changed code to use :mod:`importlib` for the byte-code cache file writing. "
"This means file creation/writing semantics now match what :mod:`importlib` "
"does, e.g. permissions, write-and-move semantics, etc. Also added the caveat "
"that :exc:`FileExistsError` is raised if *cfile* is a symlink or non-regular "
"file."
msgstr ""
"更改程式碼以使用 :mod:`importlib` 進行位元組碼快取文件寫入。這意味著文件建立/"
"寫入語義現在匹配 :mod:`importlib` "
"所做的，例如權限、寫入和移動語義等。還新增了以下警告：如果 *cfile* "
"是符號鏈接或非常規文件，則會引發 FileExistsError。"

#: ../../library/py_compile.rst:82
#, fuzzy
msgid ""
"The *invalidation_mode* parameter was added as specified in :pep:`552`. If "
"the :envvar:`SOURCE_DATE_EPOCH` environment variable is set, "
"*invalidation_mode* will be forced to :attr:`PycInvalidationMode."
"CHECKED_HASH`."
msgstr ""
"*invalidation_mode* 參數是按照 :pep:`552` 中的規定新增的。如果設定了 "
":envvar:`SOURCE_DATE_EPOCH` 環境變數，*invalidation_mode* 將被強制為 "
":attr:`PycInvalidationMode.CHECKED_HASH`。"

#: ../../library/py_compile.rst:88
#, fuzzy
msgid ""
"The :envvar:`SOURCE_DATE_EPOCH` environment variable no longer overrides the "
"value of the *invalidation_mode* argument, and determines its default value "
"instead."
msgstr ":envvar:`SOURCE_DATE_EPOCH` 環境變數不再覆蓋 *invalidation_mode* "
"參數的值，而是確定其預設值。"

#: ../../library/py_compile.rst:93
msgid "The *quiet* parameter was added."
msgstr "新增 *quiet* 參數。"

#: ../../library/py_compile.rst:99
#, fuzzy
msgid ""
"A enumeration of possible methods the interpreter can use to determine "
"whether a bytecode file is up to date with a source file. The ``.pyc`` file "
"indicates the desired invalidation mode in its header. See :ref:`pyc-"
"invalidation` for more information on how Python invalidates ``.pyc`` files "
"at runtime."
msgstr ""
"直譯器可用於確定位元組碼文件是否與源文件同步的可能方法的枚舉。 ``.pyc`` "
"文件在其標頭中指示所需的失效模式。有關 Python 如何在運行時使 .pyc "
"文件無效的更多資訊，請參閱 :ref:`pyc-invalidation`。"

#: ../../library/py_compile.rst:109
#, fuzzy
msgid ""
"The ``.pyc`` file includes the timestamp and size of the source file, which "
"Python will compare against the metadata of the source file at runtime to "
"determine if the ``.pyc`` file needs to be regenerated."
msgstr ""
"``.pyc`` 文件包括源文件的時間戳和大小，Python "
"將在運行時將其與源文件的元資料進行比較，以確定是否需要重新生成 ``.pyc`` "
"文件。"

#: ../../library/py_compile.rst:115
#, fuzzy
msgid ""
"The ``.pyc`` file includes a hash of the source file content, which Python "
"will compare against the source at runtime to determine if the ``.pyc`` file "
"needs to be regenerated."
msgstr "``.pyc`` 文件包含源文件內容的雜湊值，Python 將在運行時將其與源文件進行比較，"
"以確定是否需要重新生成 ``.pyc`` 文件。"

#: ../../library/py_compile.rst:121
#, fuzzy
msgid ""
"Like :attr:`CHECKED_HASH`, the ``.pyc`` file includes a hash of the source "
"file content. However, Python will at runtime assume the ``.pyc`` file is up "
"to date and not validate the ``.pyc`` against the source file at all."
msgstr ""
"與 :attr:`CHECKED_HASH` 一樣，`.pyc`` 文件包含源文件內容的雜湊值。然而，"
"Python 將在運行時假定 ``.pyc`` 文件是最新的，並且根本不會根據源文件驗證 ``."
"pyc``。"

#: ../../library/py_compile.rst:125
#, fuzzy
msgid ""
"This option is useful when the ``.pycs`` are kept up to date by some system "
"external to Python like a build system."
msgstr "當 ``.pycs`` 由 Python 外部的某些系統（如構建系統）保持最新時，此選項很有用。"

#: ../../library/py_compile.rst:130
#, fuzzy
msgid "Command-Line Interface"
msgstr "命令列界面"

#: ../../library/py_compile.rst:132
#, fuzzy
msgid ""
"This module can be invoked as a script to compile several source files.  The "
"files named in *filenames* are compiled and the resulting bytecode is cached "
"in the normal manner.  This program does not search a directory structure to "
"locate source files; it only compiles files named explicitly. The exit "
"status is nonzero if one of the files could not be compiled."
msgstr ""
"該模組可以作為腳本呼叫來編譯多個源文件。 *filenames* 中命名的文件被編譯，生成"
"的位元組碼以正常方式快取。該程式不搜索目錄結構來定位源文件；它只編譯明確命名"
"的文件。如果無法編譯其中一個文件，則退出狀態為非零。"

#: ../../library/py_compile.rst:144
#, fuzzy
msgid ""
"Positional arguments are files to compile.  If ``-`` is the only parameter, "
"the list of files is taken from standard input."
msgstr "位置參數是要編譯的文件。如果 ``-`` 是唯一的參數，則文件列表取自標準輸入。"

#: ../../library/py_compile.rst:149
#, fuzzy
msgid "Suppress errors output."
msgstr "抑制錯誤輸出。"

#: ../../library/py_compile.rst:151
msgid "Added support for ``-``."
msgstr "新增對 ``-`` 的支援。"

#: ../../library/py_compile.rst:154
msgid "Added support for :option:`-q`."
msgstr "新增對 :option:`-q` 的支援。"

#: ../../library/py_compile.rst:160
msgid "Module :mod:`compileall`"
msgstr ":mod:`compileall` 模組"

#: ../../library/py_compile.rst:161
#, fuzzy
msgid "Utilities to compile all Python source files in a directory tree."
msgstr "編譯目錄樹中所有 Python 源文件的實用程式。"
