# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-05 00:18+0000\n"
"PO-Revision-Date: 2018-05-23 16:01+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/faulthandler.rst:2
#, fuzzy
msgid ":mod:`faulthandler` --- Dump the Python traceback"
msgstr ":mod:`faulthandler` --- 轉儲 Python 回溯"

#: ../../library/faulthandler.rst:11
#, fuzzy
msgid ""
"This module contains functions to dump Python tracebacks explicitly, on a "
"fault, after a timeout, or on a user signal. Call :func:`faulthandler."
"enable` to install fault handlers for the :const:`SIGSEGV`, :const:"
"`SIGFPE`, :const:`SIGABRT`, :const:`SIGBUS`, and :const:`SIGILL` signals. "
"You can also enable them at startup by setting the :envvar:"
"`PYTHONFAULTHANDLER` environment variable or by using the :option:`-X` "
"``faulthandler`` command line option."
msgstr ""
"該模組包含在出現故障、超時後或使用者信號時顯式轉儲 Python 回溯的函式。呼叫 "
"faulthandler.enable 為 SIGSEGV、SIGSEGV、SIGFPE、SIGABRT、SIGBUS 和 SIGILL "
"安裝故障處理程式信號。您還可以通過設定 PYTHONFAULTHANDLER "
"環境變數或使用 :option:`-X` ``faulthandler`` 命令列選項在啟動時啟用它們。"

#: ../../library/faulthandler.rst:18
#, fuzzy
msgid ""
"The fault handler is compatible with system fault handlers like Apport or "
"the Windows fault handler. The module uses an alternative stack for signal "
"handlers if the :c:func:`sigaltstack` function is available. This allows it "
"to dump the traceback even on a stack overflow."
msgstr ""
"故障處理程式與系統故障處理程式相容，如 Apport 或 Windows 故障處理程式。如果 "
":c:func:`sigaltstack` 函式可用，該模組將使用替代堆疊作為信號處理程式。這允許"
"它甚至在堆疊溢出時轉儲回溯。"

#: ../../library/faulthandler.rst:23
#, fuzzy
msgid ""
"The fault handler is called on catastrophic cases and therefore can only use "
"signal-safe functions (e.g. it cannot allocate memory on the heap). Because "
"of this limitation traceback dumping is minimal compared to normal Python "
"tracebacks:"
msgstr ""
"故障處理程式在災難性情況下被呼叫，因此只能使用信號安全函式（例如，它不能在堆"
"上分配記憶體）。由於這個限制，與普通的 Python 回溯相比，回溯轉儲是最小的："

#: ../../library/faulthandler.rst:28
#, fuzzy
msgid ""
"Only ASCII is supported. The ``backslashreplace`` error handler is used on "
"encoding."
msgstr "僅支援 ASCII。 ``backslashreplace`` 錯誤處理程式用於編碼。"

#: ../../library/faulthandler.rst:30
#, fuzzy
msgid "Each string is limited to 500 characters."
msgstr "每個字串限制為 500 個字元。"

#: ../../library/faulthandler.rst:31
#, fuzzy
msgid ""
"Only the filename, the function name and the line number are displayed. (no "
"source code)"
msgstr "僅顯示文件名、函式名和行號。 （沒有源程式碼）"

#: ../../library/faulthandler.rst:33
#, fuzzy
msgid "It is limited to 100 frames and 100 threads."
msgstr "它被限制為 100 個幀和 100 個執行緒。"

#: ../../library/faulthandler.rst:34
#, fuzzy
msgid "The order is reversed: the most recent call is shown first."
msgstr "順序相反：最先顯示最近的呼叫。"

#: ../../library/faulthandler.rst:36
#, fuzzy
msgid ""
"By default, the Python traceback is written to :data:`sys.stderr`. To see "
"tracebacks, applications must be run in the terminal. A log file can "
"alternatively be passed to :func:`faulthandler.enable`."
msgstr ""
"預設情況下，Python 回溯寫入 :data:`sys."
"stderr`。要查看回溯，應用程式必須在終端中運行。日誌文件也可以傳遞給 "
":func:`faulthandler.enable`。"

#: ../../library/faulthandler.rst:40
#, fuzzy
msgid ""
"The module is implemented in C, so tracebacks can be dumped on a crash or "
"when Python is deadlocked."
msgstr "該模組是用 C 實作的，因此可以在崩潰或 Python 死鎖時轉儲回溯。"

#: ../../library/faulthandler.rst:43
#, fuzzy
msgid ""
"The :ref:`Python Development Mode <devmode>` calls :func:`faulthandler."
"enable` at Python startup."
msgstr ""
":ref:`Python 開發模式 <devmode>` 在 Python 啟動時呼叫 :func:`faulthandler."
"enable`。"

#: ../../library/faulthandler.rst:49
#, fuzzy
msgid "Module :mod:`pdb`"
msgstr "模組 :mod:`pdb`"

#: ../../library/faulthandler.rst:49
#, fuzzy
msgid "Interactive source code debugger for Python programs."
msgstr "Python 程式的交互式源程式碼除錯器。"

#: ../../library/faulthandler.rst:51
#, fuzzy
msgid "Module :mod:`traceback`"
msgstr "模組 :mod:`回溯`"

#: ../../library/faulthandler.rst:52
#, fuzzy
msgid ""
"Standard interface to extract, format and print stack traces of Python "
"programs."
msgstr "用於提取、格式化和印出 Python 程式堆疊跟踪的標準介面。"

#: ../../library/faulthandler.rst:55
#, fuzzy
msgid "Dumping the traceback"
msgstr "轉儲回溯"

#: ../../library/faulthandler.rst:59
#, fuzzy
msgid ""
"Dump the tracebacks of all threads into *file*. If *all_threads* is "
"``False``, dump only the current thread."
msgstr "將所有執行緒的回溯轉儲到 *file* 中。如果 *all_threads* "
"為 ``False``，則僅轉儲當前執行緒。"

#: ../../library/faulthandler.rst:62
#, fuzzy
msgid ""
":func:`traceback.print_tb`, which can be used to print a traceback object."
msgstr ":func:`traceback.print_tb`，可用於印出回溯物件。"

#: ../../library/faulthandler.rst:64 ../../library/faulthandler.rst:82
#: ../../library/faulthandler.rst:124 ../../library/faulthandler.rst:146
#, fuzzy
msgid "Added support for passing file descriptor to this function."
msgstr "新增了對將文件描述器傳遞給此函式的支援。"

#: ../../library/faulthandler.rst:69
#, fuzzy
msgid "Fault handler state"
msgstr "故障處理器狀態"

#: ../../library/faulthandler.rst:73
#, fuzzy
msgid ""
"Enable the fault handler: install handlers for the :const:`SIGSEGV`, :const:"
"`SIGFPE`, :const:`SIGABRT`, :const:`SIGBUS` and :const:`SIGILL` signals to "
"dump the Python traceback. If *all_threads* is ``True``, produce tracebacks "
"for every running thread. Otherwise, dump only the current thread."
msgstr ""
"啟用故障處理程式：為 SIGSEGV、SIGFPE、SIGABRT、SIGBUS 和 SIGILL "
"信號安裝處理程式以轉儲 Python 回溯。如果 *all_threads* "
"為 ``True``，則為每個正在運行的執行緒生成回溯。否則，僅轉儲當前執行緒。"

#: ../../library/faulthandler.rst:79
#, fuzzy
msgid ""
"The *file* must be kept open until the fault handler is disabled: see :ref:"
"`issue with file descriptors <faulthandler-fd>`."
msgstr ""
"*文件* 必須保持打開狀態，直到故障處理程式被禁用：參見 :ref:`issue with file "
"descriptors <faulthandler-fd>`。"

#: ../../library/faulthandler.rst:85
#, fuzzy
msgid "On Windows, a handler for Windows exception is also installed."
msgstr "在 Windows 上，還安裝了 Windows 例外處理程式。"

#: ../../library/faulthandler.rst:88
#, fuzzy
msgid ""
"The dump now mentions if a garbage collector collection is running if "
"*all_threads* is true."
msgstr "如果 *all_threads* 為真，轉儲現在會提到垃圾收集器是否正在運行。"

#: ../../library/faulthandler.rst:94
#, fuzzy
msgid ""
"Disable the fault handler: uninstall the signal handlers installed by :func:"
"`enable`."
msgstr "禁用故障處理程式：卸載由 :func:`enable` 安裝的信號處理程式。"

#: ../../library/faulthandler.rst:99
#, fuzzy
msgid "Check if the fault handler is enabled."
msgstr "檢查是否啟用了故障處理程式。"

#: ../../library/faulthandler.rst:103
#, fuzzy
msgid "Dumping the tracebacks after a timeout"
msgstr "超時後轉儲回溯"

#: ../../library/faulthandler.rst:107
#, fuzzy
msgid ""
"Dump the tracebacks of all threads, after a timeout of *timeout* seconds, or "
"every *timeout* seconds if *repeat* is ``True``.  If *exit* is ``True``, "
"call :c:func:`_exit` with status=1 after dumping the tracebacks.  (Note :c:"
"func:`_exit` exits the process immediately, which means it doesn't do any "
"cleanup like flushing file buffers.) If the function is called twice, the "
"new call replaces previous parameters and resets the timeout. The timer has "
"a sub-second resolution."
msgstr ""
"在 *timeout* 秒超時後或每 *timeout* 秒轉儲所有執行緒的回溯，如果 *repeat* 為 "
"``True``。如果 *exit* 為 ``True``，則在轉儲回溯後呼叫 status=1 的 "
":c:func:`_exit`。 （注意 :c:func:`_exit` 會立即退出行程，這意味著它不會像刷新"
"文件緩衝區那樣進行任何清理。）如果該函式被呼叫兩次，新的呼叫將替換以前的參數"
"並重置超時。計時器具有亞秒級分辨率。"

#: ../../library/faulthandler.rst:115
#, fuzzy
msgid ""
"The *file* must be kept open until the traceback is dumped or :func:"
"`cancel_dump_traceback_later` is called: see :ref:`issue with file "
"descriptors <faulthandler-fd>`."
msgstr ""
"*文件* 必須保持打開狀態，直到回溯被轉儲或呼叫 :func:`cancel_dump_traceback_la"
"ter` :ref :ref:`issue with file descriptors <faulthandler-fd>`。"

#: ../../library/faulthandler.rst:119
#, fuzzy
msgid "This function is implemented using a watchdog thread."
msgstr "該功能是使用看門狗執行緒實作的。"

#: ../../library/faulthandler.rst:121
#, fuzzy
msgid "This function is now always available."
msgstr "此功能現在始終可用。"

#: ../../library/faulthandler.rst:129
#, fuzzy
msgid "Cancel the last call to :func:`dump_traceback_later`."
msgstr "取消對 :func:`dump_traceback_later` 的最後一次呼叫。"

#: ../../library/faulthandler.rst:133
#, fuzzy
msgid "Dumping the traceback on a user signal"
msgstr "在使用者信號上轉儲回溯"

#: ../../library/faulthandler.rst:137
#, fuzzy
msgid ""
"Register a user signal: install a handler for the *signum* signal to dump "
"the traceback of all threads, or of the current thread if *all_threads* is "
"``False``, into *file*. Call the previous handler if chain is ``True``."
msgstr ""
"註冊使用者信號：為 *signum* 信號安裝一個處理程式，以轉儲所有執行緒的回溯，"
"或者如果 *all_threads* 為 ``False``，則轉儲當前執行緒的回溯到 *file* 中。如果 "
"chain 為 ``True``，則呼叫前一個處理程式。"

#: ../../library/faulthandler.rst:141
#, fuzzy
msgid ""
"The *file* must be kept open until the signal is unregistered by :func:"
"`unregister`: see :ref:`issue with file descriptors <faulthandler-fd>`."
msgstr ""
"*file* 必須保持打開狀態，直到信號被 :func:`unregister` 取消註冊：參見 :ref:`"
"issue with file descriptors <faulthandler-fd>`。"

#: ../../library/faulthandler.rst:144 ../../library/faulthandler.rst:155
#, fuzzy
msgid "Not available on Windows."
msgstr "在 Windows 上不可用。"

#: ../../library/faulthandler.rst:151
#, fuzzy
msgid ""
"Unregister a user signal: uninstall the handler of the *signum* signal "
"installed by :func:`register`. Return ``True`` if the signal was registered, "
"``False`` otherwise."
msgstr ""
"註銷使用者信號：卸載由 :func:`register` 安裝的 *signum* "
"信號處理程式。如果信號已註冊，則回傳 ``True``，否則回傳 ``False``。"

#: ../../library/faulthandler.rst:161
#, fuzzy
msgid "Issue with file descriptors"
msgstr "文件描述器問題"

#: ../../library/faulthandler.rst:163
#, fuzzy
msgid ""
":func:`enable`, :func:`dump_traceback_later` and :func:`register` keep the "
"file descriptor of their *file* argument. If the file is closed and its file "
"descriptor is reused by a new file, or if :func:`os.dup2` is used to replace "
"the file descriptor, the traceback will be written into a different file. "
"Call these functions again each time that the file is replaced."
msgstr ""
":func:`enable`、:func:`dump_traceback_later` 和 :func:`register` 保留它們的 "
"*file* 參數的文件描述器。如果文件關閉並且其文件描述器被新文件重用，"
"或者如果使用 :func:`os.dup2` "
"替換文件描述器，回溯將寫入不同的文件。每次替換文件時再次呼叫這些函式。"

#: ../../library/faulthandler.rst:171
msgid "Example"
msgstr "範例"

#: ../../library/faulthandler.rst:173
#, fuzzy
msgid ""
"Example of a segmentation fault on Linux with and without enabling the fault "
"handler:"
msgstr "啟用和不啟用故障處理程式的 Linux 上的分段錯誤示例："
