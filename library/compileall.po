# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-13 00:17+0000\n"
"PO-Revision-Date: 2018-05-23 14:41+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/compileall.rst:2
#, fuzzy
msgid ":mod:`compileall` --- Byte-compile Python libraries"
msgstr ":mod:`compileall` --- 位元組編譯 Python 函式庫"

#: ../../library/compileall.rst:7
msgid "**Source code:** :source:`Lib/compileall.py`"
msgstr "**原始碼：**\\ :source:`Lib/compileall.py`"

#: ../../library/compileall.rst:11
#, fuzzy
msgid ""
"This module provides some utility functions to support installing Python "
"libraries.  These functions compile Python source files in a directory tree. "
"This module can be used to create the cached byte-code files at library "
"installation time, which makes them available for use even by users who "
"don't have write permission to the library directories."
msgstr ""
"該模組提供了一些實用函式來支援安裝 Python 庫。這些函式在目錄樹中編譯 Python "
"源文件。該模組可用於在庫安裝時建立快取的位元組碼文件，這使得它們甚至可供沒有"
"庫目錄寫入權限的使用者使用。"

#: ../../includes/wasm-notavail.rst:3
#, fuzzy
msgid ":ref:`Availability <availability>`: not Emscripten, not WASI."
msgstr ":ref:`Availability <availability>`：非 Emscripten、非 WASI。"

#: ../../includes/wasm-notavail.rst:5
#, fuzzy
msgid ""
"This module does not work or is not available on WebAssembly platforms "
"``wasm32-emscripten`` and ``wasm32-wasi``. See :ref:`wasm-availability` for "
"more information."
msgstr ""
"此模組在 WebAssembly 平台 ``wasm32-emscripten`` 和 ``wasm32-wasi`` 上不起作用或不可用"
"。有關更多資訊，請參閱 :ref:`wasm-availability`。"

#: ../../library/compileall.rst:20
#, fuzzy
msgid "Command-line use"
msgstr "命令列使用"

#: ../../library/compileall.rst:22
#, fuzzy
msgid ""
"This module can work as a script (using :program:`python -m compileall`) to "
"compile Python sources."
msgstr "該模組可以作為腳本（使用 :program:`python -m compileall`）來編譯 Python "
"源程式碼。"

#: ../../library/compileall.rst:30
#, fuzzy
msgid ""
"Positional arguments are files to compile or directories that contain source "
"files, traversed recursively.  If no argument is given, behave as if the "
"command line was ``-l <directories from sys.path>``."
msgstr ""
"位置參數是要編譯的文件或包含源文件的目錄，遞迴遍歷。如果沒有給出參數，則表現"
"得好像命令列是“-l <directories from sys.path>”。"

#: ../../library/compileall.rst:36
#, fuzzy
msgid ""
"Do not recurse into subdirectories, only compile source code files directly "
"contained in the named or implied directories."
msgstr "不要遞迴到子目錄，只編譯直接包含在命名或隱含目錄中的源程式碼文件。"

#: ../../library/compileall.rst:41
#, fuzzy
msgid "Force rebuild even if timestamps are up-to-date."
msgstr "即使時間戳是最新的，也強制重建。"

#: ../../library/compileall.rst:45
#, fuzzy
msgid ""
"Do not print the list of files compiled. If passed once, error messages will "
"still be printed. If passed twice (``-qq``), all output is suppressed."
msgstr "不要印出編譯的文件列表。如果通過一次，仍然會印出錯誤消息。如果傳遞兩次（``-qq"
"``），所有輸出都會被抑制。"

#: ../../library/compileall.rst:50
#, fuzzy
msgid ""
"Directory prepended to the path to each file being compiled.  This will "
"appear in compilation time tracebacks, and is also compiled in to the byte-"
"code file, where it will be used in tracebacks and other messages in cases "
"where the source file does not exist at the time the byte-code file is "
"executed."
msgstr ""
"目錄前置到每個正在編譯的文件的路徑。這將出現在編譯時回溯中，並且還會編譯到位"
"元組碼文件中，在執行位元組碼文件時源文件不存在的情況下，它將在回溯和其他消息"
"中使用。"

#: ../../library/compileall.rst:59
#, fuzzy
msgid ""
"Remove (``-s``) or append (``-p``) the given prefix of paths recorded in the "
"``.pyc`` files. Cannot be combined with ``-d``."
msgstr "刪除（``-s``）或附加（``-p``）記錄在``."
"pyc``文件中的給定路徑前綴。不能與 ``-d``結合使用。"

#: ../../library/compileall.rst:65
#, fuzzy
msgid ""
"regex is used to search the full path to each file considered for "
"compilation, and if the regex produces a match, the file is skipped."
msgstr "正則表達式用於搜索考慮編譯的每個文件的完整路徑，如果正則表達式產生匹配項，則"
"跳過該文件。"

#: ../../library/compileall.rst:70
#, fuzzy
msgid ""
"Read the file ``list`` and add each line that it contains to the list of "
"files and directories to compile.  If ``list`` is ``-``, read lines from "
"``stdin``."
msgstr ""
"讀取文件 ``list`` 並將它包含的每一行新增到要編譯的文件和目錄列表中。如果 "
"``list`` 是 ``-``，則從 ``stdin`` 中讀取行。"

#: ../../library/compileall.rst:76
#, fuzzy
msgid ""
"Write the byte-code files to their legacy locations and names, which may "
"overwrite byte-code files created by another version of Python.  The default "
"is to write files to their :pep:`3147` locations and names, which allows "
"byte-code files from multiple versions of Python to coexist."
msgstr ""
"將位元組碼文件寫入它們的舊位置和名稱，這可能會覆蓋由另一個版本的 Python "
"建立的位元組碼文件。預設是將文件寫入它們的 :pep:`3147` 位置和名稱，"
"這允許來自多個 Python 版本的位元組碼文件共存。"

#: ../../library/compileall.rst:83
#, fuzzy
msgid ""
"Control the maximum recursion level for subdirectories. If this is given, "
"then ``-l`` option will not be taken into account. :program:`python -m "
"compileall <directory> -r 0` is equivalent to :program:`python -m compileall "
"<directory> -l`."
msgstr ""
"控制子目錄的最大遞迴級別。如果給出，則不會考慮 ``-l``選項。 :program:`python -m "
"compileall <directory> -r 0` 等同於 :program:`python -m compileall "
"<directory> -l`。"

#: ../../library/compileall.rst:90
#, fuzzy
msgid ""
"Use *N* workers to compile the files within the given directory. If ``0`` is "
"used, then the result of :func:`os.cpu_count()` will be used."
msgstr "使用 *N* worker 編譯給定目錄中的文件。如果使用 ``0``，則將使用 :func:`os."
"cpu_count()` 的結果。"

#: ../../library/compileall.rst:96
#, fuzzy
msgid ""
"Control how the generated byte-code files are invalidated at runtime. The "
"``timestamp`` value, means that ``.pyc`` files with the source timestamp and "
"size embedded will be generated. The ``checked-hash`` and ``unchecked-hash`` "
"values cause hash-based pycs to be generated. Hash-based pycs embed a hash "
"of the source file contents rather than a timestamp. See :ref:`pyc-"
"invalidation` for more information on how Python validates bytecode cache "
"files at runtime. The default is ``timestamp`` if the :envvar:"
"`SOURCE_DATE_EPOCH` environment variable is not set, and ``checked-hash`` if "
"the ``SOURCE_DATE_EPOCH`` environment variable is set."
msgstr ""
"控制生成的位元組碼文件在運行時如何失效。 ``timestamp`` "
"值表示將生成嵌入了源時間戳和大小的 ``.pyc`` 文件。 ``checked-hash`` 和 "
"``unchecked-hash`` 值導致生成基於散列的 pycs。基於雜湊的 pycs "
"嵌入源文件內容的雜湊而不是時間戳。有關 Python "
"如何在運行時驗證位元組碼快取文件的更多資訊，請參閱 :ref:`pyc-invalidation`。"
"如果未設定 :envvar:`SOURCE_DATE_EPOCH` 環境變數，則預設為 ``timestamp``，"
"如果設定了 ``SOURCE_DATE_EPOCH`` 環境變數，則預設為 ``checked-hash``。"

#: ../../library/compileall.rst:109
#, fuzzy
msgid ""
"Compile with the given optimization level. May be used multiple times to "
"compile for multiple levels at a time (for example, ``compileall -o 1 -o "
"2``)."
msgstr "使用給定的最佳化級別進行編譯。可以多次使用以一次編譯多個級別（例如，``"
"compileall -o 1 -o 2``）。"

#: ../../library/compileall.rst:115
#, fuzzy
msgid "Ignore symlinks pointing outside the given directory."
msgstr "忽略指向給定目錄之外的符號鏈接。"

#: ../../library/compileall.rst:119
#, fuzzy
msgid ""
"If two ``.pyc`` files with different optimization level have the same "
"content, use hard links to consolidate duplicate files."
msgstr "如果兩個不同最佳化級別的``.pyc``文件內容相同，使用硬鏈接合併重複文件。"

#: ../../library/compileall.rst:122
msgid "Added the ``-i``, ``-b`` and ``-h`` options."
msgstr "新增選項 ``-i``\\ 、\\ ``-b`` 與 ``-h``\\ 。"

#: ../../library/compileall.rst:125
#, fuzzy
msgid ""
"Added the  ``-j``, ``-r``, and ``-qq`` options.  ``-q`` option was changed "
"to a multilevel value.  ``-b`` will always produce a byte-code file ending "
"in ``.pyc``, never ``.pyo``."
msgstr ""
"新增了 ``-j``、 ``-r``和 ``-qq``選項。 ``-q`` 選項已更改為多級值。 ``-b`` "
"將始終生成以 ``.pyc`` 結尾的位元組碼文件，永遠不會生成``.pyo``。"

#: ../../library/compileall.rst:130
msgid "Added the ``--invalidation-mode`` option."
msgstr "新增選項 ``--invalidation-mode``\\ 。"

#: ../../library/compileall.rst:133
#, fuzzy
msgid ""
"Added the ``-s``, ``-p``, ``-e`` and ``--hardlink-dupes`` options. Raised "
"the default recursion limit from 10 to :py:func:`sys.getrecursionlimit()`. "
"Added the possibility to specify the ``-o`` option multiple times."
msgstr ""
"新增了 ``-s``、 ``-p``、 ``-e``和 ``--hardlink-dupes`` 選項。將預設遞迴限制從 10 提高到 "
":py:func:`sys.getrecursionlimit()`。新增了多次指定 ``-o``選項的可能性。"

#: ../../library/compileall.rst:140
#, fuzzy
msgid ""
"There is no command-line option to control the optimization level used by "
"the :func:`compile` function, because the Python interpreter itself already "
"provides the option: :program:`python -O -m compileall`."
msgstr ""
"沒有命令列選項來控制 :func:`compile` 函式使用的最佳化級別，因為 Python "
"直譯器本身已經提供了選項：:program:`python -O -m compileall`。"

#: ../../library/compileall.rst:144
#, fuzzy
msgid ""
"Similarly, the :func:`compile` function respects the :attr:`sys."
"pycache_prefix` setting. The generated bytecode cache will only be useful "
"if :func:`compile` is run with the same :attr:`sys.pycache_prefix` (if any) "
"that will be used at runtime."
msgstr ""
"同樣，:func:`compile` 函式遵循 :attr:`sys.pycache_prefix` 設定。"
"生成的位元組碼快取只有在 :func:`compile` 使用與運行時相同的 :attr:`sys."
"pycache_prefix`（如果有的話）運行時才有用。"

#: ../../library/compileall.rst:150
#, fuzzy
msgid "Public functions"
msgstr "公開職能"

#: ../../library/compileall.rst:154
#, fuzzy
msgid ""
"Recursively descend the directory tree named by *dir*, compiling all :file:`."
"py` files along the way. Return a true value if all the files compiled "
"successfully, and a false value otherwise."
msgstr "遞迴下降由 *dir* 命名的目錄樹，沿途編譯所有 :file:`.py` "
"文件。如果所有文件都編譯成功，則回傳真值，否則回傳假值。"

#: ../../library/compileall.rst:158
#, fuzzy
msgid ""
"The *maxlevels* parameter is used to limit the depth of the recursion; it "
"defaults to ``sys.getrecursionlimit()``."
msgstr "*maxlevels* 參數用於限制遞迴的深度；它預設為 ``sys.getrecursionlimit()``。"

#: ../../library/compileall.rst:161
#, fuzzy
msgid ""
"If *ddir* is given, it is prepended to the path to each file being compiled "
"for use in compilation time tracebacks, and is also compiled in to the byte-"
"code file, where it will be used in tracebacks and other messages in cases "
"where the source file does not exist at the time the byte-code file is "
"executed."
msgstr ""
"如果給出了 *ddir*，它會被新增到每個正在編譯的文件的路徑中以用於編譯時回溯，並"
"且還會被編譯到位元組碼文件中，在以下情況下它將用於回溯和其他消息執行位元組碼"
"文件時源文件不存在。"

#: ../../library/compileall.rst:167
#, fuzzy
msgid ""
"If *force* is true, modules are re-compiled even if the timestamps are up to "
"date."
msgstr "如果 *force* 為真，即使時間戳是最新的，也會重新編譯模組。"

#: ../../library/compileall.rst:170
#, fuzzy
msgid ""
"If *rx* is given, its ``search`` method is called on the complete path to "
"each file considered for compilation, and if it returns a true value, the "
"file is skipped. This can be used to exclude files matching a regular "
"expression, given as a :ref:`re.Pattern <re-objects>` object."
msgstr ""
"如果給出了 *rx*，它的 ``search`` 方法將在每個考慮編譯的文件的完整路徑上被呼叫"
"，如果它回傳一個真值，該文件將被跳過。這可用於排除與正則表達式匹配的文件，"
"作為 :ref:`re.Pattern <re-objects>` 對像給出。"

#: ../../library/compileall.rst:175 ../../library/compileall.rst:252
#, fuzzy
msgid ""
"If *quiet* is ``False`` or ``0`` (the default), the filenames and other "
"information are printed to standard out. Set to ``1``, only errors are "
"printed. Set to ``2``, all output is suppressed."
msgstr ""
"如果 *quiet* 為 ``False``或 ``0``（預設值），文件名和其他資訊將印出到標準輸出。"
"設定為 ``1``，只印出錯誤。設定為 ``2``，所有輸出都被抑制。"

#: ../../library/compileall.rst:179 ../../library/compileall.rst:256
#, fuzzy
msgid ""
"If *legacy* is true, byte-code files are written to their legacy locations "
"and names, which may overwrite byte-code files created by another version of "
"Python.  The default is to write files to their :pep:`3147` locations and "
"names, which allows byte-code files from multiple versions of Python to "
"coexist."
msgstr ""
"如果 *legacy* 為真，位元組碼文件將寫入其舊位置和名稱，"
"這可能會覆蓋由另一個版本的 Python 建立的位元組碼文件。預設是將文件寫入它們的 "
":pep:`3147` 位置和名稱，這允許來自多個 Python 版本的位元組碼文件共存。"

#: ../../library/compileall.rst:185 ../../library/compileall.rst:262
#, fuzzy
msgid ""
"*optimize* specifies the optimization level for the compiler.  It is passed "
"to the built-in :func:`compile` function. Accepts also a sequence of "
"optimization levels which lead to multiple compilations of one :file:`.py` "
"file in one call."
msgstr ""
"*optimize* 指定編譯器的最佳化級別。它被傳遞給內建的 :func:`compile` "
"函式。還接受一系列最佳化級別，這些級別導致在一次呼叫中多次編譯一個 :file:`."
"py` 文件。"

#: ../../library/compileall.rst:189
#, fuzzy
msgid ""
"The argument *workers* specifies how many workers are used to compile files "
"in parallel. The default is to not use multiple workers. If the platform "
"can't use multiple workers and *workers* argument is given, then sequential "
"compilation will be used as a fallback.  If *workers* is 0, the number of "
"cores in the system is used.  If *workers* is lower than ``0``, a :exc:"
"`ValueError` will be raised."
msgstr ""
"參數 *workers* 指定使用多少個 worker 來並行編譯文件。預設是不使用多個工人。"
"如果平台不能使用多個 worker 並且給出了 *workers* "
"參數，那麼順序編譯將用作後備。如果 *workers* 為 0，則使用系統中的核心數。"
"如果 *workers* 低於 ``0``，則會引發 :exc:`ValueError`。"

#: ../../library/compileall.rst:196 ../../library/compileall.rst:266
#, fuzzy
msgid ""
"*invalidation_mode* should be a member of the :class:`py_compile."
"PycInvalidationMode` enum and controls how the generated pycs are "
"invalidated at runtime."
msgstr ""
"*invalidation_mode* 應該是 :class:`py_compile.PycInvalidationMode` "
"枚舉的成員，並控制生成的 pycs 在運行時如何失效。"

#: ../../library/compileall.rst:200 ../../library/compileall.rst:270
#, fuzzy
msgid ""
"The *stripdir*, *prependdir* and *limit_sl_dest* arguments correspond to the "
"``-s``, ``-p`` and ``-e`` options described above. They may be specified as "
"``str`` or :py:class:`os.PathLike`."
msgstr ""
"*stripdir*、*prependdir* 和 *limit_sl_dest* "
"參數對應於上述的 ``-s``、 ``-p``和 ``-e``選項。它們可以指定為 ``str`` 或 :py:class:`os"
".PathLike`。"

#: ../../library/compileall.rst:204 ../../library/compileall.rst:274
#, fuzzy
msgid ""
"If *hardlink_dupes* is true and two ``.pyc`` files with different "
"optimization level have the same content, use hard links to consolidate "
"duplicate files."
msgstr "如果*hardlink_dupes* 為真且兩個最佳化級別不同的``.pyc`` "
"文件內容相同，則使用硬鏈接合併重複文件。"

#: ../../library/compileall.rst:207 ../../library/compileall.rst:305
msgid "Added the *legacy* and *optimize* parameter."
msgstr "新增 *legacy* 與 *optimize* 參數。"

#: ../../library/compileall.rst:210
msgid "Added the *workers* parameter."
msgstr "新增 *workers* 參數。"

#: ../../library/compileall.rst:213 ../../library/compileall.rst:279
#: ../../library/compileall.rst:308
#, fuzzy
msgid "*quiet* parameter was changed to a multilevel value."
msgstr "*quiet* 參數已更改為多級值。"

#: ../../library/compileall.rst:216 ../../library/compileall.rst:282
#: ../../library/compileall.rst:311
#, fuzzy
msgid ""
"The *legacy* parameter only writes out ``.pyc`` files, not ``.pyo`` files no "
"matter what the value of *optimize* is."
msgstr "*legacy* 參數只寫出 ``.pyc`` 文件，而不是 ``.pyo`` 文件，無論 *optimize* "
"的值是多少。"

#: ../../library/compileall.rst:220
#, fuzzy
msgid "Accepts a :term:`path-like object`."
msgstr "接受一個 :term:`path-like object`。"

#: ../../library/compileall.rst:223 ../../library/compileall.rst:286
#: ../../library/compileall.rst:315
msgid "The *invalidation_mode* parameter was added."
msgstr "新增 *invalidation_mode* 參數。"

#: ../../library/compileall.rst:226 ../../library/compileall.rst:289
#: ../../library/compileall.rst:318
#, fuzzy
msgid "The *invalidation_mode* parameter's default value is updated to None."
msgstr "*invalidation_mode* 參數的預設值更新為 None。"

#: ../../library/compileall.rst:229
#, fuzzy
msgid "Setting *workers* to 0 now chooses the optimal number of cores."
msgstr "將 *workers* 設定為 0 現在可以選擇最佳核心數。"

#: ../../library/compileall.rst:232
#, fuzzy
msgid ""
"Added *stripdir*, *prependdir*, *limit_sl_dest* and *hardlink_dupes* "
"arguments. Default value of *maxlevels* was changed from ``10`` to ``sys."
"getrecursionlimit()``"
msgstr ""
"新增了 *stripdir*、*prependdir*、*limit_sl_dest* 和 *hardlink_dupes* 參數。 "
"*maxlevels* 的預設值從 ``10`` 更改為 ``sys.getrecursionlimit()``"

#: ../../library/compileall.rst:238
#, fuzzy
msgid ""
"Compile the file with path *fullname*. Return a true value if the file "
"compiled successfully, and a false value otherwise."
msgstr "編譯路徑為 *fullname* 的文件。如果文件編譯成功則回傳真值，否則回傳假值。"

#: ../../library/compileall.rst:241
#, fuzzy
msgid ""
"If *ddir* is given, it is prepended to the path to the file being compiled "
"for use in compilation time tracebacks, and is also compiled in to the byte-"
"code file, where it will be used in tracebacks and other messages in cases "
"where the source file does not exist at the time the byte-code file is "
"executed."
msgstr ""
"如果給出了 *ddir*，它會被新增到正在編譯的文件的路徑中以用於編譯時回溯，並且還"
"會被編譯到位元組碼文件中，在以下情況下它將用於回溯和其他消息執行位元組碼文件"
"時源文件不存在。"

#: ../../library/compileall.rst:247
#, fuzzy
msgid ""
"If *rx* is given, its ``search`` method is passed the full path name to the "
"file being compiled, and if it returns a true value, the file is not "
"compiled and ``True`` is returned. This can be used to exclude files "
"matching a regular expression, given as a :ref:`re.Pattern <re-objects>` "
"object."
msgstr ""
"如果給出 *rx*，它的 ``search`` "
"方法將完整路徑名傳遞給正在編譯的文件，如果它回傳真值，則不編譯該文件並回傳 "
"``True``。這可用於排除與正則表達式匹配的文件，作為 :ref:`re.Pattern <re-"
"objects>` 對像給出。"

#: ../../library/compileall.rst:292
#, fuzzy
msgid ""
"Added *stripdir*, *prependdir*, *limit_sl_dest* and *hardlink_dupes* "
"arguments."
msgstr "新增了 *stripdir*、*prependdir*、*limit_sl_dest* 和 *hardlink_dupes* 參數。"

#: ../../library/compileall.rst:297
#, fuzzy
msgid ""
"Byte-compile all the :file:`.py` files found along ``sys.path``. Return a "
"true value if all the files compiled successfully, and a false value "
"otherwise."
msgstr "位元組編譯沿 ``sys.path`` 找到的所有 :file:`.py` "
"文件。如果所有文件都編譯成功，則回傳真值，否則回傳假值。"

#: ../../library/compileall.rst:300
#, fuzzy
msgid ""
"If *skip_curdir* is true (the default), the current directory is not "
"included in the search.  All other parameters are passed to the :func:"
"`compile_dir` function.  Note that unlike the other compile functions, "
"``maxlevels`` defaults to ``0``."
msgstr ""
"如果 *skip_curdir* 為真（預設），當前目錄不包括在搜索中。"
"所有其他參數都傳遞給 :func:`compile_dir` "
"函式。請注意，與其他編譯函式不同，``maxlevels`` 預設為 ``0``。"

#: ../../library/compileall.rst:321
#, fuzzy
msgid ""
"To force a recompile of all the :file:`.py` files in the :file:`Lib/` "
"subdirectory and all its subdirectories::"
msgstr "強制重新編譯 :file:`Lib/` 子目錄及其所有子目錄中的所有 :file:`.py` 文件："

#: ../../library/compileall.rst:338
msgid "Module :mod:`py_compile`"
msgstr ":mod:`py_compile` 模組"

#: ../../library/compileall.rst:339
#, fuzzy
msgid "Byte-compile a single source file."
msgstr "位元組編譯單個源文件。"
