# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-24 00:16+0000\n"
"PO-Revision-Date: 2023-04-26 02:54+0800\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.2.2\n"

#: ../../library/sys.rst:2
msgid ":mod:`sys` --- System-specific parameters and functions"
msgstr ":mod:`sys` --- 系統特定的參數與函式"

#: ../../library/sys.rst:9
#, fuzzy
msgid ""
"This module provides access to some variables used or maintained by the "
"interpreter and to functions that interact strongly with the interpreter. It "
"is always available."
msgstr "該模組提供對直譯器使用或維護的一些變數以及與直譯器進行強烈交互的函式的訪問。"
"它始終可用。"

#: ../../library/sys.rst:16
#, fuzzy
msgid ""
"On POSIX systems where Python was built with the standard ``configure`` "
"script, this contains the ABI flags as specified by :pep:`3149`."
msgstr "在使用標準 ``configure`` 腳本構建 Python 的 POSIX 系統上，它包含 :pep: ``3149``"
"指定的 ABI 旗標。"

#: ../../library/sys.rst:19
#, fuzzy
msgid ""
"Default flags became an empty string (``m`` flag for pymalloc has been "
"removed)."
msgstr "預設旗標變為空字串（pymalloc 的``m`` 旗標已被刪除）。"

#: ../../library/sys.rst:28
#, fuzzy
msgid ""
"Append the callable *hook* to the list of active auditing hooks for the "
"current (sub)interpreter."
msgstr "將可呼叫的 *hook* 新增到當前（子）直譯器的活動審計掛鉤列表中。"

#: ../../library/sys.rst:31
#, fuzzy
msgid ""
"When an auditing event is raised through the :func:`sys.audit` function, "
"each hook will be called in the order it was added with the event name and "
"the tuple of arguments. Native hooks added by :c:func:`PySys_AddAuditHook` "
"are called first, followed by hooks added in the current (sub)interpreter.  "
"Hooks can then log the event, raise an exception to abort the operation, or "
"terminate the process entirely."
msgstr ""
"當通過 :func:`sys.audit` "
"函式引發審計事件時，每個掛鉤將按照新增事件名稱和參數元組的順序呼叫。 "
":c:func:`PySys_AddAuditHook` 新增的本機掛鉤首先被呼叫，然後是在當前（子）直譯"
"器中新增的掛鉤。然後掛鉤可以記錄事件、引發例外以中止操作或完全終止行程。"

#: ../../library/sys.rst:38
#, fuzzy
msgid ""
"Note that audit hooks are primarily for collecting information about "
"internal or otherwise unobservable actions, whether by Python or libraries "
"written in Python. They are not suitable for implementing a \"sandbox\". In "
"particular, malicious code can trivially disable or bypass hooks added using "
"this function. At a minimum, any security-sensitive hooks must be added "
"using the C API :c:func:`PySys_AddAuditHook` before initialising the "
"runtime, and any modules allowing arbitrary memory modification (such as :"
"mod:`ctypes`) should be completely removed or closely monitored."
msgstr ""
"請注意，審計掛鉤主要用於收集有關內部或其他不可觀察的操作的資訊，無論是通過 "
"Python 還是用 Python 編寫的庫。它們不適合實施“沙盒”。特別是，惡意程式碼可以輕"
"而易舉地禁用或繞過使用此功能新增的掛鉤。至少，在初始化運行時之前，必須使用 C "
"API 新增任何安全敏感的掛鉤 :c:func:`PySys_AddAuditHook`，並且應完全刪除任何允"
"許任意記憶體修改的模組（例如 :mod:`ctypes`）或密切監視。"

#: ../../library/sys.rst:47
#, fuzzy
msgid ""
"Raises an :ref:`auditing event <auditing>` ``sys.addaudithook`` with no "
"arguments."
msgstr ""
"引發一個不附帶引數的\\ :ref:`稽核事件 <auditing>` ``sys.addaudithook``。"

#: ../../library/sys.rst:49
#, fuzzy
msgid ""
"Calling :func:`sys.addaudithook` will itself raise an auditing event named "
"``sys.addaudithook`` with no arguments. If any existing hooks raise an "
"exception derived from :class:`RuntimeError`, the new hook will not be added "
"and the exception suppressed. As a result, callers cannot assume that their "
"hook has been added unless they control all existing hooks."
msgstr ""
"呼叫 :func:`sys.addaudithook` 本身會引發一個不帶任何引數、名為 ``sys."
"addaudithook`` 的稽核事件。如果任何現有的掛鉤函式引發從 :class:"
"`RuntimeError` 衍生的例外，則不會添加新的掛鉤函式並抑制異常。因此，除非呼叫者"
"控制所有已存在的掛鉤函式，他們不能假設他們的掛鉤函式已被添加。"

#: ../../library/sys.rst:56
msgid ""
"See the :ref:`audit events table <audit-events>` for all events raised by "
"CPython, and :pep:`578` for the original design discussion."
msgstr ""
"所有會被 CPython 所引發的事件請參考\\ :ref:`稽核事件總表 <audit-events>`、設"
"計相關討論請見 :pep:`578`。"

#: ../../library/sys.rst:63
#, fuzzy
msgid ""
"Exceptions derived from :class:`Exception` but not :class:`RuntimeError` are "
"no longer suppressed."
msgstr "來自 :class:`Exception` 但不是 :class:`RuntimeError` 的例外不再被抑制。"

#: ../../library/sys.rst:68
#, fuzzy
msgid ""
"When tracing is enabled (see :func:`settrace`), Python hooks are only traced "
"if the callable has a ``__cantrace__`` member that is set to a true value. "
"Otherwise, trace functions will skip the hook."
msgstr ""
"啟用跟踪時（請參閱 :func:`settrace`），僅當可呼叫物件具有設定為真值的``__can"
"trace__``成員時才跟踪Python掛鉤。否則，跟踪函式將跳過鉤子。"

#: ../../library/sys.rst:75
#, fuzzy
msgid ""
"The list of command line arguments passed to a Python script. ``argv[0]`` is "
"the script name (it is operating system dependent whether this is a full "
"pathname or not).  If the command was executed using the :option:`-c` "
"command line option to the interpreter, ``argv[0]`` is set to the string ``'-"
"c'``.  If no script name was passed to the Python interpreter, ``argv[0]`` "
"is the empty string."
msgstr ""
"傳遞給 Python 腳本的命令列參數列表。 ``argv[0]`` "
"是腳本名稱（是否為完整路徑名取決於操作系統）。如果命令是使用直譯器的 "
":option:`-c` 命令列選項執行的，``argv[0]`` 將設定為字串 ``'-c'``。"
"如果沒有腳本名稱被傳遞給 Python 直譯器，``argv[0]`` 就是空字串。"

#: ../../library/sys.rst:81
#, fuzzy
msgid ""
"To loop over the standard input, or the list of files given on the command "
"line, see the :mod:`fileinput` module."
msgstr "要遍歷標準輸入或命令列中給出的文件列表，請參閱 :mod:`fileinput` 模組。"

#: ../../library/sys.rst:84
msgid "See also :data:`sys.orig_argv`."
msgstr "另請參閱 :data:`sys.orig_argv`\\ 。"

#: ../../library/sys.rst:87
#, fuzzy
msgid ""
"On Unix, command line arguments are passed by bytes from OS.  Python decodes "
"them with filesystem encoding and \"surrogateescape\" error handler. When "
"you need original bytes, you can get it by ``[os.fsencode(arg) for arg in "
"sys.argv]``."
msgstr ""
"在 Unix 上，命令列參數從操作系統按位元組傳遞。 Python 使用文件系統編碼和“surr"
"ogateescape”錯誤處理程式對它們進行解碼。當你需要原始位元組時，你可以通過``[os"
".fsencode(arg) for arg in sys.argv]``獲得。"

#: ../../library/sys.rst:99
#, fuzzy
msgid ""
"Raise an auditing event and trigger any active auditing hooks. *event* is a "
"string identifying the event, and *args* may contain optional arguments with "
"more information about the event.  The number and types of arguments for a "
"given event are considered a public and stable API and should not be "
"modified between releases."
msgstr ""
"引發審核事件並觸發任何活動的審核掛鉤。 *event* 是標識事件的字串，*args* "
"可能包含可選參數，其中包含有關事件的更多資訊。"
"給定事件的參數數量和型別被視為公開且穩定的 API，不應在版本之間進行修改。"

#: ../../library/sys.rst:105
msgid ""
"For example, one auditing event is named ``os.chdir``. This event has one "
"argument called *path* that will contain the requested new working directory."
msgstr ""
"舉例來說，一個名為 ``os.chdir`` 的稽核事件擁有一個引數 *path*，其內容為所要求"
"的新工作目錄。"

#: ../../library/sys.rst:109
#, fuzzy
msgid ""
":func:`sys.audit` will call the existing auditing hooks, passing the event "
"name and arguments, and will re-raise the first exception from any hook. In "
"general, if an exception is raised, it should not be handled and the process "
"should be terminated as quickly as possible. This allows hook "
"implementations to decide how to respond to particular events: they can "
"merely log the event or abort the operation by raising an exception."
msgstr ""
":func:`sys.audit` 將呼叫現有的審計掛鉤，傳遞事件名稱和參數，並將重新引發任何"
"掛鉤的第一個例外。一般來說，如果出現例外，則不應處理，應盡快終止行程。這允許"
"掛鉤實作決定如何響應特定事件：它們可以僅記錄事件或通過引發例外來中止操作。"

#: ../../library/sys.rst:117
#, fuzzy
msgid ""
"Hooks are added using the :func:`sys.addaudithook` or :c:func:"
"`PySys_AddAuditHook` functions."
msgstr "使用 :func:`sys.addaudithook` 或 :c:func:`PySys_AddAuditHook` 函式新增掛鉤。"

#: ../../library/sys.rst:120
#, fuzzy
msgid ""
"The native equivalent of this function is :c:func:`PySys_Audit`. Using the "
"native function is preferred when possible."
msgstr "此函式的本機等效項是 :c:func:`PySys_Audit`。盡可能使用本機函式是首選。"

#: ../../library/sys.rst:123
msgid ""
"See the :ref:`audit events table <audit-events>` for all events raised by "
"CPython."
msgstr ""
"所有會被 CPython 所引發的事件請參考\\ :ref:`稽核事件總表 <audit-events>`。"

#: ../../library/sys.rst:131
#, fuzzy
msgid ""
"Set during Python startup, before ``site.py`` is run, to the same value as :"
"data:`exec_prefix`. If not running in a :ref:`virtual environment <venv-"
"def>`, the values will stay the same; if ``site.py`` finds that a virtual "
"environment is in use, the values of :data:`prefix` and :data:`exec_prefix` "
"will be changed to point to the virtual environment, whereas :data:"
"`base_prefix` and :data:`base_exec_prefix` will remain pointing to the base "
"Python installation (the one which the virtual environment was created from)."
msgstr ""
"在 Python 啟動期間，在運行 ``site.py`` 之前設定為與 :data:`exec_prefix` "
"相同的值。如果不是在 :ref:`虛擬環境 <venv-def>` 中運行，值將保持不變；如果 "
"``site.py`` 發現正在使用虛擬環境，則 :data:`prefix` 和 :data:`exec_prefix` "
"的值將更改為指向虛擬環境，而 :data:`base_prefix`和 :data:`base_exec_prefix` "
"將繼續指向基本的 Python 安裝（建立虛擬環境的那個）。"

#: ../../library/sys.rst:145
#, fuzzy
msgid ""
"Set during Python startup, before ``site.py`` is run, to the same value as :"
"data:`prefix`. If not running in a :ref:`virtual environment <venv-def>`, "
"the values will stay the same; if ``site.py`` finds that a virtual "
"environment is in use, the values of :data:`prefix` and :data:`exec_prefix` "
"will be changed to point to the virtual environment, whereas :data:"
"`base_prefix` and :data:`base_exec_prefix` will remain pointing to the base "
"Python installation (the one which the virtual environment was created from)."
msgstr ""
"在 Python 啟動期間，在運行 ``site.py`` 之前設定為與 :data:`prefix` 相同的值。"
"如果不是在 :ref:`虛擬環境 <venv-def>` 中運行，值將保持不變；如果 ``site.py`` "
"發現正在使用虛擬環境，則 :data:`prefix` 和 :data:`exec_prefix` "
"的值將更改為指向虛擬環境，而 :data:`base_prefix`和 :data:`base_exec_prefix` "
"將繼續指向基本的 Python 安裝（建立虛擬環境的那個）。"

#: ../../library/sys.rst:158
#, fuzzy
msgid ""
"An indicator of the native byte order.  This will have the value ``'big'`` "
"on big-endian (most-significant byte first) platforms, and ``'little'`` on "
"little-endian (least-significant byte first) platforms."
msgstr "本機位元組順序的指示符。這將在大端（最高有效位元組優先）平台上具有 ``大``值，在"
"小端（最低有效位元組優先）平台上具有 ``小``值。"

#: ../../library/sys.rst:165
#, fuzzy
msgid ""
"A tuple of strings containing the names of all modules that are compiled "
"into this Python interpreter.  (This information is not available in any "
"other way --- ``modules.keys()`` only lists the imported modules.)"
msgstr ""
"一個字串元組，包含編譯到此 Python 直譯器中的所有模組的名稱。 "
"（此資訊無法以任何其他方式獲得——``modules.keys()`` 僅列出導入的模組。）"

#: ../../library/sys.rst:169
msgid "See also the :attr:`sys.stdlib_module_names` list."
msgstr "另請參閱 :attr:`sys.stdlib_module_names` 清單。"

#: ../../library/sys.rst:174
#, fuzzy
msgid ""
"Call ``func(*args)``, while tracing is enabled.  The tracing state is saved, "
"and restored afterwards.  This is intended to be called from a debugger from "
"a checkpoint, to recursively debug some other code."
msgstr "在啟用跟踪的同時呼叫``func(*args)``。跟踪狀態被保存，並在之後恢復。這旨在從檢"
"查點的除錯器中呼叫，以遞迴地除錯一些其他程式碼。"

#: ../../library/sys.rst:181
#, fuzzy
msgid "A string containing the copyright pertaining to the Python interpreter."
msgstr "包含與 Python 直譯器有關的版權的字串。"

#: ../../library/sys.rst:186
#, fuzzy
msgid ""
"Clear the internal type cache. The type cache is used to speed up attribute "
"and method lookups. Use the function *only* to drop unnecessary references "
"during reference leak debugging."
msgstr "清除內部型別快取。型別快取用於加速屬性和方法查找。在引用洩漏除錯期間使用函式 "
"*only* 刪除不必要的引用。"

#: ../../library/sys.rst:190 ../../library/sys.rst:206
#: ../../library/sys.rst:219
#, fuzzy
msgid ""
"This function should be used for internal and specialized purposes only."
msgstr "此功能應僅用於內部和專門用途。"

#: ../../library/sys.rst:195
#, fuzzy
msgid ""
"Return a dictionary mapping each thread's identifier to the topmost stack "
"frame currently active in that thread at the time the function is called. "
"Note that functions in the :mod:`traceback` module can build the call stack "
"given such a frame."
msgstr ""
"回傳一個字典，將每個執行緒的標識符映射到呼叫該函式時該執行緒中當前活動的最頂"
"層堆疊幀。請注意，:mod:`traceback` "
"模組中的函式可以在給定這樣的框架的情況下構建呼叫堆疊。"

#: ../../library/sys.rst:200
#, fuzzy
msgid ""
"This is most useful for debugging deadlock:  this function does not require "
"the deadlocked threads' cooperation, and such threads' call stacks are "
"frozen for as long as they remain deadlocked.  The frame returned for a non-"
"deadlocked thread may bear no relationship to that thread's current activity "
"by the time calling code examines the frame."
msgstr ""
"這對於除錯死鎖最有用：該函式不需要死鎖執行緒的合作，只要它們保持死鎖狀態，這"
"些執行緒的呼叫堆疊就會被凍結。在呼叫程式碼檢查幀時，為非死鎖執行緒回傳的幀可"
"能與該執行緒的當前活動無關。"

#: ../../library/sys.rst:208
msgid ""
"Raises an :ref:`auditing event <auditing>` ``sys._current_frames`` with no "
"arguments."
msgstr ""
"引發一個不附帶引數的\\ :ref:`稽核事件 <auditing>` ``sys._current_frames``。"

#: ../../library/sys.rst:212
#, fuzzy
msgid ""
"Return a dictionary mapping each thread's identifier to the topmost "
"exception currently active in that thread at the time the function is "
"called. If a thread is not currently handling an exception, it is not "
"included in the result dictionary."
msgstr "回傳一個字典，將每個執行緒的標識符映射到呼叫該函式時該執行緒中當前活動的最頂"
"層例外。如果執行緒當前未處理例外，則它不會包含在結果字典中。"

#: ../../library/sys.rst:217
#, fuzzy
msgid "This is most useful for statistical profiling."
msgstr "這對於統計分析最有用。"

#: ../../library/sys.rst:221
msgid ""
"Raises an :ref:`auditing event <auditing>` ``sys._current_exceptions`` with "
"no arguments."
msgstr ""
"引發一個不附帶引數的\\ :ref:`稽核事件 <auditing>` ``sys."
"_current_exceptions``。"

#: ../../library/sys.rst:225
#, fuzzy
msgid ""
"This hook function is called by built-in :func:`breakpoint`.  By default, it "
"drops you into the :mod:`pdb` debugger, but it can be set to any other "
"function so that you can choose which debugger gets used."
msgstr ""
"這個鉤子函式由內建的 :func:`breakpoint` 呼叫。預設情況下，它會讓您進入 "
":mod:`pdb` 除錯器，但它可以設定為任何其他功能，以便您可以選擇使用哪個除錯器。"

#: ../../library/sys.rst:229
#, fuzzy
msgid ""
"The signature of this function is dependent on what it calls.  For example, "
"the default binding (e.g. ``pdb.set_trace()``) expects no arguments, but you "
"might bind it to a function that expects additional arguments (positional "
"and/or keyword).  The built-in ``breakpoint()`` function passes its "
"``*args`` and ``**kws`` straight through.  Whatever ``breakpointhooks()`` "
"returns is returned from ``breakpoint()``."
msgstr ""
"此函式的簽名取決於它呼叫的內容。例如，預設綁定（例如 ``pdb.set_trace()``）不"
"需要參數，但您可以將它綁定到需要額外參數（位置和/或關鍵字）的函式。內建的``br"
"eakpoint()`` 函式直接傳遞它的``*args`` 和``**kws``。無論 "
"``breakpointhooks()`` 回傳什麼，都是從 ``breakpoint()`` 回傳的。"

#: ../../library/sys.rst:236
#, fuzzy
msgid ""
"The default implementation first consults the environment variable :envvar:"
"`PYTHONBREAKPOINT`.  If that is set to ``\"0\"`` then this function returns "
"immediately; i.e. it is a no-op.  If the environment variable is not set, or "
"is set to the empty string, ``pdb.set_trace()`` is called. Otherwise this "
"variable should name a function to run, using Python's dotted-import "
"nomenclature, e.g. ``package.subpackage.module.function``. In this case, "
"``package.subpackage.module`` would be imported and the resulting module "
"must have a callable named ``function()``.  This is run, passing in "
"``*args`` and ``**kws``, and whatever ``function()`` returns, ``sys."
"breakpointhook()`` returns to the built-in :func:`breakpoint` function."
msgstr ""
"預設實作首先參考環境變數 :envvar:`PYTHONBREAKPOINT`。如果將其設定為 ``0``，則此"
"函式會立即回傳；也就是說，這是一個空操作。如果未設定環境變數，或設定為空字串"
"，則呼叫 pdb.set_trace() 。否則這個變數應該命名一個要運行的函式，使用 Python "
"的點分導入命名法，例如``package.subpackage.module."
"function``。在這種情況下，``package.subpackage.module`` "
"將被導入，並且生成的模組必須有一個名為``function()`` 的可呼叫物件。這是運行的"
"，傳入``*args``和``**kws``，無論``function()``回傳什麼，``sys."
"breakpointhook()``回傳到內建 :func:`breakpoint` 功能。"

#: ../../library/sys.rst:248
#, fuzzy
msgid ""
"Note that if anything goes wrong while importing the callable named by :"
"envvar:`PYTHONBREAKPOINT`, a :exc:`RuntimeWarning` is reported and the "
"breakpoint is ignored."
msgstr ""
"請注意，如果在導入由 :envvar:`PYTHONBREAKPOINT` "
"命名的可呼叫文件時出現任何錯誤，則會報告 :exc:`RuntimeWarning` 並忽略斷點。"

#: ../../library/sys.rst:252
#, fuzzy
msgid ""
"Also note that if ``sys.breakpointhook()`` is overridden programmatically, :"
"envvar:`PYTHONBREAKPOINT` is *not* consulted."
msgstr ""
"另請注意，如果以編程方式覆蓋 ``sys.breakpointhook()``，則 *不* "
"諮詢 :envvar:`PYTHONBREAKPOINT`。"

#: ../../library/sys.rst:259
#, fuzzy
msgid ""
"Print low-level information to stderr about the state of CPython's memory "
"allocator."
msgstr "將有關 CPython 記憶體分配器狀態的低階資訊印出到 stderr。"

#: ../../library/sys.rst:262
#, fuzzy
msgid ""
"If Python is :ref:`built in debug mode <debug-build>` (:option:`configure --"
"with-pydebug option <--with-pydebug>`), it also performs some expensive "
"internal consistency checks."
msgstr ""
"如果 Python 是在除錯模式 <debug-build> 中構建的 :ref:`configure --with-"
"pydebug option <--with-pydebug>`），它還會執行一些昂貴的內部一致性檢查。"

#: ../../library/sys.rst:270
#, fuzzy
msgid ""
"This function is specific to CPython.  The exact output format is not "
"defined here, and may change."
msgstr "此函式特定於 CPython。此處未定義確切的輸出格式，可能會更改。"

#: ../../library/sys.rst:276
#, fuzzy
msgid "Integer specifying the handle of the Python DLL."
msgstr "指定 Python DLL 句柄的整數。"

#: ../../library/sys.rst:278 ../../library/sys.rst:879
#: ../../library/sys.rst:1585 ../../library/sys.rst:1818
msgid ":ref:`Availability <availability>`: Windows."
msgstr ":ref:`適用 <availability>`：Windows。"

#: ../../library/sys.rst:283
#, fuzzy
msgid ""
"If *value* is not ``None``, this function prints ``repr(value)`` to ``sys."
"stdout``, and saves *value* in ``builtins._``. If ``repr(value)`` is not "
"encodable to ``sys.stdout.encoding`` with ``sys.stdout.errors`` error "
"handler (which is probably ``'strict'``), encode it to ``sys.stdout."
"encoding`` with ``'backslashreplace'`` error handler."
msgstr ""
"如果 *value* 不是 ``None``，則此函式將 ``repr(value)`` 印出到 ``sys."
"stdout``，並將 *value* 保存在 ``builtins._`` 中。如果 ``repr(value)`` "
"無法使用 ``sys.stdout.errors`` 錯誤處理程式（可能是 ``'strict'``）編碼為 "
"``sys.stdout.encoding``，將其編碼為``sys.stdout.encoding`` "
"帶有``'backslashreplace'`` 錯誤處理程式。"

#: ../../library/sys.rst:289
#, fuzzy
msgid ""
"``sys.displayhook`` is called on the result of evaluating an :term:"
"`expression` entered in an interactive Python session.  The display of these "
"values can be customized by assigning another one-argument function to ``sys."
"displayhook``."
msgstr ""
"``sys.displayhook`` 是根據在交互式 Python "
"會話中輸入的表達式的求值結果呼叫的。可以通過將另一個單參數函式分配給 "
"sys.displayhook 來自定義這些值的顯示。"

#: ../../library/sys.rst:293
#, fuzzy
msgid "Pseudo-code::"
msgstr "偽程式碼::"

#: ../../library/sys.rst:313
#, fuzzy
msgid "Use ``'backslashreplace'`` error handler on :exc:`UnicodeEncodeError`."
msgstr "在 UnicodeEncodeError 上使用 ``'backslashreplace'`` 錯誤處理程式。"

#: ../../library/sys.rst:319
#, fuzzy
msgid ""
"If this is true, Python won't try to write ``.pyc`` files on the import of "
"source modules.  This value is initially set to ``True`` or ``False`` "
"depending on the :option:`-B` command line option and the :envvar:"
"`PYTHONDONTWRITEBYTECODE` environment variable, but you can set it yourself "
"to control bytecode file generation."
msgstr ""
"如果這是真的，Python 將不會嘗試在導入源模組時編寫 ``.pyc`` 文件。"
"此值最初設定為 ``True`` 或 ``False`` 取決於 :option:`-B` "
"命令列選項和 :envvar:`PYTHONDONTWRITEBYTECODE` "
"環境變數，但您可以自己設定它以控制位元組碼文件生成。"

#: ../../library/sys.rst:328
#, fuzzy
msgid ""
"A :term:`named tuple` holding information about the environment on the "
"*wasm32-emscripten* platform. The named tuple is provisional and may change "
"in the future."
msgstr ""
"一個 :term:`named tuple` 保存有關 *wasm32-emscripten* "
"平台環境的資訊。命名的元組是臨時的，將來可能會改變。"

#: ../../library/sys.rst:335 ../../library/sys.rst:1026
#: ../../library/sys.rst:1701
msgid "Attribute"
msgstr "屬性"

#: ../../library/sys.rst:335 ../../library/sys.rst:1026
#: ../../library/sys.rst:1701
msgid "Explanation"
msgstr "解釋"

#: ../../library/sys.rst:337
msgid ":const:`emscripten_version`"
msgstr ":const:`emscripten_version`"

#: ../../library/sys.rst:337
#, fuzzy
msgid ""
"Emscripten version as tuple of ints (major, minor, micro), e.g. ``(3, 1, "
"8)``."
msgstr "Emscripten 版本作為整數元組（主要、次要、微型），例如``（3、1、8）``。"

#: ../../library/sys.rst:340
msgid ":const:`runtime`"
msgstr ":const:`runtime`"

#: ../../library/sys.rst:340
msgid ""
"Runtime string, e.g. browser user agent, ``'Node.js v14.18.2'``, or "
"``'UNKNOWN'``."
msgstr ""
"運行環境字串，例如瀏覽器使用者代理 (browser user agent) ``'Node.js "
"v14.18.2'`` 或 ``'UNKNOWN'``。"

#: ../../library/sys.rst:343
msgid ":const:`pthreads`"
msgstr ":const:`pthreads`"

#: ../../library/sys.rst:343
#, fuzzy
msgid "``True`` if Python is compiled with Emscripten pthreads support."
msgstr "``True`` 如果 Python 是使用 Emscripten pthreads 支援編譯的。"

#: ../../library/sys.rst:346
msgid ":const:`shared_memory`"
msgstr ":const:`shared_memory`"

#: ../../library/sys.rst:346
#, fuzzy
msgid "``True`` if Python is compiled with shared memory support."
msgstr "``True`` 如果 Python 是使用共享記憶體支援編譯的。"

#: ../../library/sys.rst:350
msgid ":ref:`Availability <availability>`: Emscripten."
msgstr ":ref:`適用 <availability>`：Emscripten。"

#: ../../library/sys.rst:357
#, fuzzy
msgid ""
"If this is set (not ``None``), Python will write bytecode-cache ``.pyc`` "
"files to (and read them from) a parallel directory tree rooted at this "
"directory, rather than from ``__pycache__`` directories in the source code "
"tree. Any ``__pycache__`` directories in the source code tree will be "
"ignored and new ``.pyc`` files written within the pycache prefix. Thus if "
"you use :mod:`compileall` as a pre-build step, you must ensure you run it "
"with the same pycache prefix (if any) that you will use at runtime."
msgstr ""
"如果設定了這個（不是``None``），Python會將位元組碼快取``.pyc``文件寫入（並從"
"中讀取）以該目錄為根的並行目錄樹，而不是來自``__pycache__``源程式碼樹中的目錄"
"。源程式碼樹中的任何 __pycache__ 目錄都將被忽略，新的 .pyc 文件將寫入 "
"pycache 前綴內。因此，如果您使用 :mod:`compileall` 作為預構建步驟，"
"則必須確保使用與運行時相同的 pycache 前綴（如果有）運行它。"

#: ../../library/sys.rst:365
#, fuzzy
msgid ""
"A relative path is interpreted relative to the current working directory."
msgstr "相對路徑被解釋為相對於當前工作目錄。"

#: ../../library/sys.rst:367
#, fuzzy
msgid ""
"This value is initially set based on the value of the :option:`-X` "
"``pycache_prefix=PATH`` command-line option or the :envvar:"
"`PYTHONPYCACHEPREFIX` environment variable (command-line takes precedence). "
"If neither are set, it is ``None``."
msgstr ""
"此值最初是根據 :option:`-X` ``pycache_prefix=PATH`` 命令列選項或 "
":envvar:`PYTHONPYCACHEPREFIX` "
"環境變數的值設定的（命令列優先）。如果兩者均未設定，則為 ``None`` 。"

#: ../../library/sys.rst:377
#, fuzzy
msgid ""
"This function prints out a given traceback and exception to ``sys.stderr``."
msgstr "此函式將給定的回溯和例外印出到“sys.stderr”。"

#: ../../library/sys.rst:379
#, fuzzy
msgid ""
"When an exception is raised and uncaught, the interpreter calls ``sys."
"excepthook`` with three arguments, the exception class, exception instance, "
"and a traceback object.  In an interactive session this happens just before "
"control is returned to the prompt; in a Python program this happens just "
"before the program exits.  The handling of such top-level exceptions can be "
"customized by assigning another three-argument function to ``sys."
"excepthook``."
msgstr ""
"當引發例外且未被捕獲時，直譯器使用三個參數呼叫“sys.excepthook”，例外類、例外"
"實例和回溯物件。在交互式會話中，這發生在控制權回傳到提示符之前；在 Python "
"程式中，這發生在程式退出之前。可以通過將另一個三參數函式分配給 "
"sys.excepthook 來自定義此類頂級例外的處理。"

#: ../../library/sys.rst:386
msgid ""
"Raises an :ref:`auditing event <auditing>` ``sys.excepthook`` with arguments "
"``hook``, ``type``, ``value``, ``traceback``."
msgstr ""
"引發一個附帶引數 ``hook``、``type``、``value``、``traceback`` 的\\ :ref:`稽核"
"事件 <auditing>` ``sys.excepthook``。"

#: ../../library/sys.rst:388
#, fuzzy
msgid ""
"Raise an auditing event ``sys.excepthook`` with arguments ``hook``, "
"``type``, ``value``, ``traceback`` when an uncaught exception occurs. If no "
"hook has been set, ``hook`` may be ``None``. If any hook raises an exception "
"derived from :class:`RuntimeError` the call to the hook will be suppressed. "
"Otherwise, the audit hook exception will be reported as unraisable and ``sys."
"excepthook`` will be called."
msgstr ""
"當發生未捕獲的例外時，使用參數 ``hook``、``type``、``value``、``traceback`` "
"引發審計事件 ``sys.excepthook``。如果沒有設定鉤子，``hook`` 可能是``None``。"
"如果任何掛鉤引發從 RuntimeError "
"派生的例外，則將抑制對掛鉤的呼叫。否則，審計掛鉤例外將被報告為無法引發，"
"並將呼叫 sys.excepthook。"

#: ../../library/sys.rst:397
#, fuzzy
msgid ""
"The :func:`sys.unraisablehook` function handles unraisable exceptions and "
"the :func:`threading.excepthook` function handles exception raised by :func:"
"`threading.Thread.run`."
msgstr ""
":func:`sys.unraisablehook` 函式處理無法引發的例外，而 :func:`threading."
"excepthook` 函式處理由 :func:`threading.Thread.run` 引發的例外。"

#: ../../library/sys.rst:407
#, fuzzy
msgid ""
"These objects contain the original values of ``breakpointhook``, "
"``displayhook``, ``excepthook``, and ``unraisablehook`` at the start of the "
"program.  They are saved so that ``breakpointhook``, ``displayhook`` and "
"``excepthook``, ``unraisablehook`` can be restored in case they happen to "
"get replaced with broken or alternative objects."
msgstr ""
"這些對像在程式開始時包含 ``breakpointhook`` 、 ``displayhook`` 、 ``excepthook``和“unrai"
"sablehook”的原始值。保存它們以便在它們碰巧被損壞或替代物件替換時可以恢復“brea"
"kpointhook”、 ``displayhook`` 和 ``excepthook``、 ``unraisablehook`` 。"

#: ../../library/sys.rst:413
msgid "__breakpointhook__"
msgstr "__breakpointhook__"

#: ../../library/sys.rst:416
msgid "__unraisablehook__"
msgstr "__unraisablehook__"

#: ../../library/sys.rst:422
#, fuzzy
msgid ""
"This function, when called while an exception handler is executing (such as "
"an ``except`` or ``except*`` clause), returns the exception instance that "
"was caught by this handler. When exception handlers are nested within one "
"another, only the exception handled by the innermost handler is accessible."
msgstr ""
"當例外處理程式正在執行時呼叫此函式（例如 ``except`` 或 ``except*`` 子句），回"
"傳此處理程式捕獲的例外實例。當例外處理程式相互嵌套時，只有最裡面的處理程式處"
"理的例外是可訪問的。"

#: ../../library/sys.rst:427
#, fuzzy
msgid "If no exception handler is executing, this function returns ``None``."
msgstr "如果沒有例外處理程式正在執行，則此函式回傳 ``None`` 。"

#: ../../library/sys.rst:434
#, fuzzy
msgid ""
"This function returns the old-style representation of the handled exception. "
"If an exception ``e`` is currently handled (so :func:`exception` would "
"return ``e``), :func:`exc_info` returns the tuple ``(type(e), e, e."
"__traceback__)``. That is, a tuple containing the type of the exception (a "
"subclass of :exc:`BaseException`), the exception itself, and a :ref:"
"`traceback object <traceback-objects>` which typically encapsulates the call "
"stack at the point where the exception last occurred."
msgstr ""
"此函式回傳已處理例外的舊式表示。如果當前處理了例外 ``e``（所以 "
":func:`exception` 將回傳 ``e``），:func:`exc_info` 回傳元組 ``(type(e), e, "
"e.__traceback__ ）``。也就是說，一個元組包含例外的型別（BaseException "
"的子類別）、例外本身和一個通常在該點封裝呼叫堆疊的 traceback 物件 <traceback-"
"objects>最後一次發生例外的地方。"

#: ../../library/sys.rst:445
#, fuzzy
msgid ""
"If no exception is being handled anywhere on the stack, this function return "
"a tuple containing three ``None`` values."
msgstr "如果堆疊上的任何地方都沒有處理例外，則此函式回傳一個包含三個 ``None`` 值的元組。"

#: ../../library/sys.rst:448
#, fuzzy
msgid ""
"The ``type`` and ``traceback`` fields are now derived from the ``value`` "
"(the exception instance), so when an exception is modified while it is being "
"handled, the changes are reflected in the results of subsequent calls to :"
"func:`exc_info`."
msgstr ""
"``type`` 和 ``traceback`` 欄位現在派生自 "
"``value``（例外實例），因此當例外在處理過程中被修改時，"
"更改會反映在後續的結果中呼叫 :func:`exc_info`。"

#: ../../library/sys.rst:456
#, fuzzy
msgid ""
"A string giving the site-specific directory prefix where the platform-"
"dependent Python files are installed; by default, this is also ``'/usr/"
"local'``.  This can be set at build time with the ``--exec-prefix`` argument "
"to the :program:`configure` script.  Specifically, all configuration files "
"(e.g. the :file:`pyconfig.h` header file) are installed in the directory :"
"file:`{exec_prefix}/lib/python{X.Y}/config`, and shared library modules are "
"installed in :file:`{exec_prefix}/lib/python{X.Y}/lib-dynload`, where *X.Y* "
"is the version number of Python, for example ``3.2``."
msgstr ""
"一個字串，給出安裝平台相關 Python 文件的特定於站點的目錄前綴；預設情況下，"
"這也是 ``'/usr/local'``。這可以在構建時使用 :program:`configure` 腳本的 "
"``--exec-prefix`` 參數進行設定。具體來說，所有配置文件（例如 :file:`pyconfig."
"h` 標頭檔）都安裝在目錄 :file:`{exec_prefix}/lib/python{X.Y}/config` "
"中，共享庫模組安裝在： file:`{exec_prefix}/lib/python{X.Y}/lib-dynload`，"
"其中 *X.Y* 是 Python 的版本號，例如 ``3.2``。"

#: ../../library/sys.rst:467
#, fuzzy
msgid ""
"If a :ref:`virtual environment <venv-def>` is in effect, this value will be "
"changed in ``site.py`` to point to the virtual environment. The value for "
"the Python installation will still be available, via :data:"
"`base_exec_prefix`."
msgstr ""
"如果 :ref:`虛擬環境 <venv-def>` 有效，則該值將在 ``site.py`` "
"中更改為指向虛擬環境。 Python 安裝的值仍然可用，通過 "
":data:`base_exec_prefix`。"

#: ../../library/sys.rst:475
#, fuzzy
msgid ""
"A string giving the absolute path of the executable binary for the Python "
"interpreter, on systems where this makes sense. If Python is unable to "
"retrieve the real path to its executable, :data:`sys.executable` will be an "
"empty string or ``None``."
msgstr ""
"一個字串，在有意義的系統上為 Python 直譯器提供可執行二進位文件的絕對路徑。"
"如果 Python 無法檢索其可執行文件的真實路徑，則 :data:`sys.executable` "
"將是一個空字串或 ``None``。"

#: ../../library/sys.rst:483
#, fuzzy
msgid ""
"Raise a :exc:`SystemExit` exception, signaling an intention to exit the "
"interpreter."
msgstr "引發 :exc:`SystemExit` 例外，表明有意退出直譯器。"

#: ../../library/sys.rst:485
#, fuzzy
msgid ""
"The optional argument *arg* can be an integer giving the exit status "
"(defaulting to zero), or another type of object.  If it is an integer, zero "
"is considered \"successful termination\" and any nonzero value is considered "
"\"abnormal termination\" by shells and the like.  Most systems require it to "
"be in the range 0--127, and produce undefined results otherwise.  Some "
"systems have a convention for assigning specific meanings to specific exit "
"codes, but these are generally underdeveloped; Unix programs generally use 2 "
"for command line syntax errors and 1 for all other kind of errors.  If "
"another type of object is passed, ``None`` is equivalent to passing zero, "
"and any other object is printed to :data:`stderr` and results in an exit "
"code of 1.  In particular, ``sys.exit(\"some error message\")`` is a quick "
"way to exit a program when an error occurs."
msgstr ""
"可選參數 *arg* 可以是給出退出狀態的整數（預設為零），或其他型別的物件。如果它"
"是一個整數，零被認為是“成功終止”，任何非零值被 shell 等認為是“例外終止”。"
"大多數係統要求它在 0--127 範圍內，否則會產生未定義的結果。一些系統有為特定退"
"出程式碼分配特定含義的約定，但這些通常不發達； Unix 程式通常使用 2 "
"表示命令列語法錯誤，使用 1 "
"表示所有其他型別的錯誤。如果傳遞了另一種型別的物件， ``None``相當於傳遞零，"
"任何其他對像都會印出到 stderr 並導致退出程式碼為 1。特別是，“sys.exit( \"some"
" error message\")`` 是發生錯誤時退出程式的快速方法。"

#: ../../library/sys.rst:498
#, fuzzy
msgid ""
"Since :func:`exit` ultimately \"only\" raises an exception, it will only "
"exit the process when called from the main thread, and the exception is not "
"intercepted. Cleanup actions specified by finally clauses of :keyword:`try` "
"statements are honored, and it is possible to intercept the exit attempt at "
"an outer level."
msgstr ""
"由於 :func:`exit` "
"最終 ``只``拋出一個例外，它只會在主執行緒呼叫時退出行程，不會攔截例外。由 "
":keyword:`try` 語句的 finally "
"子句指定的清理操作受到尊重，並且可以在外部級別攔截退出嘗試。"

#: ../../library/sys.rst:503
#, fuzzy
msgid ""
"If an error occurs in the cleanup after the Python interpreter has caught :"
"exc:`SystemExit` (such as an error flushing buffered data in the standard "
"streams), the exit status is changed to 120."
msgstr ""
"如果在 Python 直譯器捕獲 :exc:`SystemExit` "
"後清理過程中發生錯誤（例如在標準流中刷新緩衝資料時出錯），退出狀態將更改為 "
"120。"

#: ../../library/sys.rst:511
#, fuzzy
msgid ""
"The :term:`named tuple` *flags* exposes the status of command line flags. "
"The attributes are read only."
msgstr ":term:`named tuple` *flags* 公開命令列旗標的狀態。屬性是只讀的。"

#: ../../library/sys.rst:515 ../../library/sys.rst:572
#: ../../library/sys.rst:925
msgid "attribute"
msgstr "屬性"

#: ../../library/sys.rst:515
msgid "flag"
msgstr "旗標"

#: ../../library/sys.rst:517
msgid ":const:`debug`"
msgstr ":const:`debug`"

#: ../../library/sys.rst:517
msgid ":option:`-d`"
msgstr ":option:`-d`"

#: ../../library/sys.rst:518
msgid ":const:`inspect`"
msgstr ":const:`inspect`"

#: ../../library/sys.rst:518 ../../library/sys.rst:519
msgid ":option:`-i`"
msgstr ":option:`-i`"

#: ../../library/sys.rst:519
msgid ":const:`interactive`"
msgstr ":const:`interactive`"

#: ../../library/sys.rst:520
msgid ":const:`isolated`"
msgstr ":const:`isolated`"

#: ../../library/sys.rst:520
msgid ":option:`-I`"
msgstr ":option:`-I`"

#: ../../library/sys.rst:521
msgid ":const:`optimize`"
msgstr ":const:`optimize`"

#: ../../library/sys.rst:521
msgid ":option:`-O` or :option:`-OO`"
msgstr ":option:`-O` 或 :option:`-OO`"

#: ../../library/sys.rst:522
msgid ":const:`dont_write_bytecode`"
msgstr ":const:`dont_write_bytecode`"

#: ../../library/sys.rst:522
msgid ":option:`-B`"
msgstr ":option:`-B`"

#: ../../library/sys.rst:523
msgid ":const:`no_user_site`"
msgstr ":const:`no_user_site`"

#: ../../library/sys.rst:523
msgid ":option:`-s`"
msgstr ":option:`-s`"

#: ../../library/sys.rst:524
msgid ":const:`no_site`"
msgstr ":const:`no_site`"

#: ../../library/sys.rst:524
msgid ":option:`-S`"
msgstr ":option:`-S`"

#: ../../library/sys.rst:525
msgid ":const:`ignore_environment`"
msgstr ":const:`ignore_environment`"

#: ../../library/sys.rst:525
msgid ":option:`-E`"
msgstr ":option:`-E`"

#: ../../library/sys.rst:526
msgid ":const:`verbose`"
msgstr ":const:`verbose`"

#: ../../library/sys.rst:526
msgid ":option:`-v`"
msgstr ":option:`-v`"

#: ../../library/sys.rst:527
msgid ":const:`bytes_warning`"
msgstr ":const:`bytes_warning`"

#: ../../library/sys.rst:527
msgid ":option:`-b`"
msgstr ":option:`-b`"

#: ../../library/sys.rst:528
msgid ":const:`quiet`"
msgstr ":const:`quiet`"

#: ../../library/sys.rst:528
msgid ":option:`-q`"
msgstr ":option:`-q`"

#: ../../library/sys.rst:529
msgid ":const:`hash_randomization`"
msgstr ":const:`hash_randomization`"

#: ../../library/sys.rst:529
msgid ":option:`-R`"
msgstr ":option:`-R`"

#: ../../library/sys.rst:530
msgid ":const:`dev_mode`"
msgstr ":const:`dev_mode`"

#: ../../library/sys.rst:530
msgid ":option:`-X dev <-X>` (:ref:`Python Development Mode <devmode>`)"
msgstr ":option:`-X dev <-X>` （:ref:`Python 開發模式 <devmode>`）"

#: ../../library/sys.rst:531
msgid ":const:`utf8_mode`"
msgstr ":const:`utf8_mode`"

#: ../../library/sys.rst:531
msgid ":option:`-X utf8 <-X>`"
msgstr ":option:`-X utf8 <-X>`"

#: ../../library/sys.rst:532
msgid ":const:`safe_path`"
msgstr ":const:`safe_path`"

#: ../../library/sys.rst:532
msgid ":option:`-P`"
msgstr ":option:`-P`"

#: ../../library/sys.rst:533
msgid ":const:`int_max_str_digits`"
msgstr ":const:`int_max_str_digits`"

#: ../../library/sys.rst:533
#, fuzzy
msgid ""
":option:`-X int_max_str_digits <-X>` (:ref:`integer string conversion length "
"limitation <int_max_str_digits>`)"
msgstr ""
":option:`-X int_max_str_digits <-X>` (:ref:`整數字串轉換長度限制 "
"<int_max_str_digits>`)"

#: ../../library/sys.rst:536
msgid "Added ``quiet`` attribute for the new :option:`-q` flag."
msgstr "新增 ``quiet`` 屬性，用於新的 :option:`-q` 旗標。"

#: ../../library/sys.rst:539
msgid "The ``hash_randomization`` attribute."
msgstr "``hash_randomization`` 屬性。"

#: ../../library/sys.rst:542
msgid "Removed obsolete ``division_warning`` attribute."
msgstr "移除過時的 ``division_warning`` 屬性。"

#: ../../library/sys.rst:545
msgid "Added ``isolated`` attribute for :option:`-I` ``isolated`` flag."
msgstr "新增 ``isolated`` 屬性，用於 :option:`-I` ``isolated`` 旗標。"

#: ../../library/sys.rst:548
#, fuzzy
msgid ""
"Added the ``dev_mode`` attribute for the new :ref:`Python Development Mode "
"<devmode>` and the ``utf8_mode`` attribute for the new  :option:`-X` "
"``utf8`` flag."
msgstr ""
"為新的 :ref:`Python 開發模式 <devmode>` 新增了 ``dev_mode`` 屬性，為新的 "
":option:`-X` ``utf8`` 旗標新增了 ``utf8_mode`` 屬性。"

#: ../../library/sys.rst:553
msgid "Added the ``safe_path`` attribute for :option:`-P` option."
msgstr "新增 ``safe_path`` 屬性，用於 :option:`-P` 選項。"

#: ../../library/sys.rst:556
msgid "Added the ``int_max_str_digits`` attribute."
msgstr "新增 ``int_max_str_digits`` 屬性。"

#: ../../library/sys.rst:562
#, fuzzy
msgid ""
"A :term:`named tuple` holding information about the float type. It contains "
"low level information about the precision and internal representation.  The "
"values correspond to the various floating-point constants defined in the "
"standard header file :file:`float.h` for the 'C' programming language; see "
"section 5.2.4.2.2 of the 1999 ISO/IEC C standard [C99]_, 'Characteristics of "
"floating types', for details."
msgstr ""
"一個 :term:`named tuple` 保存關於 float "
"型別的資訊。它包含有關精度和內部表示的低階資訊。這些值對應於標準標頭檔 "
":file:`float.h` 中為 ``C``編程語言定義的各種浮點常數；有關詳細資訊，請參閱 1999 "
"ISO/IEC C 標準 [C99]_ 的第 5.2.4.2.2 節，“浮點型別的特徵”。"

#: ../../library/sys.rst:572
msgid "float.h macro"
msgstr "float.h macro"

#: ../../library/sys.rst:572 ../../library/sys.rst:925
msgid "explanation"
msgstr "解釋"

#: ../../library/sys.rst:574
msgid "``epsilon``"
msgstr "``epsilon``"

#: ../../library/sys.rst:574
msgid "``DBL_EPSILON``"
msgstr "``DBL_EPSILON``"

#: ../../library/sys.rst:574
#, fuzzy
msgid ""
"difference between 1.0 and the least value greater than 1.0 that is "
"representable as a float"
msgstr "1.0 與可表示為浮點數的大於 1.0 的最小值之間的差異"

#: ../../library/sys.rst:577
msgid "See also :func:`math.ulp`."
msgstr "另請參閱 :func:`math.ulp`\\ 。"

#: ../../library/sys.rst:579
msgid "``dig``"
msgstr "``dig``"

#: ../../library/sys.rst:579
msgid "``DBL_DIG``"
msgstr "``DBL_DIG``"

#: ../../library/sys.rst:579
#, fuzzy
msgid ""
"maximum number of decimal digits that can be faithfully represented in a "
"float;  see below"
msgstr "可以用浮點數忠實表示的最大小數位數；見下文"

#: ../../library/sys.rst:582
msgid "``mant_dig``"
msgstr "``mant_dig``"

#: ../../library/sys.rst:582
msgid "``DBL_MANT_DIG``"
msgstr "``DBL_MANT_DIG``"

#: ../../library/sys.rst:582
#, fuzzy
msgid ""
"float precision: the number of base-``radix`` digits in the significand of a "
"float"
msgstr "浮點數精度：浮點數有效位數中的基數“基數”數字"

#: ../../library/sys.rst:585
msgid "``max``"
msgstr "``max``"

#: ../../library/sys.rst:585
msgid "``DBL_MAX``"
msgstr "``DBL_MAX``"

#: ../../library/sys.rst:585
#, fuzzy
msgid "maximum representable positive finite float"
msgstr "最大可表示正有限浮點數"

#: ../../library/sys.rst:587
msgid "``max_exp``"
msgstr "``max_exp``"

#: ../../library/sys.rst:587
msgid "``DBL_MAX_EXP``"
msgstr "``DBL_MAX_EXP``"

#: ../../library/sys.rst:587
#, fuzzy
msgid ""
"maximum integer *e* such that ``radix**(e-1)`` is a representable finite "
"float"
msgstr "最大整數 *e* 使得 ``radix**(e-1)`` 是一個可表示的有限浮點數"

#: ../../library/sys.rst:590
msgid "``max_10_exp``"
msgstr "``max_10_exp``"

#: ../../library/sys.rst:590
msgid "``DBL_MAX_10_EXP``"
msgstr "``DBL_MAX_10_EXP``"

#: ../../library/sys.rst:590
#, fuzzy
msgid ""
"maximum integer *e* such that ``10**e`` is in the range of representable "
"finite floats"
msgstr "最大整數 *e* 使得 ``10**e`` 在可表示的有限浮點數範圍內"

#: ../../library/sys.rst:593
msgid "``min``"
msgstr "``min``"

#: ../../library/sys.rst:593
msgid "``DBL_MIN``"
msgstr "``DBL_MIN``"

#: ../../library/sys.rst:593
#, fuzzy
msgid "minimum representable positive *normalized* float"
msgstr "最小可表示的正 *標準化* 浮點數"

#: ../../library/sys.rst:595
#, fuzzy
msgid ""
"Use :func:`math.ulp(0.0) <math.ulp>` to get the smallest positive "
"*denormalized* representable float."
msgstr "使用 :func:`math.ulp(0.0) <math.ulp>` 獲得最小正 *非規範化* 可表示浮點數。"

#: ../../library/sys.rst:599
msgid "``min_exp``"
msgstr "``min_exp``"

#: ../../library/sys.rst:599
msgid "``DBL_MIN_EXP``"
msgstr "``DBL_MIN_EXP``"

#: ../../library/sys.rst:599
#, fuzzy
msgid "minimum integer *e* such that ``radix**(e-1)`` is a normalized float"
msgstr "使 ``radix**(e-1)`` 是歸一化浮點數的最小整數 *e*"

#: ../../library/sys.rst:602
msgid "``min_10_exp``"
msgstr "``min_10_exp``"

#: ../../library/sys.rst:602
msgid "``DBL_MIN_10_EXP``"
msgstr "``DBL_MIN_10_EXP``"

#: ../../library/sys.rst:602
#, fuzzy
msgid "minimum integer *e* such that ``10**e`` is a normalized float"
msgstr "使 ``10**e`` 是標準化浮點數的最小整數 *e*"

#: ../../library/sys.rst:605
msgid "``radix``"
msgstr "``radix``"

#: ../../library/sys.rst:605
msgid "``FLT_RADIX``"
msgstr "``FLT_RADIX``"

#: ../../library/sys.rst:605
#, fuzzy
msgid "radix of exponent representation"
msgstr "指數表示的基數"

#: ../../library/sys.rst:607
msgid "``rounds``"
msgstr "``rounds``"

#: ../../library/sys.rst:607
msgid "``FLT_ROUNDS``"
msgstr "``FLT_ROUNDS``"

#: ../../library/sys.rst:607
#, fuzzy
msgid ""
"integer representing the rounding mode for floating-point arithmetic. This "
"reflects the value of the system ``FLT_ROUNDS`` macro at interpreter startup "
"time: ``-1`` indeterminable, ``0`` toward zero, ``1`` to nearest, ``2`` "
"toward positive infinity, ``3`` toward negative infinity"
msgstr ""
"表示浮點運算的捨入模式的整數。這反映了直譯器啟動時系統“FLT_ROUNDS”巨集的值：“"
"-1”不確定， ``0``接近零， ``1``接近， ``2``接近正無窮大, ``3`` 朝向負無窮大"

#: ../../library/sys.rst:617
#, fuzzy
msgid ""
"All other values for ``FLT_ROUNDS`` characterize implementation-defined "
"rounding behavior."
msgstr "``FLT_ROUNDS`` 的所有其他值都表徵了實作定義的捨入行為。"

#: ../../library/sys.rst:621
#, fuzzy
msgid ""
"The attribute :attr:`sys.float_info.dig` needs further explanation.  If "
"``s`` is any string representing a decimal number with at most :attr:`sys."
"float_info.dig` significant digits, then converting ``s`` to a float and "
"back again will recover a string representing the same decimal value::"
msgstr ""
"屬性 :attr:`sys.float_info.dig` 需要進一步解釋。如果 ``s`` "
"是表示十進位數的任何字串，最多 :attr:`sys.float_info.dig` 有效數字，則將 "
"``s`` 轉換為浮點數並再次轉換回來將恢復表示相同小數點的字串價值：："

#: ../../library/sys.rst:634
#, fuzzy
msgid ""
"But for strings with more than :attr:`sys.float_info.dig` significant "
"digits, this isn't always true::"
msgstr "但是對於超過 :attr:`sys.float_info.dig` 有效數字的字串，這並不總是正確的::"

#: ../../library/sys.rst:643
#, fuzzy
msgid ""
"A string indicating how the :func:`repr` function behaves for floats.  If "
"the string has value ``'short'`` then for a finite float ``x``, ``repr(x)`` "
"aims to produce a short string with the property that ``float(repr(x)) == "
"x``.  This is the usual behaviour in Python 3.1 and later.  Otherwise, "
"``float_repr_style`` has value ``'legacy'`` and ``repr(x)`` behaves in the "
"same way as it did in versions of Python prior to 3.1."
msgstr ""
"一個字串，指示 :func:`repr` 函式如何處理浮點數。如果字串的值為 ``短``，那麼對於"
"有限浮點數 ``x``，“repr(x)”旨在生成一個具有“float(repr(x))”屬性的短字串== x``。"
"這是 Python 3.1 及更高版本中的常見行為。否則，``float_repr_style`` 的值為 "
"``'legacy'`` 並且 ``repr(x)`` 的行為方式與 Python 3.1 之前的版本相同。"

#: ../../library/sys.rst:656
#, fuzzy
msgid ""
"Return the number of memory blocks currently allocated by the interpreter, "
"regardless of their size.  This function is mainly useful for tracking and "
"debugging memory leaks.  Because of the interpreter's internal caches, the "
"result can vary from call to call; you may have to call :func:"
"`_clear_type_cache()` and :func:`gc.collect()` to get more predictable "
"results."
msgstr ""
"回傳直譯器當前分配的記憶體塊數，不管它們的大小。該函式主要用於跟踪和除錯記憶"
"體洩漏。由於直譯器的內部快取，結果可能因呼叫而異；您可能需要呼叫 "
":func:`_clear_type_cache()` 和 :func:`gc.collect()` 以獲得更可預測的結果。"

#: ../../library/sys.rst:663
#, fuzzy
msgid ""
"If a Python build or implementation cannot reasonably compute this "
"information, :func:`getallocatedblocks()` is allowed to return 0 instead."
msgstr "如果 Python 構建或實作無法合理地計算此資訊，則允許 getallocatedblocks() 回傳 "
"0。"

#: ../../library/sys.rst:671
#, fuzzy
msgid "Return the build time API version of Android as an integer."
msgstr "以整數形式回傳 Android 的構建時 API 版本。"

#: ../../library/sys.rst:673
msgid ":ref:`Availability <availability>`: Android."
msgstr ":ref:`適用 <availability>`：Android。"

#: ../../library/sys.rst:680
#, fuzzy
msgid ""
"Return the name of the current default string encoding used by the Unicode "
"implementation."
msgstr "回傳 Unicode 實作使用的當前預設字串編碼的名稱。"

#: ../../library/sys.rst:686
#, fuzzy
msgid ""
"Return the current value of the flags that are used for :c:func:`dlopen` "
"calls.  Symbolic names for the flag values can be found in the :mod:`os` "
"module (``RTLD_xxx`` constants, e.g. :data:`os.RTLD_LAZY`)."
msgstr ""
"回傳用於 :c:func:`dlopen` 呼叫的旗標的當前值。旗標值的符號名稱可以在 "
":mod:`os` 模組中找到（``RTLD_xxx`` 常數，例如 :data:`os.RTLD_LAZY`）。"

#: ../../library/sys.rst:691 ../../library/sys.rst:1347
msgid ":ref:`Availability <availability>`: Unix."
msgstr ":ref:`適用 <availability>`：Unix。"

#: ../../library/sys.rst:696
#, fuzzy
msgid ""
"Get the :term:`filesystem encoding <filesystem encoding and error handler>`: "
"the encoding used with the :term:`filesystem error handler <filesystem "
"encoding and error handler>` to convert between Unicode filenames and bytes "
"filenames. The filesystem error handler is returned from :func:"
"`getfilesystemencodeerrors`."
msgstr ""
"獲取 :term:`文件系統編碼 <文件系統編碼和錯誤處理程式>`：與 :term:`"
"文件系統錯誤處理程式 <文件系統編碼和錯誤處理程式>` 一起使用的編碼，用於在 "
"Unicode 文件名和位元組文件名之間進行轉換。文件系統錯誤處理程式從 "
":func:`getfilesystemencodeerrors` 回傳。"

#: ../../library/sys.rst:702
#, fuzzy
msgid ""
"For best compatibility, str should be used for filenames in all cases, "
"although representing filenames as bytes is also supported. Functions "
"accepting or returning filenames should support either str or bytes and "
"internally convert to the system's preferred representation."
msgstr ""
"為了獲得最佳相容性，在所有情況下都應將 str "
"用於文件名，儘管也支援將文件名表示為位元組。接受或回傳文件名的函式應支援 str "
"或 bytes 並在內部轉換為系統的首選表示形式。"

#: ../../library/sys.rst:707 ../../library/sys.rst:735
#, fuzzy
msgid ""
":func:`os.fsencode` and :func:`os.fsdecode` should be used to ensure that "
"the correct encoding and errors mode are used."
msgstr "應使用 :func:`os.fsencode` 和 :func:`os.fsdecode` "
"以確保使用正確的編碼和錯誤模式。"

#: ../../library/sys.rst:710 ../../library/sys.rst:738
#, fuzzy
msgid ""
"The :term:`filesystem encoding and error handler` are configured at Python "
"startup by the :c:func:`PyConfig_Read` function: see :c:member:`~PyConfig."
"filesystem_encoding` and :c:member:`~PyConfig.filesystem_errors` members of :"
"c:type:`PyConfig`."
msgstr ""
"文件系統編碼和錯誤處理程式在 Python 啟動時通過 PyConfig_Read "
"函式配置 :ref:c:member:`~PyConfig.filesystem_encoding` 和 "
":c:member:`~PyConfig。 filesystem_errors:c:type:`PyConfig` 的成員。"

#: ../../library/sys.rst:715
msgid ":func:`getfilesystemencoding` result cannot be ``None`` anymore."
msgstr ":func:`getfilesystemencoding` 的結果不再為 ``None``。"

#: ../../library/sys.rst:718
#, fuzzy
msgid ""
"Windows is no longer guaranteed to return ``'mbcs'``. See :pep:`529` and :"
"func:`_enablelegacywindowsfsencoding` for more information."
msgstr ""
"Windows 不再保證回傳 ``'mbcs'``。有關詳細資訊，請參閱 :pep:`529` "
"和 :func:`_enablelegacywindowsfsencoding`。"

#: ../../library/sys.rst:722
#, fuzzy
msgid ""
"Return ``'utf-8'`` if the :ref:`Python UTF-8 Mode <utf8-mode>` is enabled."
msgstr "如果啟用了 :ref:`Python UTF-8 模式 <utf8-mode>`，則回傳 ``'utf-8'``。"

#: ../../library/sys.rst:729
#, fuzzy
msgid ""
"Get the :term:`filesystem error handler <filesystem encoding and error "
"handler>`: the error handler used with the :term:`filesystem encoding "
"<filesystem encoding and error handler>` to convert between Unicode "
"filenames and bytes filenames. The filesystem encoding is returned from :"
"func:`getfilesystemencoding`."
msgstr ""
"獲取 :term:`文件系統錯誤處理程式 <文件系統編碼和錯誤處理程式>`："
"錯誤處理程式與 :term:`文件系統編碼 <文件系統編碼和錯誤處理程式>` 一起使用，"
"以在 Unicode 文件名和位元組文件名之間進行轉換。文件系統編碼從 "
":func:`getfilesystemencoding` 回傳。"

#: ../../library/sys.rst:747
#, fuzzy
msgid ""
"Returns the current value for the :ref:`integer string conversion length "
"limitation <int_max_str_digits>`. See also :func:`set_int_max_str_digits`."
msgstr ""
"回傳 :ref:`整數字串轉換長度限制 <int_max_str_digits>` "
"的當前值。另見 :func:`set_int_max_str_digits`。"

#: ../../library/sys.rst:754
#, fuzzy
msgid ""
"Return the reference count of the *object*.  The count returned is generally "
"one higher than you might expect, because it includes the (temporary) "
"reference as an argument to :func:`getrefcount`."
msgstr ""
"回傳 *object* 的引用計數。回傳的計數通常比您預期的高一個，因為它包括（臨時）"
"引用作為 :func:`getrefcount` 的參數。"

#: ../../library/sys.rst:761
#, fuzzy
msgid ""
"Return the current value of the recursion limit, the maximum depth of the "
"Python interpreter stack.  This limit prevents infinite recursion from "
"causing an overflow of the C stack and crashing Python.  It can be set by :"
"func:`setrecursionlimit`."
msgstr ""
"回傳遞迴限制的當前值，即 Python 直譯器堆疊的最大深度。"
"此限制可防止無限遞迴導致 C 堆疊溢出和 Python 崩潰。它可以通過 :func:`"
"setrecursionlimit` 設定。"

#: ../../library/sys.rst:769
#, fuzzy
msgid ""
"Return the size of an object in bytes. The object can be any type of object. "
"All built-in objects will return correct results, but this does not have to "
"hold true for third-party extensions as it is implementation specific."
msgstr "以位元組為單位回傳物件的大小。該物件可以是任何型別的物件。所有內建對像都將回"
"傳正確的結果，但這不一定適用於第三方擴充，因為它是特定於實作的。"

#: ../../library/sys.rst:774
#, fuzzy
msgid ""
"Only the memory consumption directly attributed to the object is accounted "
"for, not the memory consumption of objects it refers to."
msgstr "僅考慮直接歸因於物件的記憶體消耗，而不考慮其引用的物件的記憶體消耗。"

#: ../../library/sys.rst:777
#, fuzzy
msgid ""
"If given, *default* will be returned if the object does not provide means to "
"retrieve the size.  Otherwise a :exc:`TypeError` will be raised."
msgstr "如果給定，如果對像不提供檢索大小的方法，將回傳 *default*。否則將引發 "
":exc:`TypeError`。"

#: ../../library/sys.rst:780
#, fuzzy
msgid ""
":func:`getsizeof` calls the object's ``__sizeof__`` method and adds an "
"additional garbage collector overhead if the object is managed by the "
"garbage collector."
msgstr ":func:`getsizeof` 呼叫物件的 ``__sizeof__`` "
"方法，如果物件由垃圾收集器管理，則會增加額外的垃圾收集器開銷。"

#: ../../library/sys.rst:784
#, fuzzy
msgid ""
"See `recursive sizeof recipe <https://code.activestate.com/recipes/577504>`_ "
"for an example of using :func:`getsizeof` recursively to find the size of "
"containers and all their contents."
msgstr ""
"請參閱`recursive sizeof recipe <https://code.activestate.com/recipes/577504>`"
"_ 以遞迴方式使用 getsizeof 來查找容器的大小及其所有內容的示例。"

#: ../../library/sys.rst:790
#, fuzzy
msgid ""
"Return the interpreter's \"thread switch interval\"; see :func:"
"`setswitchinterval`."
msgstr "回傳直譯器的“執行緒切換間隔”；請參閱 :func:`setswitchinterval`。"

#: ../../library/sys.rst:798
#, fuzzy
msgid ""
"Return a frame object from the call stack.  If optional integer *depth* is "
"given, return the frame object that many calls below the top of the stack.  "
"If that is deeper than the call stack, :exc:`ValueError` is raised.  The "
"default for *depth* is zero, returning the frame at the top of the call "
"stack."
msgstr ""
"從呼叫堆疊回傳一個框架物件。如果給出了可選的整數 *depth* "
"，則回傳堆疊頂部以下許多呼叫的框架物件。如果它比呼叫堆疊更深，則會引發 "
":exc:`ValueError`。 *depth* 的預設值為零，回傳呼叫堆疊頂部的幀。"

#: ../../library/sys.rst:803
msgid ""
"Raises an :ref:`auditing event <auditing>` ``sys._getframe`` with argument "
"``frame``."
msgstr ""
"引發一個附帶引數 ``frame`` 的\\ :ref:`稽核事件 <auditing>` ``sys."
"_getframe``。"

#: ../../library/sys.rst:807
#, fuzzy
msgid ""
"This function should be used for internal and specialized purposes only. It "
"is not guaranteed to exist in all implementations of Python."
msgstr "此功能應僅用於內部和專門用途。它不能保證存在於 Python 的所有實作中。"

#: ../../library/sys.rst:817
#, fuzzy
msgid "Get the profiler function as set by :func:`setprofile`."
msgstr "獲取由 :func:`setprofile` 設定的分析器函式。"

#: ../../library/sys.rst:826
#, fuzzy
msgid "Get the trace function as set by :func:`settrace`."
msgstr "獲取由 :func:`settrace` 設定的跟踪函式。"

#: ../../library/sys.rst:830
#, fuzzy
msgid ""
"The :func:`gettrace` function is intended only for implementing debuggers, "
"profilers, coverage tools and the like.  Its behavior is part of the "
"implementation platform, rather than part of the language definition, and "
"thus may not be available in all Python implementations."
msgstr ""
":func:`gettrace` 函式僅用於實作除錯器、分析器、覆蓋工具等。它的行為是實作平台"
"的一部分，而不是語言定義的一部分，因此可能不適用於所有 Python 實作。"

#: ../../library/sys.rst:838
#, fuzzy
msgid ""
"Return a named tuple describing the Windows version currently running.  The "
"named elements are *major*, *minor*, *build*, *platform*, *service_pack*, "
"*service_pack_minor*, *service_pack_major*, *suite_mask*, *product_type* and "
"*platform_version*. *service_pack* contains a string, *platform_version* a 3-"
"tuple and all other values are integers. The components can also be accessed "
"by name, so ``sys.getwindowsversion()[0]`` is equivalent to ``sys."
"getwindowsversion().major``. For compatibility with prior versions, only the "
"first 5 elements are retrievable by indexing."
msgstr ""
"回傳描述當前運行的 Windows 版本的命名元組。命名元素是 *major*、*minor*、*buil"
"d*、*platform*、*service_pack*、*service_pack_minor*、*service_pack_major*、*"
"suite_mask*、*product_type* 和 *platform_version*。 *service_pack* "
"包含一個字串，*platform_version* 一個 3 "
"元組，所有其他值都是整數。這些組件也可以通過名稱訪問，因此 ``sys."
"getwindowsversion()[0]`` 等同於 ``sys.getwindowsversion()."
"major``。為了與以前的版本相容，只有前 5 個元素可以通過索引檢索。"

#: ../../library/sys.rst:849
#, fuzzy
msgid "*platform* will be :const:`2 (VER_PLATFORM_WIN32_NT)`."
msgstr "*平台* 將是 :const:`2 (VER_PLATFORM_WIN32_NT)`。"

#: ../../library/sys.rst:851
#, fuzzy
msgid "*product_type* may be one of the following values:"
msgstr "*product_type* 可以是以下值之一："

#: ../../library/sys.rst:854
#, fuzzy
msgid "Constant"
msgstr "持續的"

#: ../../library/sys.rst:854
#, fuzzy
msgid "Meaning"
msgstr "意義"

#: ../../library/sys.rst:856
msgid ":const:`1 (VER_NT_WORKSTATION)`"
msgstr ":const:`1 (VER_NT_WORKSTATION)`"

#: ../../library/sys.rst:856
#, fuzzy
msgid "The system is a workstation."
msgstr "該系統是一個工作站。"

#: ../../library/sys.rst:858
msgid ":const:`2 (VER_NT_DOMAIN_CONTROLLER)`"
msgstr ":const:`2 (VER_NT_DOMAIN_CONTROLLER)`"

#: ../../library/sys.rst:858
#, fuzzy
msgid "The system is a domain controller."
msgstr "該系統是一個域控制器。"

#: ../../library/sys.rst:861
msgid ":const:`3 (VER_NT_SERVER)`"
msgstr ":const:`3 (VER_NT_SERVER)`"

#: ../../library/sys.rst:861
#, fuzzy
msgid "The system is a server, but not a domain controller."
msgstr "該系統是伺服器，但不是域控制器。"

#: ../../library/sys.rst:865
#, fuzzy
msgid ""
"This function wraps the Win32 :c:func:`GetVersionEx` function; see the "
"Microsoft documentation on :c:func:`OSVERSIONINFOEX` for more information "
"about these fields."
msgstr ""
"這個函式包裝了 Win32 :c:func:`GetVersionEx` 函式；有關這些欄位的更多資訊，"
"請參閱有關 :c:func:`OSVERSIONINFOEX` 的 Microsoft 文檔。"

#: ../../library/sys.rst:869
#, fuzzy
msgid ""
"*platform_version* returns the major version, minor version and build number "
"of the current operating system, rather than the version that is being "
"emulated for the process. It is intended for use in logging rather than for "
"feature detection."
msgstr ""
"*platform_version* 回傳當前操作系統的主要版本、次要版本和內部版本號，而不是為"
"行程模擬的版本。它旨在用於日誌記錄而不是功能檢測。"

#: ../../library/sys.rst:875
#, fuzzy
msgid ""
"*platform_version* derives the version from kernel32.dll which can be of a "
"different version than the OS version. Please use :mod:`platform` module for "
"achieving accurate OS version."
msgstr ""
"*platform_version* 從 kernel32.dll "
"派生版本，它可以是與操作系統版本不同的版本。請使用 :mod:`platform` "
"模組來獲得準確的操作系統版本。"

#: ../../library/sys.rst:881
#, fuzzy
msgid ""
"Changed to a named tuple and added *service_pack_minor*, "
"*service_pack_major*, *suite_mask*, and *product_type*."
msgstr ""
"更改為命名元組並新增了 "
"*service_pack_minor*、*service_pack_major*、*suite_mask* 和 *product_type*。"

#: ../../library/sys.rst:885
msgid "Added *platform_version*"
msgstr "新增 *platform_version*"

#: ../../library/sys.rst:891
#, fuzzy
msgid ""
"Returns an *asyncgen_hooks* object, which is similar to a :class:"
"`~collections.namedtuple` of the form ``(firstiter, finalizer)``, where "
"*firstiter* and *finalizer* are expected to be either ``None`` or functions "
"which take an :term:`asynchronous generator iterator` as an argument, and "
"are used to schedule finalization of an asynchronous generator by an event "
"loop."
msgstr ""
"回傳一個 *asyncgen_hooks* 物件，類似於 ``(firstiter, finalizer)`` 形式的 "
":class:`~collections.namedtuple`，其中 *firstiter* 和 *finalizer* 應該是 ``"
"None `` 或以 :term:`asynchronous generator iterator` "
"作為參數的函式，用於通過事件循環安排非同步生成器的終結。"

#: ../../library/sys.rst:898
msgid "See :pep:`525` for more details."
msgstr "更多細節請見 :pep:`525`\\ 。"

#: ../../library/sys.rst:902 ../../library/sys.rst:1549
#, fuzzy
msgid ""
"This function has been added on a provisional basis (see :pep:`411` for "
"details.)"
msgstr "此功能已臨時新增（有關詳細資訊，請參閱 :pep:`411`。）"

#: ../../library/sys.rst:908
#, fuzzy
msgid ""
"Get the current coroutine origin tracking depth, as set by :func:"
"`set_coroutine_origin_tracking_depth`."
msgstr "獲取當前協程原點跟踪深度，由 :func:`set_coroutine_origin_tracking_depth` "
"設定。"

#: ../../library/sys.rst:914 ../../library/sys.rst:1570
#, fuzzy
msgid ""
"This function has been added on a provisional basis (see :pep:`411` for "
"details.)  Use it only for debugging purposes."
msgstr "此功能是臨時新增的（有關詳細資訊，請參閱 :pep:`411`。）僅將其用於除錯目的。"

#: ../../library/sys.rst:920
#, fuzzy
msgid ""
"A :term:`named tuple` giving parameters of the numeric hash implementation.  "
"For more details about hashing of numeric types, see :ref:`numeric-hash`."
msgstr ""
"一個 :term:`named tuple` "
"給出數字雜湊實作的參數。有關數字型別散列的更多詳細資訊，請參閱：ref"
"：`numeric-hash`。"

#: ../../library/sys.rst:927
msgid ":const:`width`"
msgstr ":const:`width`"

#: ../../library/sys.rst:927
#, fuzzy
msgid "width in bits used for hash values"
msgstr "用於散列值的位寬度"

#: ../../library/sys.rst:929
msgid ":const:`modulus`"
msgstr ":const:`modulus`"

#: ../../library/sys.rst:929
#, fuzzy
msgid "prime modulus P used for numeric hash scheme"
msgstr "用於數字雜湊方案的質數模數 P"

#: ../../library/sys.rst:931
msgid ":const:`inf`"
msgstr ":const:`inf`"

#: ../../library/sys.rst:931
#, fuzzy
msgid "hash value returned for a positive infinity"
msgstr "為正無窮大回傳的散列值"

#: ../../library/sys.rst:933
msgid ":const:`nan`"
msgstr ":const:`nan`"

#: ../../library/sys.rst:933
#, fuzzy
msgid "(this attribute is no longer used)"
msgstr "（不再使用此屬性）"

#: ../../library/sys.rst:935
msgid ":const:`imag`"
msgstr ":const:`imag`"

#: ../../library/sys.rst:935
#, fuzzy
msgid "multiplier used for the imaginary part of a complex number"
msgstr "用於復數的虛部的乘數"

#: ../../library/sys.rst:938
msgid ":const:`algorithm`"
msgstr ":const:`algorithm`"

#: ../../library/sys.rst:938
#, fuzzy
msgid "name of the algorithm for hashing of str, bytes, and memoryview"
msgstr "str、bytes 和 memoryview 散列演算法的名稱"

#: ../../library/sys.rst:941
msgid ":const:`hash_bits`"
msgstr ":const:`hash_bits`"

#: ../../library/sys.rst:941
#, fuzzy
msgid "internal output size of the hash algorithm"
msgstr "雜湊演算法的內部輸出大小"

#: ../../library/sys.rst:943
msgid ":const:`seed_bits`"
msgstr ":const:`seed_bits`"

#: ../../library/sys.rst:943
#, fuzzy
msgid "size of the seed key of the hash algorithm"
msgstr "散列演算法的種子密鑰的大小"

#: ../../library/sys.rst:949
msgid "Added *algorithm*, *hash_bits* and *seed_bits*"
msgstr "新增 *algorithm*\\ 、\\ *hash_bits* 與 *seed_bits*"

#: ../../library/sys.rst:955
#, fuzzy
msgid ""
"The version number encoded as a single integer.  This is guaranteed to "
"increase with each version, including proper support for non-production "
"releases.  For example, to test that the Python interpreter is at least "
"version 1.5.2, use::"
msgstr ""
"編碼為單個整數的版本號。這保證會隨著每個版本的增加而增加，包括對非生產版本的"
"適當支援。例如，要測試 Python 直譯器至少是 1.5.2 版本，請使用："

#: ../../library/sys.rst:966
#, fuzzy
msgid ""
"This is called ``hexversion`` since it only really looks meaningful when "
"viewed as the result of passing it to the built-in :func:`hex` function.  "
"The :term:`named tuple`  :data:`sys.version_info` may be used for a more "
"human-friendly encoding of the same information."
msgstr ""
"這被稱為 ``hexversion`` 因為它只有在被視為將它傳遞給內建 :func:`hex` "
"函式的結果時才真正有意義。 :term:`named tuple` :data:`sys.version_info` "
"可用於對相同資訊進行更人性化的編碼。"

#: ../../library/sys.rst:971
#, fuzzy
msgid "More details of ``hexversion`` can be found at :ref:`apiabiversion`."
msgstr "``hexversion`` 的更多細節可以在 :ref:`apiabiversion` 找到。"

#: ../../library/sys.rst:976
#, fuzzy
msgid ""
"An object containing information about the implementation of the currently "
"running Python interpreter.  The following attributes are required to exist "
"in all Python implementations."
msgstr "包含有關當前運行的 Python 直譯器的實作資訊的物件。以下屬性需要存在於所有 "
"Python 實作中。"

#: ../../library/sys.rst:980
#, fuzzy
msgid ""
"*name* is the implementation's identifier, e.g. ``'cpython'``.  The actual "
"string is defined by the Python implementation, but it is guaranteed to be "
"lower case."
msgstr "*name* 是實作的標識符，例如``'cpython'``。實際字串由 Python "
"實作定義，但保證為小寫。"

#: ../../library/sys.rst:984
#, fuzzy
msgid ""
"*version* is a named tuple, in the same format as :data:`sys.version_info`.  "
"It represents the version of the Python *implementation*.  This has a "
"distinct meaning from the specific version of the Python *language* to which "
"the currently running interpreter conforms, which ``sys.version_info`` "
"represents.  For example, for PyPy 1.8 ``sys.implementation.version`` might "
"be ``sys.version_info(1, 8, 0, 'final', 0)``, whereas ``sys.version_info`` "
"would be ``sys.version_info(2, 7, 2, 'final', 0)``.  For CPython they are "
"the same value, since it is the reference implementation."
msgstr ""
"*version* 是一個命名元組，格式與 :data:`sys.version_info` 相同。它代表 "
"Python *實作* 的版本。這與當前運行的直譯器所符合的 Python *語言* "
"的特定版本具有不同的含義，“sys.version_info”表示。例如，對於 PyPy 1.8 ``sys."
"implementation.version`` 可能是 ``sys.version_info(1, 8, 0, 'final', 0)``，"
"而 ``sys.version_info`` 將是 `` sys.version_info(2, 7, 2, 'final', 0)``。"
"對於 CPython，它們是相同的值，因為它是參考實作。"

#: ../../library/sys.rst:994
#, fuzzy
msgid ""
"*hexversion* is the implementation version in hexadecimal format, like :data:"
"`sys.hexversion`."
msgstr "*hexversion* 是十六進位格式的實作版本，如 :data:`sys.hexversion`。"

#: ../../library/sys.rst:997
#, fuzzy
msgid ""
"*cache_tag* is the tag used by the import machinery in the filenames of "
"cached modules.  By convention, it would be a composite of the "
"implementation's name and version, like ``'cpython-33'``.  However, a Python "
"implementation may use some other value if appropriate.  If ``cache_tag`` is "
"set to ``None``, it indicates that module caching should be disabled."
msgstr ""
"*cache_tag* 是導入機制在快取模組的文件名中使用的標籤。按照慣例，它將是實作名"
"稱和版本的組合，例如 ``'cpython-33'`` 。但是，如果合適，Python "
"實作可能會使用其他一些值。如果 ``cache_tag`` 設定為 "
"``None``，則表示應該禁用模組快取。"

#: ../../library/sys.rst:1004
#, fuzzy
msgid ""
":data:`sys.implementation` may contain additional attributes specific to the "
"Python implementation.  These non-standard attributes must start with an "
"underscore, and are not described here.  Regardless of its contents, :data:"
"`sys.implementation` will not change during a run of the interpreter, nor "
"between implementation versions.  (It may change between Python language "
"versions, however.)  See :pep:`421` for more information."
msgstr ""
":data:`sys.implementation` 可能包含特定於 Python 實作的附加屬性。這些非標準屬"
"性必須以底線開頭，這裡不再贅述。無論其內容如何，sys.implementation "
"都不會在直譯器運行期間發生變化，實作版本之間也不會發生變化。 （但是，"
"它可能會在 Python 語言版本之間發生變化。）有關更多資訊，請參閱 :pep:`421`。"

#: ../../library/sys.rst:1015
#, fuzzy
msgid ""
"The addition of new required attributes must go through the normal PEP "
"process. See :pep:`421` for more information."
msgstr "新增新的必需屬性必須經過正常的 PEP 過程。有關更多資訊，請參見 :pep:`421`。"

#: ../../library/sys.rst:1020
#, fuzzy
msgid ""
"A :term:`named tuple` that holds information about Python's internal "
"representation of integers.  The attributes are read only."
msgstr "一個 :term:`named tuple` 保存有關 Python 的整數內部表示的資訊。屬性是只讀的。"

#: ../../library/sys.rst:1028
msgid ":const:`bits_per_digit`"
msgstr ":const:`bits_per_digit`"

#: ../../library/sys.rst:1028
#, fuzzy
msgid ""
"number of bits held in each digit.  Python integers are stored internally in "
"base ``2**int_info.bits_per_digit``"
msgstr "每個數字中包含的位數。 Python 整數在內部儲存在基數``2**int_info."
"bits_per_digit``"

#: ../../library/sys.rst:1032
msgid ":const:`sizeof_digit`"
msgstr ":const:`sizeof_digit`"

#: ../../library/sys.rst:1032
#, fuzzy
msgid "size in bytes of the C type used to represent a digit"
msgstr "用於表示數字的 C 型別的位元組大小"

#: ../../library/sys.rst:1035
msgid ":const:`default_max_str_digits`"
msgstr ":const:`default_max_str_digits`"

#: ../../library/sys.rst:1035
#, fuzzy
msgid ""
"default value for :func:`sys.get_int_max_str_digits` when it is not "
"otherwise explicitly configured."
msgstr ":func:`sys.get_int_max_str_digits` 未明確配置時的預設值。"

#: ../../library/sys.rst:1039
msgid ":const:`str_digits_check_threshold`"
msgstr ":const:`str_digits_check_threshold`"

#: ../../library/sys.rst:1039
#, fuzzy
msgid ""
"minimum non-zero value for :func:`sys.set_int_max_str_digits`, :envvar:"
"`PYTHONINTMAXSTRDIGITS`, or :option:`-X int_max_str_digits <-X>`."
msgstr ""
":func:`sys.set_int_max_str_digits`、:envvar:`PYTHONINTMAXSTRDIGITS` "
"或 :option:`-X int_max_str_digits <-X>` 的最小非零值。"

#: ../../library/sys.rst:1047
msgid "Added ``default_max_str_digits`` and ``str_digits_check_threshold``."
msgstr "新增 ``default_max_str_digits`` 和 ``str_digits_check_threshold``。"

#: ../../library/sys.rst:1053
#, fuzzy
msgid ""
"When this attribute exists, its value is automatically called (with no "
"arguments) when the interpreter is launched in :ref:`interactive mode <tut-"
"interactive>`.  This is done after the :envvar:`PYTHONSTARTUP` file is read, "
"so that you can set this hook there.  The :mod:`site` module :ref:`sets this "
"<rlcompleter-config>`."
msgstr ""
"當此屬性存在時，當直譯器以 :ref:`交互模式 <tut-interactive>` "
"啟動時，它的值會自動呼叫（不帶參數）。這是在讀取 :envvar:`PYTHONSTARTUP` "
"文件之後完成的，這樣您就可以在那裡設定這個鉤子。 :mod:`site` 模組 :ref:`"
"設定這個 <rlcompleter-config>`。"

#: ../../library/sys.rst:1059
msgid ""
"Raises an :ref:`auditing event <auditing>` ``cpython.run_interactivehook`` "
"with argument ``hook``."
msgstr ""
"引發一個附帶引數 ``hook`` 的\\ :ref:`稽核事件 <auditing>` ``cpython."
"run_interactivehook``。"

#: ../../library/sys.rst:1061
#, fuzzy
msgid ""
"Raises an :ref:`auditing event <auditing>` ``cpython.run_interactivehook`` "
"with the hook object as the argument when the hook is called on startup."
msgstr ""
"在啟動時呼叫掛鉤時，以掛鉤對像作為參數引發 :ref:`auditing 事件 <auditing>` "
"``cpython.run_interactivehook``。"

#: ../../library/sys.rst:1070
#, fuzzy
msgid ""
"Enter *string* in the table of \"interned\" strings and return the interned "
"string -- which is *string* itself or a copy. Interning strings is useful to "
"gain a little performance on dictionary lookup -- if the keys in a "
"dictionary are interned, and the lookup key is interned, the key comparisons "
"(after hashing) can be done by a pointer compare instead of a string "
"compare.  Normally, the names used in Python programs are automatically "
"interned, and the dictionaries used to hold module, class or instance "
"attributes have interned keys."
msgstr ""
"在 ``interned`` 字串表中輸入 *string* 並回傳 interned 字串——它是 *string* 本身或"
"一個副本。駐留字串對於在字典查找中獲得一點性能很有用——如果字典中的鍵被駐留，"
"並且查找鍵被駐留，則鍵比較（散列後）可以通過指標比較而不是字串比較來完成。通"
"常，在 Python "
"程式中使用的名稱是自動駐留的，用於保存模組、類或實例屬性的字典具有駐留鍵。"

#: ../../library/sys.rst:1078
#, fuzzy
msgid ""
"Interned strings are not immortal; you must keep a reference to the return "
"value of :func:`intern` around to benefit from it."
msgstr "實習字串不是不朽的；您必須保留對 :func:`intern` 的回傳值的引用才能從中受益。"

#: ../../library/sys.rst:1084
#, fuzzy
msgid ""
"Return :const:`True` if the Python interpreter is :term:`shutting down "
"<interpreter shutdown>`, :const:`False` otherwise."
msgstr ""
"如果 Python 直譯器正在關閉 <interpreter shutdown>`，則回傳 :const:`True`，"
"否則回傳 :const:`False`。"

#: ../../library/sys.rst:1094
#, fuzzy
msgid ""
"These three variables are not always defined; they are set when an exception "
"is not handled and the interpreter prints an error message and a stack "
"traceback. Their intended use is to allow an interactive user to import a "
"debugger module and engage in post-mortem debugging without having to re-"
"execute the command that caused the error.  (Typical use is ``import pdb; "
"pdb.pm()`` to enter the post-mortem debugger; see :mod:`pdb` module for more "
"information.)"
msgstr ""
"這三個變數並不總是定義的；當未處理例外並且直譯器印出錯誤消息和堆疊回溯時設定"
"它們。它們的預期用途是允許交互式使用者導入除錯器模組並進行事後除錯，而無需重"
"新執行導致錯誤的命令。 （典型的用法是 ``import pdb; pdb.pm()`` "
"來進入事後除錯器；更多資訊見 :mod:`pdb` 模組。）"

#: ../../library/sys.rst:1102
#, fuzzy
msgid ""
"The meaning of the variables is the same as that of the return values from :"
"func:`exc_info` above."
msgstr "變數的含義與上面 :func:`exc_info` 的回傳值相同。"

#: ../../library/sys.rst:1108
#, fuzzy
msgid ""
"An integer giving the maximum value a variable of type :c:type:`Py_ssize_t` "
"can take.  It's usually ``2**31 - 1`` on a 32-bit platform and ``2**63 - 1`` "
"on a 64-bit platform."
msgstr ""
"一個整數，它給出了 :c:type:`Py_ssize_t` 型別變數的最大值。在 32 "
"位平台上通常是 ``2**31 - 1``，在 64 位平台上通常是 ``2**63 - 1``。"

#: ../../library/sys.rst:1115
#, fuzzy
msgid ""
"An integer giving the value of the largest Unicode code point, i.e. "
"``1114111`` (``0x10FFFF`` in hexadecimal)."
msgstr "給出最大 Unicode 程式碼點值的整數，即 ``1114111`` （十六進位的 ``0x10FFFF`` ）。"

#: ../../library/sys.rst:1118
#, fuzzy
msgid ""
"Before :pep:`393`, ``sys.maxunicode`` used to be either ``0xFFFF`` or "
"``0x10FFFF``, depending on the configuration option that specified whether "
"Unicode characters were stored as UCS-2 or UCS-4."
msgstr ""
"在 :pep:`393` 之前，``sys.maxunicode`` 曾經是 ``0xFFFF`` 或 ``0x10FFFF``，"
"具體取決於指定 Unicode 字元是儲存為 UCS-2 還是 UCS- 的配置選項4."

#: ../../library/sys.rst:1126
#, fuzzy
msgid ""
"A list of :term:`meta path finder` objects that have their :meth:`~importlib."
"abc.MetaPathFinder.find_spec` methods called to see if one of the objects "
"can find the module to be imported. By default, it holds entries that "
"implement Python's default import semantics. The :meth:`~importlib.abc."
"MetaPathFinder.find_spec` method is called with at least the absolute name "
"of the module being imported. If the module to be imported is contained in a "
"package, then the parent package's :attr:`__path__` attribute is passed in "
"as a second argument. The method returns a :term:`module spec`, or ``None`` "
"if the module cannot be found."
msgstr ""
"一個 :term:`meta path finder` 物件的列表，這些物件呼叫了它們的 "
":meth:`~importlib.abc.MetaPathFinder.find_spec` "
"方法，以查看其中一個對像是否可以找到要導入的模組。預設情況下，它包含實作 "
"Python 預設導入語義的條目。呼叫 :meth:`~importlib.abc.MetaPathFinder."
"find_spec` 方法時至少要使用導入模組的絕對名稱。如果要導入的模組包含在包中，"
"則父包的 :attr:`__path__` 屬性作為第二個參數傳入。該方法回傳一個 :term:`"
"module spec`，如果找不到模組則回傳 ``None``。"

#: ../../library/sys.rst:1139
msgid ":class:`importlib.abc.MetaPathFinder`"
msgstr ":class:`importlib.abc.MetaPathFinder`"

#: ../../library/sys.rst:1139
#, fuzzy
msgid ""
"The abstract base class defining the interface of finder objects on :data:"
"`meta_path`."
msgstr "定義 meta_path 上查找器物件介面的抽象基底類別。"

#: ../../library/sys.rst:1143
msgid ":class:`importlib.machinery.ModuleSpec`"
msgstr ":class:`importlib.machinery.ModuleSpec`"

#: ../../library/sys.rst:1142
#, fuzzy
msgid ""
"The concrete class which :meth:`~importlib.abc.MetaPathFinder.find_spec` "
"should return instances of."
msgstr ":meth:`~importlib.abc.MetaPathFinder.find_spec` 應該回傳實例的具體類。"

#: ../../library/sys.rst:1148
#, fuzzy
msgid ""
":term:`Module specs <module spec>` were introduced in Python 3.4, by :pep:"
"`451`. Earlier versions of Python looked for a method called :meth:"
"`~importlib.abc.MetaPathFinder.find_module`. This is still called as a "
"fallback if a :data:`meta_path` entry doesn't have a :meth:`~importlib.abc."
"MetaPathFinder.find_spec` method."
msgstr ""
":term:`Module specs <module spec>` 由 :pep:`451` 在 Python 3.4 中引入。"
"早期版本的 Python 尋找一種名為 :meth:`~importlib.abc.MetaPathFinder."
"find_module` 的方法。如果 :data:`meta_path` 條目沒有 :meth:`~importlib.abc."
"MetaPathFinder.find_spec` 方法，這仍然被稱為回退。"

#: ../../library/sys.rst:1156
#, fuzzy
msgid ""
"This is a dictionary that maps module names to modules which have already "
"been loaded.  This can be manipulated to force reloading of modules and "
"other tricks. However, replacing the dictionary will not necessarily work as "
"expected and deleting essential items from the dictionary may cause Python "
"to fail.  If you want to iterate over this global dictionary always use "
"``sys.modules.copy()`` or ``tuple(sys.modules)`` to avoid exceptions as its "
"size may change during iteration as a side effect of code or activity in "
"other threads."
msgstr ""
"這是一個字典，將模組名稱映射到已經加載的模組。這可以被操縱以強制重新加載模組"
"和其他技巧。但是，替換字典不一定會按預期工作，"
"從字典中刪除必要的項目可能會導致 Python 失敗。如果你想遍歷這個全局字典，"
"總是使用 ``sys.modules.copy()`` 或 ``tuple(sys.modules)`` 來避免例外，因為它"
"的大小可能會在疊代過程中發生變化，這是程式碼的副作用或其他執行緒中的活動。"

#: ../../library/sys.rst:1168
#, fuzzy
msgid ""
"The list of the original command line arguments passed to the Python "
"executable."
msgstr "傳遞給 Python 可執行文件的原始命令列參數列表。"

#: ../../library/sys.rst:1171
msgid "See also :data:`sys.argv`."
msgstr "另請參閱 :data:`sys.argv`\\ 。"

#: ../../library/sys.rst:1180
#, fuzzy
msgid ""
"A list of strings that specifies the search path for modules. Initialized "
"from the environment variable :envvar:`PYTHONPATH`, plus an installation-"
"dependent default."
msgstr "指定模組搜索路徑的字串列表。從環境變數初始化 :envvar:`PYTHONPATH`，加上依賴於"
"安裝的預設值。"

#: ../../library/sys.rst:1184
#, fuzzy
msgid ""
"By default, as initialized upon program startup, a potentially unsafe path "
"is prepended to :data:`sys.path` (*before* the entries inserted as a result "
"of :envvar:`PYTHONPATH`):"
msgstr ""
"預設情況下，在程式啟動時初始化時，可能不安全的路徑被新增到 :data:`sys.path` "
"之前（*在*作為 :envvar:`PYTHONPATH` 結果插入的條目之前）："

#: ../../library/sys.rst:1188
#, fuzzy
msgid ""
"``python -m module`` command line: prepend the current working directory."
msgstr "``python -m module`` 命令列：新增當前工作目錄。"

#: ../../library/sys.rst:1190
#, fuzzy
msgid ""
"``python script.py`` command line: prepend the script's directory. If it's a "
"symbolic link, resolve symbolic links."
msgstr "``python script.py`` 命令列：新增腳本目錄。如果是符號鏈接，解析符號鏈接。"

#: ../../library/sys.rst:1192
#, fuzzy
msgid ""
"``python -c code`` and ``python`` (REPL) command lines: prepend an empty "
"string, which means the current working directory."
msgstr "``python -c code`` 和 ``python`` (REPL) "
"命令列：在前面加上一個空字串，表示當前工作目錄。"

#: ../../library/sys.rst:1195
#, fuzzy
msgid ""
"To not prepend this potentially unsafe path, use the :option:`-P` command "
"line option or the :envvar:`PYTHONSAFEPATH` environment variable."
msgstr "要不預先新增這個可能不安全的路徑，請使用 :option:`-P` "
"命令列選項或 :envvar:`PYTHONSAFEPATH` 環境變數。"

#: ../../library/sys.rst:1198
#, fuzzy
msgid ""
"A program is free to modify this list for its own purposes.  Only strings "
"should be added to :data:`sys.path`; all other data types are ignored during "
"import."
msgstr "程式可以出於自己的目的自由修改此列表。只應將字串新增到 :data:`sys."
"path`;導入期間將忽略所有其他資料型別。"

#: ../../library/sys.rst:1204
#, fuzzy
msgid ""
"Module :mod:`site` This describes how to use .pth files to extend :data:`sys."
"path`."
msgstr "Module :mod:`site` 這描述瞭如何使用 .pth 文件擴充 :data:`sys.path`。"

#: ../../library/sys.rst:1209
#, fuzzy
msgid ""
"A list of callables that take a path argument to try to create a :term:"
"`finder` for the path. If a finder can be created, it is to be returned by "
"the callable, else raise :exc:`ImportError`."
msgstr ""
"採用路徑參數的可呼叫項列表，以嘗試為路徑建立一個 "
":term:`finder`。如果可以建立查找器，它將由可呼叫物件回傳，否則引發 "
":exc:`ImportError`。"

#: ../../library/sys.rst:1213 ../../library/sys.rst:1224
#, fuzzy
msgid "Originally specified in :pep:`302`."
msgstr "最初在 :pep:`302` 中指定。"

#: ../../library/sys.rst:1218
#, fuzzy
msgid ""
"A dictionary acting as a cache for :term:`finder` objects. The keys are "
"paths that have been passed to :data:`sys.path_hooks` and the values are the "
"finders that are found. If a path is a valid file system path but no finder "
"is found on :data:`sys.path_hooks` then ``None`` is stored."
msgstr ""
"作為 finder 物件快取的字典。鍵是已傳遞給 :data:`sys.path_hooks` "
"的路徑，值是找到的查找器。如果路徑是有效的文件系統路徑，但在 :data:`sys."
"path_hooks` 上找不到查找器，則儲存 ``None``。"

#: ../../library/sys.rst:1226
#, fuzzy
msgid ""
"``None`` is stored instead of :class:`imp.NullImporter` when no finder is "
"found."
msgstr "當找不到查找器時，``None`` 被儲存而不是 :class:`imp.NullImporter`。"

#: ../../library/sys.rst:1233
#, fuzzy
msgid ""
"This string contains a platform identifier that can be used to append "
"platform-specific components to :data:`sys.path`, for instance."
msgstr "例如，此字串包含一個平台標識符，可用於將特定於平台的組件附加到 :data:`sys."
"path`。"

#: ../../library/sys.rst:1236
#, fuzzy
msgid ""
"For Unix systems, except on Linux and AIX, this is the lowercased OS name as "
"returned by ``uname -s`` with the first part of the version as returned by "
"``uname -r`` appended, e.g. ``'sunos5'`` or ``'freebsd8'``, *at the time "
"when Python was built*.  Unless you want to test for a specific system "
"version, it is therefore recommended to use the following idiom::"
msgstr ""
"對於 Unix 系統，除了 Linux 和 AIX 之外，這是由 ``uname -s`` "
"回傳的小寫操作系統名稱加上 ``uname -r`` "
"回傳的版本的第一部分，例如``'sunos5'`` 或 ``'freebsd8'``，*在構建 Python "
"時*。除非你想測試特定的系統版本，否則建議使用以下成語::"

#: ../../library/sys.rst:1249
#, fuzzy
msgid "For other systems, the values are:"
msgstr "對於其他系統，值為："

#: ../../library/sys.rst:1252
#, fuzzy
msgid "System"
msgstr "系統"

#: ../../library/sys.rst:1252
#, fuzzy
msgid "``platform`` value"
msgstr "``平台``值"

#: ../../library/sys.rst:1254
msgid "AIX"
msgstr "AIX"

#: ../../library/sys.rst:1254
msgid "``'aix'``"
msgstr "``'aix'``"

#: ../../library/sys.rst:1255
msgid "Emscripten"
msgstr "Emscripten"

#: ../../library/sys.rst:1255
msgid "``'emscripten'``"
msgstr "``'emscripten'``"

#: ../../library/sys.rst:1256
msgid "Linux"
msgstr "Linux"

#: ../../library/sys.rst:1256
msgid "``'linux'``"
msgstr "``'linux'``"

#: ../../library/sys.rst:1257
msgid "WASI"
msgstr "WASI"

#: ../../library/sys.rst:1257
msgid "``'wasi'``"
msgstr "``'wasi'``"

#: ../../library/sys.rst:1258
msgid "Windows"
msgstr "Windows"

#: ../../library/sys.rst:1258
msgid "``'win32'``"
msgstr "``'win32'``"

#: ../../library/sys.rst:1259
msgid "Windows/Cygwin"
msgstr "Windows/Cygwin"

#: ../../library/sys.rst:1259
msgid "``'cygwin'``"
msgstr "``'cygwin'``"

#: ../../library/sys.rst:1260
msgid "macOS"
msgstr "macOS"

#: ../../library/sys.rst:1260
msgid "``'darwin'``"
msgstr "``'darwin'``"

#: ../../library/sys.rst:1263
#, fuzzy
msgid ""
"On Linux, :attr:`sys.platform` doesn't contain the major version anymore. It "
"is always ``'linux'``, instead of ``'linux2'`` or ``'linux3'``.  Since older "
"Python versions include the version number, it is recommended to always use "
"the ``startswith`` idiom presented above."
msgstr ""
"在 Linux 上，:attr:`sys.platform` 不再包含主要版本。它始終是 ``'linux'``，"
"而不是 ``'linux2'`` 或 ``'linux3'``。由於較舊的 Python 版本包含版本號，"
"因此建議始終使用上面介紹的 ``startswith`` 習慣用法。"

#: ../../library/sys.rst:1269
#, fuzzy
msgid ""
"On AIX, :attr:`sys.platform` doesn't contain the major version anymore. It "
"is always ``'aix'``, instead of ``'aix5'`` or ``'aix7'``.  Since older "
"Python versions include the version number, it is recommended to always use "
"the ``startswith`` idiom presented above."
msgstr ""
"在 AIX 上，:attr:`sys.platform` 不再包含主要版本。它始終是 ``'aix'``，而不是 "
"``'aix5'`` 或 ``'aix7'``。由於較舊的 Python 版本包含版本號，"
"因此建議始終使用上面介紹的 ``startswith`` 習慣用法。"

#: ../../library/sys.rst:1277
#, fuzzy
msgid ""
":attr:`os.name` has a coarser granularity.  :func:`os.uname` gives system-"
"dependent version information."
msgstr ":attr:`os.name` 具有較粗的粒度。 :func:`os.uname` 給出系統相關的版本資訊。"

#: ../../library/sys.rst:1280
#, fuzzy
msgid ""
"The :mod:`platform` module provides detailed checks for the system's "
"identity."
msgstr ":mod:`platform` 模組提供對系統身份的詳細檢查。"

#: ../../library/sys.rst:1286
#, fuzzy
msgid ""
"Name of the platform-specific library directory. It is used to build the "
"path of standard library and the paths of installed extension modules."
msgstr "特定於平台的庫目錄的名稱。它用於構建標準庫的路徑和已安裝的擴充模組的路徑。"

#: ../../library/sys.rst:1289
#, fuzzy
msgid ""
"It is equal to ``\"lib\"`` on most platforms. On Fedora and SuSE, it is "
"equal to ``\"lib64\"`` on 64-bit platforms which gives the following ``sys."
"path`` paths (where ``X.Y`` is the Python ``major.minor`` version):"
msgstr ""
"在大多數平台上它等同於``\"lib\"``。在 Fedora 和 SuSE 上，它等於 64 "
"位平台上的 ``\"lib64\"``，它給出以下 ``sys.path`` 路徑（其中 ``X.Y`` 是 "
"Python ``major.minor``版本）："

#: ../../library/sys.rst:1293
#, fuzzy
msgid ""
"``/usr/lib64/pythonX.Y/``: Standard library (like ``os.py`` of the :mod:`os` "
"module)"
msgstr "``/usr/lib64/pythonX.Y/``：標準庫（如 :mod:`os` 模組的 ``os.py``）"

#: ../../library/sys.rst:1295
#, fuzzy
msgid ""
"``/usr/lib64/pythonX.Y/lib-dynload/``: C extension modules of the standard "
"library (like the :mod:`errno` module, the exact filename is platform "
"specific)"
msgstr ""
"``/usr/lib64/pythonX.Y/lib-dynload/``：標準庫的 C 擴充模組（如 :mod:`errno` "
"模組，確切的文件名是特定於平台的）"

#: ../../library/sys.rst:1298
#, fuzzy
msgid ""
"``/usr/lib/pythonX.Y/site-packages/`` (always use ``lib``, not :data:`sys."
"platlibdir`): Third-party modules"
msgstr ""
"``/usr/lib/pythonX.Y/site-packages/``（總是使用``lib``，而不是 :data:`sys."
"platlibdir`）：第三方模組"

#: ../../library/sys.rst:1300
#, fuzzy
msgid ""
"``/usr/lib64/pythonX.Y/site-packages/``: C extension modules of third-party "
"packages"
msgstr "``/usr/lib64/pythonX.Y/site-packages/``: 第三方包的C擴充模組"

#: ../../library/sys.rst:1308
#, fuzzy
msgid ""
"A string giving the site-specific directory prefix where the platform "
"independent Python files are installed; on Unix, the default is :file:`/usr/"
"local`. This can be set at build time with the :option:`--prefix` argument "
"to the :program:`configure` script.  See :ref:`installation_paths` for "
"derived paths."
msgstr ""
"一個字串，給出安裝平台獨立 Python 文件的特定於站點的目錄前綴；在 Unix 上，"
"預設是 :file:`/usr/local`。這可以在構建時使用 :program:`configure` 腳本的 "
":option:`--prefix` "
"參數進行設定。有關派生路徑，請參閱 :ref:`installation_paths`。"

#: ../../library/sys.rst:1314
#, fuzzy
msgid ""
"If a :ref:`virtual environment <venv-def>` is in effect, this value will be "
"changed in ``site.py`` to point to the virtual environment. The value for "
"the Python installation will still be available, via :data:`base_prefix`."
msgstr ""
"如果 :ref:`虛擬環境 <venv-def>` 有效，則該值將在 ``site.py`` "
"中更改為指向虛擬環境。 Python 安裝的值仍然可用，通過 :data:`base_prefix`。"

#: ../../library/sys.rst:1329
#, fuzzy
msgid ""
"Strings specifying the primary and secondary prompt of the interpreter.  "
"These are only defined if the interpreter is in interactive mode.  Their "
"initial values in this case are ``'>>> '`` and ``'... '``.  If a non-string "
"object is assigned to either variable, its :func:`str` is re-evaluated each "
"time the interpreter prepares to read a new interactive command; this can be "
"used to implement a dynamic prompt."
msgstr ""
"指定直譯器的主要和次要提示的字串。這些僅在直譯器處於交互模式時才定義。在這種"
"情況下，它們的初始值是 ``'>>> '`` 和 ``'... "
"'``。如果將非字串物件分配給任一變數，則每次直譯器準備讀取新的交互式命令時，"
"都會重新評估其 :func:`str`；這可用於實作動態提示。"

#: ../../library/sys.rst:1339
#, fuzzy
msgid ""
"Set the flags used by the interpreter for :c:func:`dlopen` calls, such as "
"when the interpreter loads extension modules.  Among other things, this will "
"enable a lazy resolving of symbols when importing a module, if called as "
"``sys.setdlopenflags(0)``.  To share symbols across extension modules, call "
"as ``sys.setdlopenflags(os.RTLD_GLOBAL)``.  Symbolic names for the flag "
"values can be found in the :mod:`os` module (``RTLD_xxx`` constants, e.g. :"
"data:`os.RTLD_LAZY`)."
msgstr ""
"設定直譯器用於 :c:func:`dlopen` 呼叫的旗標，例如當直譯器加載擴充模組時。除其"
"他外，這將在導入模組時啟用符號的延遲解析，如果呼叫為“sys."
"setdlopenflags（0）”。要跨擴充模組共享符號，請呼叫“sys.setdlopenflags(os."
"RTLD_GLOBAL)”。旗標值的符號名稱可以在 :mod:`os` 模組中找到（``RTLD_xxx`` "
"常數，例如 :data:`os.RTLD_LAZY`）。"

#: ../../library/sys.rst:1351
#, fuzzy
msgid ""
"Set the :ref:`integer string conversion length limitation "
"<int_max_str_digits>` used by this interpreter. See also :func:"
"`get_int_max_str_digits`."
msgstr ""
"設定此直譯器使用的整數字串轉換長度限制 "
"<int_max_str_digits>。另見 :func:`get_int_max_str_digits`。"

#: ../../library/sys.rst:1363
#, fuzzy
msgid ""
"Set the system's profile function, which allows you to implement a Python "
"source code profiler in Python.  See chapter :ref:`profile` for more "
"information on the Python profiler.  The system's profile function is called "
"similarly to the system's trace function (see :func:`settrace`), but it is "
"called with different events, for example it isn't called for each executed "
"line of code (only on call and return, but the return event is reported even "
"when an exception has been set). The function is thread-specific, but there "
"is no way for the profiler to know about context switches between threads, "
"so it does not make sense to use this in the presence of multiple threads. "
"Also, its return value is not used, so it can simply return ``None``.  Error "
"in the profile function will cause itself unset."
msgstr ""
"設定系統的profile函式，可以在Python中實作一個Python源碼分析器。有關 Python "
"分析器的更多資訊，請參閱章節 :ref:`profile`。系統的配置文件函式的呼叫類似於系"
"統的跟踪函式（請參閱 :func:`settrace`），但它是用不同的事件呼叫的，例如它不"
"是為每個執行的程式碼行呼叫（僅在呼叫和回傳時，但即使設定了例外也會報告回傳事"
"件）。該函式是特定於執行緒的，但是探查器無法了解執行緒之間的上下文切換，因此"
"在存在多個執行緒的情況下使用它沒有意義。此外，它的回傳值未被使用，因此它可以"
"簡單地回傳 ``None``。配置文件函式中的錯誤將導致其自身未設定。"

#: ../../library/sys.rst:1374
#, fuzzy
msgid ""
"Profile functions should have three arguments: *frame*, *event*, and *arg*. "
"*frame* is the current stack frame.  *event* is a string: ``'call'``, "
"``'return'``, ``'c_call'``, ``'c_return'``, or ``'c_exception'``. *arg* "
"depends on the event type."
msgstr ""
"配置文件函式應具有三個參數：*frame*、*event* 和 *arg*。 *frame* "
"是當前堆疊幀。 *event* "
"是一個字串：``'call'``、``'return'``、``'c_call'``、``'c_return'`` 或 "
"``'c_exception'``。 *arg* 取決於事件型別。"

#: ../../library/sys.rst:1379
msgid ""
"Raises an :ref:`auditing event <auditing>` ``sys.setprofile`` with no "
"arguments."
msgstr "引發一個不附帶引數的\\ :ref:`稽核事件 <auditing>` ``sys.setprofile``。"

#: ../../library/sys.rst:1381 ../../library/sys.rst:1462
#, fuzzy
msgid "The events have the following meaning:"
msgstr "這些事件具有以下含義："

#: ../../library/sys.rst:1385 ../../library/sys.rst:1467
msgid "``'call'``"
msgstr "``'call'``"

#: ../../library/sys.rst:1384
#, fuzzy
msgid ""
"A function is called (or some other code block entered).  The profile "
"function is called; *arg* is ``None``."
msgstr "呼叫了一個函式（或輸入了一些其他程式碼塊）。配置文件函式被呼叫； *arg* "
"是 ``None`` 。"

#: ../../library/sys.rst:1390 ../../library/sys.rst:1482
msgid "``'return'``"
msgstr "``'return'``"

#: ../../library/sys.rst:1388
#, fuzzy
msgid ""
"A function (or other code block) is about to return.  The profile function "
"is called; *arg* is the value that will be returned, or ``None`` if the "
"event is caused by an exception being raised."
msgstr "函式（或其他程式碼塊）即將回傳。配置文件函式被呼叫； *arg* "
"是將回傳的值，如果事件是由引發的例外引起的，則為 ``None`` 。"

#: ../../library/sys.rst:1394
msgid "``'c_call'``"
msgstr "``'c_call'``"

#: ../../library/sys.rst:1393
#, fuzzy
msgid ""
"A C function is about to be called.  This may be an extension function or a "
"built-in.  *arg* is the C function object."
msgstr "即將呼叫 C 函式。這可能是擴充功能或內建功能。 *arg* 是 C 函式物件。"

#: ../../library/sys.rst:1397
msgid "``'c_return'``"
msgstr "``'c_return'``"

#: ../../library/sys.rst:1397
#, fuzzy
msgid "A C function has returned. *arg* is the C function object."
msgstr "C 函式已回傳。 *arg* 是 C 函式物件。"

#: ../../library/sys.rst:1399
msgid "``'c_exception'``"
msgstr "``'c_exception'``"

#: ../../library/sys.rst:1400
#, fuzzy
msgid "A C function has raised an exception.  *arg* is the C function object."
msgstr "C 函式引發例外。 *arg* 是 C 函式物件。"

#: ../../library/sys.rst:1404
#, fuzzy
msgid ""
"Set the maximum depth of the Python interpreter stack to *limit*.  This "
"limit prevents infinite recursion from causing an overflow of the C stack "
"and crashing Python."
msgstr "將 Python 直譯器堆疊的最大深度設定為 *limit*。此限制可防止無限遞迴導致 C "
"堆疊溢出和 Python 崩潰。"

#: ../../library/sys.rst:1408
#, fuzzy
msgid ""
"The highest possible limit is platform-dependent.  A user may need to set "
"the limit higher when they have a program that requires deep recursion and a "
"platform that supports a higher limit.  This should be done with care, "
"because a too-high limit can lead to a crash."
msgstr ""
"可能的最高限制取決於平台。當使用者有需要深度遞迴的程式和支援更高限制的平台時"
"，他們可能需要將限制設定得更高。這應該小心完成，因為太高的限制會導致崩潰。"

#: ../../library/sys.rst:1413
#, fuzzy
msgid ""
"If the new limit is too low at the current recursion depth, a :exc:"
"`RecursionError` exception is raised."
msgstr "如果新限制在當前遞迴深度太低，則會引發 RecursionError 例外。"

#: ../../library/sys.rst:1416
#, fuzzy
msgid ""
"A :exc:`RecursionError` exception is now raised if the new limit is too low "
"at the current recursion depth."
msgstr "如果新限制在當前遞迴深度太低，現在會引發 :exc:`RecursionError` 例外。"

#: ../../library/sys.rst:1423
#, fuzzy
msgid ""
"Set the interpreter's thread switch interval (in seconds).  This floating-"
"point value determines the ideal duration of the \"timeslices\" allocated to "
"concurrently running Python threads.  Please note that the actual value can "
"be higher, especially if long-running internal functions or methods are "
"used.  Also, which thread becomes scheduled at the end of the interval is "
"the operating system's decision.  The interpreter doesn't have its own "
"scheduler."
msgstr ""
"設定直譯器的執行緒切換間隔（以秒為單位）。這個浮點值決定了分配給並發運行的 "
"Python 執行緒的“時間片”的理想持續時間。請注意，實際值可能更高，尤其是在使用長"
"時間運行的內部函式或方法時。此外，在間隔結束時調度哪個執行緒是操作系統的決定"
"。直譯器沒有自己的調度程式。"

#: ../../library/sys.rst:1440
#, fuzzy
msgid ""
"Set the system's trace function, which allows you to implement a Python "
"source code debugger in Python.  The function is thread-specific; for a "
"debugger to support multiple threads, it must register a trace function "
"using :func:`settrace` for each thread being debugged or use :func:"
"`threading.settrace`."
msgstr ""
"設定系統的trace功能，可以在Python中實作一個Python源碼除錯器。該函式是特定於執"
"行緒的；對於支援多執行緒的除錯器，它必須使用 :func:`settrace` "
"為每個被除錯的執行緒註冊一個跟踪函式，或者使用 :func:`threading.settrace`。"

#: ../../library/sys.rst:1445
#, fuzzy
msgid ""
"Trace functions should have three arguments: *frame*, *event*, and *arg*. "
"*frame* is the current stack frame.  *event* is a string: ``'call'``, "
"``'line'``, ``'return'``, ``'exception'`` or ``'opcode'``.  *arg* depends on "
"the event type."
msgstr ""
"跟踪函式應具有三個參數：*frame*、*event* 和 *arg*。 *frame* 是當前堆疊幀。 "
"*event* 是一個字串：``'call'``, ``'line'``, ``'return'``, ``'exception'`` 或 "
"``'opcode'``。 *arg* 取決於事件型別。"

#: ../../library/sys.rst:1450
#, fuzzy
msgid ""
"The trace function is invoked (with *event* set to ``'call'``) whenever a "
"new local scope is entered; it should return a reference to a local trace "
"function to be used for the new scope, or ``None`` if the scope shouldn't be "
"traced."
msgstr ""
"每當進入一個新的本地範圍時，都會呼叫跟踪函式（*event* 設定為 ``'call'``）；它應該"
"回傳對用於新作用域的本地跟踪函式的引用，如果不應跟踪作用域，則回傳 ``None``。"

#: ../../library/sys.rst:1455
#, fuzzy
msgid ""
"The local trace function should return a reference to itself (or to another "
"function for further tracing in that scope), or ``None`` to turn off tracing "
"in that scope."
msgstr "本地跟踪函式應該回傳對自身的引用（或對另一個函式的引用，以便在該範圍內進行進"
"一步跟踪），或者回傳 ``None`` 以關閉該範圍內的跟踪。"

#: ../../library/sys.rst:1459
#, fuzzy
msgid ""
"If there is any error occurred in the trace function, it will be unset, just "
"like ``settrace(None)`` is called."
msgstr "如果跟踪函式發生任何錯誤，它將被取消設定，就像呼叫 ``settrace(None)`` 一樣。"

#: ../../library/sys.rst:1465
#, fuzzy
msgid ""
"A function is called (or some other code block entered).  The global trace "
"function is called; *arg* is ``None``; the return value specifies the local "
"trace function."
msgstr "呼叫了一個函式（或輸入了一些其他程式碼塊）。全局跟踪函式被呼叫； *arg* "
"是 ``None`` ；回傳值指定本地跟踪函式。"

#: ../../library/sys.rst:1476
msgid "``'line'``"
msgstr "``'line'``"

#: ../../library/sys.rst:1470
#, fuzzy
msgid ""
"The interpreter is about to execute a new line of code or re-execute the "
"condition of a loop.  The local trace function is called; *arg* is ``None``; "
"the return value specifies the new local trace function.  See :file:`Objects/"
"lnotab_notes.txt` for a detailed explanation of how this works. Per-line "
"events may be disabled for a frame by setting :attr:`f_trace_lines` to :"
"const:`False` on that frame."
msgstr ""
"直譯器即將執行一行新程式碼或重新執行循環條件。本地跟踪函式被呼叫； *arg* "
"是 ``None`` ；回傳值指定新的局部跟踪函式。有關其工作原理的詳細說明，請參閱 :file:`"
"Objects/lnotab_notes.txt`。通過在該幀上將 f_trace_lines 設定為 const: False "
"可以為該幀禁用每行事件。"

#: ../../library/sys.rst:1479
#, fuzzy
msgid ""
"A function (or other code block) is about to return.  The local trace "
"function is called; *arg* is the value that will be returned, or ``None`` if "
"the event is caused by an exception being raised.  The trace function's "
"return value is ignored."
msgstr ""
"函式（或其他程式碼塊）即將回傳。本地跟踪函式被呼叫； *arg* 是將回傳的值，如果"
"事件是由引發的例外引起的，則為 ``None`` 。跟踪函式的回傳值被忽略。"

#: ../../library/sys.rst:1487
msgid "``'exception'``"
msgstr "``'exception'``"

#: ../../library/sys.rst:1485
#, fuzzy
msgid ""
"An exception has occurred.  The local trace function is called; *arg* is a "
"tuple ``(exception, value, traceback)``; the return value specifies the new "
"local trace function."
msgstr ""
"發生例外。本地跟踪函式被呼叫； *arg* 是一個元組``(exception, value, "
"traceback)``；回傳值指定新的局部跟踪函式。"

#: ../../library/sys.rst:1495
msgid "``'opcode'``"
msgstr "``'opcode'``"

#: ../../library/sys.rst:1490
#, fuzzy
msgid ""
"The interpreter is about to execute a new opcode (see :mod:`dis` for opcode "
"details).  The local trace function is called; *arg* is ``None``; the return "
"value specifies the new local trace function. Per-opcode events are not "
"emitted by default: they must be explicitly requested by setting :attr:"
"`f_trace_opcodes` to :const:`True` on the frame."
msgstr ""
"直譯器即將執行一個新的操作碼（有關操作碼的詳細資訊，請參閱 "
":mod:`dis`）。本地跟踪函式被呼叫； *arg* "
"是 ``None`` ；回傳值指定新的局部跟踪函式。預設情況下不會發出每個操作碼事件："
"必須通過在框架上將 f_trace_opcodes 設定為 True 來明確請求它們。"

#: ../../library/sys.rst:1497
#, fuzzy
msgid ""
"Note that as an exception is propagated down the chain of callers, an "
"``'exception'`` event is generated at each level."
msgstr "請注意，隨著例外沿著呼叫者鏈傳播，每個級別都會生成一個“例外”事件。"

#: ../../library/sys.rst:1500
#, fuzzy
msgid ""
"For more fine-grained usage, it's possible to set a trace function by "
"assigning ``frame.f_trace = tracefunc`` explicitly, rather than relying on "
"it being set indirectly via the return value from an already installed trace "
"function. This is also required for activating the trace function on the "
"current frame, which :func:`settrace` doesn't do. Note that in order for "
"this to work, a global tracing function must have been installed with :func:"
"`settrace` in order to enable the runtime tracing machinery, but it doesn't "
"need to be the same tracing function (e.g. it could be a low overhead "
"tracing function that simply returns ``None`` to disable itself immediately "
"on each frame)."
msgstr ""
"對於更細粒度的使用，可以通過顯式分配 frame.f_trace = tracefunc 來設定跟踪函式"
"，而不是依賴於通過已安裝跟踪函式的回傳值間接設定它。這也是在當前幀上激活跟踪"
"功能所必需的，而 :func:`settrace` 不會這樣做。請注意，為了使其工作，"
"全局跟踪功能必須與 :func:`settrace` 一起安裝以啟用運行時跟踪機制，但它不需要"
"是相同的跟踪功能（例如，它可以是一個低開銷的跟踪函式，它簡單地回傳 ``None`` "
"以在每一幀上立即禁用自身）。"

#: ../../library/sys.rst:1511
#, fuzzy
msgid "For more information on code and frame objects, refer to :ref:`types`."
msgstr "有關程式碼和框架物件的更多資訊，請參閱 :ref:`types`。"

#: ../../library/sys.rst:1513
#, fuzzy
msgid ""
"Raises an :ref:`auditing event <auditing>` ``sys.settrace`` with no "
"arguments."
msgstr "引發 :ref:`auditing 事件 <auditing>` ``sys.settrace`` 不帶參數。"

#: ../../library/sys.rst:1517
#, fuzzy
msgid ""
"The :func:`settrace` function is intended only for implementing debuggers, "
"profilers, coverage tools and the like.  Its behavior is part of the "
"implementation platform, rather than part of the language definition, and "
"thus may not be available in all Python implementations."
msgstr ""
":func:`settrace` 函式僅用於實作除錯器、分析器、覆蓋工具等。它的行為是實作平台"
"的一部分，而不是語言定義的一部分，因此可能不適用於所有 Python 實作。"

#: ../../library/sys.rst:1524
#, fuzzy
msgid ""
"``'opcode'`` event type added; :attr:`f_trace_lines` and :attr:"
"`f_trace_opcodes` attributes added to frames"
msgstr ""
"``'opcode'`` 新增了事件型別； :attr:`f_trace_lines` 和 "
":attr:`f_trace_opcodes` 屬性新增到幀"

#: ../../library/sys.rst:1529
#, fuzzy
msgid ""
"Accepts two optional keyword arguments which are callables that accept an :"
"term:`asynchronous generator iterator` as an argument. The *firstiter* "
"callable will be called when an asynchronous generator is iterated for the "
"first time. The *finalizer* will be called when an asynchronous generator is "
"about to be garbage collected."
msgstr ""
"接受兩個可選的關鍵字參數，它們是接受 :term:`asynchronous generator iterator` "
"作為參數的可呼叫物件。當第一次疊代非同步生成器時，將呼叫 *firstiter* "
"可呼叫物件。 *finalizer* 將在非同步生成器即將被垃圾收集時呼叫。"

#: ../../library/sys.rst:1535
msgid ""
"Raises an :ref:`auditing event <auditing>` ``sys."
"set_asyncgen_hooks_firstiter`` with no arguments."
msgstr ""
"引發一個不附帶引數的\\ :ref:`稽核事件 <auditing>` ``sys."
"set_asyncgen_hooks_firstiter``。"

#: ../../library/sys.rst:1537
msgid ""
"Raises an :ref:`auditing event <auditing>` ``sys."
"set_asyncgen_hooks_finalizer`` with no arguments."
msgstr ""
"引發一個不附帶引數的\\ :ref:`稽核事件 <auditing>` ``sys."
"set_asyncgen_hooks_finalizer``。"

#: ../../library/sys.rst:1539
#, fuzzy
msgid ""
"Two auditing events are raised because the underlying API consists of two "
"calls, each of which must raise its own event."
msgstr "引發了兩個審計事件，因為底層 API 包含兩個呼叫，每個呼叫都必須引發自己的事件。"

#: ../../library/sys.rst:1542
#, fuzzy
msgid ""
"See :pep:`525` for more details, and for a reference example of a "
"*finalizer* method see the implementation of ``asyncio.Loop."
"shutdown_asyncgens`` in :source:`Lib/asyncio/base_events.py`"
msgstr ""
"有關詳細資訊，請參閱 :pep:`525`，有關 *finalizer* "
"方法的參考示例，請參閱 :source:`Lib/asyncio/base_events.py` 中的 ``asyncio."
"Loop.shutdown_asyncgens`` 的實作"

#: ../../library/sys.rst:1554
#, fuzzy
msgid ""
"Allows enabling or disabling coroutine origin tracking. When enabled, the "
"``cr_origin`` attribute on coroutine objects will contain a tuple of "
"(filename, line number, function name) tuples describing the traceback where "
"the coroutine object was created, with the most recent call first. When "
"disabled, ``cr_origin`` will be None."
msgstr ""
"允許啟用或禁用協程源跟踪。啟用後，協程對像上的 ``cr_origin`` 屬性將包含一個元"
"組（文件名、行號、函式名）元組，描述建立協程物件的回溯，最近的呼叫在前。禁用"
"時，``cr_origin`` 將為 None。"

#: ../../library/sys.rst:1561
#, fuzzy
msgid ""
"To enable, pass a *depth* value greater than zero; this sets the number of "
"frames whose information will be captured. To disable, pass set *depth* to "
"zero."
msgstr "要啟用，請傳遞一個大於零的 *depth* 值；這設定了將捕獲其資訊的幀數。要禁用，"
"請將設定 *depth* 設定為零。"

#: ../../library/sys.rst:1565
#, fuzzy
msgid "This setting is thread-specific."
msgstr "此設定是特定於執行緒的。"

#: ../../library/sys.rst:1575
#, fuzzy
msgid ""
"Changes the :term:`filesystem encoding and error handler` to 'mbcs' and "
"'replace' respectively, for consistency with versions of Python prior to 3.6."
msgstr ""
"將 :term:`filesystem encoding 和 error handler` 分別更改為 'mbcs' 和 "
"'replace'，以與 3.6 之前的 Python 版本保持一致。"

#: ../../library/sys.rst:1579
#, fuzzy
msgid ""
"This is equivalent to defining the :envvar:`PYTHONLEGACYWINDOWSFSENCODING` "
"environment variable before launching Python."
msgstr "這相當於在啟動 Python 之前定義 PYTHONLEGACYWINDOWSFSENCODING 環境變數。"

#: ../../library/sys.rst:1582
#, fuzzy
msgid ""
"See also :func:`sys.getfilesystemencoding` and :func:`sys."
"getfilesystemencodeerrors`."
msgstr ""
"另見 :func:`sys.getfilesystemencoding` 和 :func:`sys."
"getfilesystemencodeerrors`。"

#: ../../library/sys.rst:1587
msgid "See :pep:`529` for more details."
msgstr "更多細節請見 :pep:`529`\\ 。"

#: ../../library/sys.rst:1594
#, fuzzy
msgid ""
":term:`File objects <file object>` used by the interpreter for standard "
"input, output and errors:"
msgstr ":term:`File objects <file object>` 直譯器用於標準輸入、輸出和錯誤："

#: ../../library/sys.rst:1597
#, fuzzy
msgid ""
"``stdin`` is used for all interactive input (including calls to :func:"
"`input`);"
msgstr "``stdin`` 用於所有交互式輸入（包括對 :func:`input` 的呼叫）；"

#: ../../library/sys.rst:1599
#, fuzzy
msgid ""
"``stdout`` is used for the output of :func:`print` and :term:`expression` "
"statements and for the prompts of :func:`input`;"
msgstr ""
"``stdout`` 用於 :func:`print` 和 :term:`expression` 語句的輸出以及 "
":func:`input` 的提示；"

#: ../../library/sys.rst:1601
#, fuzzy
msgid "The interpreter's own prompts and its error messages go to ``stderr``."
msgstr "直譯器自己的提示及其錯誤消息會發送到 ``stderr``。"

#: ../../library/sys.rst:1603
#, fuzzy
msgid ""
"These streams are regular :term:`text files <text file>` like those returned "
"by the :func:`open` function.  Their parameters are chosen as follows:"
msgstr ""
"這些流是常規的 :term:`text files <text file>` 就像 :func:`open` "
"函式回傳的那些。它們的參數選擇如下："

#: ../../library/sys.rst:1607
#, fuzzy
msgid ""
"The encoding and error handling are is initialized from :c:member:`PyConfig."
"stdio_encoding` and :c:member:`PyConfig.stdio_errors`."
msgstr "編碼和錯誤處理是從 PyConfig.stdio_encoding 和 PyConfig.stdio_errors "
"初始化的。"

#: ../../library/sys.rst:1610
#, fuzzy
msgid ""
"On Windows, UTF-8 is used for the console device.  Non-character devices "
"such as disk files and pipes use the system locale encoding (i.e. the ANSI "
"codepage).  Non-console character devices such as NUL (i.e. where "
"``isatty()`` returns ``True``) use the value of the console input and output "
"codepages at startup, respectively for stdin and stdout/stderr. This "
"defaults to the system :term:`locale encoding` if the process is not "
"initially attached to a console."
msgstr ""
"在 Windows 上，UTF-8 "
"用於控制台設備。磁盤文件和管道等非字元設備使用系統區域設定編碼（即 ANSI "
"程式碼頁）。非控制台字元設備，如 NUL（即 ``isatty()`` 回傳 "
"``True``）在啟動時使用控制台輸入和輸出程式碼頁的值，分別用於 stdin 和 stdout/"
"stderr。如果行程最初未附加到控制台，則預設為系統 :term:`locale encoding`。"

#: ../../library/sys.rst:1619
#, fuzzy
msgid ""
"The special behaviour of the console can be overridden by setting the "
"environment variable PYTHONLEGACYWINDOWSSTDIO before starting Python. In "
"that case, the console codepages are used as for any other character device."
msgstr ""
"可以通過在啟動 Python 之前設定環境變數 PYTHONLEGACYWINDOWSSTDIO 來覆蓋控制台"
"的特殊行為。在這種情況下，控制台程式碼頁與任何其他字元設備一樣使用。"

#: ../../library/sys.rst:1624
#, fuzzy
msgid ""
"Under all platforms, you can override the character encoding by setting the :"
"envvar:`PYTHONIOENCODING` environment variable before starting Python or by "
"using the new :option:`-X` ``utf8`` command line option and :envvar:"
"`PYTHONUTF8` environment variable.  However, for the Windows console, this "
"only applies when :envvar:`PYTHONLEGACYWINDOWSSTDIO` is also set."
msgstr ""
"在所有平台下，您可以通過在啟動 Python 之前設定 PYTHONIOENCODING "
"環境變數或使用新的 :option:`-X` ``utf8`` 命令列選項和 :envvar:`PYTHONUTF8 "
"來覆蓋字元編碼` 環境變數。但是，對於 Windows "
"控制台，這僅適用於還設定了 :envvar:`PYTHONLEGACYWINDOWSSTDIO` 的情況。"

#: ../../library/sys.rst:1631
#, fuzzy
msgid ""
"When interactive, the ``stdout`` stream is line-buffered. Otherwise, it is "
"block-buffered like regular text files.  The ``stderr`` stream is line-"
"buffered in both cases.  You can make both streams unbuffered by passing "
"the :option:`-u` command-line option or setting the :envvar:"
"`PYTHONUNBUFFERED` environment variable."
msgstr ""
"交互時， ``stdout``流是行緩衝的。否則，它會像常規文本文件一樣進行塊緩衝。 "
"``stderr`` 流在這兩種情況下都是行緩衝的。您可以通過傳遞 :option:`-u` "
"命令列選項或設定 :envvar:`PYTHONUNBUFFERED` 環境變數來使兩個流都無緩衝。"

#: ../../library/sys.rst:1637
#, fuzzy
msgid ""
"Non-interactive ``stderr`` is now line-buffered instead of fully buffered."
msgstr "非交互式 ``stderr`` 現在是行緩衝的，而不是完全緩衝的。"

#: ../../library/sys.rst:1643
#, fuzzy
msgid ""
"To write or read binary data from/to the standard streams, use the "
"underlying binary :data:`~io.TextIOBase.buffer` object.  For example, to "
"write bytes to :data:`stdout`, use ``sys.stdout.buffer.write(b'abc')``."
msgstr ""
"要從/向標準流寫入或讀取二進位資料，請使用底層二進位 :data:`~io.TextIOBase."
"buffer` 物件。例如，要將位元組寫入 :data:`stdout`，請使用 ``sys.stdout.buffer"
".write(b'abc')``。"

#: ../../library/sys.rst:1647
#, fuzzy
msgid ""
"However, if you are writing a library (and do not control in which context "
"its code will be executed), be aware that the standard streams may be "
"replaced with file-like objects like :class:`io.StringIO` which do not "
"support the :attr:`~io.BufferedIOBase.buffer` attribute."
msgstr ""
"但是，如果您正在編寫一個庫（並且不控制其程式碼將在哪個上下文中執行），請注意"
"標準流可能會被類似文件的物件替換，例如不支援的 :class:`io.StringIO` "
":attr:`~io.BufferedIOBase.buffer` 屬性。"

#: ../../library/sys.rst:1657
#, fuzzy
msgid ""
"These objects contain the original values of ``stdin``, ``stderr`` and "
"``stdout`` at the start of the program.  They are used during finalization, "
"and could be useful to print to the actual standard stream no matter if the "
"``sys.std*`` object has been redirected."
msgstr ""
"這些對像在程式開始時包含 ``stdin``、``stderr`` 和 ``stdout`` "
"的原始值。它們在最終確定期間使用，並且無論 ``sys.std*`` "
"對像是否已被重定向，都可以用於印出到實際的標準流。"

#: ../../library/sys.rst:1662
#, fuzzy
msgid ""
"It can also be used to restore the actual files to known working file "
"objects in case they have been overwritten with a broken object.  However, "
"the preferred way to do this is to explicitly save the previous stream "
"before replacing it, and restore the saved object."
msgstr ""
"它還可用於將實際文件恢復為已知的工作文件物件，以防它們被損壞的物件覆蓋。但是"
"，執行此操作的首選方法是在替換之前顯式保存先前的流，然後恢復保存的物件。"

#: ../../library/sys.rst:1668
#, fuzzy
msgid ""
"Under some conditions ``stdin``, ``stdout`` and ``stderr`` as well as the "
"original values ``__stdin__``, ``__stdout__`` and ``__stderr__`` can be "
"``None``. It is usually the case for Windows GUI apps that aren't connected "
"to a console and Python apps started with :program:`pythonw`."
msgstr ""
"在某些情況下，``stdin``、``stdout`` 和``stderr`` "
"以及原始值``__stdin__``、``__stdout__`` 和``__stderr__`` 可以是``None`` ."
"對於未連接到控制台的 Windows GUI 應用程式和以 :program:`pythonw` 開頭的 "
"Python 應用程式，通常是這種情況。"

#: ../../library/sys.rst:1676
#, fuzzy
msgid ""
"A frozenset of strings containing the names of standard library modules."
msgstr "包含標準庫模組名稱的凍結字串集。"

#: ../../library/sys.rst:1678
#, fuzzy
msgid ""
"It is the same on all platforms. Modules which are not available on some "
"platforms and modules disabled at Python build are also listed. All module "
"kinds are listed: pure Python, built-in, frozen and extension modules. Test "
"modules are excluded."
msgstr ""
"在所有平台上都是一樣的。還列出了在某些平台上不可用的模組和在 Python "
"構建時禁用的模組。列出了所有模組型別：純 "
"Python、內建、凍結和擴充模組。測試模組被排除在外。"

#: ../../library/sys.rst:1683
#, fuzzy
msgid ""
"For packages, only the main package is listed: sub-packages and sub-modules "
"are not listed. For example, the ``email`` package is listed, but the "
"``email.mime`` sub-package and the ``email.message`` sub-module are not "
"listed."
msgstr ""
"對於包，僅列出主包：不列出子包和子模組。例如，列出了``email`` "
"包，但是沒有列出``email.mime`` 子包和``email.message`` 子模組。"

#: ../../library/sys.rst:1688
msgid "See also the :attr:`sys.builtin_module_names` list."
msgstr "另請參閱 :attr:`sys.builtin_module_names` 清單。"

#: ../../library/sys.rst:1695
#, fuzzy
msgid ""
"A :term:`named tuple` holding information about the thread implementation."
msgstr "一個 :term:`named tuple` 保存有關執行緒實作的資訊。"

#: ../../library/sys.rst:1703
msgid ":const:`name`"
msgstr ":const:`name`"

#: ../../library/sys.rst:1703
#, fuzzy
msgid "Name of the thread implementation:"
msgstr "執行緒實作的名稱："

#: ../../library/sys.rst:1705
msgid "``'nt'``: Windows threads"
msgstr "``'nt'``: Windows 執行緒"

#: ../../library/sys.rst:1706
msgid "``'pthread'``: POSIX threads"
msgstr "``'pthread'``: POSIX 執行緒"

#: ../../library/sys.rst:1707
#, fuzzy
msgid ""
"``'pthread-stubs'``: stub POSIX threads (on WebAssembly platforms without "
"threading support)"
msgstr "``'pthread-stubs'``：存根 POSIX 執行緒（在沒有執行緒支援的 WebAssembly "
"平台上）"

#: ../../library/sys.rst:1709
#, fuzzy
msgid "``'solaris'``: Solaris threads"
msgstr "``'solaris'``：Solaris 執行緒"

#: ../../library/sys.rst:1711
msgid ":const:`lock`"
msgstr ":const:`lock`"

#: ../../library/sys.rst:1711
#, fuzzy
msgid "Name of the lock implementation:"
msgstr "鎖實作的名稱："

#: ../../library/sys.rst:1713
#, fuzzy
msgid "``'semaphore'``: a lock uses a semaphore"
msgstr "``'信號量'``：鎖使用信號量"

#: ../../library/sys.rst:1714
#, fuzzy
msgid "``'mutex+cond'``: a lock uses a mutex and a condition variable"
msgstr "``'mutex+cond'``: 一個鎖使用一個互斥量和一個條件變數"

#: ../../library/sys.rst:1716
msgid "``None`` if this information is unknown"
msgstr "為 ``None`` 表示此資訊未知"

#: ../../library/sys.rst:1718
msgid ":const:`version`"
msgstr ":const:`version`"

#: ../../library/sys.rst:1718
#, fuzzy
msgid ""
"Name and version of the thread library. It is a string, or ``None`` if this "
"information is unknown."
msgstr "執行緒庫的名稱和版本。它是一個字串，如果此資訊未知，則為 ``None`` 。"

#: ../../library/sys.rst:1727
#, fuzzy
msgid ""
"When this variable is set to an integer value, it determines the maximum "
"number of levels of traceback information printed when an unhandled "
"exception occurs. The default is ``1000``.  When set to ``0`` or less, all "
"traceback information is suppressed and only the exception type and value "
"are printed."
msgstr ""
"當此變數設定為整數值時，它決定了發生未處理的例外時印出的回溯資訊的最大層數。"
"預設值為 ``1000``。當設定為 ``0`` "
"或更少時，所有回溯資訊都被抑制，只印出例外型別和值。"

#: ../../library/sys.rst:1735
msgid "Handle an unraisable exception."
msgstr "處理一個不可被引發的例外。"

#: ../../library/sys.rst:1737
#, fuzzy
msgid ""
"Called when an exception has occurred but there is no way for Python to "
"handle it. For example, when a destructor raises an exception or during "
"garbage collection (:func:`gc.collect`)."
msgstr "當例外發生但 Python 無法處理時呼叫。例如，"
"當析構函式引發例外時或在垃圾回收期間 (:func:`gc.collect`)。"

#: ../../library/sys.rst:1741
#, fuzzy
msgid "The *unraisable* argument has the following attributes:"
msgstr "*unraisable* 參數具有以下屬性："

#: ../../library/sys.rst:1743
msgid "*exc_type*: Exception type."
msgstr "*exc_type*: 例外型別。"

#: ../../library/sys.rst:1744
msgid "*exc_value*: Exception value, can be ``None``."
msgstr "*exc_value*: 例外值，可以為 ``None``。"

#: ../../library/sys.rst:1745
msgid "*exc_traceback*: Exception traceback, can be ``None``."
msgstr "*exc_traceback*: 例外追蹤，可以為 ``None``。"

#: ../../library/sys.rst:1746
msgid "*err_msg*: Error message, can be ``None``."
msgstr "*err_msg*: 錯誤訊息，可以為 ``None``。"

#: ../../library/sys.rst:1747
msgid "*object*: Object causing the exception, can be ``None``."
msgstr "*object*: 導致例外的物件，可以為 ``None``。"

#: ../../library/sys.rst:1749
#, fuzzy
msgid ""
"The default hook formats *err_msg* and *object* as: ``f'{err_msg}: {object!"
"r}'``; use \"Exception ignored in\" error message if *err_msg* is ``None``."
msgstr ""
"預設的掛鉤格式 *err_msg* 和 *object* 為：``f'{err_msg}: {object!r}'``;如果 "
"*err_msg* 為 ``None``，則使用“Exception ignored in”錯誤消息。"

#: ../../library/sys.rst:1753
#, fuzzy
msgid ""
":func:`sys.unraisablehook` can be overridden to control how unraisable "
"exceptions are handled."
msgstr ":func:`sys.unraisablehook` 可以被覆蓋以控制如何處理無法引發的例外。"

#: ../../library/sys.rst:1756
#, fuzzy
msgid ""
"Storing *exc_value* using a custom hook can create a reference cycle. It "
"should be cleared explicitly to break the reference cycle when the exception "
"is no longer needed."
msgstr "使用自定義掛鉤儲存 *exc_value* "
"可以建立引用循環。當不再需要例外時，應該明確地清除它以打破引用循環。"

#: ../../library/sys.rst:1760
#, fuzzy
msgid ""
"Storing *object* using a custom hook can resurrect it if it is set to an "
"object which is being finalized. Avoid storing *object* after the custom "
"hook completes to avoid resurrecting objects."
msgstr ""
"如果將 *object* 設定為正在完成的物件，則使用自定義掛鉤儲存 *object* "
"可以使它復活。避免在自定義掛鉤完成後儲存 *object* 以避免復活物件。"

#: ../../library/sys.rst:1764
msgid "See also :func:`excepthook` which handles uncaught exceptions."
msgstr "關於處理未捕捉得例外，另請參閱 :func:`excepthook`。"

#: ../../library/sys.rst:1766
#, fuzzy
msgid ""
"Raises an :ref:`auditing event <auditing>` ``sys.unraisablehook`` with "
"arguments ``hook``, ``unraisable``."
msgstr ""
"引發一個附帶引數 ``hook``、``unraisable`` 的\\ :ref:`稽核事件 <auditing>` "
"``sys.unraisablehook``。"

#: ../../library/sys.rst:1768
#, fuzzy
msgid ""
"Raise an auditing event ``sys.unraisablehook`` with arguments ``hook``, "
"``unraisable`` when an exception that cannot be handled occurs. The "
"``unraisable`` object is the same as what will be passed to the hook. If no "
"hook has been set, ``hook`` may be ``None``."
msgstr ""
"當發生無法處理的例外時，使用參數 ``hook``、 ``unraisable``引發審計事件“sys."
"unraisablehook”。 ``unraisable`` "
"物件與將傳遞給掛鉤的物件相同。如果沒有設定鉤子，``hook`` 可能是``None``。"

#: ../../library/sys.rst:1777
#, fuzzy
msgid ""
"A string containing the version number of the Python interpreter plus "
"additional information on the build number and compiler used.  This string "
"is displayed when the interactive interpreter is started.  Do not extract "
"version information out of it, rather, use :data:`version_info` and the "
"functions provided by the :mod:`platform` module."
msgstr ""
"一個字串，包含 Python 直譯器的版本號以及有關構建號和所用編譯器的附加資訊。該"
"字串在交互式直譯器啟動時顯示。不要從中提取版本資訊，而是使用 "
":data:`version_info` 和 :mod:`platform` 模組提供的函式。"

#: ../../library/sys.rst:1786
#, fuzzy
msgid ""
"The C API version for this interpreter.  Programmers may find this useful "
"when debugging version conflicts between Python and extension modules."
msgstr "此直譯器的 C API 版本。在除錯 Python "
"和擴充模組之間的版本衝突時，程式員可能會發現這很有用。"

#: ../../library/sys.rst:1792
#, fuzzy
msgid ""
"A tuple containing the five components of the version number: *major*, "
"*minor*, *micro*, *releaselevel*, and *serial*.  All values except "
"*releaselevel* are integers; the release level is ``'alpha'``, ``'beta'``, "
"``'candidate'``, or ``'final'``.  The ``version_info`` value corresponding "
"to the Python version 2.0 is ``(2, 0, 0, 'final', 0)``.  The components can "
"also be accessed by name, so ``sys.version_info[0]`` is equivalent to ``sys."
"version_info.major`` and so on."
msgstr ""
"包含版本號的五個組成部分的元組：*major*、*minor*、*micro*、*releaselevel* 和 "
"*serial*。除了 *releaselevel* 之外的所有值都是整數；發布級別是 ``'alpha'``, "
"``'beta'``, ``'candidate'`` 或 ``'final'``。 "
"Python 2.0 版本對應的 ``version_info`` 值為 ``(2, 0, 0, 'final', "
"0)``。這些組件也可以通過名稱訪問，因此 ``sys.version_info[0]`` 等同於 ``sys."
"version_info.major`` 等等。"

#: ../../library/sys.rst:1800
msgid "Added named component attributes."
msgstr "新增了附名的元件屬性。"

#: ../../library/sys.rst:1805
#, fuzzy
msgid ""
"This is an implementation detail of the warnings framework; do not modify "
"this value.  Refer to the :mod:`warnings` module for more information on the "
"warnings framework."
msgstr "這是警告框架的一個實作細節；不要修改這個值。有關警告框架的更多資訊，請參閱 "
":mod:`warnings` 模組。"

#: ../../library/sys.rst:1812
#, fuzzy
msgid ""
"The version number used to form registry keys on Windows platforms. This is "
"stored as string resource 1000 in the Python DLL.  The value is normally the "
"major and minor versions of the running Python interpreter.  It is provided "
"in the :mod:`sys` module for informational purposes; modifying this value "
"has no effect on the registry keys used by Python."
msgstr ""
"用於在 Windows 平台上形成註冊表項的版本號。這在 Python DLL 中儲存為字串資源 "
"1000。該值通常是正在運行的 Python 直譯器的主要版本和次要版本。它在 :mod:`sys`"
" 模組中提供，僅供參考；修改此值對 Python 使用的註冊表項沒有影響。"

#: ../../library/sys.rst:1823
#, fuzzy
msgid ""
"A dictionary of the various implementation-specific flags passed through "
"the :option:`-X` command-line option.  Option names are either mapped to "
"their values, if given explicitly, or to :const:`True`.  Example:"
msgstr ""
"通過 :option:`-X` 命令列選項傳遞的各種特定於實作的旗標的字典。選項名稱要么映"
"射到它們的值（如果明確給出），要么映射到 :const:`True`。例子："

#: ../../library/sys.rst:1839
#, fuzzy
msgid ""
"This is a CPython-specific way of accessing options passed through :option:`-"
"X`.  Other implementations may export them through other means, or not at "
"all."
msgstr "這是訪問通過 :option:`-X` 傳遞的選項的特定於 CPython "
"的方式。其他實作可能會通過其他方式導出它們，或者根本不導出。"

#: ../../library/sys.rst:1847
msgid "Citations"
msgstr "引用"

#: ../../library/sys.rst:1848
msgid ""
"ISO/IEC 9899:1999.  \"Programming languages -- C.\"  A public draft of this "
"standard is available at https://www.open-std.org/jtc1/sc22/wg14/www/docs/"
"n1256.pdf\\ ."
msgstr ""
"ISO/IEC 9899:1999.  \"Programming languages -- C.\"  公開草案可在以下網址取"
"得 https://www.open-std.org/jtc1/sc22/wg14/www/docs/n1256.pdf\\ 。"
