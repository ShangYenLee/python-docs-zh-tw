# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-15 20:43+0000\n"
"PO-Revision-Date: 2018-05-23 16:15+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/warnings.rst:2
msgid ":mod:`warnings` --- Warning control"
msgstr ":mod:`warnings` --- 警告控制"

#: ../../library/warnings.rst:7
msgid "**Source code:** :source:`Lib/warnings.py`"
msgstr "**原始碼：**\\ :source:`Lib/warnings.py`"

#: ../../library/warnings.rst:13
#, fuzzy
msgid ""
"Warning messages are typically issued in situations where it is useful to "
"alert the user of some condition in a program, where that condition "
"(normally) doesn't warrant raising an exception and terminating the "
"program.  For example, one might want to issue a warning when a program uses "
"an obsolete module."
msgstr ""
"警告消息通常在提醒使用者程式中的某些情況很有用的情況下發出，而該情況（通常）"
"不保證引發例外並終止程式。例如，當程式使用過時的模組時，可能希望發出警告。"

#: ../../library/warnings.rst:18
#, fuzzy
msgid ""
"Python programmers issue warnings by calling the :func:`warn` function "
"defined in this module.  (C programmers use :c:func:`PyErr_WarnEx`; see :ref:"
"`exceptionhandling` for details)."
msgstr ""
"Python 程式員通過呼叫此模組中定義的 :func:`warn` 函式發出警告。 （C "
"程式員使用 :c:func:`PyErr_WarnEx`；有關詳細資訊，請參閱 "
":ref:`exceptionhandling`）。"

#: ../../library/warnings.rst:22
#, fuzzy
msgid ""
"Warning messages are normally written to :data:`sys.stderr`, but their "
"disposition can be changed flexibly, from ignoring all warnings to turning "
"them into exceptions.  The disposition of warnings can vary based on the :"
"ref:`warning category <warning-categories>`, the text of the warning "
"message, and the source location where it is issued.  Repetitions of a "
"particular warning for the same source location are typically suppressed."
msgstr ""
"警告消息通常寫入 :data:`sys."
"stderr`，但可以靈活更改它們的處理方式，從忽略所有警告到將它們變成例外。"
"警告的處理方式可能會因警告類別 <warning-categories>、警告消息的文本以及發出警"
"告的源位置而異。對同一源位置的特定警告的重複通常會被抑制。"

#: ../../library/warnings.rst:29
#, fuzzy
msgid ""
"There are two stages in warning control: first, each time a warning is "
"issued, a determination is made whether a message should be issued or not; "
"next, if a message is to be issued, it is formatted and printed using a user-"
"settable hook."
msgstr "警告控制分為兩個階段：首先，每次發出警告時，判斷是否發出消息；接下來，如果要"
"發出消息，則使用使用者可設定的掛鉤對其進行格式化和印出。"

#: ../../library/warnings.rst:33
#, fuzzy
msgid ""
"The determination whether to issue a warning message is controlled by the :"
"ref:`warning filter <warning-filter>`, which is a sequence of matching rules "
"and actions. Rules can be added to the filter by calling :func:"
"`filterwarnings` and reset to its default state by calling :func:"
"`resetwarnings`."
msgstr ""
"是否發出警告消息的決定由 :ref:`warning filter <warning-filter>` "
"控制，它是一系列匹配規則和操作。可以通過呼叫 filterwarnings "
"將規則新增到過濾器，並通過呼叫 resetwarnings 重置為預設狀態。"

#: ../../library/warnings.rst:38
#, fuzzy
msgid ""
"The printing of warning messages is done by calling :func:`showwarning`, "
"which may be overridden; the default implementation of this function formats "
"the message by calling :func:`formatwarning`, which is also available for "
"use by custom implementations."
msgstr ""
"警告消息的印出是通過呼叫 :func:`showwarning` 完成的，它可以被覆蓋；"
"此函式的預設實作通過呼叫 :func:`formatwarning` "
"來格式化消息，自定義實作也可以使用它。"

#: ../../library/warnings.rst:44
#, fuzzy
msgid ""
":func:`logging.captureWarnings` allows you to handle all warnings with the "
"standard logging infrastructure."
msgstr ":func:`logging.captureWarnings` 允許您使用標準日誌記錄基礎設施處理所有警告。"

#: ../../library/warnings.rst:51
#, fuzzy
msgid "Warning Categories"
msgstr "警告類別"

#: ../../library/warnings.rst:53
#, fuzzy
msgid ""
"There are a number of built-in exceptions that represent warning categories. "
"This categorization is useful to be able to filter out groups of warnings."
msgstr "有許多代表警告類別的內建例外。這種分類對於過濾警告組很有用。"

#: ../../library/warnings.rst:56
#, fuzzy
msgid ""
"While these are technically :ref:`built-in exceptions <warning-categories-as-"
"exceptions>`, they are documented here, because conceptually they belong to "
"the warnings mechanism."
msgstr ""
"雖然這些在技術上是 :ref:`內建例外 <warning-categories-as-"
"exceptions>`，但它們在此處記錄，因為從概念上講它們屬於警告機制。"

#: ../../library/warnings.rst:60
#, fuzzy
msgid ""
"User code can define additional warning categories by subclassing one of the "
"standard warning categories.  A warning category must always be a subclass "
"of the :exc:`Warning` class."
msgstr "使用者程式碼可以通過子類別化標準警告類別之一來定義其他警告類別。"
"警告類別必須始終是 :exc:`Warning` 類的子類別。"

#: ../../library/warnings.rst:64
#, fuzzy
msgid "The following warnings category classes are currently defined:"
msgstr "當前定義了以下警告類別類："

#: ../../library/warnings.rst:69
#, fuzzy
msgid "Class"
msgstr "班級"

#: ../../library/warnings.rst:69
msgid "Description"
msgstr "描述"

#: ../../library/warnings.rst:71
msgid ":exc:`Warning`"
msgstr ":exc:`Warning`"

#: ../../library/warnings.rst:71
#, fuzzy
msgid ""
"This is the base class of all warning category classes.  It is a subclass "
"of :exc:`Exception`."
msgstr "這是所有警告類別類的基底類別。它是 :exc:`Exception` 的子類別。"

#: ../../library/warnings.rst:75
msgid ":exc:`UserWarning`"
msgstr ":exc:`UserWarning`"

#: ../../library/warnings.rst:75
#, fuzzy
msgid "The default category for :func:`warn`."
msgstr ":func:`warn` 的預設類別。"

#: ../../library/warnings.rst:77
msgid ":exc:`DeprecationWarning`"
msgstr ":exc:`DeprecationWarning`"

#: ../../library/warnings.rst:77
#, fuzzy
msgid ""
"Base category for warnings about deprecated features when those warnings are "
"intended for other Python developers (ignored by default, unless triggered "
"by code in ``__main__``)."
msgstr ""
"當這些警告是針對其他 Python "
"開發人員時，有關已棄用功能的警告的基本類別（預設情況下被忽略，除非由 "
"``__main__`` 中的程式碼觸發）。"

#: ../../library/warnings.rst:82
msgid ":exc:`SyntaxWarning`"
msgstr ":exc:`SyntaxWarning`"

#: ../../library/warnings.rst:82
#, fuzzy
msgid "Base category for warnings about dubious syntactic features."
msgstr "關於可疑句法特徵的警告的基本類別。"

#: ../../library/warnings.rst:85
msgid ":exc:`RuntimeWarning`"
msgstr ":exc:`RuntimeWarning`"

#: ../../library/warnings.rst:85
#, fuzzy
msgid "Base category for warnings about dubious runtime features."
msgstr "有關可疑運行時功能的警告的基本類別。"

#: ../../library/warnings.rst:88
msgid ":exc:`FutureWarning`"
msgstr ":exc:`FutureWarning`"

#: ../../library/warnings.rst:88
#, fuzzy
msgid ""
"Base category for warnings about deprecated features when those warnings are "
"intended for end users of applications that are written in Python."
msgstr "當這些警告是針對用 Python "
"編寫的應用程式的最終使用者時，有關已棄用功能的警告的基本類別。"

#: ../../library/warnings.rst:93
msgid ":exc:`PendingDeprecationWarning`"
msgstr ":exc:`PendingDeprecationWarning`"

#: ../../library/warnings.rst:93
#, fuzzy
msgid ""
"Base category for warnings about features that will be deprecated in the "
"future (ignored by default)."
msgstr "有關將來將棄用的功能的警告的基本類別（預設情況下忽略）。"

#: ../../library/warnings.rst:97
msgid ":exc:`ImportWarning`"
msgstr ":exc:`ImportWarning`"

#: ../../library/warnings.rst:97
#, fuzzy
msgid ""
"Base category for warnings triggered during the process of importing a "
"module (ignored by default)."
msgstr "導入模組過程中觸發的警告的基本類別（預設忽略）。"

#: ../../library/warnings.rst:101
msgid ":exc:`UnicodeWarning`"
msgstr ":exc:`UnicodeWarning`"

#: ../../library/warnings.rst:101
#, fuzzy
msgid "Base category for warnings related to Unicode."
msgstr "與 Unicode 相關的警告的基本類別。"

#: ../../library/warnings.rst:104
msgid ":exc:`BytesWarning`"
msgstr ":exc:`BytesWarning`"

#: ../../library/warnings.rst:104
#, fuzzy
msgid ""
"Base category for warnings related to :class:`bytes` and :class:`bytearray`."
msgstr "與 :class:`bytes` 和 :class:`bytearray` 相關的警告的基本類別。"

#: ../../library/warnings.rst:107
msgid ":exc:`ResourceWarning`"
msgstr ":exc:`ResourceWarning`"

#: ../../library/warnings.rst:107
#, fuzzy
msgid ""
"Base category for warnings related to resource usage (ignored by default)."
msgstr "與資源使用相關的警告的基本類別（預設忽略）。"

#: ../../library/warnings.rst:111
#, fuzzy
msgid ""
"Previously :exc:`DeprecationWarning` and :exc:`FutureWarning` were "
"distinguished based on whether a feature was being removed entirely or "
"changing its behaviour. They are now distinguished based on their intended "
"audience and the way they're handled by the default warnings filters."
msgstr ""
"以前 :exec:`DeprecationWarning` 和 :exc:`FutureWarning` 是根據某個功能是被完全"
"刪除還是改變其行為來區分的。它們現在根據目標受眾和預設警告過濾器處理它們的方"
"式進行區分。"

#: ../../library/warnings.rst:122
#, fuzzy
msgid "The Warnings Filter"
msgstr "警告過濾器"

#: ../../library/warnings.rst:124
#, fuzzy
msgid ""
"The warnings filter controls whether warnings are ignored, displayed, or "
"turned into errors (raising an exception)."
msgstr "警告過濾器控制警告是否被忽略、顯示或轉化為錯誤（引發例外）。"

#: ../../library/warnings.rst:127
#, fuzzy
msgid ""
"Conceptually, the warnings filter maintains an ordered list of filter "
"specifications; any specific warning is matched against each filter "
"specification in the list in turn until a match is found; the filter "
"determines the disposition of the match.  Each entry is a tuple of the form "
"(*action*, *message*, *category*, *module*, *lineno*), where:"
msgstr ""
"從概念上講，警告過濾器維護過濾器規範的有序列表；任何特定警告依次與列表中的每"
"個過濾器規範匹配，直到找到匹配項；過濾器確定匹配項的配置。"
"每個條目都是一個形式為 (*action*, *message*, *category*, *module*, *lineno*) "
"的元組，其中："

#: ../../library/warnings.rst:133
#, fuzzy
msgid "*action* is one of the following strings:"
msgstr "*action* 是以下字串之一："

#: ../../library/warnings.rst:136
#, fuzzy
msgid "Value"
msgstr "價值"

#: ../../library/warnings.rst:136
#, fuzzy
msgid "Disposition"
msgstr "性格"

#: ../../library/warnings.rst:138
msgid "``\"default\"``"
msgstr "``\"default\"``"

#: ../../library/warnings.rst:138
#, fuzzy
msgid ""
"print the first occurrence of matching warnings for each location (module + "
"line number) where the warning is issued"
msgstr "為發出警告的每個位置（模組+行號）印出第一次出現的匹配警告"

#: ../../library/warnings.rst:142
msgid "``\"error\"``"
msgstr "``\"error\"``"

#: ../../library/warnings.rst:142
#, fuzzy
msgid "turn matching warnings into exceptions"
msgstr "將匹配的警告轉換為例外"

#: ../../library/warnings.rst:144
msgid "``\"ignore\"``"
msgstr "``\"ignore\"``"

#: ../../library/warnings.rst:144
#, fuzzy
msgid "never print matching warnings"
msgstr "從不印出匹配的警告"

#: ../../library/warnings.rst:146
msgid "``\"always\"``"
msgstr "``\"always\"``"

#: ../../library/warnings.rst:146
#, fuzzy
msgid "always print matching warnings"
msgstr "始終印出匹配的警告"

#: ../../library/warnings.rst:148
msgid "``\"module\"``"
msgstr "``\"module\"``"

#: ../../library/warnings.rst:148
#, fuzzy
msgid ""
"print the first occurrence of matching warnings for each module where the "
"warning is issued (regardless of line number)"
msgstr "為發出警告的每個模組印出第一次出現的匹配警告（無論行號如何）"

#: ../../library/warnings.rst:152
msgid "``\"once\"``"
msgstr "``\"once\"``"

#: ../../library/warnings.rst:152
#, fuzzy
msgid ""
"print only the first occurrence of matching warnings, regardless of location"
msgstr "只印出匹配警告的第一次出現，不管位置"

#: ../../library/warnings.rst:156
#, fuzzy
msgid ""
"*message* is a string containing a regular expression that the start of the "
"warning message must match, case-insensitively.  In :option:`-W` and :envvar:"
"`PYTHONWARNINGS`, *message* is a literal string that the start of the "
"warning message must contain (case-insensitively), ignoring any whitespace "
"at the start or end of *message*."
msgstr ""
"*message* 是一個包含正則表達式的字串，警告消息的開頭必須匹配該正則表達式，不"
"區分大小寫。在 :option:`-W` 和 :envvar:`PYTHONWARNINGS` 中，*message* "
"是警告消息開頭必須包含的文字字串（不區分大小寫），忽略 *message* "
"開頭或結尾的任何空格."

#: ../../library/warnings.rst:162
#, fuzzy
msgid ""
"*category* is a class (a subclass of :exc:`Warning`) of which the warning "
"category must be a subclass in order to match."
msgstr "*category* 是一個類（:exc:`Warning` "
"的子類別），警告類別必須是其子類別才能匹配。"

#: ../../library/warnings.rst:165
#, fuzzy
msgid ""
"*module* is a string containing a regular expression that the start of the "
"fully qualified module name must match, case-sensitively.  In :option:`-W` "
"and :envvar:`PYTHONWARNINGS`, *module* is a literal string that the fully "
"qualified module name must be equal to (case-sensitively), ignoring any "
"whitespace at the start or end of *module*."
msgstr ""
"*module* "
"是一個包含正則表達式的字串，完全限定模組名稱的開頭必須匹配，區分大小寫。在 "
":option:`-W` 和 :envvar:`PYTHONWARNINGS` 中，*module* "
"是一個文字字串，完全限定的模組名稱必須等於（區分大小寫），忽略 *module "
"開頭或結尾的任何空格*。"

#: ../../library/warnings.rst:171
#, fuzzy
msgid ""
"*lineno* is an integer that the line number where the warning occurred must "
"match, or ``0`` to match all line numbers."
msgstr "*lineno* 是一個整數，出現警告的行號必須匹配，或者 ``0``匹配所有行號。"

#: ../../library/warnings.rst:174
#, fuzzy
msgid ""
"Since the :exc:`Warning` class is derived from the built-in :exc:`Exception` "
"class, to turn a warning into an error we simply raise ``category(message)``."
msgstr ""
"由於 :exc:`Warning` 類派生自內建的 :exc:`Exception` 類，要將警告變成錯誤，"
"我們只需引發 ``category(message)``。"

#: ../../library/warnings.rst:177
#, fuzzy
msgid ""
"If a warning is reported and doesn't match any registered filter then the "
"\"default\" action is applied (hence its name)."
msgstr "如果報告警告並且不匹配任何已註冊的過濾器，則應用“預設”操作（因此得名）。"

#: ../../library/warnings.rst:184
#, fuzzy
msgid "Describing Warning Filters"
msgstr "描述警告過濾器"

#: ../../library/warnings.rst:186
#, fuzzy
msgid ""
"The warnings filter is initialized by :option:`-W` options passed to the "
"Python interpreter command line and the :envvar:`PYTHONWARNINGS` environment "
"variable. The interpreter saves the arguments for all supplied entries "
"without interpretation in :data:`sys.warnoptions`; the :mod:`warnings` "
"module parses these when it is first imported (invalid options are ignored, "
"after printing a message to :data:`sys.stderr`)."
msgstr ""
"警告過濾器由傳遞給 Python 直譯器命令列的選項：-W "
"選項和環境變數 :envvar:`PYTHONWARNINGS` 初始化。"
"直譯器將所有提供的條目的參數保存在 :data:`sys.warnoptions` 中而不進行解釋； "
":mod:`warnings` 模組在首次導入時解析這些（在將消息印出到 :data:`sys.stderr` "
"後，無效選項將被忽略）。"

#: ../../library/warnings.rst:193
#, fuzzy
msgid ""
"Individual warnings filters are specified as a sequence of fields separated "
"by colons::"
msgstr "單獨的警告過濾器被指定為由冒號分隔的一系列欄位："

#: ../../library/warnings.rst:198
#, fuzzy
msgid ""
"The meaning of each of these fields is as described in :ref:`warning-"
"filter`. When listing multiple filters on a single line (as for :envvar:"
"`PYTHONWARNINGS`), the individual filters are separated by commas and the "
"filters listed later take precedence over those listed before them (as "
"they're applied left-to-right, and the most recently applied filters take "
"precedence over earlier ones)."
msgstr ""
"每個欄位的含義如 :ref:`warning-filter` 中所述。當在一行中列出多個過濾器時（"
"對於 :envvar:`PYTHONWARNINGS`），各個過濾器用逗號分隔，後面列出的過濾器優先於"
"它們之前列出的過濾器（因為它們是從左到右應用的，最近應用的過濾器優先於較早應"
"用的過濾器）。"

#: ../../library/warnings.rst:205
#, fuzzy
msgid ""
"Commonly used warning filters apply to either all warnings, warnings in a "
"particular category, or warnings raised by particular modules or packages. "
"Some examples::"
msgstr "常用的警告過濾器適用於所有警告、特定類別中的警告或特定模組或包引發的警告。一"
"些例子：："

#: ../../library/warnings.rst:221
#, fuzzy
msgid "Default Warning Filter"
msgstr "預設警告過濾器"

#: ../../library/warnings.rst:223
#, fuzzy
msgid ""
"By default, Python installs several warning filters, which can be overridden "
"by the :option:`-W` command-line option, the :envvar:`PYTHONWARNINGS` "
"environment variable and calls to :func:`filterwarnings`."
msgstr ""
"預設情況下，Python 安裝了幾個警告過濾器，它們可以被命令列選項 :option:`-W` "
"覆蓋，環境變數 :envvar:`PYTHONWARNINGS` 和呼叫 :func:`filterwarnings`。"

#: ../../library/warnings.rst:227
#, fuzzy
msgid ""
"In regular release builds, the default warning filter has the following "
"entries (in order of precedence)::"
msgstr "在常規發布版本中，預設警告過濾器具有以下條目（按優先順序排列）："

#: ../../library/warnings.rst:236
#, fuzzy
msgid ""
"In a :ref:`debug build <debug-build>`, the list of default warning filters "
"is empty."
msgstr "在 :ref:`debug build <debug-build>` 中，預設警告過濾器列表為空。"

#: ../../library/warnings.rst:238
#, fuzzy
msgid ""
":exc:`DeprecationWarning` is now ignored by default in addition to :exc:"
"`PendingDeprecationWarning`."
msgstr ""
"除了 :exc:`PendingDeprecationWarning` 之外，現在預設情況下會忽略 "
":exc:`DeprecationWarning`。"

#: ../../library/warnings.rst:242
#, fuzzy
msgid ""
":exc:`DeprecationWarning` is once again shown by default when triggered "
"directly by code in ``__main__``."
msgstr ":exc:`DeprecationWarning` 在 ``__main__`` 中的程式碼直接觸發時再次預設顯示。"

#: ../../library/warnings.rst:246
#, fuzzy
msgid ""
":exc:`BytesWarning` no longer appears in the default filter list and is "
"instead configured via :data:`sys.warnoptions` when :option:`-b` is "
"specified twice."
msgstr ""
":exc:`BytesWarning` 不再出現在預設過濾器列表中，而是通過 :data:`sys."
"warnoptions` 在指定了 :option:`-b` 兩次時進行配置。"

#: ../../library/warnings.rst:255
#, fuzzy
msgid "Overriding the default filter"
msgstr "覆蓋預設過濾器"

#: ../../library/warnings.rst:257
#, fuzzy
msgid ""
"Developers of applications written in Python may wish to hide *all* Python "
"level warnings from their users by default, and only display them when "
"running tests or otherwise working on the application. The :data:`sys."
"warnoptions` attribute used to pass filter configurations to the interpreter "
"can be used as a marker to indicate whether or not warnings should be "
"disabled::"
msgstr ""
"用 Python 編寫的應用程式的開發人員可能希望預設向使用者隱藏 *所有* Python "
"級警告，並且僅在運行測試或以其他方式處理應用程式時顯示它們。"
"用於將過濾器配置傳遞給直譯器的 :data:`sys.warnoptions` "
"屬性可以用作指示是否應禁用警告的標記::"

#: ../../library/warnings.rst:269
#, fuzzy
msgid ""
"Developers of test runners for Python code are advised to instead ensure "
"that *all* warnings are displayed by default for the code under test, using "
"code like::"
msgstr "建議 Python 程式碼的測試運行程式的開發人員改為確保預設顯示被測程式碼的 *所有*"
" 警告，使用如下程式碼："

#: ../../library/warnings.rst:280
#, fuzzy
msgid ""
"Finally, developers of interactive shells that run user code in a namespace "
"other than ``__main__`` are advised to ensure that :exc:`DeprecationWarning` "
"messages are made visible by default, using code like the following (where "
"``user_ns`` is the module used to execute code entered interactively)::"
msgstr ""
"最後，建議在 ``__main__`` 以外的命名空間中運行使用者程式碼的交互式 shell "
"的開發人員確保 :exec:`DeprecationWarning` 消息預設可見，使用如下程式碼（其中 "
"``user_ns``是用於執行交互式輸入程式碼的模組：："

#: ../../library/warnings.rst:293
#, fuzzy
msgid "Temporarily Suppressing Warnings"
msgstr "暫時抑制警告"

#: ../../library/warnings.rst:295
#, fuzzy
msgid ""
"If you are using code that you know will raise a warning, such as a "
"deprecated function, but do not want to see the warning (even when warnings "
"have been explicitly configured via the command line), then it is possible "
"to suppress the warning using the :class:`catch_warnings` context manager::"
msgstr ""
"如果您正在使用您知道會引發警告的程式碼，例如已棄用的函式，但不想看到警告（即"
"使警告已通過命令列明確配置），則可以使用來抑制警告 :class:`catch_warnings` "
"上下文管理器::"

#: ../../library/warnings.rst:309
#, fuzzy
msgid ""
"While within the context manager all warnings will simply be ignored. This "
"allows you to use known-deprecated code without having to see the warning "
"while not suppressing the warning for other code that might not be aware of "
"its use of deprecated code.  Note: this can only be guaranteed in a single-"
"threaded application. If two or more threads use the :class:`catch_warnings` "
"context manager at the same time, the behavior is undefined."
msgstr ""
"在上下文管理器中，所有警告都將被忽略。這允許您使用已知已棄用的程式碼而不必看"
"到警告，同時不會抑制可能不知道其使用已棄用程式碼的其他程式碼的警告。注意：這"
"只能在單執行緒應用程式中得到保證。如果兩個或多個執行緒同時使用 "
"catch_warnings 上下文管理器，則行為未定義。"

#: ../../library/warnings.rst:321
#, fuzzy
msgid "Testing Warnings"
msgstr "測試警告"

#: ../../library/warnings.rst:323
#, fuzzy
msgid ""
"To test warnings raised by code, use the :class:`catch_warnings` context "
"manager. With it you can temporarily mutate the warnings filter to "
"facilitate your testing. For instance, do the following to capture all "
"raised warnings to check::"
msgstr ""
"要測試程式碼引發的警告，請使用 catch_warnings 上下文管理器。有了它，您可以暫"
"時改變警告過濾器以方便您的測試。例如，執行以下操作以捕獲所有引發的警告以檢查"
"："

#: ../../library/warnings.rst:343
#, fuzzy
msgid ""
"One can also cause all warnings to be exceptions by using ``error`` instead "
"of ``always``. One thing to be aware of is that if a warning has already "
"been raised because of a ``once``/``default`` rule, then no matter what "
"filters are set the warning will not be seen again unless the warnings "
"registry related to the warning has been cleared."
msgstr ""
"還可以通過使用 ``error`` 而不是 ``always`` "
"使所有警告成為例外。需要注意的一件事是，如果警告已經因為 ``once``/``default``"
" 規則發出，那麼無論設定什麼過濾器，警告都不會再次出現，除非警告註冊表相關警告"
"已被清除。"

#: ../../library/warnings.rst:349
#, fuzzy
msgid ""
"Once the context manager exits, the warnings filter is restored to its state "
"when the context was entered. This prevents tests from changing the warnings "
"filter in unexpected ways between tests and leading to indeterminate test "
"results. The :func:`showwarning` function in the module is also restored to "
"its original value.  Note: this can only be guaranteed in a single-threaded "
"application. If two or more threads use the :class:`catch_warnings` context "
"manager at the same time, the behavior is undefined."
msgstr ""
"一旦上下文管理器退出，警告過濾器將恢復到進入上下文時的狀態。這可以防止測試在"
"測試之間以意想不到的方式更改警告過濾器並導致不確定的測試結果。模組中的 "
":func:`showwarning` "
"函式也恢復到原來的值。注意：這只能在單執行緒應用程式中得到保證。"
"如果兩個或多個執行緒同時使用 catch_warnings 上下文管理器，則行為未定義。"

#: ../../library/warnings.rst:357
#, fuzzy
msgid ""
"When testing multiple operations that raise the same kind of warning, it is "
"important to test them in a manner that confirms each operation is raising a "
"new warning (e.g. set warnings to be raised as exceptions and check the "
"operations raise exceptions, check that the length of the warning list "
"continues to increase after each operation, or else delete the previous "
"entries from the warnings list before each new operation)."
msgstr ""
"在測試引發相同型別警告的多個操作時，以確認每個操作都引發新警告的方式測試它們"
"很重要（例如，將警告設定為例外引發並檢查操作引發例外，檢查長度警告列表的數量"
"在每次操作後繼續增加，或者在每次新操作之前從警告列表中刪除以前的條目）。"

#: ../../library/warnings.rst:368
#, fuzzy
msgid "Updating Code For New Versions of Dependencies"
msgstr "為新版本的依賴項更新程式碼"

#: ../../library/warnings.rst:370
#, fuzzy
msgid ""
"Warning categories that are primarily of interest to Python developers "
"(rather than end users of applications written in Python) are ignored by "
"default."
msgstr "預設情況下忽略 Python 開發人員（而不是使用 Python "
"編寫的應用程式的最終使用者）主要感興趣的警告類別。"

#: ../../library/warnings.rst:373
#, fuzzy
msgid ""
"Notably, this \"ignored by default\" list includes :exc:`DeprecationWarning` "
"(for every module except ``__main__``), which means developers should make "
"sure to test their code with typically ignored warnings made visible in "
"order to receive timely notifications of future breaking API changes "
"(whether in the standard library or third party packages)."
msgstr ""
"值得注意的是，這個“預設忽略”列表包括 :exec:`DeprecationWarning`（對於除``__mai"
"n__`` 之外的每個模組），這意味著開發人員應該確保測試他們的程式碼時通常忽略的"
"警告是可見的，以便及時接收通知未來的重大 API "
"更改（無論是在標準庫還是第三方包中）。"

#: ../../library/warnings.rst:379
#, fuzzy
msgid ""
"In the ideal case, the code will have a suitable test suite, and the test "
"runner will take care of implicitly enabling all warnings when running tests "
"(the test runner provided by the :mod:`unittest` module does this)."
msgstr ""
"在理想情況下，程式碼將有一個合適的測試套件，測試運行器將負責在運行測試時隱式"
"啟用所有警告（由 :mod:`unittest` 模組提供的測試運行器執行此操作）。"

#: ../../library/warnings.rst:383
#, fuzzy
msgid ""
"In less ideal cases, applications can be checked for use of deprecated "
"interfaces by passing :option:`-Wd <-W>` to the Python interpreter (this is "
"shorthand for :option:`!-W default`) or setting ``PYTHONWARNINGS=default`` "
"in the environment. This enables default handling for all warnings, "
"including those that are ignored by default. To change what action is taken "
"for encountered warnings you can change what argument is passed to :option:`-"
"W` (e.g. :option:`!-W error`). See the :option:`-W` flag for more details on "
"what is possible."
msgstr ""
"在不太理想的情況下，可以通過將 :option:`-Wd <-W>` 傳遞給 Python 直譯器（這是 "
":option:`!-W default` 的簡寫）或設定 `` "
"來檢查應用程式是否使用了已棄用的介面PYTHONWARNINGS=default`` 在環境中。這將為"
"所有警告啟用預設處理，包括預設情況下忽略的警告。要更改對遇到的警告採取的操作"
"，您可以更改傳遞給 :option:`-W` 的參數（例如 :option:`!-W "
"error`）。有關可能的更多詳細資訊，請參閱 :option:`-W` 旗標。"

#: ../../library/warnings.rst:396
#, fuzzy
msgid "Available Functions"
msgstr "可用功能"

#: ../../library/warnings.rst:401
#, fuzzy
msgid ""
"Issue a warning, or maybe ignore it or raise an exception.  The *category* "
"argument, if given, must be a :ref:`warning category class <warning-"
"categories>`; it defaults to :exc:`UserWarning`.  Alternatively, *message* "
"can be a :exc:`Warning` instance, in which case *category* will be ignored "
"and ``message.__class__`` will be used. In this case, the message text will "
"be ``str(message)``. This function raises an exception if the particular "
"warning issued is changed into an error by the :ref:`warnings filter "
"<warning-filter>`.  The *stacklevel* argument can be used by wrapper "
"functions written in Python, like this::"
msgstr ""
"發出警告，或者忽略它或引發例外。 *category* 參數，如果給定的話，必須是 :ref:`"
"warning category class <warning-"
"categories>`;它預設為 :exec:`UserWarning`。或者，*message* 可以是一個 "
":exc:`Warning` 實例，在這種情況下，*category* 將被忽略並使用 ``message."
"__class__``。在這種情況下，消息文本將為 ``str(message)``。"
"如果發出的特定警告被 :ref:`warnings filter <warning-filter>` "
"更改為錯誤，則此函式會引發例外。 *stacklevel* 參數可以由用 Python "
"編寫的包裝函式使用，如下所示："

#: ../../library/warnings.rst:413
#, fuzzy
msgid ""
"This makes the warning refer to :func:`deprecation`'s caller, rather than to "
"the source of :func:`deprecation` itself (since the latter would defeat the "
"purpose of the warning message)."
msgstr ""
"這使得警告指向 :func:`deprecation` 的呼叫者，而不是 :func:`deprecation` "
"本身的來源（因為後者會破壞警告消息的目的）。"

#: ../../library/warnings.rst:417 ../../library/warnings.rst:440
#, fuzzy
msgid ""
"*source*, if supplied, is the destroyed object which emitted a :exc:"
"`ResourceWarning`."
msgstr "*source*（如果提供）是發出 ResourceWarning 的已銷毀物件。"

#: ../../library/warnings.rst:420
msgid "Added *source* parameter."
msgstr "新增 *source* 參數。"

#: ../../library/warnings.rst:426
#, fuzzy
msgid ""
"This is a low-level interface to the functionality of :func:`warn`, passing "
"in explicitly the message, category, filename and line number, and "
"optionally the module name and the registry (which should be the "
"``__warningregistry__`` dictionary of the module).  The module name defaults "
"to the filename with ``.py`` stripped; if no registry is passed, the warning "
"is never suppressed. *message* must be a string and *category* a subclass "
"of :exc:`Warning` or *message* may be a :exc:`Warning` instance, in which "
"case *category* will be ignored."
msgstr ""
"這是 :func:`warn` 功能的低階介面，顯式傳遞消息、類別、文件名和行號，以及可選"
"的模組名稱和註冊表（應該是 ``__warningregistry__`` 字典模組）。"
"模組名稱預設為去掉 ``.py`` 的文件名；如果未傳遞註冊表，則永遠不會抑制警告。 "
"*message* 必須是字串，*category* 是 :exc:`Warning` 的子類別，或者 *message* "
"可以是 :exc:`Warning` 實例，在這種情況下，*category* 將被忽略。"

#: ../../library/warnings.rst:435
#, fuzzy
msgid ""
"*module_globals*, if supplied, should be the global namespace in use by the "
"code for which the warning is issued.  (This argument is used to support "
"displaying source for modules found in zipfiles or other non-filesystem "
"import sources)."
msgstr ""
"*module_globals*，如果提供，應該是發出警告的程式碼正在使用的全局命名空間。 （"
"此參數用於支援顯示在 zip 文件或其他非文件系統導入源中找到的模組的源程式碼）。"

#: ../../library/warnings.rst:443
#, fuzzy
msgid "Add the *source* parameter."
msgstr "新增 *source* 參數。"

#: ../../library/warnings.rst:449
#, fuzzy
msgid ""
"Write a warning to a file.  The default implementation calls "
"``formatwarning(message, category, filename, lineno, line)`` and writes the "
"resulting string to *file*, which defaults to :data:`sys.stderr`.  You may "
"replace this function with any callable by assigning to ``warnings."
"showwarning``. *line* is a line of source code to be included in the warning "
"message; if *line* is not supplied, :func:`showwarning` will try to read the "
"line specified by *filename* and *lineno*."
msgstr ""
"將警告寫入文件。預設實作呼叫``formatwarning(message, category, filename, "
"lineno, line)``並將結果字串寫入*file*，預設為 :data:`sys.stderr`。"
"您可以通過分配給 ``warnings.showwarning`` 將此函式替換為任何可呼叫函式。 "
"*line* 是要包含在警告消息中的一行源程式碼；如果未提供 "
"*line*，:func:`showwarning` 將嘗試讀取由 *filename* 和 *lineno* 指定的行。"

#: ../../library/warnings.rst:460
#, fuzzy
msgid ""
"Format a warning the standard way.  This returns a string which may contain "
"embedded newlines and ends in a newline.  *line* is a line of source code to "
"be included in the warning message; if *line* is not supplied, :func:"
"`formatwarning` will try to read the line specified by *filename* and "
"*lineno*."
msgstr ""
"以標準方式格式化警告。這將回傳一個字串，其中可能包含嵌入的換行符並以換行符結"
"尾。 *line* 是要包含在警告消息中的一行源程式碼；如果未提供 "
"*line*，:func:`formatwarning` 將嘗試讀取由 *filename* 和 *lineno* 指定的行。"

#: ../../library/warnings.rst:469
#, fuzzy
msgid ""
"Insert an entry into the list of :ref:`warnings filter specifications "
"<warning-filter>`.  The entry is inserted at the front by default; if "
"*append* is true, it is inserted at the end.  This checks the types of the "
"arguments, compiles the *message* and *module* regular expressions, and "
"inserts them as a tuple in the list of warnings filters.  Entries closer to "
"the front of the list override entries later in the list, if both match a "
"particular warning.  Omitted arguments default to a value that matches "
"everything."
msgstr ""
"在 :ref:`warnings filter specifications <warning-filter>` "
"列表中插入一個條目。入口預設插入在最前面；如果 *append* "
"為真，則將其插入到末尾。這會檢查參數的型別，編譯 *message* 和 *module* 正則表"
"達式，並將它們作為元組插入到警告過濾器列表中。靠近列表前面的條目會覆蓋列表後"
"面的條目，如果兩者都匹配特定警告。省略的參數預設為匹配所有內容的值。"

#: ../../library/warnings.rst:481
#, fuzzy
msgid ""
"Insert a simple entry into the list of :ref:`warnings filter specifications "
"<warning-filter>`.  The meaning of the function parameters is as for :func:"
"`filterwarnings`, but regular expressions are not needed as the filter "
"inserted always matches any message in any module as long as the category "
"and line number match."
msgstr ""
"在 :ref:`警告過濾器規範 <warning-filter>` 列表中插入一個簡單的條目。"
"函式參數的含義與 :func:`filterwarnings` 相同，但不需要正則表達式，因為只要類"
"別和行號匹配，插入的過濾器總是匹配任何模組中的任何消息。"

#: ../../library/warnings.rst:490
#, fuzzy
msgid ""
"Reset the warnings filter.  This discards the effect of all previous calls "
"to :func:`filterwarnings`, including that of the :option:`-W` command line "
"options and calls to :func:`simplefilter`."
msgstr ""
"重置警告過濾器。這會丟棄所有先前呼叫 filterwarnings 的效果，包括 :option:`-W`"
" 命令列選項和呼叫 :func:`simplefilter` 的效果。"

#: ../../library/warnings.rst:496
#, fuzzy
msgid "Available Context Managers"
msgstr "可用的上下文管理器"

#: ../../library/warnings.rst:500
#, fuzzy
msgid ""
"A context manager that copies and, upon exit, restores the warnings filter "
"and the :func:`showwarning` function. If the *record* argument is :const:"
"`False` (the default) the context manager returns :class:`None` on entry. If "
"*record* is :const:`True`, a list is returned that is progressively "
"populated with objects as seen by a custom :func:`showwarning` function "
"(which also suppresses output to ``sys.stdout``). Each object in the list "
"has attributes with the same names as the arguments to :func:`showwarning`."
msgstr ""
"複製並在退出時恢復警告過濾器和 :func:`showwarning` 函式的上下文管理器。如果 "
"*record* 參數是 :const:`False`（預設值），則上下文管理器在輸入時回傳 "
":class:`None`。如果 *record* 是 "
":const:`True`，則回傳一個列表，該列表逐漸填充物件，如自定義 "
":func:`showwarning` 函式所見（它也抑制輸出到 ``sys.stdout``）。"
"列表中的每個對像都具有與 :func:`showwarning` 的參數同名的屬性。"

#: ../../library/warnings.rst:509
#, fuzzy
msgid ""
"The *module* argument takes a module that will be used instead of the module "
"returned when you import :mod:`warnings` whose filter will be protected. "
"This argument exists primarily for testing the :mod:`warnings` module itself."
msgstr ""
"*module* 參數採用一個將被使用的模組，而不是當您導入 :mod:`warnings` "
"時回傳的模組，其過濾器將受到保護。這個參數的存在主要是為了測試 "
":mod:`warnings` 模組本身。"

#: ../../library/warnings.rst:514
#, fuzzy
msgid ""
"If the *action* argument is not ``None``, the remaining arguments are passed "
"to :func:`simplefilter` as if it were called immediately on entering the "
"context."
msgstr ""
"如果 *action* 參數不是 ``None``，剩餘的參數將被傳遞給 "
":func:`simplefilter`，就好像它在進入上下文時被立即呼叫一樣。"

#: ../../library/warnings.rst:520
#, fuzzy
msgid ""
"The :class:`catch_warnings` manager works by replacing and then later "
"restoring the module's :func:`showwarning` function and internal list of "
"filter specifications.  This means the context manager is modifying global "
"state and therefore is not thread-safe."
msgstr ""
":class:`catch_warnings` 管理器通過替換然後恢復模組的 :func:`showwarning` 函式"
"和過濾器規範的內部列表來工作。這意味著上下文管理器正在修改全局狀態，因此不是"
"執行緒安全的。"

#: ../../library/warnings.rst:528
#, fuzzy
msgid "Added the *action*, *category*, *lineno*, and *append* parameters."
msgstr "新增了 *action*、*category*、*lineno* 和 *append* 參數。"
