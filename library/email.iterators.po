# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-26 18:54+0800\n"
"PO-Revision-Date: 2016-11-19 00:30+0000\n"
"Last-Translator: Liang-Bo Wang <me@liang2.tw>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/email.iterators.rst:2
msgid ":mod:`email.iterators`: Iterators"
msgstr ":mod:`email.iterators`: 疊代器"

#: ../../library/email.iterators.rst:7
msgid "**Source code:** :source:`Lib/email/iterators.py`"
msgstr "**原始碼：**\\ :source:`Lib/email/iterators.py`"

#: ../../library/email.iterators.rst:11
#, fuzzy
msgid ""
"Iterating over a message object tree is fairly easy with the :meth:`Message."
"walk <email.message.Message.walk>` method.  The :mod:`email.iterators` "
"module provides some useful higher level iterations over message object "
"trees."
msgstr ""
"使用 :meth:`Message.walk <email.message.Message.walk>` "
"方法遍歷消息物件樹相當容易。 :mod:`email.iterators` "
"模組在消息物件樹上提供了一些有用的更高階別的疊代。"

#: ../../library/email.iterators.rst:19
#, fuzzy
msgid ""
"This iterates over all the payloads in all the subparts of *msg*, returning "
"the string payloads line-by-line.  It skips over all the subpart headers, "
"and it skips over any subpart with a payload that isn't a Python string.  "
"This is somewhat equivalent to reading the flat text representation of the "
"message from a file using :meth:`~io.TextIOBase.readline`, skipping over all "
"the intervening headers."
msgstr ""
"這將遍歷 *msg* "
"所有子部分中的所有有效載荷，逐行回傳字串有效載荷。它會跳過所有子部分標頭，"
"並會跳過任何負載不是 Python 字串的子部分。這有點等同於使用 :meth:`~io."
"TextIOBase.readline` 從文件中讀取消息的平面文本表示，跳過所有中間標題。"

#: ../../library/email.iterators.rst:26
#, fuzzy
msgid ""
"Optional *decode* is passed through to :meth:`Message.get_payload <email."
"message.Message.get_payload>`."
msgstr ""
"可選的 *decode* 傳遞給 Message.get_payload <email.message.Message."
"get_payload>`。"

#: ../../library/email.iterators.rst:32
#, fuzzy
msgid ""
"This iterates over all the subparts of *msg*, returning only those subparts "
"that match the MIME type specified by *maintype* and *subtype*."
msgstr "這將遍歷 *msg* 的所有子部分，僅回傳與 *maintype* 和 *subtype* 指定的 MIME "
"型別匹配的那些子部分。"

#: ../../library/email.iterators.rst:35
#, fuzzy
msgid ""
"Note that *subtype* is optional; if omitted, then subpart MIME type matching "
"is done only with the main type.  *maintype* is optional too; it defaults "
"to :mimetype:`text`."
msgstr ""
"請注意，*subtype* 是可選的；如果省略，則子部分 MIME "
"型別匹配僅與主要型別匹配。 *maintype* 也是可選的；它預設為 :mimetype:`text`。"

#: ../../library/email.iterators.rst:39
#, fuzzy
msgid ""
"Thus, by default :func:`typed_subpart_iterator` returns each subpart that "
"has a MIME type of :mimetype:`text/\\*`."
msgstr ""
"因此，預設情況下 :func:`typed_subpart_iterator` 回傳每個 MIME 型別為 "
":mimetype:`text/\\*` 的子部分。"

#: ../../library/email.iterators.rst:43
#, fuzzy
msgid ""
"The following function has been added as a useful debugging tool.  It should "
"*not* be considered part of the supported public interface for the package."
msgstr "新增了以下功能作為有用的除錯工具。它不應該*被視為包支援的公開介面的一部分。"

#: ../../library/email.iterators.rst:48
#, fuzzy
msgid ""
"Prints an indented representation of the content types of the message object "
"structure.  For example:"
msgstr "印出消息物件結構的內容型別的縮進表示。例如："

#: ../../library/email.iterators.rst:81
#, fuzzy
msgid ""
"Optional *fp* is a file-like object to print the output to.  It must be "
"suitable for Python's :func:`print` function.  *level* is used internally. "
"*include_default*, if true, prints the default type as well."
msgstr ""
"可選的 *fp* 是一個類似文件的物件，用於印出輸出。它必須適用於 Python 的 "
":func:`print` 函式。 *level* 在內部使用。 "
"*include_default*，如果為真，也會印出預設型別。"
