# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-22 00:16+0000\n"
"PO-Revision-Date: 2018-05-23 16:13+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/traceback.rst:2
#, fuzzy
msgid ":mod:`traceback` --- Print or retrieve a stack traceback"
msgstr ":mod:`traceback` --- 印出或檢索堆疊回溯"

#: ../../library/traceback.rst:7
msgid "**Source code:** :source:`Lib/traceback.py`"
msgstr "**原始碼：**\\ :source:`Lib/traceback.py`"

#: ../../library/traceback.rst:11
#, fuzzy
msgid ""
"This module provides a standard interface to extract, format and print stack "
"traces of Python programs.  It exactly mimics the behavior of the Python "
"interpreter when it prints a stack trace.  This is useful when you want to "
"print stack traces under program control, such as in a \"wrapper\" around "
"the interpreter."
msgstr ""
"該模組提供了一個標準介面來提取、格式化和印出 Python 程式的堆疊跟踪。"
"它完全模仿了 Python 直譯器印出堆疊跟踪時的行為。當您想在程式控制下印出堆疊跟"
"踪時，這很有用，例如在直譯器周圍的“包裝器”中。"

#: ../../library/traceback.rst:19
#, fuzzy
msgid ""
"The module uses traceback objects --- these are objects of type :class:"
"`types.TracebackType`, which are assigned to the ``__traceback__`` field of :"
"class:`BaseException` instances."
msgstr ""
"該模組使用 traceback 物件——這些是 types.TracebackType 型別的物件，"
"它們被分配給 BaseException 實例的 __traceback__ 欄位。"

#: ../../library/traceback.rst:25
#, fuzzy
msgid "Module :mod:`faulthandler`"
msgstr "模組 :mod:`faulthandler`"

#: ../../library/traceback.rst:25
#, fuzzy
msgid ""
"Used to dump Python tracebacks explicitly, on a fault, after a timeout, or "
"on a user signal."
msgstr "用於在出現故障、超時後或使用者信號時顯式轉儲 Python 回溯。"

#: ../../library/traceback.rst:27
#, fuzzy
msgid "Module :mod:`pdb`"
msgstr "模組 :mod:`pdb`"

#: ../../library/traceback.rst:28
#, fuzzy
msgid "Interactive source code debugger for Python programs."
msgstr "Python 程式的交互式源程式碼除錯器。"

#: ../../library/traceback.rst:30
#, fuzzy
msgid "The module defines the following functions:"
msgstr "該模組定義了以下功能："

#: ../../library/traceback.rst:34
#, fuzzy
msgid ""
"Print up to *limit* stack trace entries from traceback object *tb* (starting "
"from the caller's frame) if *limit* is positive.  Otherwise, print the last "
"``abs(limit)`` entries.  If *limit* is omitted or ``None``, all entries are "
"printed.  If *file* is omitted or ``None``, the output goes to ``sys."
"stderr``; otherwise it should be an open file or file-like object to receive "
"the output."
msgstr ""
"如果 *limit* 為正，則從回溯物件 *tb* 印出最多 *limit* "
"堆疊跟踪條目（從呼叫者的框架開始）。否則，印出最後的 ``abs(limit)`` 條目。"
"如果省略 *limit* 或 ``None`` ，則印出所有條目。如果省略 *file* 或 ``None``，"
"則輸出轉到 ``sys."
"stderr``；否則它應該是一個打開的文件或類似文件的物件來接收輸出。"

#: ../../library/traceback.rst:41 ../../library/traceback.rst:104
#, fuzzy
msgid "Added negative *limit* support."
msgstr "新增負 *limit* 支援。"

#: ../../library/traceback.rst:48
#, fuzzy
msgid ""
"Print exception information and stack trace entries from traceback object "
"*tb* to *file*. This differs from :func:`print_tb` in the following ways:"
msgstr "從回溯物件 *tb* 印出例外資訊和堆疊跟踪條目到 *file*。這在以下方面與 "
":func:`print_tb` 不同："

#: ../../library/traceback.rst:52
#, fuzzy
msgid ""
"if *tb* is not ``None``, it prints a header ``Traceback (most recent call "
"last):``"
msgstr "如果 *tb* 不是``None``，它會印出標題``Traceback（最近一次呼叫）：``"

#: ../../library/traceback.rst:55
#, fuzzy
msgid "it prints the exception type and *value* after the stack trace"
msgstr "它在堆疊跟踪之後印出例外型別和 *value*"

#: ../../library/traceback.rst:59
#, fuzzy
msgid ""
"if *type(value)* is :exc:`SyntaxError` and *value* has the appropriate "
"format, it prints the line where the syntax error occurred with a caret "
"indicating the approximate position of the error."
msgstr ""
"如果 *type(value)* 是 :exc:`SyntaxError` 並且 *value* "
"具有適當的格式，它會印出出現語法錯誤的行，並用插入符號指示錯誤的大致位置。"

#: ../../library/traceback.rst:63
#, fuzzy
msgid ""
"Since Python 3.10, instead of passing *value* and *tb*, an exception object "
"can be passed as the first argument. If *value* and *tb* are provided, the "
"first argument is ignored in order to provide backwards compatibility."
msgstr ""
"從 Python 3.10 開始，可以傳遞一個例外對像作為第一個參數，而不是傳遞 *value* "
"和 *tb*。如果提供 *value* 和 *tb*，則忽略第一個參數以提供向後相容性。"

#: ../../library/traceback.rst:67
#, fuzzy
msgid ""
"The optional *limit* argument has the same meaning as for :func:`print_tb`. "
"If *chain* is true (the default), then chained exceptions (the :attr:"
"`__cause__` or :attr:`__context__` attributes of the exception) will be "
"printed as well, like the interpreter itself does when printing an unhandled "
"exception."
msgstr ""
"可選的 *limit* 參數與 :func:`print_tb` 具有相同的含義。如果 *chain* "
"為真（預設值），那麼鍊式例外（例外的 :attr:`__cause__` 或 :attr:`__context__`"
" 屬性）也將被印出，就像直譯器本身在印出未處理的例外時所做的那樣."

#: ../../library/traceback.rst:73 ../../library/traceback.rst:166
#, fuzzy
msgid "The *etype* argument is ignored and inferred from the type of *value*."
msgstr "*etype* 參數被忽略並從 *value* 的型別中推斷出來。"

#: ../../library/traceback.rst:76 ../../library/traceback.rst:153
#, fuzzy
msgid ""
"The *etype* parameter has been renamed to *exc* and is now positional-only."
msgstr "*etype* 參數已重命名為 *exc* 並且現在僅用於位置。"

#: ../../library/traceback.rst:83
#, fuzzy
msgid ""
"This is a shorthand for ``print_exception(sys.exception(), limit, file, "
"chain)``."
msgstr "這是 ``print_exception(sys.exception(), limit, file, chain)`` 的簡寫。"

#: ../../library/traceback.rst:89
#, fuzzy
msgid ""
"This is a shorthand for ``print_exception(sys.last_type, sys.last_value, sys."
"last_traceback, limit, file, chain)``.  In general it will work only after "
"an exception has reached an interactive prompt (see :data:`sys.last_type`)."
msgstr ""
"這是 ``print_exception(sys.last_type, sys.last_value, sys.last_traceback, "
"limit, file, chain)`` "
"的簡寫。一般來說，只有在例外到達交互式提示後它才會起作用（參見 :data:`sys."
"last_type`）。"

#: ../../library/traceback.rst:97
#, fuzzy
msgid ""
"Print up to *limit* stack trace entries (starting from the invocation point) "
"if *limit* is positive.  Otherwise, print the last ``abs(limit)`` entries.  "
"If *limit* is omitted or ``None``, all entries are printed. The optional *f* "
"argument can be used to specify an alternate stack frame to start.  The "
"optional *file* argument has the same meaning as for :func:`print_tb`."
msgstr ""
"如果 *limit* 為正，則最多印出 *limit* 堆疊跟踪條目（從呼叫點開始）。否則，"
"印出最後的 ``abs(limit)`` 條目。如果省略 *limit* 或 ``None`` ，則印出所有條目。"
"可選的 *f* 參數可用於指定要啟動的備用堆疊幀。可選的 *file* 參數與 "
":func:`print_tb` 具有相同的含義。"

#: ../../library/traceback.rst:110
#, fuzzy
msgid ""
"Return a :class:`StackSummary` object representing a list of \"pre-"
"processed\" stack trace entries extracted from the traceback object *tb*.  "
"It is useful for alternate formatting of stack traces.  The optional *limit* "
"argument has the same meaning as for :func:`print_tb`.  A \"pre-processed\" "
"stack trace entry is a :class:`FrameSummary` object containing attributes :"
"attr:`~FrameSummary.filename`, :attr:`~FrameSummary.lineno`, :attr:"
"`~FrameSummary.name`, and :attr:`~FrameSummary.line` representing the "
"information that is usually printed for a stack trace.  The :attr:"
"`~FrameSummary.line` is a string with leading and trailing whitespace "
"stripped; if the source is not available it is ``None``."
msgstr ""
"回傳一個 StackSummary 物件，表示從回溯物件 *tb* "
"中提取的“預處理”堆疊跟踪條目列表。它對於堆疊跟踪的替代格式很有用。可選的 "
"*limit* 參數與 :func:`print_tb` 具有相同的含義。 “預處理”"
"堆疊跟踪條目是一個包含屬性的 FrameSummary 物件 :attr:`~FrameSummary."
"filename`、:attr:`~FrameSummary.lineno`、:attr:`~FrameSummary.name`、和 "
":attr:`~FrameSummary.line` 表示通常為堆疊跟踪印出的資訊。 "
":attr:`~FrameSummary.line` "
"是去除了前導和尾隨空格的字串；如果來源不可用，則為 ``None`` 。"

#: ../../library/traceback.rst:124
#, fuzzy
msgid ""
"Extract the raw traceback from the current stack frame.  The return value "
"has the same format as for :func:`extract_tb`.  The optional *f* and *limit* "
"arguments have the same meaning as for :func:`print_stack`."
msgstr ""
"從當前堆疊幀中提取原始回溯。回傳值的格式與 extract_tb 的格式相同。可選的 *f* "
"和 *limit* 參數與 :func:`print_stack` 具有相同的含義。"

#: ../../library/traceback.rst:131
#, fuzzy
msgid ""
"Given a list of tuples or :class:`FrameSummary` objects as returned by :func:"
"`extract_tb` or :func:`extract_stack`, return a list of strings ready for "
"printing.  Each string in the resulting list corresponds to the item with "
"the same index in the argument list.  Each string ends in a newline; the "
"strings may contain internal newlines as well, for those items whose source "
"text line is not ``None``."
msgstr ""
"給定由 extract_tb 或 extract_stack 回傳的元組列表或 FrameSummary 物件，回傳準"
"備印出的字串列表。結果列表中的每個字串對應於參數列表中具有相同索引的項目。每"
"個字串以換行符結尾；對於那些源文本行不是 ``None`` 的項目，字串也可能包含內部換行符"
"。"

#: ../../library/traceback.rst:141
#, fuzzy
msgid ""
"Format the exception part of a traceback using an exception value such as "
"given by ``sys.last_value``.  The return value is a list of strings, each "
"ending in a newline.  Normally, the list contains a single string; however, "
"for :exc:`SyntaxError` exceptions, it contains several lines that (when "
"printed) display detailed information about where the syntax error occurred. "
"The message indicating which exception occurred is the always last string in "
"the list."
msgstr ""
"使用 sys.last_value 給出的例外值格式化回溯的例外部分。回傳值是一個字串列表，"
"每個字串以換行符結尾。通常，列表包含一個字串；但是，對於 :exc:`SyntaxError` "
"例外，它包含幾行（印出時）顯示有關語法錯誤發生位置的詳細資訊。指示發生哪個例"
"外的消息始終是列表中的最後一個字串。"

#: ../../library/traceback.rst:149
#, fuzzy
msgid ""
"Since Python 3.10, instead of passing *value*, an exception object can be "
"passed as the first argument.  If *value* is provided, the first argument is "
"ignored in order to provide backwards compatibility."
msgstr ""
"從 Python 3.10 開始，可以傳遞一個例外對像作為第一個參數，而不是傳遞 *value*。"
"如果提供了 *value*，第一個參數將被忽略以提供向後相容性。"

#: ../../library/traceback.rst:160
#, fuzzy
msgid ""
"Format a stack trace and the exception information.  The arguments  have the "
"same meaning as the corresponding arguments to :func:`print_exception`.  The "
"return value is a list of strings, each ending in a newline and some "
"containing internal newlines.  When these lines are concatenated and "
"printed, exactly the same text is printed as does :func:`print_exception`."
msgstr ""
"格式化堆疊跟踪和例外資訊。這些參數與 :func:`print_exception` 的相應參數具有相"
"同的含義。回傳值是一個字串列表，每個字串以換行符結尾，有些包含內部換行符。當"
"連接並印出這些行時，將印出與 :func:`print_exception` 完全相同的文本。"

#: ../../library/traceback.rst:169
#, fuzzy
msgid ""
"This function's behavior and signature were modified to match :func:"
"`print_exception`."
msgstr "此函式的行為和簽名已修改以匹配 :func:`print_exception`。"

#: ../../library/traceback.rst:176
#, fuzzy
msgid ""
"This is like ``print_exc(limit)`` but returns a string instead of printing "
"to a file."
msgstr "這類似於 ``print_exc(limit)`` 但回傳一個字串而不是印出到文件。"

#: ../../library/traceback.rst:182
#, fuzzy
msgid "A shorthand for ``format_list(extract_tb(tb, limit))``."
msgstr "``format_list(extract_tb(tb, limit))`` 的簡寫。"

#: ../../library/traceback.rst:187
#, fuzzy
msgid "A shorthand for ``format_list(extract_stack(f, limit))``."
msgstr "``format_list(extract_stack(f, limit))`` 的簡寫。"

#: ../../library/traceback.rst:191
#, fuzzy
msgid ""
"Clears the local variables of all the stack frames in a traceback *tb* by "
"calling the :meth:`clear` method of each frame object."
msgstr "通過呼叫每個幀物件的 clear 方法，清除回溯 *tb* 中所有堆疊幀的局部變數。"

#: ../../library/traceback.rst:198
#, fuzzy
msgid ""
"Walk a stack following ``f.f_back`` from the given frame, yielding the frame "
"and line number for each frame. If *f* is ``None``, the current stack is "
"used. This helper is used with :meth:`StackSummary.extract`."
msgstr ""
"從給定的幀開始，沿著 ``f.f_back`` 遍歷堆疊，產生每個幀的幀和行號。如果 *f* "
"為 ``None`` ，則使用當前堆疊。此助手與 StackSummary.extract 一起使用。"

#: ../../library/traceback.rst:206
#, fuzzy
msgid ""
"Walk a traceback following ``tb_next`` yielding the frame and line number "
"for each frame. This helper is used with :meth:`StackSummary.extract`."
msgstr "在 ``tb_next`` 之後進行回溯，產生每一幀的幀和行號。此助手與 "
"StackSummary.extract 一起使用。"

#: ../../library/traceback.rst:211
#, fuzzy
msgid "The module also defines the following classes:"
msgstr "該模組還定義了以下類："

#: ../../library/traceback.rst:214
msgid ":class:`TracebackException` Objects"
msgstr ":class:`TracebackException` 物件"

#: ../../library/traceback.rst:218
#, fuzzy
msgid ""
":class:`TracebackException` objects are created from actual exceptions to "
"capture data for later printing in a lightweight fashion."
msgstr ":class:`TracebackException` "
"對像是根據實際例外建立的，以捕獲資料以供以後以輕量級方式印出。"

#: ../../library/traceback.rst:223 ../../library/traceback.rst:283
#, fuzzy
msgid ""
"Capture an exception for later rendering. *limit*, *lookup_lines* and "
"*capture_locals* are as for the :class:`StackSummary` class."
msgstr ""
"捕獲例外以供稍後渲染。 *limit*、*lookup_lines* 和 *capture_locals* 與 "
"StackSummary 類相同。"

#: ../../library/traceback.rst:226
#, fuzzy
msgid ""
"If *compact* is true, only data that is required by :class:"
"`TracebackException`'s ``format`` method is saved in the class attributes. "
"In particular, the ``__context__`` field is calculated only if ``__cause__`` "
"is ``None`` and ``__suppress_context__`` is false."
msgstr ""
"如果*compact* 為真，則只有 TracebackException 的 ``format`` "
"方法所需的資料保存在類屬性中。特別是，僅當 __cause__ 為 None 且 "
"__suppress_context__ 為 false 時，才會計算 __context__ 欄位。"

#: ../../library/traceback.rst:231 ../../library/traceback.rst:286
#, fuzzy
msgid ""
"Note that when locals are captured, they are also shown in the traceback."
msgstr "請注意，當捕獲局部變數時，它們也會顯示在回溯中。"

#: ../../library/traceback.rst:235
#, fuzzy
msgid "A :class:`TracebackException` of the original ``__cause__``."
msgstr "原始 ``__cause__`` 的 :class:`TracebackException`。"

#: ../../library/traceback.rst:239
#, fuzzy
msgid "A :class:`TracebackException` of the original ``__context__``."
msgstr "原始 ``__context__`` 的 :class:`TracebackException`。"

#: ../../library/traceback.rst:243
#, fuzzy
msgid "The ``__suppress_context__`` value from the original exception."
msgstr "來自原始例外的``__suppress_context__`` 值。"

#: ../../library/traceback.rst:247
#, fuzzy
msgid ""
"The ``__notes__`` value from the original exception, or ``None`` if the "
"exception does not have any notes. If it is not ``None`` is it formatted in "
"the traceback after the exception string."
msgstr ""
"來自原始例外的``__notes__`` 值，或者如果例外沒有任何註釋則為``None``。如果它"
"不是``None``，它會在例外字串之後的回溯中被格式化。"

#: ../../library/traceback.rst:255
#, fuzzy
msgid "A :class:`StackSummary` representing the traceback."
msgstr "代表回溯的 StackSummary。"

#: ../../library/traceback.rst:259
#, fuzzy
msgid "The class of the original traceback."
msgstr "原始追溯的類。"

#: ../../library/traceback.rst:263
#, fuzzy
msgid "For syntax errors - the file name where the error occurred."
msgstr "對於語法錯誤 - 發生錯誤的文件名。"

#: ../../library/traceback.rst:267
#, fuzzy
msgid "For syntax errors - the line number where the error occurred."
msgstr "對於語法錯誤 - 發生錯誤的行號。"

#: ../../library/traceback.rst:271
#, fuzzy
msgid "For syntax errors - the text where the error occurred."
msgstr "對於語法錯誤 - 發生錯誤的文本。"

#: ../../library/traceback.rst:275
#, fuzzy
msgid "For syntax errors - the offset into the text where the error occurred."
msgstr "對於語法錯誤 - 發生錯誤的文本中的偏移量。"

#: ../../library/traceback.rst:279
#, fuzzy
msgid "For syntax errors - the compiler error message."
msgstr "對於語法錯誤 - 編譯器錯誤消息。"

#: ../../library/traceback.rst:290
#, fuzzy
msgid ""
"Print to *file* (default ``sys.stderr``) the exception information returned "
"by :meth:`format`."
msgstr "將 :meth:`format` 回傳的例外資訊印出到 *file*（預設為 ``sys.stderr``）。"

#: ../../library/traceback.rst:297
#, fuzzy
msgid "Format the exception."
msgstr "格式化例外。"

#: ../../library/traceback.rst:299
#, fuzzy
msgid ""
"If *chain* is not ``True``, ``__cause__`` and ``__context__`` will not be "
"formatted."
msgstr "如果 *chain* 不是 ``True``，``__cause__`` 和 ``__context__`` 將不會被格式化。"

#: ../../library/traceback.rst:302
#, fuzzy
msgid ""
"The return value is a generator of strings, each ending in a newline and "
"some containing internal newlines. :func:`~traceback.print_exception` is a "
"wrapper around this method which just prints the lines to a file."
msgstr ""
"回傳值是一個字串生成器，每個字串以換行符結尾，有些包含內部換行符。 "
":func:`~traceback.print_exception` "
"是這個方法的包裝器，它只是將行印出到文件中。"

#: ../../library/traceback.rst:306 ../../library/traceback.rst:320
#, fuzzy
msgid ""
"The message indicating which exception occurred is always the last string in "
"the output."
msgstr "指示發生的例外的消息始終是輸出中的最後一個字串。"

#: ../../library/traceback.rst:311
#, fuzzy
msgid "Format the exception part of the traceback."
msgstr "格式化回溯的例外部分。"

#: ../../library/traceback.rst:313
#, fuzzy
msgid "The return value is a generator of strings, each ending in a newline."
msgstr "回傳值是一個字串生成器，每個字串以換行符結尾。"

#: ../../library/traceback.rst:315
#, fuzzy
msgid ""
"Normally, the generator emits a single string; however, for :exc:"
"`SyntaxError` exceptions, it emits several lines that (when printed) display "
"detailed information about where the syntax error occurred."
msgstr "通常，生成器會發出一個字串；但是，對於 :exc:`SyntaxError` "
"例外，它會發出幾行（印出時）顯示有關語法錯誤發生位置的詳細資訊。"

#: ../../library/traceback.rst:323
msgid "Added the *compact* parameter."
msgstr "新增 *compact* 參數。"

#: ../../library/traceback.rst:328
msgid ":class:`StackSummary` Objects"
msgstr ":class:`StackSummary` 物件"

#: ../../library/traceback.rst:332
#, fuzzy
msgid ""
":class:`StackSummary` objects represent a call stack ready for formatting."
msgstr ":class:`StackSummary` 物件表示準備格式化的呼叫堆疊。"

#: ../../library/traceback.rst:338
#, fuzzy
msgid ""
"Construct a :class:`StackSummary` object from a frame generator (such as is "
"returned by :func:`~traceback.walk_stack` or :func:`~traceback.walk_tb`)."
msgstr ""
"從幀生成器構造一個 StackSummary 物件（例如由 :func:`~traceback.walk_stack` "
"或 :func:`~traceback.walk_tb` 回傳）。"

#: ../../library/traceback.rst:342
#, fuzzy
msgid ""
"If *limit* is supplied, only this many frames are taken from *frame_gen*. If "
"*lookup_lines* is ``False``, the returned :class:`FrameSummary` objects will "
"not have read their lines in yet, making the cost of creating the :class:"
"`StackSummary` cheaper (which may be valuable if it may not actually get "
"formatted). If *capture_locals* is ``True`` the local variables in each :"
"class:`FrameSummary` are captured as object representations."
msgstr ""
"如果提供了*limit*，那麼只有這麼多幀來自*frame_gen*。如果 *lookup_lines* 為 "
"``False``，則回傳的 :class:`FrameSummary` 對像還沒有讀入它們的行，從而使建立 "
":class:`StackSummary` "
"的成本更便宜（如果可能的話，這可能很有價值）實際上沒有格式化）。如果 "
"*capture_locals* 為 ``True``，則每個 :class:`FrameSummary` "
"中的局部變數都被捕獲為物件表示。"

#: ../../library/traceback.rst:352
#, fuzzy
msgid ""
"Construct a :class:`StackSummary` object from a supplied list of :class:"
"`FrameSummary` objects or old-style list of tuples.  Each tuple should be a "
"4-tuple with filename, lineno, name, line as the elements."
msgstr ""
"從提供的 FrameSummary 物件列表或舊式元組列表構造一個 StackSummary "
"物件。每個元組應該是一個四元組，以文件名、行號、名稱、行為元素。"

#: ../../library/traceback.rst:358
#, fuzzy
msgid ""
"Returns a list of strings ready for printing.  Each string in the resulting "
"list corresponds to a single frame from the stack. Each string ends in a "
"newline; the strings may contain internal newlines as well, for those items "
"with source text lines."
msgstr "回傳準備印出的字串列表。結果列表中的每個字串對應於堆疊中的單個幀。每個字串以"
"換行符結尾；對於那些帶有源文本行的項目，字串也可能包含內部換行符。"

#: ../../library/traceback.rst:363
#, fuzzy
msgid ""
"For long sequences of the same frame and line, the first few repetitions are "
"shown, followed by a summary line stating the exact number of further "
"repetitions."
msgstr "對於相同幀和行的長序列，會顯示前幾次重複，然後是總結行，說明進一步重複的確切"
"次數。"

#: ../../library/traceback.rst:367
#, fuzzy
msgid "Long sequences of repeated frames are now abbreviated."
msgstr "重複幀的長序列現在被縮寫。"

#: ../../library/traceback.rst:372
#, fuzzy
msgid ""
"Returns a string for printing one of the frames involved in the stack. This "
"method is called for each :class:`FrameSummary` object to be printed by :"
"meth:`StackSummary.format`. If it returns ``None``, the frame is omitted "
"from the output."
msgstr ""
"回傳一個字串，用於印出堆疊中涉及的幀之一。每個要由 StackSummary.format "
"印出的 :class:`FrameSummary` "
"對像都會呼叫此方法。如果它回傳 ``None``，則輸出中會省略該幀。"

#: ../../library/traceback.rst:381
msgid ":class:`FrameSummary` Objects"
msgstr ":class:`FrameSummary` 物件"

#: ../../library/traceback.rst:385
#, fuzzy
msgid ""
"A :class:`FrameSummary` object represents a single frame in a traceback."
msgstr ":class:`FrameSummary` 物件表示回溯中的單個幀。"

#: ../../library/traceback.rst:389
#, fuzzy
msgid ""
"Represent a single frame in the traceback or stack that is being formatted "
"or printed. It may optionally have a stringified version of the frames "
"locals included in it. If *lookup_line* is ``False``, the source code is not "
"looked up until the :class:`FrameSummary` has the :attr:`~FrameSummary.line` "
"attribute accessed (which also happens when casting it to a tuple). :attr:"
"`~FrameSummary.line` may be directly provided, and will prevent line lookups "
"happening at all. *locals* is an optional local variable dictionary, and if "
"supplied the variable representations are stored in the summary for later "
"display."
msgstr ""
"表示正在格式化或印出的回溯或堆疊中的單個幀。它可以選擇包含其中包含的框架局部"
"變數的字串化版本。如果 *lookup_line* 為 ``False``，則在 :class:`FrameSummary`"
" 訪問 :attr:`~FrameSummary.line` "
"屬性之前不會查找源程式碼（將其轉換為元組時也會發生這種情況） . "
":attr:`~FrameSummary.line` 可以直接提供，並且將完全阻止行查找的發生。 "
"*locals* 是可選的局部變數字典，如果提供，變數表示將儲存在摘要中以供以後顯示。"

#: ../../library/traceback.rst:402
#, fuzzy
msgid "Traceback Examples"
msgstr "回溯示例"

#: ../../library/traceback.rst:404
#, fuzzy
msgid ""
"This simple example implements a basic read-eval-print loop, similar to (but "
"less useful than) the standard Python interactive interpreter loop.  For a "
"more complete implementation of the interpreter loop, refer to the :mod:"
"`code` module. ::"
msgstr ""
"這個簡單的例子實作了一個基本的讀取-評估-印出循環，類似於（但不如）標準的 "
"Python 交互式直譯器循環。有關直譯器循環的更完整實作，請參閱 :mod:`code` "
"模組。 ::"

#: ../../library/traceback.rst:426
#, fuzzy
msgid ""
"The following example demonstrates the different ways to print and format "
"the exception and traceback:"
msgstr "以下示例演示了印出和格式化例外和回溯的不同方法："

#: ../../library/traceback.rst:461
#, fuzzy
msgid "The output for the example would look similar to this:"
msgstr "該示例的輸出類似於以下內容："

#: ../../library/traceback.rst:503
#, fuzzy
msgid ""
"The following example shows the different ways to print and format the "
"stack::"
msgstr "以下示例顯示了印出和格式化堆疊的不同方法："

#: ../../library/traceback.rst:529
#, fuzzy
msgid "This last example demonstrates the final few formatting functions:"
msgstr "最後一個示例演示了最後幾個格式化函式："
