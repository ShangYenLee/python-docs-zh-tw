# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-08 00:21+0000\n"
"PO-Revision-Date: 2018-05-23 16:14+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/urllib.parse.rst:2
msgid ":mod:`urllib.parse` --- Parse URLs into components"
msgstr ":mod:`urllib.parse` --- 將 URL 剖析為組件"

#: ../../library/urllib.parse.rst:7
msgid "**Source code:** :source:`Lib/urllib/parse.py`"
msgstr "**原始碼：**\\ :source:`Lib/urllib/parse.py`"

#: ../../library/urllib.parse.rst:18
#, fuzzy
msgid ""
"This module defines a standard interface to break Uniform Resource Locator "
"(URL) strings up in components (addressing scheme, network location, path "
"etc.), to combine the components back into a URL string, and to convert a "
"\"relative URL\" to an absolute URL given a \"base URL.\""
msgstr ""
"該模組定義了一個標準介面，用於打破組件（尋址方案、網絡位置、路徑等）"
"中的統一資源定位器 (URL) 字串，將組件組合回 URL 字串，並將“相對 "
"URL”轉換為給定“基本 URL”的絕對 URL。"

#: ../../library/urllib.parse.rst:23
#, fuzzy
msgid ""
"The module has been designed to match the internet RFC on Relative Uniform "
"Resource Locators. It supports the following URL schemes: ``file``, ``ftp``, "
"``gopher``, ``hdl``, ``http``, ``https``, ``imap``, ``mailto``, ``mms``, "
"``news``, ``nntp``, ``prospero``, ``rsync``, ``rtsp``, ``rtspu``, ``sftp``, "
"``shttp``, ``sip``, ``sips``, ``snews``, ``svn``, ``svn+ssh``, ``telnet``, "
"``wais``, ``ws``, ``wss``."
msgstr ""
"該模組被設計為與相對統一資源定位器上的 Internet RFC 相匹配。它支援以下 URL 方"
"案：``file``、``ftp``、``gopher``、``hdl``、``http``、``https``、``imap``、` "
"`mailto``, ``mms``, ``news``, ``nntp``, ``prospero``, ``rsync``, ``rtsp``, "
"``rtspu``, ``sftp ``, ``shttp``, ``sip``, ``sips``, ``snews``, ``svn``, "
"``svn+ssh``, ``telnet``, ``wais ``，``ws``，``wss``。"

#: ../../library/urllib.parse.rst:30
#, fuzzy
msgid ""
"The :mod:`urllib.parse` module defines functions that fall into two broad "
"categories: URL parsing and URL quoting. These are covered in detail in the "
"following sections."
msgstr ":mod:`urllib.parse` 模組定義了兩大類的函式：URL 剖析和 URL "
"引用。以下各節將詳細介紹這些內容。"

#: ../../library/urllib.parse.rst:35
#, fuzzy
msgid "URL Parsing"
msgstr "網址剖析"

#: ../../library/urllib.parse.rst:37
#, fuzzy
msgid ""
"The URL parsing functions focus on splitting a URL string into its "
"components, or on combining URL components into a URL string."
msgstr "URL 剖析函式專注於將 URL 字串拆分為其組件，或將 URL 組件組合成 URL 字串。"

#: ../../library/urllib.parse.rst:42
#, fuzzy
msgid ""
"Parse a URL into six components, returning a 6-item :term:`named tuple`.  "
"This corresponds to the general structure of a URL: ``scheme://netloc/path;"
"parameters?query#fragment``. Each tuple item is a string, possibly empty. "
"The components are not broken up into smaller parts (for example, the "
"network location is a single string), and % escapes are not expanded. The "
"delimiters as shown above are not part of the result, except for a leading "
"slash in the *path* component, which is retained if present.  For example:"
msgstr ""
"將 URL 剖析為六個部分，回傳一個 6 項 :term:`named tuple`。這對應於 URL "
"的一般結構：``scheme://netloc/path;parameters?query#fragment``。每個元組項都"
"是一個字串，可能為空。組件不會被分解成更小的部分（例如，網絡位置是單個字串）"
"，並且 % escapes 不會擴充。上面顯示的定界符不是結果的一部分，但 *path* "
"組件中的前導斜杠除外，如果存在則保留。例如："

#: ../../library/urllib.parse.rst:75
#, fuzzy
msgid ""
"Following the syntax specifications in :rfc:`1808`, urlparse recognizes a "
"netloc only if it is properly introduced by '//'.  Otherwise the input is "
"presumed to be a relative URL and thus to start with a path component."
msgstr ""
"遵循 :rfc:`1808` 中的語法規範，urlparse 僅在由“//”正確引入時才識別 "
"netloc。否則，輸入被假定為相對 URL，因此以路徑組件開頭。"

#: ../../library/urllib.parse.rst:94
#, fuzzy
msgid ""
"The *scheme* argument gives the default addressing scheme, to be used only "
"if the URL does not specify one.  It should be the same type (text or bytes) "
"as *urlstring*, except that the default value ``''`` is always allowed, and "
"is automatically converted to ``b''`` if appropriate."
msgstr ""
"*scheme* 參數給出了預設的尋址方案，僅當 URL 未指定時才使用。它應該是與 "
"*urlstring* 相同的型別（文本或位元組），除了始終允許使用預設值 ``''`` ，並在適當"
"時自動轉換為 ``b``'。"

#: ../../library/urllib.parse.rst:99
#, fuzzy
msgid ""
"If the *allow_fragments* argument is false, fragment identifiers are not "
"recognized.  Instead, they are parsed as part of the path, parameters or "
"query component, and :attr:`fragment` is set to the empty string in the "
"return value."
msgstr ""
"如果 *allow_fragments* 參數為 "
"false，則不識別片段標識符。相反，它們被剖析為路徑、參數或查詢組件的一部分，"
"並且 :attr:`fragment` 在回傳值中設定為空字串。"

#: ../../library/urllib.parse.rst:104
#, fuzzy
msgid ""
"The return value is a :term:`named tuple`, which means that its items can be "
"accessed by index or as named attributes, which are:"
msgstr "回傳值是一個命名元組，這意味著它的項目可以通過索引或命名屬性訪問，它們是："

#: ../../library/urllib.parse.rst:108 ../../library/urllib.parse.rst:293
#: ../../library/urllib.parse.rst:397
msgid "Attribute"
msgstr "屬性"

#: ../../library/urllib.parse.rst:108 ../../library/urllib.parse.rst:293
#: ../../library/urllib.parse.rst:397
#, fuzzy
msgid "Index"
msgstr "指數"

#: ../../library/urllib.parse.rst:108 ../../library/urllib.parse.rst:293
#: ../../library/urllib.parse.rst:397
#, fuzzy
msgid "Value"
msgstr "價值"

#: ../../library/urllib.parse.rst:108 ../../library/urllib.parse.rst:293
#: ../../library/urllib.parse.rst:397
#, fuzzy
msgid "Value if not present"
msgstr "不存在時的值"

#: ../../library/urllib.parse.rst:110 ../../library/urllib.parse.rst:295
msgid ":attr:`scheme`"
msgstr ":attr:`scheme`"

#: ../../library/urllib.parse.rst:110 ../../library/urllib.parse.rst:295
#: ../../library/urllib.parse.rst:399
msgid "0"
msgstr "0"

#: ../../library/urllib.parse.rst:110 ../../library/urllib.parse.rst:295
#, fuzzy
msgid "URL scheme specifier"
msgstr "URL 方案說明符"

#: ../../library/urllib.parse.rst:110 ../../library/urllib.parse.rst:295
#, fuzzy
msgid "*scheme* parameter"
msgstr "*方案*參數"

#: ../../library/urllib.parse.rst:112 ../../library/urllib.parse.rst:297
msgid ":attr:`netloc`"
msgstr ":attr:`netloc`"

#: ../../library/urllib.parse.rst:112 ../../library/urllib.parse.rst:297
#: ../../library/urllib.parse.rst:401
msgid "1"
msgstr "1"

#: ../../library/urllib.parse.rst:112 ../../library/urllib.parse.rst:297
#, fuzzy
msgid "Network location part"
msgstr "網絡定位部分"

#: ../../library/urllib.parse.rst:112 ../../library/urllib.parse.rst:114
#: ../../library/urllib.parse.rst:116 ../../library/urllib.parse.rst:119
#: ../../library/urllib.parse.rst:121 ../../library/urllib.parse.rst:297
#: ../../library/urllib.parse.rst:299 ../../library/urllib.parse.rst:301
#: ../../library/urllib.parse.rst:303 ../../library/urllib.parse.rst:399
#: ../../library/urllib.parse.rst:401
#, fuzzy
msgid "empty string"
msgstr "空字串"

#: ../../library/urllib.parse.rst:114 ../../library/urllib.parse.rst:299
msgid ":attr:`path`"
msgstr ":attr:`path`"

#: ../../library/urllib.parse.rst:114 ../../library/urllib.parse.rst:299
msgid "2"
msgstr "2"

#: ../../library/urllib.parse.rst:114 ../../library/urllib.parse.rst:299
#, fuzzy
msgid "Hierarchical path"
msgstr "層級路徑"

#: ../../library/urllib.parse.rst:116
msgid ":attr:`params`"
msgstr ":attr:`params`"

#: ../../library/urllib.parse.rst:116 ../../library/urllib.parse.rst:301
msgid "3"
msgstr "3"

#: ../../library/urllib.parse.rst:116
#, fuzzy
msgid "Parameters for last path element"
msgstr "最後一個路徑元素的參數"

#: ../../library/urllib.parse.rst:119 ../../library/urllib.parse.rst:301
msgid ":attr:`query`"
msgstr ":attr:`query`"

#: ../../library/urllib.parse.rst:119 ../../library/urllib.parse.rst:303
msgid "4"
msgstr "4"

#: ../../library/urllib.parse.rst:119 ../../library/urllib.parse.rst:301
#, fuzzy
msgid "Query component"
msgstr "查詢組件"

#: ../../library/urllib.parse.rst:121 ../../library/urllib.parse.rst:303
#: ../../library/urllib.parse.rst:401
msgid ":attr:`fragment`"
msgstr ":attr:`fragment`"

#: ../../library/urllib.parse.rst:121
msgid "5"
msgstr "5"

#: ../../library/urllib.parse.rst:121 ../../library/urllib.parse.rst:303
#: ../../library/urllib.parse.rst:401
#, fuzzy
msgid "Fragment identifier"
msgstr "片段標識符"

#: ../../library/urllib.parse.rst:123 ../../library/urllib.parse.rst:305
msgid ":attr:`username`"
msgstr ":attr:`username`"

#: ../../library/urllib.parse.rst:123 ../../library/urllib.parse.rst:305
#, fuzzy
msgid "User name"
msgstr "使用者名"

#: ../../library/urllib.parse.rst:123 ../../library/urllib.parse.rst:125
#: ../../library/urllib.parse.rst:127 ../../library/urllib.parse.rst:129
#: ../../library/urllib.parse.rst:305 ../../library/urllib.parse.rst:307
#: ../../library/urllib.parse.rst:309 ../../library/urllib.parse.rst:311
msgid ":const:`None`"
msgstr ":const:`None`"

#: ../../library/urllib.parse.rst:125 ../../library/urllib.parse.rst:307
msgid ":attr:`password`"
msgstr ":attr:`password`"

#: ../../library/urllib.parse.rst:125 ../../library/urllib.parse.rst:307
#, fuzzy
msgid "Password"
msgstr "密碼"

#: ../../library/urllib.parse.rst:127 ../../library/urllib.parse.rst:309
msgid ":attr:`hostname`"
msgstr ":attr:`hostname`"

#: ../../library/urllib.parse.rst:127 ../../library/urllib.parse.rst:309
#, fuzzy
msgid "Host name (lower case)"
msgstr "主機名（小寫）"

#: ../../library/urllib.parse.rst:129 ../../library/urllib.parse.rst:311
msgid ":attr:`port`"
msgstr ":attr:`port`"

#: ../../library/urllib.parse.rst:129 ../../library/urllib.parse.rst:311
#, fuzzy
msgid "Port number as integer, if present"
msgstr "整數形式的端口號（如果存在）"

#: ../../library/urllib.parse.rst:133 ../../library/urllib.parse.rst:315
#, fuzzy
msgid ""
"Reading the :attr:`port` attribute will raise a :exc:`ValueError` if an "
"invalid port is specified in the URL.  See section :ref:`urlparse-result-"
"object` for more information on the result object."
msgstr ""
"如果在 URL 中指定了無效端口，讀取 :attr:`port` 屬性將引發 "
":exc:`ValueError`。有關結果物件的更多資訊，請參見 urlparse-result-object "
"部分。"

#: ../../library/urllib.parse.rst:137 ../../library/urllib.parse.rst:319
#, fuzzy
msgid ""
"Unmatched square brackets in the :attr:`netloc` attribute will raise a :exc:"
"`ValueError`."
msgstr ":attr:`netloc` 屬性中不匹配的方括號將引發 :exc:`ValueError`。"

#: ../../library/urllib.parse.rst:140 ../../library/urllib.parse.rst:322
#, fuzzy
msgid ""
"Characters in the :attr:`netloc` attribute that decompose under NFKC "
"normalization (as used by the IDNA encoding) into any of ``/``, ``?``, "
"``#``, ``@``, or ``:`` will raise a :exc:`ValueError`. If the URL is "
"decomposed before parsing, no error will be raised."
msgstr ""
":attr:`netloc` 屬性中的字元在 NFKC 規範化（由 IDNA "
"編碼使用）下分解為任何``/``、``?``、``#``、``@``、或 ``:`` 將引發 "
":exc:`ValueError`。如果 URL 在剖析之前被分解，則不會引發錯誤。"

#: ../../library/urllib.parse.rst:145
#, fuzzy
msgid ""
"As is the case with all named tuples, the subclass has a few additional "
"methods and attributes that are particularly useful. One such method is :"
"meth:`_replace`. The :meth:`_replace` method will return a new ParseResult "
"object replacing specified fields with new values."
msgstr ""
"與所有命名元組的情況一樣，子類別有一些特別有用的附加方法和屬性。"
"一種這樣的方法是 :meth:`_replace`。 :meth:`_replace` 方法將回傳一個新的 "
"ParseResult 物件，用新值替換指定的欄位。"

#: ../../library/urllib.parse.rst:163
#, fuzzy
msgid "Added IPv6 URL parsing capabilities."
msgstr "新增了 IPv6 URL 剖析功能。"

#: ../../library/urllib.parse.rst:166
#, fuzzy
msgid ""
"The fragment is now parsed for all URL schemes (unless *allow_fragment* is "
"false), in accordance with :rfc:`3986`.  Previously, an allowlist of schemes "
"that support fragments existed."
msgstr ""
"根據 :rfc:`3986`，該片段現在針對所有 URL 方案進行剖析（除非 *allow_fragment* "
"為 false）。以前，存在支援片段的方案的白名單。"

#: ../../library/urllib.parse.rst:171 ../../library/urllib.parse.rst:330
#, fuzzy
msgid ""
"Out-of-range port numbers now raise :exc:`ValueError`, instead of returning :"
"const:`None`."
msgstr "超出範圍的端口號現在引發 :exec:`ValueError`，而不是回傳 :const:`None`。"

#: ../../library/urllib.parse.rst:175 ../../library/urllib.parse.rst:334
#, fuzzy
msgid ""
"Characters that affect netloc parsing under NFKC normalization will now "
"raise :exc:`ValueError`."
msgstr "在 NFKC 標準化下影響 netloc 剖析的字元現在將引發 :exec:`ValueError`。"

#: ../../library/urllib.parse.rst:182
#, fuzzy
msgid ""
"Parse a query string given as a string argument (data of type :mimetype:"
"`application/x-www-form-urlencoded`).  Data are returned as a dictionary.  "
"The dictionary keys are the unique query variable names and the values are "
"lists of values for each name."
msgstr ""
"剖析作為字串參數給出的查詢字串（資料型別 :mimetype:`application/x-www-form-ur"
"lencoded`）。資料作為字典回傳。字典鍵是唯一的查詢變數名稱，值是每個名稱的值列"
"表。"

#: ../../library/urllib.parse.rst:187 ../../library/urllib.parse.rst:232
#, fuzzy
msgid ""
"The optional argument *keep_blank_values* is a flag indicating whether blank "
"values in percent-encoded queries should be treated as blank strings. A true "
"value indicates that blanks should be retained as  blank strings.  The "
"default false value indicates that blank values are to be ignored and "
"treated as if they were not included."
msgstr ""
"可選參數 *keep_blank_values* 是一個旗標，指示是否應將百分比編碼查詢中的空白值"
"視為空白字串。真值表示應將空格保留為空白字串。預設的 false "
"值表示將忽略空白值並將其視為未包含在內。"

#: ../../library/urllib.parse.rst:193 ../../library/urllib.parse.rst:238
#, fuzzy
msgid ""
"The optional argument *strict_parsing* is a flag indicating what to do with "
"parsing errors.  If false (the default), errors are silently ignored.  If "
"true, errors raise a :exc:`ValueError` exception."
msgstr ""
"可選參數 *strict_parsing* 是一個旗標，指示如何處理剖析錯誤。如果為 "
"false（預設值），錯誤將被忽略。如果為真，則錯誤會引發 :exc:`ValueError` "
"例外。"

#: ../../library/urllib.parse.rst:197 ../../library/urllib.parse.rst:242
#, fuzzy
msgid ""
"The optional *encoding* and *errors* parameters specify how to decode "
"percent-encoded sequences into Unicode characters, as accepted by the :meth:"
"`bytes.decode` method."
msgstr ""
"可選的 *encoding* 和 *errors* 參數指定如何將百分比編碼序列解碼為 Unicode "
"字元，正如 bytes.decode 方法所接受的那樣。"

#: ../../library/urllib.parse.rst:201 ../../library/urllib.parse.rst:246
#, fuzzy
msgid ""
"The optional argument *max_num_fields* is the maximum number of fields to "
"read. If set, then throws a :exc:`ValueError` if there are more than "
"*max_num_fields* fields read."
msgstr ""
"可選參數 *max_num_fields* 是要讀取的最大欄位數。如果設定，則在讀取的欄位超過 "
"*max_num_fields* 時拋出 :exc:`ValueError`。"

#: ../../library/urllib.parse.rst:205 ../../library/urllib.parse.rst:250
#, fuzzy
msgid ""
"The optional argument *separator* is the symbol to use for separating the "
"query arguments. It defaults to ``&``."
msgstr "可選參數 *separator* 是用於分隔查詢參數的符號。它預設為``&``。"

#: ../../library/urllib.parse.rst:208
#, fuzzy
msgid ""
"Use the :func:`urllib.parse.urlencode` function (with the ``doseq`` "
"parameter set to ``True``) to convert such dictionaries into query strings."
msgstr ""
"使用 :func:`urllib.parse.urlencode` 函式（將 ``doseq`` 參數設定為 "
"``True``）將此類字典轉換為查詢字串。"

#: ../../library/urllib.parse.rst:213 ../../library/urllib.parse.rst:256
#, fuzzy
msgid "Add *encoding* and *errors* parameters."
msgstr "新增 *encoding* 和 *errors* 參數。"

#: ../../library/urllib.parse.rst:216 ../../library/urllib.parse.rst:259
msgid "Added *max_num_fields* parameter."
msgstr "新增 *max_num_fields* 參數。"

#: ../../library/urllib.parse.rst:219 ../../library/urllib.parse.rst:262
#, fuzzy
msgid ""
"Added *separator* parameter with the default value of ``&``. Python versions "
"earlier than Python 3.10 allowed using both ``;`` and ``&`` as query "
"parameter separator. This has been changed to allow only a single separator "
"key, with ``&`` as the default separator."
msgstr ""
"新增了 *separator* 參數，預設值為 ``&``。 Python 3.10 之前的 Python "
"版本允許同時使用 ``;`` 和 ``&`` "
"作為查詢參數分隔符。這已更改為僅允許一個分隔鍵，預設分隔符為 ``&``。"

#: ../../library/urllib.parse.rst:228
#, fuzzy
msgid ""
"Parse a query string given as a string argument (data of type :mimetype:"
"`application/x-www-form-urlencoded`).  Data are returned as a list of name, "
"value pairs."
msgstr ""
"剖析作為字串參數給出的查詢字串（資料型別 :mimetype:`application/x-www-form-"
"urlencoded`）。資料以名稱、值對列表的形式回傳。"

#: ../../library/urllib.parse.rst:253
#, fuzzy
msgid ""
"Use the :func:`urllib.parse.urlencode` function to convert such lists of "
"pairs into query strings."
msgstr "使用 :func:`urllib.parse.urlencode` 函式將此類成對列表轉換為查詢字串。"

#: ../../library/urllib.parse.rst:271
#, fuzzy
msgid ""
"Construct a URL from a tuple as returned by ``urlparse()``. The *parts* "
"argument can be any six-item iterable. This may result in a slightly "
"different, but equivalent URL, if the URL that was parsed originally had "
"unnecessary delimiters (for example, a ``?`` with an empty query; the RFC "
"states that these are equivalent)."
msgstr ""
"從 urlparse() 回傳的元組構建 URL。 *parts* 參數可以是任何六項可疊代的。"
"如果最初剖析的 URL 具有不必要的分隔符（例如，帶有空查詢的 ``?``；RFC "
"聲明這些是等效的），這可能會導致略有不同但等效的 URL。"

#: ../../library/urllib.parse.rst:280
#, fuzzy
msgid ""
"This is similar to :func:`urlparse`, but does not split the params from the "
"URL. This should generally be used instead of :func:`urlparse` if the more "
"recent URL syntax allowing parameters to be applied to each segment of the "
"*path* portion of the URL (see :rfc:`2396`) is wanted.  A separate function "
"is needed to separate the path segments and parameters.  This function "
"returns a 5-item :term:`named tuple`::"
msgstr ""
"這類似於 :func:`urlparse`，但不會從 URL 中拆分參數。如果需要更新的 URL "
"語法允許將參數應用於 URL 的 *path* 部分的每個段（請參閱 :rfc:`2396`），"
"通常應該使用它而不是 :func:`urlparse`。需要一個單獨的函式來分離路徑段和參數。"
"此函式回傳一個 5 項 :term:`named tuple`::"

#: ../../library/urllib.parse.rst:289 ../../library/urllib.parse.rst:393
#, fuzzy
msgid ""
"The return value is a :term:`named tuple`, its items can be accessed by "
"index or as named attributes:"
msgstr "回傳值是一個命名元組，它的項可以通過索引或命名屬性訪問："

#: ../../library/urllib.parse.rst:327
#, fuzzy
msgid ""
"Following the `WHATWG spec`_ that updates RFC 3986, ASCII newline ``\\n``, ``"
"\\r`` and tab ``\\t`` characters are stripped from the URL."
msgstr ""
"按照更新 RFC 3986 的“WHATWG 規範”，ASCII 換行符“\\n"
"”、“\\r”和製表符“\\t”將從 URL 中刪除。"

#: ../../library/urllib.parse.rst:338
#, fuzzy
msgid "ASCII newline and tab characters are stripped from the URL."
msgstr "ASCII 換行符和製表符從 URL 中去除。"

#: ../../library/urllib.parse.rst:345
#, fuzzy
msgid ""
"Combine the elements of a tuple as returned by :func:`urlsplit` into a "
"complete URL as a string. The *parts* argument can be any five-item "
"iterable. This may result in a slightly different, but equivalent URL, if "
"the URL that was parsed originally had unnecessary delimiters (for example, "
"a ? with an empty query; the RFC states that these are equivalent)."
msgstr ""
"將 :func:`urlsplit` 回傳的元組元素組合成一個完整的 URL 作為字串。 *parts* "
"參數可以是任何五項可疊代的。如果最初剖析的 URL 具有不必要的定界符（例如，"
"帶有空查詢的 ?；RFC 聲明它們是等效的），則這可能會導致略有不同但等效的 URL。"

#: ../../library/urllib.parse.rst:354
#, fuzzy
msgid ""
"Construct a full (\"absolute\") URL by combining a \"base URL\" (*base*) "
"with another URL (*url*).  Informally, this uses components of the base URL, "
"in particular the addressing scheme, the network location and (part of) the "
"path, to provide missing components in the relative URL.  For example:"
msgstr ""
"通過將“基本 URL”(*base*) 與另一個 URL (*url*) "
"組合來構建完整（“絕對”）URL。非正式地，這使用基本 URL "
"的組件，特別是尋址方案、網絡位置和（部分）路徑，以提供相對 URL "
"中缺少的組件。例如："

#: ../../library/urllib.parse.rst:363
#, fuzzy
msgid ""
"The *allow_fragments* argument has the same meaning and default as for :func:"
"`urlparse`."
msgstr "*allow_fragments* 參數與 :func:`urlparse` 具有相同的含義和預設值。"

#: ../../library/urllib.parse.rst:368
#, fuzzy
msgid ""
"If *url* is an absolute URL (that is, it starts with ``//`` or ``scheme://"
"``), the *url*'s hostname and/or scheme will be present in the result.  For "
"example:"
msgstr ""
"如果 *url* 是絕對 URL（也就是說，它以“//”或“scheme://”開頭），則 *url* "
"的主機名和/或方案將出現在結果中。例如："

#: ../../library/urllib.parse.rst:377
#, fuzzy
msgid ""
"If you do not want that behavior, preprocess the *url* with :func:`urlsplit` "
"and :func:`urlunsplit`, removing possible *scheme* and *netloc* parts."
msgstr ""
"如果您不想要這種行為，請使用 :func:`urlsplit` 和 :func:`urlunsplit` 預處理 "
"*url*，刪除可能的 *scheme* 和 *netloc* 部分。"

#: ../../library/urllib.parse.rst:383
#, fuzzy
msgid "Behavior updated to match the semantics defined in :rfc:`3986`."
msgstr "更新行為以匹配 :rfc:`3986` 中定義的語義。"

#: ../../library/urllib.parse.rst:388
#, fuzzy
msgid ""
"If *url* contains a fragment identifier, return a modified version of *url* "
"with no fragment identifier, and the fragment identifier as a separate "
"string.  If there is no fragment identifier in *url*, return *url* "
"unmodified and an empty string."
msgstr ""
"如果 *url* 包含片段標識符，則回傳沒有片段標識符的 *url* "
"的修改版本，片段標識符作為單獨的字串。如果 *url* 中沒有片段標識符，則回傳 "
"*url* 未修改的空字串。"

#: ../../library/urllib.parse.rst:399
msgid ":attr:`url`"
msgstr ":attr:`url`"

#: ../../library/urllib.parse.rst:399
#, fuzzy
msgid "URL with no fragment"
msgstr "沒有片段的 URL"

#: ../../library/urllib.parse.rst:404
#, fuzzy
msgid ""
"See section :ref:`urlparse-result-object` for more information on the result "
"object."
msgstr "有關結果物件的更多資訊，請參見 urlparse-result-object 部分。"

#: ../../library/urllib.parse.rst:407
#, fuzzy
msgid "Result is a structured object rather than a simple 2-tuple."
msgstr "結果是一個結構化物件，而不是一個簡單的二元組。"

#: ../../library/urllib.parse.rst:412
#, fuzzy
msgid ""
"Extract the url from a wrapped URL (that is, a string formatted as ``<URL:"
"scheme://host/path>``, ``<scheme://host/path>``, ``URL:scheme://host/path`` "
"or ``scheme://host/path``). If *url* is not a wrapped URL, it is returned "
"without changes."
msgstr ""
"從包裝的 URL 中提取 url（即，格式為 ``<URL:scheme://host/"
"path>``、``<scheme://host/path>``、``URL:scheme 的字串://host/path`` 或 "
"``scheme://host/path``）。如果 *url* 不是包裝的 URL，則回傳它而不做任何更改。"

#: ../../library/urllib.parse.rst:420
#, fuzzy
msgid "Parsing ASCII Encoded Bytes"
msgstr "剖析 ASCII 編碼位元組"

#: ../../library/urllib.parse.rst:422
#, fuzzy
msgid ""
"The URL parsing functions were originally designed to operate on character "
"strings only. In practice, it is useful to be able to manipulate properly "
"quoted and encoded URLs as sequences of ASCII bytes. Accordingly, the URL "
"parsing functions in this module all operate on :class:`bytes` and :class:"
"`bytearray` objects in addition to :class:`str` objects."
msgstr ""
"URL 剖析函式最初設計為僅對字串進行操作。在實踐中，能夠將正確引用和編碼的 URL "
"作為 ASCII 位元組序列進行操作是很有用的。因此，除了 :class:`str` 物件之外，"
"該模組中的 URL 剖析函式都對 :class:`bytes` 和 :class:`bytearray` "
"物件進行操作。"

#: ../../library/urllib.parse.rst:428
#, fuzzy
msgid ""
"If :class:`str` data is passed in, the result will also contain only :class:"
"`str` data. If :class:`bytes` or :class:`bytearray` data is passed in, the "
"result will contain only :class:`bytes` data."
msgstr ""
"如果傳入 :class:`str` 資料，結果也將只包含 :class:`str` "
"資料。如果傳入 :class:`bytes` 或 :class:`bytearray` "
"資料，結果將只包含 :class:`bytes` 資料。"

#: ../../library/urllib.parse.rst:432
#, fuzzy
msgid ""
"Attempting to mix :class:`str` data with :class:`bytes` or :class:"
"`bytearray` in a single function call will result in a :exc:`TypeError` "
"being raised, while attempting to pass in non-ASCII byte values will "
"trigger :exc:`UnicodeDecodeError`."
msgstr ""
"嘗試在單個函式呼叫中混合 :class:`str` 資料與 :class:`bytes` 或 "
":class:`bytearray` 將導致出現 :exc:`TypeError`，同時嘗試傳入非 "
"ASCII位元組值將觸發 :exc:`UnicodeDecodeError`。"

#: ../../library/urllib.parse.rst:437
#, fuzzy
msgid ""
"To support easier conversion of result objects between :class:`str` and :"
"class:`bytes`, all return values from URL parsing functions provide either "
"an :meth:`encode` method (when the result contains :class:`str` data) or a :"
"meth:`decode` method (when the result contains :class:`bytes` data). The "
"signatures of these methods match those of the corresponding :class:`str` "
"and :class:`bytes` methods (except that the default encoding is ``'ascii'`` "
"rather than ``'utf-8'``). Each produces a value of a corresponding type that "
"contains either :class:`bytes` data (for :meth:`encode` methods) or :class:"
"`str` data (for :meth:`decode` methods)."
msgstr ""
"為了支援在 str 和 bytes 之間更輕鬆地轉換結果物件，URL "
"剖析函式的所有回傳值都提供 encode 方法（當結果包含 str 時）資料）或 decode "
"方法（當結果包含 bytes 資料時）。這些方法的簽名與相應的 :class:`str` "
"和 :class:`bytes` 方法相匹配（除了預設編碼是 ``'ascii'`` 而不是 ``'utf-8'`` ） "
".每個生成一個相應型別的值，該值包含 :class:`bytes` 資料（用於 :meth:`encode` "
"方法）或 :class:`str` 資料（用於 :meth:`decode` 方法）。"

#: ../../library/urllib.parse.rst:448
#, fuzzy
msgid ""
"Applications that need to operate on potentially improperly quoted URLs that "
"may contain non-ASCII data will need to do their own decoding from bytes to "
"characters before invoking the URL parsing methods."
msgstr "需要對可能包含非 ASCII 資料的可能不正確引用的 URL "
"進行操作的應用程式需要在呼叫 URL 剖析方法之前自行將位元組解碼為字元。"

#: ../../library/urllib.parse.rst:452
#, fuzzy
msgid ""
"The behaviour described in this section applies only to the URL parsing "
"functions. The URL quoting functions use their own rules when producing or "
"consuming byte sequences as detailed in the documentation of the individual "
"URL quoting functions."
msgstr ""
"本節中描述的行為僅適用於 URL 剖析函式。 URL "
"引用函式在生成或使用位元組序列時使用它們自己的規則，如各個 URL "
"引用函式的文檔中所述。"

#: ../../library/urllib.parse.rst:457
#, fuzzy
msgid "URL parsing functions now accept ASCII encoded byte sequences"
msgstr "URL 剖析函式現在接受 ASCII 編碼的位元組序列"

#: ../../library/urllib.parse.rst:464
#, fuzzy
msgid "Structured Parse Results"
msgstr "結構化剖析結果"

#: ../../library/urllib.parse.rst:466
#, fuzzy
msgid ""
"The result objects from the :func:`urlparse`, :func:`urlsplit`  and :func:"
"`urldefrag` functions are subclasses of the :class:`tuple` type. These "
"subclasses add the attributes listed in the documentation for those "
"functions, the encoding and decoding support described in the previous "
"section, as well as an additional method:"
msgstr ""
"來自 :func:`urlparse`、:func:`urlsplit` 和 :func:`urldefrag` "
"函式的結果對像是 :class:`tuple` 型別的子類別。這些子類別為這些函式新增了文檔"
"中列出的屬性、上一節中描述的編碼和解碼支援，以及一個附加方法："

#: ../../library/urllib.parse.rst:474
#, fuzzy
msgid ""
"Return the re-combined version of the original URL as a string. This may "
"differ from the original URL in that the scheme may be normalized to lower "
"case and empty components may be dropped. Specifically, empty parameters, "
"queries, and fragment identifiers will be removed."
msgstr ""
"將原始 URL 的重新組合版本作為字串回傳。這可能與原始 URL 不同，因為該方案可能"
"會標準化為小寫字母，並且可能會刪除空組件。具體來說，空參數、查詢和片段標識符"
"將被刪除。"

#: ../../library/urllib.parse.rst:479
#, fuzzy
msgid ""
"For :func:`urldefrag` results, only empty fragment identifiers will be "
"removed. For :func:`urlsplit` and :func:`urlparse` results, all noted "
"changes will be made to the URL returned by this method."
msgstr ""
"對於 :func:`urldefrag` 結果，只會刪除空片段標識符。對於 :func:`urlsplit` 和 "
":func:`urlparse` 結果，所有註意到的更改都將對該方法回傳的 URL 進行。"

#: ../../library/urllib.parse.rst:483
#, fuzzy
msgid ""
"The result of this method remains unchanged if passed back through the "
"original parsing function:"
msgstr "如果通過原始剖析函式傳回，則此方法的結果保持不變："

#: ../../library/urllib.parse.rst:496
#, fuzzy
msgid ""
"The following classes provide the implementations of the structured parse "
"results when operating on :class:`str` objects:"
msgstr "以下類提供了對 str 物件進行操作時結構化剖析結果的實作："

#: ../../library/urllib.parse.rst:501
#, fuzzy
msgid ""
"Concrete class for :func:`urldefrag` results containing :class:`str` data. "
"The :meth:`encode` method returns a :class:`DefragResultBytes` instance."
msgstr ""
":func:`urldefrag` 結果的具體類包含 :class:`str` 資料。 :meth:`encode` "
"方法回傳一個 :class:`DefragResultBytes` 實例。"

#: ../../library/urllib.parse.rst:509
#, fuzzy
msgid ""
"Concrete class for :func:`urlparse` results containing :class:`str` data. "
"The :meth:`encode` method returns a :class:`ParseResultBytes` instance."
msgstr ""
":func:`urlparse` 結果的具體類包含 :class:`str` 資料。 :meth:`encode` "
"方法回傳一個 :class:`ParseResultBytes` 實例。"

#: ../../library/urllib.parse.rst:515
#, fuzzy
msgid ""
"Concrete class for :func:`urlsplit` results containing :class:`str` data. "
"The :meth:`encode` method returns a :class:`SplitResultBytes` instance."
msgstr ""
":func:`urlsplit` 結果的具體類包含 :class:`str` 資料。 :meth:`encode` "
"方法回傳一個 :class:`SplitResultBytes` 實例。"

#: ../../library/urllib.parse.rst:520
#, fuzzy
msgid ""
"The following classes provide the implementations of the parse results when "
"operating on :class:`bytes` or :class:`bytearray` objects:"
msgstr "以下類提供了對 bytes 或 bytearray 物件進行操作時剖析結果的實作："

#: ../../library/urllib.parse.rst:525
#, fuzzy
msgid ""
"Concrete class for :func:`urldefrag` results containing :class:`bytes` data. "
"The :meth:`decode` method returns a :class:`DefragResult` instance."
msgstr ""
":func:`urldefrag` 結果的具體類包含 :class:`bytes` 資料。 decode 方法回傳一個 "
"DefragResult 實例。"

#: ../../library/urllib.parse.rst:533
#, fuzzy
msgid ""
"Concrete class for :func:`urlparse` results containing :class:`bytes` data. "
"The :meth:`decode` method returns a :class:`ParseResult` instance."
msgstr "包含 :class:`bytes` 資料的 urlparse 結果的具體類。 decode 方法回傳一個 "
"ParseResult 實例。"

#: ../../library/urllib.parse.rst:541
#, fuzzy
msgid ""
"Concrete class for :func:`urlsplit` results containing :class:`bytes` data. "
"The :meth:`decode` method returns a :class:`SplitResult` instance."
msgstr ""
":func:`urlsplit` 結果的具體類包含 :class:`bytes` 資料。 decode 方法回傳一個 "
"SplitResult 實例。"

#: ../../library/urllib.parse.rst:549
#, fuzzy
msgid "URL Quoting"
msgstr "網址引用"

#: ../../library/urllib.parse.rst:551
#, fuzzy
msgid ""
"The URL quoting functions focus on taking program data and making it safe "
"for use as URL components by quoting special characters and appropriately "
"encoding non-ASCII text. They also support reversing these operations to "
"recreate the original data from the contents of a URL component if that task "
"isn't already covered by the URL parsing functions above."
msgstr ""
"URL 引用函式專注於獲取程式資料，並通過引用特殊字元和適當編碼非 ASCII "
"文本使其安全地用作 URL 組件。如果上述 URL 剖析函式尚未涵蓋該任務，"
"它們還支援反轉這些操作以從 URL 組件的內容重新建立原始資料。"

#: ../../library/urllib.parse.rst:559
#, fuzzy
msgid ""
"Replace special characters in *string* using the ``%xx`` escape. Letters, "
"digits, and the characters ``'_.-~'`` are never quoted. By default, this "
"function is intended for quoting the path section of a URL. The optional "
"*safe* parameter specifies additional ASCII characters that should not be "
"quoted --- its default value is ``'/'``."
msgstr ""
"使用 ``%xx`` 轉義替換 *string* 中的特殊字元。字母、數字和字元 ``'_.-~'`` "
"永遠不會被引用。預設情況下，此函式用於引用 URL 的路徑部分。可選的 *safe* "
"參數指定不應被引用的其他 ASCII 字元 --- 它的預設值是 ``'/'``。"

#: ../../library/urllib.parse.rst:565 ../../library/urllib.parse.rst:611
#: ../../library/urllib.parse.rst:640
#, fuzzy
msgid "*string* may be either a :class:`str` or a :class:`bytes` object."
msgstr "*string* 可以是 :class:`str` 或 :class:`bytes` 物件。"

#: ../../library/urllib.parse.rst:567
#, fuzzy
msgid ""
"Moved from :rfc:`2396` to :rfc:`3986` for quoting URL strings. \"~\" is now "
"included in the set of unreserved characters."
msgstr "從 :rfc:`2396` 移動到 :rfc:`3986` 以引用 URL 字串。 "
" ``~``現在包含在未保留字元集中。"

#: ../../library/urllib.parse.rst:571
#, fuzzy
msgid ""
"The optional *encoding* and *errors* parameters specify how to deal with non-"
"ASCII characters, as accepted by the :meth:`str.encode` method. *encoding* "
"defaults to ``'utf-8'``. *errors* defaults to ``'strict'``, meaning "
"unsupported characters raise a :class:`UnicodeEncodeError`. *encoding* and "
"*errors* must not be supplied if *string* is a :class:`bytes`, or a :class:"
"`TypeError` is raised."
msgstr ""
"可選的 *encoding* 和 *errors* 參數指定如何處理非 ASCII 字元，如 :meth:`str."
"encode` 方法所接受的那樣。 *encoding* 預設為 ``'utf-8'``。 *errors* 預設為 "
"``'strict'``，這意味著不支援的字元引發 :class:`UnicodeEncodeError`。如果 "
"*string* 是 bytes 或引發 TypeError，則不得提供 *encoding* 和 *errors*。"

#: ../../library/urllib.parse.rst:579
#, fuzzy
msgid ""
"Note that ``quote(string, safe, encoding, errors)`` is equivalent to "
"``quote_from_bytes(string.encode(encoding, errors), safe)``."
msgstr ""
"請注意，``quote(string, safe, encoding, errors)`` "
"等同於``quote_from_bytes(string.encode(encoding, errors), safe)``。"

#: ../../library/urllib.parse.rst:582
#, fuzzy
msgid "Example: ``quote('/El Niño/')`` yields ``'/El%20Ni%C3%B1o/'``."
msgstr "示例：``quote('/El Niño/')`` 產生 ``'/El%20Ni%C3%B1o/'``。"

#: ../../library/urllib.parse.rst:587
#, fuzzy
msgid ""
"Like :func:`quote`, but also replace spaces with plus signs, as required for "
"quoting HTML form values when building up a query string to go into a URL. "
"Plus signs in the original string are escaped unless they are included in "
"*safe*.  It also does not have *safe* default to ``'/'``."
msgstr ""
"類似於 :func:`quote`，但也用加號替換空格，這是在構建查詢字串以進入 URL "
"時引用 HTML 表單值所必需的。原始字串中的加號被轉義，除非它們包含在 *safe* "
"中。它也沒有 *safe* 預設為 ``'/'``。"

#: ../../library/urllib.parse.rst:592
#, fuzzy
msgid "Example: ``quote_plus('/El Niño/')`` yields ``'%2FEl+Ni%C3%B1o%2F'``."
msgstr "示例：``quote_plus('/El Niño/')`` 產生 ``'%2FEl+Ni%C3%B1o%2F'``。"

#: ../../library/urllib.parse.rst:597
#, fuzzy
msgid ""
"Like :func:`quote`, but accepts a :class:`bytes` object rather than a :class:"
"`str`, and does not perform string-to-bytes encoding."
msgstr "類似於 :func:`quote`，但接受 :class:`bytes` 物件而不是 "
":class:`str`，並且不執行字串到位元組的編碼。"

#: ../../library/urllib.parse.rst:600
#, fuzzy
msgid "Example: ``quote_from_bytes(b'a&\\xef')`` yields ``'a%26%EF'``."
msgstr "示例：``quote_from_bytes(b'a&\\xef')`` 產生``'a%26%EF'``。"

#: ../../library/urllib.parse.rst:606
#, fuzzy
msgid ""
"Replace ``%xx`` escapes with their single-character equivalent. The optional "
"*encoding* and *errors* parameters specify how to decode percent-encoded "
"sequences into Unicode characters, as accepted by the :meth:`bytes.decode` "
"method."
msgstr ""
"將 ``%xx`` 轉義符替換為其等效的單字元。可選的 *encoding* 和 *errors* "
"參數指定如何將百分比編碼序列解碼為 Unicode 字元，正如 bytes.decode "
"方法所接受的那樣。"

#: ../../library/urllib.parse.rst:613
#, fuzzy
msgid ""
"*encoding* defaults to ``'utf-8'``. *errors* defaults to ``'replace'``, "
"meaning invalid sequences are replaced by a placeholder character."
msgstr "*encoding* 預設為 ``'utf-8'``。 *errors* 預設為 "
"``'replace'``，這意味著無效的序列被佔位符替換。"

#: ../../library/urllib.parse.rst:617
#, fuzzy
msgid "Example: ``unquote('/El%20Ni%C3%B1o/')`` yields ``'/El Niño/'``."
msgstr "示例：``unquote('/El%20Ni%C3%B1o/')`` 產生 ``'/El Niño/'``。"

#: ../../library/urllib.parse.rst:619
#, fuzzy
msgid ""
"*string* parameter supports bytes and str objects (previously only str)."
msgstr "*string* 參數支援 bytes 和 str 物件（以前只有 str）。"

#: ../../library/urllib.parse.rst:627
#, fuzzy
msgid ""
"Like :func:`unquote`, but also replace plus signs with spaces, as required "
"for unquoting HTML form values."
msgstr "像 :func:`unquote` 一樣，但也用空格替換加號，這是取消引用 HTML "
"表單值所必需的。"

#: ../../library/urllib.parse.rst:630
#, fuzzy
msgid "*string* must be a :class:`str`."
msgstr "*string* 必須是 :class:`str`。"

#: ../../library/urllib.parse.rst:632
#, fuzzy
msgid "Example: ``unquote_plus('/El+Ni%C3%B1o/')`` yields ``'/El Niño/'``."
msgstr "示例：``unquote_plus('/El+Ni%C3%B1o/')`` 產生 ``'/El Niño/'``。"

#: ../../library/urllib.parse.rst:637
#, fuzzy
msgid ""
"Replace ``%xx`` escapes with their single-octet equivalent, and return a :"
"class:`bytes` object."
msgstr "將 ``%xx`` 轉義符替換為其等效的單八位位元組，並回傳一個 :class:`bytes` 物件。"

#: ../../library/urllib.parse.rst:642
#, fuzzy
msgid ""
"If it is a :class:`str`, unescaped non-ASCII characters in *string* are "
"encoded into UTF-8 bytes."
msgstr "如果它是 :class:`str`，*string* 中未轉義的非 ASCII 字元將編碼為 UTF-8 "
"位元組。"

#: ../../library/urllib.parse.rst:645
#, fuzzy
msgid "Example: ``unquote_to_bytes('a%26%EF')`` yields ``b'a&\\xef'``."
msgstr "示例：``unquote_to_bytes('a%26%EF')`` 產生 ``b'a&\\xef'``。"

#: ../../library/urllib.parse.rst:651
#, fuzzy
msgid ""
"Convert a mapping object or a sequence of two-element tuples, which may "
"contain :class:`str` or :class:`bytes` objects, to a percent-encoded ASCII "
"text string.  If the resultant string is to be used as a *data* for POST "
"operation with the :func:`~urllib.request.urlopen` function, then it should "
"be encoded to bytes, otherwise it would result in a :exc:`TypeError`."
msgstr ""
"將可能包含 str 或 bytes 物件的映射對像或二元組序列轉換為百分比編碼的 ASCII "
"文本字串。如果結果字串要用作 POST 操作的 *資料* :func:`~urllib.request."
"urlopen` 函式，則應將其編碼為位元組，否則會導致 :exc:`TypeError `。"

#: ../../library/urllib.parse.rst:658
#, fuzzy
msgid ""
"The resulting string is a series of ``key=value`` pairs separated by ``'&'`` "
"characters, where both *key* and *value* are quoted using the *quote_via* "
"function.  By default, :func:`quote_plus` is used to quote the values, which "
"means spaces are quoted as a ``'+'`` character and '/' characters are "
"encoded as ``%2F``, which follows the standard for GET requests "
"(``application/x-www-form-urlencoded``).  An alternate function that can be "
"passed as *quote_via* is :func:`quote`, which will encode spaces as ``%20`` "
"and not encode '/' characters.  For maximum control of what is quoted, use "
"``quote`` and specify a value for *safe*."
msgstr ""
"生成的字串是一系列由 ``&``字元分隔的“key=value”對，其中*key* 和*value* "
"都使用*quote_via* 函式引用。預設情況下，:func:`quote_plus` 用於引用值，"
"這意味著空格被引用為 ``'+'`` 字元，'/' 字元被編碼為 ``%2F``，遵循標準對於 "
"GET 請求（``application/x-www-form-urlencoded``）。可以作為 *quote_via* "
"傳遞的替代函式是 :func:`quote`，它將空格編碼為 ``%20`` 而不是編碼 '/' "
"字元。為了最大程度地控制引用的內容，請使用 ``quote`` 並為 *safe* 指定一個值。"

#: ../../library/urllib.parse.rst:668
#, fuzzy
msgid ""
"When a sequence of two-element tuples is used as the *query* argument, the "
"first element of each tuple is a key and the second is a value. The value "
"element in itself can be a sequence and in that case, if the optional "
"parameter *doseq* evaluates to ``True``, individual ``key=value`` pairs "
"separated by ``'&'`` are generated for each element of the value sequence "
"for the key.  The order of parameters in the encoded string will match the "
"order of parameter tuples in the sequence."
msgstr ""
"當雙元素元組序列用作 *query* "
"參數時，每個元組的第一個元素是鍵，第二個元素是值。 value "
"元素本身可以是一個序列，在這種情況下，如果可選參數 *doseq* 的計算結果為 ``True``"
"，則會生成由 ``&``分隔的單個“key=value”對鍵的值序列的每個元素。編碼字串中參數的"
"順序將匹配序列中參數元組的順序。"

#: ../../library/urllib.parse.rst:676
#, fuzzy
msgid ""
"The *safe*, *encoding*, and *errors* parameters are passed down to "
"*quote_via* (the *encoding* and *errors* parameters are only passed when a "
"query element is a :class:`str`)."
msgstr ""
"*safe*、*encoding* 和 *errors* 參數向下傳遞給 *quote_via*（*encoding* 和 "
"*errors* 參數僅在查詢元素為 :class:`str` 時傳遞）。"

#: ../../library/urllib.parse.rst:680
#, fuzzy
msgid ""
"To reverse this encoding process, :func:`parse_qs` and :func:`parse_qsl` are "
"provided in this module to parse query strings into Python data structures."
msgstr ""
"為了反轉此編碼過程，此模組中提供了 :func:`parse_qs` 和 :func:`parse_qsl` "
"以將查詢字串剖析為 Python 資料結構。"

#: ../../library/urllib.parse.rst:683
#, fuzzy
msgid ""
"Refer to :ref:`urllib examples <urllib-examples>` to find out how the :func:"
"`urllib.parse.urlencode` method can be used for generating the query string "
"of a URL or data for a POST request."
msgstr ""
"參考 :ref:`urllib examples <urllib-examples>` 了解 :func:`urllib.parse."
"urlencode` 方法如何用於生成 URL 的查詢字串或 POST 請求的資料。"

#: ../../library/urllib.parse.rst:687
#, fuzzy
msgid "*query* supports bytes and string objects."
msgstr "*query* 支援位元組和字串物件。"

#: ../../library/urllib.parse.rst:690
#, fuzzy
msgid "*quote_via* parameter."
msgstr "*quote_via* 參數。"

#: ../../library/urllib.parse.rst:698
#, fuzzy
msgid "`WHATWG`_ -  URL Living standard"
msgstr "`WHATWG`_ - URL 生活標準"

#: ../../library/urllib.parse.rst:697
#, fuzzy
msgid ""
"Working Group for the URL Standard that defines URLs, domains, IP addresses, "
"the application/x-www-form-urlencoded format, and their API."
msgstr "定義 URL、域、IP 地址、application/x-www-form-urlencoded 格式及其 API 的 URL "
"標準工作組。"

#: ../../library/urllib.parse.rst:704
#, fuzzy
msgid ":rfc:`3986` - Uniform Resource Identifiers"
msgstr ":rfc:`3986` - 統一資源標識符"

#: ../../library/urllib.parse.rst:701
#, fuzzy
msgid ""
"This is the current standard (STD66). Any changes to urllib.parse module "
"should conform to this. Certain deviations could be observed, which are "
"mostly for backward compatibility purposes and for certain de-facto parsing "
"requirements as commonly observed in major browsers."
msgstr ""
"這是當前標準 (STD66)。對 urllib.parse 模組的任何更改都應符合這一點。可以觀察"
"到某些偏差，這些偏差主要是為了向後相容的目的和在主要瀏覽器中常見的某些實際解"
"析要求。"

#: ../../library/urllib.parse.rst:707
#, fuzzy
msgid ":rfc:`2732` - Format for Literal IPv6 Addresses in URL's."
msgstr ":rfc:`2732` - URL 中文字 IPv6 地址的格式。"

#: ../../library/urllib.parse.rst:707
#, fuzzy
msgid "This specifies the parsing requirements of IPv6 URLs."
msgstr "這指定了 IPv6 URL 的剖析要求。"

#: ../../library/urllib.parse.rst:711
#, fuzzy
msgid ":rfc:`2396` - Uniform Resource Identifiers (URI): Generic Syntax"
msgstr ":rfc:`2396` - 統一資源標識符 (URI)：通用語法"

#: ../../library/urllib.parse.rst:710
#, fuzzy
msgid ""
"Document describing the generic syntactic requirements for both Uniform "
"Resource Names (URNs) and Uniform Resource Locators (URLs)."
msgstr "描述統一資源名稱 (URN) 和統一資源定位符 (URL) 的通用句法要求的文檔。"

#: ../../library/urllib.parse.rst:714
#, fuzzy
msgid ":rfc:`2368` - The mailto URL scheme."
msgstr ":rfc:`2368` - mailto URL 方案。"

#: ../../library/urllib.parse.rst:714
#, fuzzy
msgid "Parsing requirements for mailto URL schemes."
msgstr "mailto URL 方案的剖析要求。"

#: ../../library/urllib.parse.rst:719
#, fuzzy
msgid ":rfc:`1808` - Relative Uniform Resource Locators"
msgstr ":rfc:`1808` - 相對統一資源定位器"

#: ../../library/urllib.parse.rst:717
#, fuzzy
msgid ""
"This Request For Comments includes the rules for joining an absolute and a "
"relative URL, including a fair number of \"Abnormal Examples\" which govern "
"the treatment of border cases."
msgstr "此評論請求包括加入絕對和相對 URL "
"的規則，包括相當數量的“例外示例”，這些示例管理邊界案例的處理。"

#: ../../library/urllib.parse.rst:721
#, fuzzy
msgid ":rfc:`1738` - Uniform Resource Locators (URL)"
msgstr ":rfc:`1738` - 統一資源定位符 (URL)"

#: ../../library/urllib.parse.rst:722
#, fuzzy
msgid "This specifies the formal syntax and semantics of absolute URLs."
msgstr "這指定了絕對 URL 的正式語法和語義。"
