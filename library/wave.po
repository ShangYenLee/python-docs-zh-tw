# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-09-24 00:21+0000\n"
"PO-Revision-Date: 2018-05-23 16:15+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/wave.rst:2
msgid ":mod:`wave` --- Read and write WAV files"
msgstr ":mod:`wave` --- 讀寫 WAV 檔案"

#: ../../library/wave.rst:10
msgid "**Source code:** :source:`Lib/wave.py`"
msgstr "**原始碼：**\\ :source:`Lib/wave.py`"

#: ../../library/wave.rst:14
#, fuzzy
msgid ""
"The :mod:`wave` module provides a convenient interface to the WAV sound "
"format. Only files using ``WAVE_FORMAT_PCM`` are supported. Note that this "
"does not include files using ``WAVE_FORMAT_EXTENSIBLE`` even if the "
"subformat is PCM."
msgstr ""
":mod:`wave` 模組為 WAV 聲音格式提供了一個方便的介面。僅支援使用 "
"``WAVE_FORMAT_PCM`` 的文件。請注意，這不包括使用 ``WAVE_FORMAT_EXTENSIBLE`` "
"的文件，即使子格式是 PCM。"

#: ../../library/wave.rst:18
#, fuzzy
msgid "The :mod:`wave` module defines the following function and exception:"
msgstr ":mod:`wave` 模組定義了以下函式和例外："

#: ../../library/wave.rst:23
#, fuzzy
msgid ""
"If *file* is a string, open the file by that name, otherwise treat it as a "
"file-like object.  *mode* can be:"
msgstr "如果 *file* 是一個字串，則以該名稱打開文件，否則將其視為類文件物件。 "
"*模式*可以是："

#: ../../library/wave.rst:27
msgid "``'rb'``"
msgstr "``'rb'``"

#: ../../library/wave.rst:27
#, fuzzy
msgid "Read only mode."
msgstr "只讀模式。"

#: ../../library/wave.rst:30
msgid "``'wb'``"
msgstr "``'wb'``"

#: ../../library/wave.rst:30
#, fuzzy
msgid "Write only mode."
msgstr "只寫模式。"

#: ../../library/wave.rst:32
#, fuzzy
msgid "Note that it does not allow read/write WAV files."
msgstr "請注意，它不允許讀/寫 WAV 文件。"

#: ../../library/wave.rst:34
#, fuzzy
msgid ""
"A *mode* of ``'rb'`` returns a :class:`Wave_read` object, while a *mode* of "
"``'wb'`` returns a :class:`Wave_write` object.  If *mode* is omitted and a "
"file-like object is passed as *file*, ``file.mode`` is used as the default "
"value for *mode*."
msgstr ""
"``'rb'`` 的 *mode* 回傳一個 Wave_read 物件，而 ``'wb'`` 的 *mode* 回傳一個 "
":class:`Wave_write` 物件。如果省略 *mode* 並將類文件對像作為 *file* "
"傳遞，``file.mode`` 將用作 *mode* 的預設值。"

#: ../../library/wave.rst:39
#, fuzzy
msgid ""
"If you pass in a file-like object, the wave object will not close it when "
"its :meth:`close` method is called; it is the caller's responsibility to "
"close the file object."
msgstr "如果你傳入一個類似文件的物件，wave 對像在它的 :meth:`close` "
"方法被呼叫時不會關閉它；關閉文件對像是呼叫者的責任。"

#: ../../library/wave.rst:43
#, fuzzy
msgid ""
"The :func:`.open` function may be used in a :keyword:`with` statement.  When "
"the :keyword:`!with` block completes, the :meth:`Wave_read.close() <wave."
"Wave_read.close>` or :meth:`Wave_write.close() <wave.Wave_write.close()>` "
"method is called."
msgstr ""
":func:`.open` 函式可以用在 :keyword:`with` 語句中。當 :keyword:`!with` "
"塊完成時，:meth:`Wave_read.close() <wave.Wave_read.close>` 或 "
":meth:`Wave_write.close() <wave.Wave_write.close()>`方法被呼叫。"

#: ../../library/wave.rst:48 ../../library/wave.rst:164
#, fuzzy
msgid "Added support for unseekable files."
msgstr "新增了對不可搜索文件的支援。"

#: ../../library/wave.rst:53
#, fuzzy
msgid ""
"An error raised when something is impossible because it violates the WAV "
"specification or hits an implementation deficiency."
msgstr "當某些事情因為違反 WAV 規範或遇到實作缺陷而無法實作時引發的錯誤。"

#: ../../library/wave.rst:60
msgid "Wave_read Objects"
msgstr "Wave_read 物件"

#: ../../library/wave.rst:62
#, fuzzy
msgid ""
"Wave_read objects, as returned by :func:`.open`, have the following methods:"
msgstr ":func:`.open` 回傳的 Wave_read 物件具有以下方法："

#: ../../library/wave.rst:67
#, fuzzy
msgid ""
"Close the stream if it was opened by :mod:`wave`, and make the instance "
"unusable.  This is called automatically on object collection."
msgstr "如果流被 :mod:`wave` "
"打開，則關閉流，並使實例不可用。這是在物件集合上自動呼叫的。"

#: ../../library/wave.rst:73
#, fuzzy
msgid "Returns number of audio channels (``1`` for mono, ``2`` for stereo)."
msgstr "回傳音頻通道數（單聲道為 ``1``，立體聲為 ``2``）。"

#: ../../library/wave.rst:78
#, fuzzy
msgid "Returns sample width in bytes."
msgstr "以位元組為單位回傳樣本寬度。"

#: ../../library/wave.rst:83
#, fuzzy
msgid "Returns sampling frequency."
msgstr "回傳採樣頻率。"

#: ../../library/wave.rst:88
#, fuzzy
msgid "Returns number of audio frames."
msgstr "回傳音頻幀數。"

#: ../../library/wave.rst:93
#, fuzzy
msgid "Returns compression type (``'NONE'`` is the only supported type)."
msgstr "回傳壓縮型別（``'NONE'`` 是唯一支援的型別）。"

#: ../../library/wave.rst:98
#, fuzzy
msgid ""
"Human-readable version of :meth:`getcomptype`. Usually ``'not compressed'`` "
"parallels ``'NONE'``."
msgstr ":meth:`getcomptype` 的人類可讀版本。通常“未壓縮”對應於 ``'None'`` 。"

#: ../../library/wave.rst:104
#, fuzzy
msgid ""
"Returns a :func:`~collections.namedtuple` ``(nchannels, sampwidth, "
"framerate, nframes, comptype, compname)``, equivalent to output of the :meth:"
"`get\\*` methods."
msgstr ""
"回傳 :func:`~collections.namedtuple` ``(nchannels, sampwidth, framerate, "
"nframes, comptype, compname)``，相當於 :meth:`get\\*` 方法的輸出。"

#: ../../library/wave.rst:111
#, fuzzy
msgid ""
"Reads and returns at most *n* frames of audio, as a :class:`bytes` object."
msgstr "讀取並回傳至多 *n* 幀音頻，作為 :class:`bytes` 物件。"

#: ../../library/wave.rst:116
#, fuzzy
msgid "Rewind the file pointer to the beginning of the audio stream."
msgstr "將文件指標倒回到音頻流的開頭。"

#: ../../library/wave.rst:118
#, fuzzy
msgid ""
"The following two methods are defined for compatibility with the :mod:`aifc` "
"module, and don't do anything interesting."
msgstr "以下兩個方法是為了與 :mod:`aifc` 模組相容而定義的，並且不做任何有趣的事情。"

#: ../../library/wave.rst:124
#, fuzzy
msgid "Returns ``None``."
msgstr "回傳 ``None`` 。"

#: ../../library/wave.rst:129
#, fuzzy
msgid "Raise an error."
msgstr "提出錯誤。"

#: ../../library/wave.rst:131
#, fuzzy
msgid ""
"The following two methods define a term \"position\" which is compatible "
"between them, and is otherwise implementation dependent."
msgstr "以下兩種方法定義了一個術語“位置”，它們之間是相容的，並且在其他方"
"面依賴於實作。"

#: ../../library/wave.rst:137
#, fuzzy
msgid "Set the file pointer to the specified position."
msgstr "將文件指標設定到指定位置。"

#: ../../library/wave.rst:142
#, fuzzy
msgid "Return current file pointer position."
msgstr "回傳當前文件指標位置。"

#: ../../library/wave.rst:148
msgid "Wave_write Objects"
msgstr "Wave_write 物件"

#: ../../library/wave.rst:150
#, fuzzy
msgid ""
"For seekable output streams, the ``wave`` header will automatically be "
"updated to reflect the number of frames actually written.  For unseekable "
"streams, the *nframes* value must be accurate when the first frame data is "
"written.  An accurate *nframes* value can be achieved either by calling :"
"meth:`~Wave_write.setnframes` or :meth:`~Wave_write.setparams` with the "
"number of frames that will be written before :meth:`~Wave_write.close` is "
"called and then using :meth:`~Wave_write.writeframesraw` to write the frame "
"data, or by calling :meth:`~Wave_write.writeframes` with all of the frame "
"data to be written.  In the latter case :meth:`~Wave_write.writeframes` will "
"calculate the number of frames in the data and set *nframes* accordingly "
"before writing the frame data."
msgstr ""
"對於可搜索的輸出流，``wave`` 標頭將自動更新以反映實際寫入的幀數。對於不可尋路"
"的流，寫入第一幀資料時*nframes*值必須準確。可以通過呼叫 :meth:`~Wave_write."
"setnframes` 或 :meth:`~Wave_write.setparams` 獲得準確的 *nframes* 值，"
"其中幀數將在 :meth:`~Wave_write.close` 之前寫入被呼叫，然後使用 "
":meth:`~Wave_write.writeframesraw` 寫入幀資料，或者通過呼叫 "
":meth:`~Wave_write.writeframes` 寫入所有幀資料。在後一種情況下 "
":meth:`~Wave_write.writeframes` "
"將計算資料中的幀數並在寫入幀資料之前相應地設定 *nframes*。"

#: ../../library/wave.rst:162
#, fuzzy
msgid ""
"Wave_write objects, as returned by :func:`.open`, have the following methods:"
msgstr ":func:`.open` 回傳的 Wave_write 物件具有以下方法："

#: ../../library/wave.rst:170
#, fuzzy
msgid ""
"Make sure *nframes* is correct, and close the file if it was opened by :mod:"
"`wave`.  This method is called upon object collection.  It will raise an "
"exception if the output stream is not seekable and *nframes* does not match "
"the number of frames actually written."
msgstr ""
"確保 *nframes* 是正確的，如果文件是由 :mod:`wave` "
"打開的，則關閉文件。此方法在物件集合時呼叫。如果輸出流不可搜索並且 *nframes* "
"與實際寫入的幀數不匹配，它將引發例外。"

#: ../../library/wave.rst:178
#, fuzzy
msgid "Set the number of channels."
msgstr "設定通道數。"

#: ../../library/wave.rst:183
#, fuzzy
msgid "Set the sample width to *n* bytes."
msgstr "將樣本寬度設定為 *n* 位元組。"

#: ../../library/wave.rst:188
#, fuzzy
msgid "Set the frame rate to *n*."
msgstr "將幀速率設定為 *n*。"

#: ../../library/wave.rst:190
#, fuzzy
msgid "A non-integral input to this method is rounded to the nearest integer."
msgstr "此方法的非整數輸入四捨五入為最接近的整數。"

#: ../../library/wave.rst:197
#, fuzzy
msgid ""
"Set the number of frames to *n*.  This will be changed later if the number "
"of frames actually written is different (this update attempt will raise an "
"error if the output stream is not seekable)."
msgstr "將幀數設定為 *n*。如果實際寫入的幀數不同，這將在稍後更改（如果輸出流不可搜索"
"，此更新嘗試將引發錯誤）。"

#: ../../library/wave.rst:204
#, fuzzy
msgid ""
"Set the compression type and description. At the moment, only compression "
"type ``NONE`` is supported, meaning no compression."
msgstr "設定壓縮型別和描述。目前只支援壓縮型別``NONE``，即不壓縮。"

#: ../../library/wave.rst:210
#, fuzzy
msgid ""
"The *tuple* should be ``(nchannels, sampwidth, framerate, nframes, comptype, "
"compname)``, with values valid for the :meth:`set\\*` methods.  Sets all "
"parameters."
msgstr ""
"*元組* 應該是``(nchannels, sampwidth, framerate, nframes, comptype, "
"compname)``，其值對 :meth:`set\\*` 方法有效。設定所有參數。"

#: ../../library/wave.rst:217
#, fuzzy
msgid ""
"Return current position in the file, with the same disclaimer for the :meth:"
"`Wave_read.tell` and :meth:`Wave_read.setpos` methods."
msgstr ""
"回傳文件中的當前位置，對 :meth:`Wave_read.tell` 和 :meth:`Wave_read.setpos` "
"方法有相同的免責聲明。"

#: ../../library/wave.rst:223
#, fuzzy
msgid "Write audio frames, without correcting *nframes*."
msgstr "寫入音頻幀，不更正 *nframes*。"

#: ../../library/wave.rst:225 ../../library/wave.rst:236
#, fuzzy
msgid "Any :term:`bytes-like object` is now accepted."
msgstr "現在接受任何 :term:`bytes-like object`。"

#: ../../library/wave.rst:231
#, fuzzy
msgid ""
"Write audio frames and make sure *nframes* is correct.  It will raise an "
"error if the output stream is not seekable and the total number of frames "
"that have been written after *data* has been written does not match the "
"previously set value for *nframes*."
msgstr ""
"寫入音頻幀並確保 *nframes* 是正確的。如果輸出流不可搜索並且在寫入 *data* "
"後寫入的幀總數與先前設定的 *nframes* 值不匹配，則會引發錯誤。"

#: ../../library/wave.rst:240
#, fuzzy
msgid ""
"Note that it is invalid to set any parameters after calling :meth:"
"`writeframes` or :meth:`writeframesraw`, and any attempt to do so will "
"raise :exc:`wave.Error`."
msgstr ""
"請注意，在呼叫 :meth:`writeframes` 或 :meth:`writeframesraw` "
"後設定任何參數都是無效的，任何嘗試這樣做都會引發 :exc:`wave.Error`。"
