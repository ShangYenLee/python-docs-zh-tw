# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-22 00:16+0000\n"
"PO-Revision-Date: 2016-11-19 00:36+0000\n"
"Last-Translator: Liang-Bo Wang <me@liang2.tw>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/wsgiref.rst:2
#, fuzzy
msgid ":mod:`wsgiref` --- WSGI Utilities and Reference Implementation"
msgstr ":mod:`wsgiref` --- WSGI 工具程式和參考實作"

#: ../../library/wsgiref.rst:10
msgid "**Source code:** :source:`Lib/wsgiref`"
msgstr "**原始碼：**\\ :source:`Lib/wsgiref`"

#: ../../library/wsgiref.rst:14
#, fuzzy
msgid ""
"The Web Server Gateway Interface (WSGI) is a standard interface between web "
"server software and web applications written in Python. Having a standard "
"interface makes it easy to use an application that supports WSGI with a "
"number of different web servers."
msgstr ""
"Web 伺服器網關介面 (WSGI) 是 Web 伺服器軟件和用 Python 編寫的 Web "
"應用程式之間的標準介面。擁有一個標準介面使得支援 WSGI "
"的應用程式與許多不同的 Web 伺服器一起使用變得容易。"

#: ../../library/wsgiref.rst:19
#, fuzzy
msgid ""
"Only authors of web servers and programming frameworks need to know every "
"detail and corner case of the WSGI design.  You don't need to understand "
"every detail of WSGI just to install a WSGI application or to write a web "
"application using an existing framework."
msgstr ""
"只有 Web 伺服器和編程框架的作者需要了解 WSGI 設計的每個細節和極端情況。"
"您不需要了解 WSGI 的每個細節，只是為了安裝 WSGI 應用程式或使用現有框架編寫 "
"Web 應用程式。"

#: ../../library/wsgiref.rst:24
#, fuzzy
msgid ""
":mod:`wsgiref` is a reference implementation of the WSGI specification that "
"can be used to add WSGI support to a web server or framework.  It provides "
"utilities for manipulating WSGI environment variables and response headers, "
"base classes for implementing WSGI servers, a demo HTTP server that serves "
"WSGI applications, types for static type checking, and a validation tool "
"that checks WSGI servers and applications for conformance to the WSGI "
"specification (:pep:`3333`)."
msgstr ""
":mod:`wsgiref` 是 WSGI 規範的參考實作，可用於將 WSGI 支援新增到 Web "
"伺服器或框架。它提供用於操作 WSGI 環境變數和響應標頭的實用程式、用於實作 "
"WSGI 伺服器的基底類別、為 WSGI 應用程式提供服務的演示 HTTP "
"伺服器、用於靜態型別檢查的型別，以及用於檢查 WSGI 伺服器和應用程式是否符合 "
"WSGI 規範的驗證工具(:pep:`3333`)。"

#: ../../library/wsgiref.rst:32
#, fuzzy
msgid ""
"See `wsgi.readthedocs.io <https://wsgi.readthedocs.io/>`_ for more "
"information about WSGI, and links to tutorials and other resources."
msgstr ""
"有關 WSGI 的更多資訊以及指向教程和其他資源的鏈接，請參閱`wsgi.readthedocs.io "
"<https://wsgi.readthedocs.io/>`_。"

#: ../../library/wsgiref.rst:39
#, fuzzy
msgid ":mod:`wsgiref.util` -- WSGI environment utilities"
msgstr ":mod:`wsgiref.util` -- WSGI 環境實用程式"

#: ../../library/wsgiref.rst:45
#, fuzzy
msgid ""
"This module provides a variety of utility functions for working with WSGI "
"environments.  A WSGI environment is a dictionary containing HTTP request "
"variables as described in :pep:`3333`.  All of the functions taking an "
"*environ* parameter expect a WSGI-compliant dictionary to be supplied; "
"please see :pep:`3333` for a detailed specification and :data:`~wsgiref."
"types.WSGIEnvironment` for a type alias that can be used in type annotations."
msgstr ""
"該模組提供了多種用於 WSGI 環境的實用函式。 WSGI 環境是一個包含 HTTP "
"請求變數的字典，如 :pep:`3333` 中所述。所有採用 *environ* "
"參數的函式都期望提供一個符合 WSGI 的字典；請參閱 :pep:`3333` 了解詳細規範和 "
":data:`~wsgiref.types.WSGIEnvironment` 了解可在型別註釋中使用的型別別名。"

#: ../../library/wsgiref.rst:56
#, fuzzy
msgid ""
"Return a guess for whether ``wsgi.url_scheme`` should be \"http\" or "
"\"https\", by checking for a ``HTTPS`` environment variable in the *environ* "
"dictionary.  The return value is a string."
msgstr ""
"通過檢查 *environ* 字典中的 ``HTTPS`` 環境變數，回傳對 ``wsgi.url_scheme`` "
"應該是 ``http``還是 ``https``的猜測。回傳值是一個字串。"

#: ../../library/wsgiref.rst:60
#, fuzzy
msgid ""
"This function is useful when creating a gateway that wraps CGI or a CGI-like "
"protocol such as FastCGI.  Typically, servers providing such protocols will "
"include a ``HTTPS`` variable with a value of \"1\", \"yes\", or \"on\" when "
"a request is received via SSL.  So, this function returns \"https\" if such "
"a value is found, and \"http\" otherwise."
msgstr ""
"此函式在建立包裝 CGI 或類似 CGI 的協定（如 FastCGI）的網關時很有用。通常，"
"當通過 SSL 收到請求時，提供此類協定的伺服器將包含一個值為 ``1``、 ``yes``或 ``on``的“H"
"TTPS”變數。因此，如果找到這樣的值，此函式將回傳 ``https``，否則回傳 ``http``。"

#: ../../library/wsgiref.rst:69
#, fuzzy
msgid ""
"Return the full request URI, optionally including the query string, using "
"the algorithm found in the \"URL Reconstruction\" section of :pep:`3333`.  "
"If *include_query* is false, the query string is not included in the "
"resulting URI."
msgstr ""
"使用在 :pep:`3333` 的“URL 重建”部分中找到的演算法回傳完整的請求 "
"URI，可以選擇包括查詢字串。如果 *include_query* 為 false，"
"則查詢字串不包含在生成的 URI 中。"

#: ../../library/wsgiref.rst:76
#, fuzzy
msgid ""
"Similar to :func:`request_uri`, except that the ``PATH_INFO`` and "
"``QUERY_STRING`` variables are ignored.  The result is the base URI of the "
"application object addressed by the request."
msgstr ""
"與 :func:`request_uri` 類似，只是忽略了 ``PATH_INFO`` 和 ``QUERY_STRING`` "
"變數。結果是請求尋址的應用程式物件的基本 URI。"

#: ../../library/wsgiref.rst:83
#, fuzzy
msgid ""
"Shift a single name from ``PATH_INFO`` to ``SCRIPT_NAME`` and return the "
"name. The *environ* dictionary is *modified* in-place; use a copy if you "
"need to keep the original ``PATH_INFO`` or ``SCRIPT_NAME`` intact."
msgstr ""
"將單個名稱從 ``PATH_INFO`` 轉移到 ``SCRIPT_NAME`` 並回傳名稱。 *environ* "
"字典是就地*修改*；如果您需要保持原始的 ``PATH_INFO`` 或 ``SCRIPT_NAME`` "
"完整，請使用副本。"

#: ../../library/wsgiref.rst:87
#, fuzzy
msgid ""
"If there are no remaining path segments in ``PATH_INFO``, ``None`` is "
"returned."
msgstr "如果 ``PATH_INFO`` 中沒有剩餘路徑段，則回傳 ``None``。"

#: ../../library/wsgiref.rst:89
#, fuzzy
msgid ""
"Typically, this routine is used to process each portion of a request URI "
"path, for example to treat the path as a series of dictionary keys. This "
"routine modifies the passed-in environment to make it suitable for invoking "
"another WSGI application that is located at the target URI. For example, if "
"there is a WSGI application at ``/foo``, and the request URI path is ``/foo/"
"bar/baz``, and the WSGI application at ``/foo`` calls :func:"
"`shift_path_info`, it will receive the string \"bar\", and the environment "
"will be updated to be suitable for passing to a WSGI application at ``/foo/"
"bar``.  That is, ``SCRIPT_NAME`` will change from ``/foo`` to ``/foo/bar``, "
"and ``PATH_INFO`` will change from ``/bar/baz`` to ``/baz``."
msgstr ""
"通常，此例程用於處理請求 URI "
"路徑的每個部分，例如將路徑視為一系列字典鍵。此例程修改傳入的環境，"
"使其適合呼叫位於目標 URI 的另一個 WSGI "
"應用程式。例如在``/foo``有一個WSGI應用，請求URI路徑為``/foo/bar/"
"baz``，在``/foo``的WSGI應用呼叫 :func:` "
"shift_path_info`，它將收到字串 ``bar``，並且環境將被更新以適合傳遞給位於“/foo/"
"bar”的 WSGI 應用程式。也就是說，``SCRIPT_NAME`` 將從``/foo`` 更改為``/foo/"
"bar``，``PATH_INFO`` 將從``/bar/baz`` 更改為``/baz` `。"

#: ../../library/wsgiref.rst:100
#, fuzzy
msgid ""
"When ``PATH_INFO`` is just a \"/\", this routine returns an empty string and "
"appends a trailing slash to ``SCRIPT_NAME``, even though empty path segments "
"are normally ignored, and ``SCRIPT_NAME`` doesn't normally end in a slash.  "
"This is intentional behavior, to ensure that an application can tell the "
"difference between URIs ending in ``/x`` from ones ending in ``/x/`` when "
"using this routine to do object traversal."
msgstr ""
"當 ``PATH_INFO`` 只是一個 ``/``時，此例程回傳一個空字串並在 ``SCRIPT_NAME`` "
"後附加一個斜杠，即使空路徑段通常被忽略，而 ``SCRIPT_NAME`` 通常不會以斜杠結尾"
"。這是有意的行為，以確保應用程式在使用此例程進行物件遍歷時可以區分以“/x”"
"結尾的 URI 和以“/x/”結尾的 URI。"

#: ../../library/wsgiref.rst:110
#, fuzzy
msgid "Update *environ* with trivial defaults for testing purposes."
msgstr "出於測試目的，使用微不足道的預設值更新 *environ*。"

#: ../../library/wsgiref.rst:112
#, fuzzy
msgid ""
"This routine adds various parameters required for WSGI, including "
"``HTTP_HOST``, ``SERVER_NAME``, ``SERVER_PORT``, ``REQUEST_METHOD``, "
"``SCRIPT_NAME``, ``PATH_INFO``, and all of the :pep:`3333`\\ -defined ``wsgi."
"*`` variables.  It only supplies default values, and does not replace any "
"existing settings for these variables."
msgstr ""
"此例程新增了 WSGI 所需的各種參數，包括 ``HTTP_HOST``、``SERVER_NAME``、``SERV"
"ER_PORT``、``REQUEST_METHOD``、``SCRIPT_NAME``、``PATH_INFO`` "
"以及所有的 :pep:`3333`\\ -定義了``wsgi.*`` "
"變數。它僅提供預設值，不會替換這些變數的任何現有設定。"

#: ../../library/wsgiref.rst:118
#, fuzzy
msgid ""
"This routine is intended to make it easier for unit tests of WSGI servers "
"and applications to set up dummy environments.  It should NOT be used by "
"actual WSGI servers or applications, since the data is fake!"
msgstr "此例程旨在使 WSGI 伺服器和應用程式的單元測試更容易設定虛擬環境。"
"它不應該被實際的 WSGI 伺服器或應用程式使用，因為資料是假的！"

#: ../../library/wsgiref.rst:122 ../../library/wsgiref.rst:170
#: ../../library/wsgiref.rst:292 ../../library/wsgiref.rst:425
msgid "Example usage::"
msgstr ""
"用法範例：\n"
"\n"
"::"

#: ../../library/wsgiref.rst:146
#, fuzzy
msgid ""
"In addition to the environment functions above, the :mod:`wsgiref.util` "
"module also provides these miscellaneous utilities:"
msgstr "除了上面的環境功能之外，:mod:`wsgiref.util` 模組還提供了這些雜項實用程式："

#: ../../library/wsgiref.rst:152
#, fuzzy
msgid ""
"Return ``True`` if 'header_name' is an HTTP/1.1 \"Hop-by-Hop\" header, as "
"defined by :rfc:`2616`."
msgstr "如果“header_name”是 HTTP/1.1 ``Hop-by-Hop``標頭，如 :rfc:`2616` 所定義，則回傳 "
"``True``。"

#: ../../library/wsgiref.rst:158
#, fuzzy
msgid ""
"A concrete implementation of the :class:`wsgiref.types.FileWrapper` protocol "
"used to convert a file-like object to an :term:`iterator`. The resulting "
"objects are :term:`iterable`\\ s. As the object is iterated over, the "
"optional *blksize* parameter will be repeatedly passed to the *filelike* "
"object's :meth:`read` method to obtain bytestrings to yield.  When :meth:"
"`read` returns an empty bytestring, iteration is ended and is not resumable."
msgstr ""
"wsgiref.types.FileWrapper 協定的具體實作，用於將類文件物件轉換為疊代器。"
"結果對像是 :term:`iterable`\\ s。當對像被疊代時，可選的 *blksize* "
"參數將被重複傳遞給 *filelike* 物件的 :meth:`read` "
"方法以獲取要生成的位元組串。當 :meth:`read` "
"回傳空位元組串時，疊代結束並且不可恢復。"

#: ../../library/wsgiref.rst:166
#, fuzzy
msgid ""
"If *filelike* has a :meth:`close` method, the returned object will also have "
"a :meth:`close` method, and it will invoke the *filelike* object's :meth:"
"`close` method when called."
msgstr ""
"如果 *filelike* 有一個 :meth:`close` 方法，則回傳的對像也將有一個 "
":meth:`close` 方法，並且它會在呼叫時呼叫 *filelike* 物件的 :meth:`close` "
"方法。"

#: ../../library/wsgiref.rst:182
#, fuzzy
msgid "Support for :meth:`__getitem__` method has been removed."
msgstr "對 :meth:`__getitem__` 方法的支援已被刪除。"

#: ../../library/wsgiref.rst:187
#, fuzzy
msgid ":mod:`wsgiref.headers` -- WSGI response header tools"
msgstr ":mod:`wsgiref.headers` -- WSGI 響應頭工具"

#: ../../library/wsgiref.rst:193
#, fuzzy
msgid ""
"This module provides a single class, :class:`Headers`, for convenient "
"manipulation of WSGI response headers using a mapping-like interface."
msgstr "該模組提供了一個單獨的類：:class:`Headers`，用於使用類似映射的介面方便地操作 "
"WSGI 響應標頭。"

#: ../../library/wsgiref.rst:199
#, fuzzy
msgid ""
"Create a mapping-like object wrapping *headers*, which must be a list of "
"header name/value tuples as described in :pep:`3333`. The default value of "
"*headers* is an empty list."
msgstr ""
"建立一個類似映射的物件包裝 *headers*，它必須是標題名稱/值元組的列表，如 "
":pep:`3333` 中所述。 *headers* 的預設值是一個空列表。"

#: ../../library/wsgiref.rst:203
#, fuzzy
msgid ""
":class:`Headers` objects support typical mapping operations including :meth:"
"`__getitem__`, :meth:`get`, :meth:`__setitem__`, :meth:`setdefault`, :meth:"
"`__delitem__` and :meth:`__contains__`.  For each of these methods, the key "
"is the header name (treated case-insensitively), and the value is the first "
"value associated with that header name.  Setting a header deletes any "
"existing values for that header, then adds a new value at the end of the "
"wrapped header list.  Headers' existing order is generally maintained, with "
"new headers added to the end of the wrapped list."
msgstr ""
":class:`Headers` 物件支援典型的映射操作，包括 :meth:`__getitem__`、:meth:`get`"
"、:meth:`__setitem__`、:meth:`setdefault`、:meth:`__delitem__` 和:meth: `__包"
"含__`。對於這些方法中的每一個，鍵是標頭名稱（不區分大小寫），值是與該標頭名稱"
"關聯的第一個值。設定標頭會刪除該標頭的任何現有值，然後在包裝的標頭列表的末尾"
"新增一個新值。標頭的現有順序通常保持不變，新標頭新增到包裝列表的末尾。"

#: ../../library/wsgiref.rst:212
#, fuzzy
msgid ""
"Unlike a dictionary, :class:`Headers` objects do not raise an error when you "
"try to get or delete a key that isn't in the wrapped header list. Getting a "
"nonexistent header just returns ``None``, and deleting a nonexistent header "
"does nothing."
msgstr ""
"與字典不同，:class:`Headers` 對像在您嘗試獲取或刪除不在包裝的標頭列表中的鍵時"
"不會引發錯誤。獲取不存在的標頭只會回傳 ``None``，而刪除不存在的標頭不會執行任何"
"操作。"

#: ../../library/wsgiref.rst:217
#, fuzzy
msgid ""
":class:`Headers` objects also support :meth:`keys`, :meth:`values`, and :"
"meth:`items` methods.  The lists returned by :meth:`keys` and :meth:`items` "
"can include the same key more than once if there is a multi-valued header.  "
"The ``len()`` of a :class:`Headers` object is the same as the length of its :"
"meth:`items`, which is the same as the length of the wrapped header list.  "
"In fact, the :meth:`items` method just returns a copy of the wrapped header "
"list."
msgstr ""
":class:`Headers` 對像還支援 :meth:`keys`、:meth:`values` 和 :meth:`items` "
"方法。如果存在多值標頭，則 :meth:`keys` 和 :meth:`items` "
"回傳的列表可以多次包含相同的鍵。 :class:`Headers` 物件的 ``len()`` 與其 "
":meth:`items` 的長度相同，這與包裝的標頭列表的長度相同。事實上，:meth:`items`"
" 方法只是回傳包裝頭列表的副本。"

#: ../../library/wsgiref.rst:224
#, fuzzy
msgid ""
"Calling ``bytes()`` on a :class:`Headers` object returns a formatted "
"bytestring suitable for transmission as HTTP response headers.  Each header "
"is placed on a line with its value, separated by a colon and a space. Each "
"line is terminated by a carriage return and line feed, and the bytestring is "
"terminated with a blank line."
msgstr ""
"在 :class:`Headers` 對像上呼叫 ``bytes()`` 會回傳適合作為 HTTP 響應標頭傳輸的"
"格式化位元組串。每個標頭與其值放在一行上，由冒號和空格分隔。每行以回車符和換"
"行符結束，位元組串以空行結束。"

#: ../../library/wsgiref.rst:230
#, fuzzy
msgid ""
"In addition to their mapping interface and formatting features, :class:"
"`Headers` objects also have the following methods for querying and adding "
"multi-valued headers, and for adding headers with MIME parameters:"
msgstr ""
"除了它們的映射介面和格式化功能之外，:class:`Headers` "
"對像還具有以下用於查詢和新增多值標頭以及用於新增帶有 MIME 參數的標頭的方法："

#: ../../library/wsgiref.rst:237
#, fuzzy
msgid "Return a list of all the values for the named header."
msgstr "回傳指定標頭的所有值的列表。"

#: ../../library/wsgiref.rst:239
#, fuzzy
msgid ""
"The returned list will be sorted in the order they appeared in the original "
"header list or were added to this instance, and may contain duplicates.  Any "
"fields deleted and re-inserted are always appended to the header list.  If "
"no fields exist with the given name, returns an empty list."
msgstr ""
"回傳的列表將按照它們在原始標頭列表中出現的順序或新增到此實例的順序進行排序，"
"並且可能包含重複項。刪除和重新插入的任何欄位始終附加到標題列表。如果不存在具"
"有給定名稱的欄位，則回傳一個空列表。"

#: ../../library/wsgiref.rst:247
#, fuzzy
msgid ""
"Add a (possibly multi-valued) header, with optional MIME parameters "
"specified via keyword arguments."
msgstr "新增一個（可能是多值的）標頭，帶有通過關鍵字參數指定的可選 MIME 參數。"

#: ../../library/wsgiref.rst:250
#, fuzzy
msgid ""
"*name* is the header field to add.  Keyword arguments can be used to set "
"MIME parameters for the header field.  Each parameter must be a string or "
"``None``. Underscores in parameter names are converted to dashes, since "
"dashes are illegal in Python identifiers, but many MIME parameter names "
"include dashes.  If the parameter value is a string, it is added to the "
"header value parameters in the form ``name=\"value\"``. If it is ``None``, "
"only the parameter name is added. (This is used for MIME parameters without "
"a value.)  Example usage::"
msgstr ""
"*name* 是要新增的標題欄位。關鍵字參數可用於設定標題欄位的 MIME "
"參數。每個參數必須是一個字串或 ``None`` 。參數名稱中的底線被轉換為破折號，"
"因為破折號在 Python 標識符中是非法的，但許多 MIME "
"參數名稱包含破折號。如果參數值是一個字串，它將以 ``name=\"value\"`` "
"的形式新增到標頭值參數中。如果為``None``，則只新增參數名稱。 （"
"這用於沒有值的 MIME 參數。）示例用法：："

#: ../../library/wsgiref.rst:260
#, fuzzy
msgid "The above will add a header that looks like this::"
msgstr "上面將新增一個標題，如下所示："

#: ../../library/wsgiref.rst:265
#, fuzzy
msgid "*headers* parameter is optional."
msgstr "*headers* 參數是可選的。"

#: ../../library/wsgiref.rst:270
#, fuzzy
msgid ":mod:`wsgiref.simple_server` -- a simple WSGI HTTP server"
msgstr ":mod:`wsgiref.simple_server` -- 一個簡單的 WSGI HTTP 伺服器"

#: ../../library/wsgiref.rst:276
#, fuzzy
msgid ""
"This module implements a simple HTTP server (based on :mod:`http.server`) "
"that serves WSGI applications.  Each server instance serves a single WSGI "
"application on a given host and port.  If you want to serve multiple "
"applications on a single host and port, you should create a WSGI application "
"that parses ``PATH_INFO`` to select which application to invoke for each "
"request.  (E.g., using the :func:`shift_path_info` function from :mod:"
"`wsgiref.util`.)"
msgstr ""
"該模組實作了一個簡單的 HTTP 伺服器（基於 :mod:`http.server`），為 WSGI "
"應用程式提供服務。每個伺服器實例在給定的主機和端口上為單個 WSGI "
"應用程式提供服務。如果您想在單個主機和端口上提供多個應用程式，您應該建立一個 "
"WSGI 應用程式來解析 ``PATH_INFO`` 以選擇為每個請求呼叫哪個應用程式。 （例如，"
"使用來自 :mod:`wsgiref.util` 的 :func:`shift_path_info` 函式。）"

#: ../../library/wsgiref.rst:287
#, fuzzy
msgid ""
"Create a new WSGI server listening on *host* and *port*, accepting "
"connections for *app*.  The return value is an instance of the supplied "
"*server_class*, and will process requests using the specified "
"*handler_class*.  *app* must be a WSGI application object, as defined by :"
"pep:`3333`."
msgstr ""
"建立一個新的 WSGI 伺服器監聽 *host* 和 *port*，接受 *app* 的連接。"
"回傳值是所提供的 *server_class* 的實例，並將使用指定的 *handler_class* "
"處理請求。 *app* 必須是 WSGI 應用程式物件，由 :pep:`3333` 定義。"

#: ../../library/wsgiref.rst:308
#, fuzzy
msgid ""
"This function is a small but complete WSGI application that returns a text "
"page containing the message \"Hello world!\" and a list of the key/value "
"pairs provided in the *environ* parameter.  It's useful for verifying that a "
"WSGI server (such as :mod:`wsgiref.simple_server`) is able to run a simple "
"WSGI application correctly."
msgstr ""
"這個函式是一個小而完整的 WSGI 應用程式，它回傳一個包含消息“Hello "
"world!”的文本頁面。以及 *environ* 參數中提供的鍵/值對列表。它對於驗證 WSGI "
"伺服器（例如 wsgiref.simple_server）是否能夠正確運行簡單的 WSGI "
"應用程式很有用。"

#: ../../library/wsgiref.rst:317
#, fuzzy
msgid ""
"Create a :class:`WSGIServer` instance.  *server_address* should be a ``(host,"
"port)`` tuple, and *RequestHandlerClass* should be the subclass of :class:"
"`http.server.BaseHTTPRequestHandler` that will be used to process requests."
msgstr ""
"建立一個 :class:`WSGIServer` 實例。 *server_address* 應該是一個 "
"``(host,port)`` 元組，*RequestHandlerClass* 應該是將用於處理請求的 "
"http.server.BaseHTTPRequestHandler 的子類別。"

#: ../../library/wsgiref.rst:322
#, fuzzy
msgid ""
"You do not normally need to call this constructor, as the :func:"
"`make_server` function can handle all the details for you."
msgstr "您通常不需要呼叫此構造函式，因為 make_server 函式可以為您處理所有細節。"

#: ../../library/wsgiref.rst:325
#, fuzzy
msgid ""
":class:`WSGIServer` is a subclass of :class:`http.server.HTTPServer`, so all "
"of its methods (such as :meth:`serve_forever` and :meth:`handle_request`) "
"are available. :class:`WSGIServer` also provides these WSGI-specific methods:"
msgstr ""
":class:`WSGIServer` 是 :class:`http.server.HTTPServer` "
"的子類別，因此它的所有方法（例如 :meth:`serve_forever` 和 "
":meth:`handle_request`）都可用。 :class:`WSGIServer` 還提供了這些 WSGI "
"特定的方法："

#: ../../library/wsgiref.rst:332
#, fuzzy
msgid ""
"Sets the callable *application* as the WSGI application that will receive "
"requests."
msgstr "將可呼叫的 *application* 設定為將接收請求的 WSGI 應用程式。"

#: ../../library/wsgiref.rst:338
#, fuzzy
msgid "Returns the currently set application callable."
msgstr "回傳當前設定的應用程式可呼叫。"

#: ../../library/wsgiref.rst:340
#, fuzzy
msgid ""
"Normally, however, you do not need to use these additional methods, as :meth:"
"`set_app` is normally called by :func:`make_server`, and the :meth:`get_app` "
"exists mainly for the benefit of request handler instances."
msgstr ""
"然而，通常情況下，您不需要使用這些額外的方法，因為 :meth:`set_app` 通常由 "
":func:`make_server` 呼叫，而 :meth:`get_app` "
"的存在主要是為了請求處理程式實例。"

#: ../../library/wsgiref.rst:347
#, fuzzy
msgid ""
"Create an HTTP handler for the given *request* (i.e. a socket), "
"*client_address* (a ``(host,port)`` tuple), and *server* (:class:"
"`WSGIServer` instance)."
msgstr ""
"為給定的 *request*（即 socket ）、*client_address*（``(host,port)`` 元組）和 "
"*server*（:class:`WSGIServer` 實例）建立 HTTP 處理程式。"

#: ../../library/wsgiref.rst:350
#, fuzzy
msgid ""
"You do not need to create instances of this class directly; they are "
"automatically created as needed by :class:`WSGIServer` objects.  You can, "
"however, subclass this class and supply it as a *handler_class* to the :func:"
"`make_server` function.  Some possibly relevant methods for overriding in "
"subclasses:"
msgstr ""
"您不需要直接建立此類的實例；它們由 WSGIServer 對像根據需要自動建立。但是，"
"您可以子類別化此類並將其作為 *handler_class* 提供給 make_server "
"函式。在子類別中覆蓋的一些可能相關的方法："

#: ../../library/wsgiref.rst:359
#, fuzzy
msgid ""
"Return a :data:`~wsgiref.types.WSGIEnvironment` dictionary for a request.  "
"The default implementation copies the contents of the :class:`WSGIServer` "
"object's :attr:`base_environ` dictionary attribute and then adds various "
"headers derived from the HTTP request.  Each call to this method should "
"return a new dictionary containing all of the relevant CGI environment "
"variables as specified in :pep:`3333`."
msgstr ""
"回傳請求的 :data:`~wsgiref.types.WSGIEnvironment` 字典。預設實作複製 "
":class:`WSGIServer` 物件的 :attr:`base_environ` 字典屬性的內容，然後新增從 "
"HTTP 請求派生的各種標頭。每次呼叫此方法都應回傳一個新字典，其中包含 "
":pep:`3333` 中指定的所有相關 CGI 環境變數。"

#: ../../library/wsgiref.rst:370
#, fuzzy
msgid ""
"Return the object that should be used as the ``wsgi.errors`` stream. The "
"default implementation just returns ``sys.stderr``."
msgstr "回傳應該用作 wsgi.errors 流的物件。預設實作只回傳 ``sys.stderr``。"

#: ../../library/wsgiref.rst:376
#, fuzzy
msgid ""
"Process the HTTP request.  The default implementation creates a handler "
"instance using a :mod:`wsgiref.handlers` class to implement the actual WSGI "
"application interface."
msgstr "處理 HTTP 請求。預設實作使用 wsgiref.handlers "
"類建立一個處理程式實例來實作實際的 WSGI 應用程式介面。"

#: ../../library/wsgiref.rst:382
#, fuzzy
msgid ":mod:`wsgiref.validate` --- WSGI conformance checker"
msgstr ":mod:`wsgiref.validate` --- WSGI 一致性檢查器"

#: ../../library/wsgiref.rst:388
#, fuzzy
msgid ""
"When creating new WSGI application objects, frameworks, servers, or "
"middleware, it can be useful to validate the new code's conformance using :"
"mod:`wsgiref.validate`.  This module provides a function that creates WSGI "
"application objects that validate communications between a WSGI server or "
"gateway and a WSGI application object, to check both sides for protocol "
"conformance."
msgstr ""
"建立新的 WSGI 應用程式物件、框架、伺服器或中間件時，使用 wsgiref.validate "
"驗證新程式碼的一致性可能很有用。此模組提供建立 WSGI 應用程式物件的功能，"
"該物件驗證 WSGI 伺服器或網關與 WSGI "
"應用程式物件之間的通信，以檢查雙方的協定一致性。"

#: ../../library/wsgiref.rst:395
#, fuzzy
msgid ""
"Note that this utility does not guarantee complete :pep:`3333` compliance; "
"an absence of errors from this module does not necessarily mean that errors "
"do not exist.  However, if this module does produce an error, then it is "
"virtually certain that either the server or application is not 100% "
"compliant."
msgstr ""
"請注意，此實用程式不保證完全符合 :pep:`3333` 要求；該模組沒有錯誤並不一定意味"
"著錯誤不存在。但是，如果該模組確實產生了錯誤，"
"那麼幾乎可以肯定伺服器或應用程式不是 100% 相容的。"

#: ../../library/wsgiref.rst:400
#, fuzzy
msgid ""
"This module is based on the :mod:`paste.lint` module from Ian Bicking's "
"\"Python Paste\" library."
msgstr "該模組基於 Ian Bicking 的“Python Paste”庫中的 :mod:`paste.lint` 模組。"

#: ../../library/wsgiref.rst:406
#, fuzzy
msgid ""
"Wrap *application* and return a new WSGI application object.  The returned "
"application will forward all requests to the original *application*, and "
"will check that both the *application* and the server invoking it are "
"conforming to the WSGI specification and to :rfc:`2616`."
msgstr ""
"包裝 *application* 並回傳一個新的 WSGI 應用程式物件。"
"回傳的應用程式會將所有請求轉發給原始 *application*，並將檢查 *application* "
"和呼叫它的伺服器是否符合 WSGI 規範和 :rfc:`2616`。"

#: ../../library/wsgiref.rst:411
#, fuzzy
msgid ""
"Any detected nonconformance results in an :exc:`AssertionError` being "
"raised; note, however, that how these errors are handled is server-"
"dependent.  For example, :mod:`wsgiref.simple_server` and other servers "
"based on :mod:`wsgiref.handlers` (that don't override the error handling "
"methods to do something else) will simply output a message that an error has "
"occurred, and dump the traceback to ``sys.stderr`` or some other error "
"stream."
msgstr ""
"任何檢測到的不一致都會導致 :exc:`AssertionError` "
"被引發；但是請注意，如何處理這些錯誤取決於伺服器。例如，:mod:`wsgiref."
"simple_server` 和其他基於 :mod:`wsgiref.handlers` 的伺服器（不會覆蓋錯誤處理方"
"法來做其他事情）將簡單地輸出一條消息，表明發生了錯誤，並將回溯轉儲到“sys."
"stderr”或其他錯誤流。"

#: ../../library/wsgiref.rst:418
#, fuzzy
msgid ""
"This wrapper may also generate output using the :mod:`warnings` module to "
"indicate behaviors that are questionable but which may not actually be "
"prohibited by :pep:`3333`.  Unless they are suppressed using Python command-"
"line options or the :mod:`warnings` API, any such warnings will be written "
"to ``sys.stderr`` (*not* ``wsgi.errors``, unless they happen to be the same "
"object)."
msgstr ""
"此包裝器還可以使用 :mod:`warnings` 模組生成輸出，"
"以指示有問題但實際上可能並未被 :pep:`3333` 禁止的行為。除非使用 Python "
"命令列選項或 :mod:`warnings` API 抑制它們，否則任何此類警告都將寫入 ``sys."
"stderr``（*不是* ``wsgi.errors``，除非它們碰巧是同一個物件）。"

#: ../../library/wsgiref.rst:450
#, fuzzy
msgid ":mod:`wsgiref.handlers` -- server/gateway base classes"
msgstr ":mod:`wsgiref.handlers` -- 伺服器/網關基底類別"

#: ../../library/wsgiref.rst:456
#, fuzzy
msgid ""
"This module provides base handler classes for implementing WSGI servers and "
"gateways.  These base classes handle most of the work of communicating with "
"a WSGI application, as long as they are given a CGI-like environment, along "
"with input, output, and error streams."
msgstr ""
"此模組提供用於實作 WSGI 伺服器和網關的基本處理程式類。"
"這些基底類別處理大部分與 WSGI 應用程式通信的工作，只要它們被賦予類似 CGI "
"的環境，以及輸入、輸出和錯誤流。"

#: ../../library/wsgiref.rst:464
#, fuzzy
msgid ""
"CGI-based invocation via ``sys.stdin``, ``sys.stdout``, ``sys.stderr`` and "
"``os.environ``.  This is useful when you have a WSGI application and want to "
"run it as a CGI script.  Simply invoke ``CGIHandler().run(app)``, where "
"``app`` is the WSGI application object you wish to invoke."
msgstr ""
"通過“sys.stdin”、“sys.stdout”、“sys.stderr”和“os.environ”進行基於 CGI "
"的呼叫。當您有一個 WSGI 應用程式並希望將其作為 CGI "
"腳本運行時，這很有用。只需呼叫“CGIHandler().run(app)”，其中 ``app``"
"是您希望呼叫的 WSGI 應用程式物件。"

#: ../../library/wsgiref.rst:469
#, fuzzy
msgid ""
"This class is a subclass of :class:`BaseCGIHandler` that sets ``wsgi."
"run_once`` to true, ``wsgi.multithread`` to false, and ``wsgi.multiprocess`` "
"to true, and always uses :mod:`sys` and :mod:`os` to obtain the necessary "
"CGI streams and environment."
msgstr ""
"此類是 BaseCGIHandler 的子類別，它將 ``wsgi.run_once`` 設定為 true，將 ``wsgi"
".multithread`` 設定為 false，並將 ``wsgi.multiprocess`` 設定為 true，"
"並且始終使用 :mod :`sys` 和 :mod:`os` 以獲得必要的 CGI 流和環境。"

#: ../../library/wsgiref.rst:477
#, fuzzy
msgid ""
"A specialized alternative to :class:`CGIHandler`, for use when deploying on "
"Microsoft's IIS web server, without having set the config allowPathInfo "
"option (IIS>=7) or metabase allowPathInfoForScriptMappings (IIS<7)."
msgstr ""
":class:`CGIHandler` 的專用替代品，用於在 Microsoft 的 IIS Web "
"伺服器上部署時使用，無需設定配置 allowPathInfo 選項 (IIS>=7) 或配置資料庫 "
"allowPathInfoForScriptMappings (IIS<7)。"

#: ../../library/wsgiref.rst:481
#, fuzzy
msgid ""
"By default, IIS gives a ``PATH_INFO`` that duplicates the ``SCRIPT_NAME`` at "
"the front, causing problems for WSGI applications that wish to implement "
"routing. This handler strips any such duplicated path."
msgstr ""
"預設情況下，IIS 給出了一個 ``PATH_INFO``，它複製了前面的``SCRIPT_NAME``，"
"導致希望實作路由的 WSGI 應用程式出現問題。此處理程式會去除任何此類重複路徑。"

#: ../../library/wsgiref.rst:485
#, fuzzy
msgid ""
"IIS can be configured to pass the correct ``PATH_INFO``, but this causes "
"another bug where ``PATH_TRANSLATED`` is wrong. Luckily this variable is "
"rarely used and is not guaranteed by WSGI. On IIS<7, though, the setting can "
"only be made on a vhost level, affecting all other script mappings, many of "
"which break when exposed to the ``PATH_TRANSLATED`` bug. For this reason "
"IIS<7 is almost never deployed with the fix (Even IIS7 rarely uses it "
"because there is still no UI for it.)."
msgstr ""
"可以將 IIS 配置為傳遞正確的 ``PATH_INFO``，但這會導致另一個錯誤，其中 "
"``PATH_TRANSLATED`` 是錯誤的。幸運的是，這個變數很少被使用，而且 WSGI "
"不保證。但是，在 IIS<7 上，只能在 vhost 級別進行設定，影響所有其他腳本映射，"
"其中許多腳本映射在遇到 ``PATH_TRANSLATED`` 錯誤時會中斷。出於這個原因，IIS<7 "
"幾乎從未與修復程式一起部署（即使 IIS7 也很少使用它，因為它仍然沒有 UI。）。"

#: ../../library/wsgiref.rst:493
#, fuzzy
msgid ""
"There is no way for CGI code to tell whether the option was set, so a "
"separate handler class is provided.  It is used in the same way as :class:"
"`CGIHandler`, i.e., by calling ``IISCGIHandler().run(app)``, where ``app`` "
"is the WSGI application object you wish to invoke."
msgstr ""
"CGI 程式碼無法判斷該選項是否已設定，因此提供了一個單獨的處理程式類。"
"它的使用方式與 CGIHandler 相同，即通過呼叫 `IISCGIHandler().run(app)``，其中 "
"`app`` 是您希望呼叫的 WSGI 應用程式物件。"

#: ../../library/wsgiref.rst:503
#, fuzzy
msgid ""
"Similar to :class:`CGIHandler`, but instead of using the :mod:`sys` and :mod:"
"`os` modules, the CGI environment and I/O streams are specified explicitly. "
"The *multithread* and *multiprocess* values are used to set the ``wsgi."
"multithread`` and ``wsgi.multiprocess`` flags for any applications run by "
"the handler instance."
msgstr ""
"類似於 :class:`CGIHandler`，但不是使用 :mod:`sys` 和 :mod:`os` 模組，"
"而是明確指定了 CGI 環境和 I/O 流。 *multithread* 和 *multiprocess* "
"值用於為處理程式實例運行的任何應用程式設定 ``wsgi.multithread`` 和 ``wsgi."
"multiprocess`` 旗標。"

#: ../../library/wsgiref.rst:509
#, fuzzy
msgid ""
"This class is a subclass of :class:`SimpleHandler` intended for use with "
"software other than HTTP \"origin servers\".  If you are writing a gateway "
"protocol implementation (such as CGI, FastCGI, SCGI, etc.) that uses a "
"``Status:`` header to send an HTTP status, you probably want to subclass "
"this instead of :class:`SimpleHandler`."
msgstr ""
"此類是 SimpleHandler 的子類別，旨在與 "
"HTTP“原始伺服器”以外的軟件一起使用。如果您正在編寫一個使用“Status:”標頭髮送 "
"HTTP 狀態的網關協定實作（例如 CGI、FastCGI、SCGI 等），"
"您可能希望繼承它而不是 :class:`SimpleHandler` ."

#: ../../library/wsgiref.rst:518
#, fuzzy
msgid ""
"Similar to :class:`BaseCGIHandler`, but designed for use with HTTP origin "
"servers.  If you are writing an HTTP server implementation, you will "
"probably want to subclass this instead of :class:`BaseCGIHandler`."
msgstr ""
"類似於 :class:`BaseCGIHandler`，但設計用於 HTTP 源伺服器。如果您正在編寫一個 "
"HTTP 伺服器實作，您可能希望繼承它而不是 :class:`BaseCGIHandler`。"

#: ../../library/wsgiref.rst:522
#, fuzzy
msgid ""
"This class is a subclass of :class:`BaseHandler`.  It overrides the :meth:"
"`__init__`, :meth:`get_stdin`, :meth:`get_stderr`, :meth:`add_cgi_vars`, :"
"meth:`_write`, and :meth:`_flush` methods to support explicitly setting the "
"environment and streams via the constructor.  The supplied environment and "
"streams are stored in the :attr:`stdin`, :attr:`stdout`, :attr:`stderr`, "
"and :attr:`environ` attributes."
msgstr ""
"這個類是 BaseHandler 的子類別。它覆蓋 :meth:`__init__`、:meth:`get_stdin`、:m"
"eth:`get_stderr`、:meth:`add_cgi_vars`、:meth:`_write` 和 :meth:`_flush` 方法"
"以支援顯式設定通過構造函式的環境和流。提供的環境和流儲存在 :attr:`stdin`、:att"
"r:`stdout`、:attr:`stderr` 和 :attr:`environ` 屬性中。"

#: ../../library/wsgiref.rst:529
#, fuzzy
msgid ""
"The :meth:`~io.BufferedIOBase.write` method of *stdout* should write each "
"chunk in full, like :class:`io.BufferedIOBase`."
msgstr ""
"*stdout* 的 :meth:`~io.BufferedIOBase.write` 方法應該完整地寫入每個塊，如 "
":class:`io.BufferedIOBase`。"

#: ../../library/wsgiref.rst:535
#, fuzzy
msgid ""
"This is an abstract base class for running WSGI applications.  Each instance "
"will handle a single HTTP request, although in principle you could create a "
"subclass that was reusable for multiple requests."
msgstr "這是一個用於運行 WSGI 應用程式的抽象基底類別。每個實例將處理一個 HTTP "
"請求，儘管原則上您可以建立一個可重複用於多個請求的子類別。"

#: ../../library/wsgiref.rst:539
#, fuzzy
msgid ""
":class:`BaseHandler` instances have only one method intended for external "
"use:"
msgstr ":class:`BaseHandler` 實例只有一個供外部使用的方法："

#: ../../library/wsgiref.rst:544
#, fuzzy
msgid "Run the specified WSGI application, *app*."
msgstr "運行指定的 WSGI 應用程式 *app*。"

#: ../../library/wsgiref.rst:546
#, fuzzy
msgid ""
"All of the other :class:`BaseHandler` methods are invoked by this method in "
"the process of running the application, and thus exist primarily to allow "
"customizing the process."
msgstr "所有其他 :class:`BaseHandler` "
"方法都在運行應用程式的過程中由該方法呼叫，因此存在主要是為了允許自定義過程。"

#: ../../library/wsgiref.rst:550
#, fuzzy
msgid "The following methods MUST be overridden in a subclass:"
msgstr "必須在子類別中覆蓋以下方法："

#: ../../library/wsgiref.rst:555
#, fuzzy
msgid ""
"Buffer the bytes *data* for transmission to the client.  It's okay if this "
"method actually transmits the data; :class:`BaseHandler` just separates "
"write and flush operations for greater efficiency when the underlying system "
"actually has such a distinction."
msgstr ""
"緩衝位元組 *data* 以傳輸到客戶端。如果這個方法真的傳輸了資料也沒關係； "
":class:`BaseHandler` "
"只是在底層系統實際上有這樣的區別時將寫入和刷新操作分開以提高效率。"

#: ../../library/wsgiref.rst:563
#, fuzzy
msgid ""
"Force buffered data to be transmitted to the client.  It's okay if this "
"method is a no-op (i.e., if :meth:`_write` actually sends the data)."
msgstr "強制將緩衝資料傳輸到客戶端。如果此方法是空操作（即如果 :meth:`_write` "
"實際發送資料）也沒關係。"

#: ../../library/wsgiref.rst:569
#, fuzzy
msgid ""
"Return an object compatible with :class:`~wsgiref.types.InputStream` "
"suitable for use as the ``wsgi.input`` of the request currently being "
"processed."
msgstr ""
"回傳一個與 :class:`~wsgiref.types.InputStream` "
"相容的物件，適合用作當前正在處理的請求的``wsgi.input``。"

#: ../../library/wsgiref.rst:576
#, fuzzy
msgid ""
"Return an object compatible with :class:`~wsgiref.types.ErrorStream` "
"suitable for use as the ``wsgi.errors`` of the request currently being "
"processed."
msgstr ""
"回傳一個與 :class:`~wsgiref.types.ErrorStream` 相容的物件，"
"適合用作當前正在處理的請求的 ``wsgi.errors``。"

#: ../../library/wsgiref.rst:583
#, fuzzy
msgid ""
"Insert CGI variables for the current request into the :attr:`environ` "
"attribute."
msgstr "將當前請求的 CGI 變數插入 :attr:`environ` 屬性。"

#: ../../library/wsgiref.rst:585
#, fuzzy
msgid ""
"Here are some other methods and attributes you may wish to override. This "
"list is only a summary, however, and does not include every method that can "
"be overridden.  You should consult the docstrings and source code for "
"additional information before attempting to create a customized :class:"
"`BaseHandler` subclass."
msgstr ""
"以下是您可能希望覆蓋的其他一些方法和屬性。但是，此列表只是一個摘要，並不包括"
"所有可以覆蓋的方法。在嘗試建立自定義的 BaseHandler "
"子類別之前，您應該查閱文檔字串和源程式碼以獲取更多資訊。"

#: ../../library/wsgiref.rst:591
#, fuzzy
msgid "Attributes and methods for customizing the WSGI environment:"
msgstr "自定義WSGI環境的屬性和方法："

#: ../../library/wsgiref.rst:596
#, fuzzy
msgid ""
"The value to be used for the ``wsgi.multithread`` environment variable.  It "
"defaults to true in :class:`BaseHandler`, but may have a different default "
"(or be set by the constructor) in the other subclasses."
msgstr ""
"用於 ``wsgi.multithread`` 環境變數的值。它在 :class:`BaseHandler` 中預設為 "
"true，但在其他子類別中可能有不同的預設值（或由構造函式設定）。"

#: ../../library/wsgiref.rst:603
#, fuzzy
msgid ""
"The value to be used for the ``wsgi.multiprocess`` environment variable.  It "
"defaults to true in :class:`BaseHandler`, but may have a different default "
"(or be set by the constructor) in the other subclasses."
msgstr ""
"用於 ``wsgi.multiprocess`` 環境變數的值。它在 :class:`BaseHandler` 中預設為 "
"true，但在其他子類別中可能有不同的預設值（或由構造函式設定）。"

#: ../../library/wsgiref.rst:610
#, fuzzy
msgid ""
"The value to be used for the ``wsgi.run_once`` environment variable.  It "
"defaults to false in :class:`BaseHandler`, but :class:`CGIHandler` sets it "
"to true by default."
msgstr ""
"用於 ``wsgi.run_once`` 環境變數的值。它在 :class:`BaseHandler` 中預設為 "
"false，但 :class:`CGIHandler` 預設將其設定為 true。"

#: ../../library/wsgiref.rst:617
#, fuzzy
msgid ""
"The default environment variables to be included in every request's WSGI "
"environment.  By default, this is a copy of ``os.environ`` at the time that :"
"mod:`wsgiref.handlers` was imported, but subclasses can either create their "
"own at the class or instance level.  Note that the dictionary should be "
"considered read-only, since the default value is shared between multiple "
"classes and instances."
msgstr ""
"要包含在每個請求的 WSGI 環境中的預設環境變數。預設情況下，這是導入 "
":mod:`wsgiref.handlers` 時 ``os.environ`` 的副本，但子類別可以在類或實例級別"
"建立自己的副本。請注意，字典應被視為只讀的，因為預設值在多個類和實例之間共享"
"。"

#: ../../library/wsgiref.rst:627
#, fuzzy
msgid ""
"If the :attr:`origin_server` attribute is set, this attribute's value is "
"used to set the default ``SERVER_SOFTWARE`` WSGI environment variable, and "
"also to set a default ``Server:`` header in HTTP responses.  It is ignored "
"for handlers (such as :class:`BaseCGIHandler` and :class:`CGIHandler`) that "
"are not HTTP origin servers."
msgstr ""
"如果設定了 :attr:`origin_server` 屬性，則該屬性的值用於設定預設的 "
"``SERVER_SOFTWARE`` WSGI 環境變數，還用於在 HTTP 響應中設定預設的 ``Server:``"
" 標頭。對於不是 HTTP 源伺服器的處理程式（例如 :class:`BaseCGIHandler` 和 "
":class:`CGIHandler`）將被忽略。"

#: ../../library/wsgiref.rst:633
#, fuzzy
msgid ""
"The term \"Python\" is replaced with implementation specific term like "
"\"CPython\", \"Jython\" etc."
msgstr "術語 ``Python``被替換為特定於實作的術語，如 ``CPython`` 、 ``Jython``等。"

#: ../../library/wsgiref.rst:639
#, fuzzy
msgid ""
"Return the URL scheme being used for the current request.  The default "
"implementation uses the :func:`guess_scheme` function from :mod:`wsgiref."
"util` to guess whether the scheme should be \"http\" or \"https\", based on "
"the current request's :attr:`environ` variables."
msgstr ""
"回傳用於當前請求的 URL 方案。預設實作使用 :mod:`wsgiref.util` 中的 "
":func:`guess_scheme` 函式根據當前請求的 :attr:`environ` "
"變數猜測方案應該是 ``http``還是 ``https``。"

#: ../../library/wsgiref.rst:647
#, fuzzy
msgid ""
"Set the :attr:`environ` attribute to a fully populated WSGI environment.  "
"The default implementation uses all of the above methods and attributes, "
"plus the :meth:`get_stdin`, :meth:`get_stderr`, and :meth:`add_cgi_vars` "
"methods and the :attr:`wsgi_file_wrapper` attribute.  It also inserts a "
"``SERVER_SOFTWARE`` key if not present, as long as the :attr:`origin_server` "
"attribute is a true value and the :attr:`server_software` attribute is set."
msgstr ""
"將 :attr:`environ` 屬性設定為完全填充的 WSGI 環境。預設實作使用上述所有方法和"
"屬性，加上 :meth:`get_stdin`、:meth:`get_stderr` 和 :meth:`add_cgi_vars` "
"方法以及 :attr:`wsgi_file_wrapper` 屬性。如果不存在，它還會插入一個 "
"``SERVER_SOFTWARE`` 鍵，只要 :attr:`origin_server` 屬性為真值並且 "
":attr:`server_software` 屬性已設定。"

#: ../../library/wsgiref.rst:654
#, fuzzy
msgid "Methods and attributes for customizing exception handling:"
msgstr "自定義例外處理的方法和屬性："

#: ../../library/wsgiref.rst:659
#, fuzzy
msgid ""
"Log the *exc_info* tuple in the server log.  *exc_info* is a ``(type, value, "
"traceback)`` tuple.  The default implementation simply writes the traceback "
"to the request's ``wsgi.errors`` stream and flushes it.  Subclasses can "
"override this method to change the format or retarget the output, mail the "
"traceback to an administrator, or whatever other action may be deemed "
"suitable."
msgstr ""
"在伺服器日誌中記錄 *exc_info* 元組。 *exc_info* 是一個 ``(type, value, "
"traceback)`` 元組。預設實作只是將回溯寫入請求的“wsgi.errors”流並刷新它。子類"
"別可以重寫此方法以更改格式或重新定位輸出、將回溯郵件發送給管理員，或任何其他"
"可能被認為合適的操作。"

#: ../../library/wsgiref.rst:668
#, fuzzy
msgid ""
"The maximum number of frames to include in tracebacks output by the default :"
"meth:`log_exception` method.  If ``None``, all frames are included."
msgstr "預設 :meth:`log_exception` "
"方法輸出的回溯中包含的最大幀數。如果 ``None`` ，則包括所有幀。"

#: ../../library/wsgiref.rst:674
#, fuzzy
msgid ""
"This method is a WSGI application to generate an error page for the user.  "
"It is only invoked if an error occurs before headers are sent to the client."
msgstr "此方法是一個 WSGI 應用程式，用於為使用者生成錯誤頁面。只有在將標頭髮送到客戶"
"端之前發生錯誤時才會呼叫它。"

#: ../../library/wsgiref.rst:677
#, fuzzy
msgid ""
"This method can access the current error using ``sys.exception()``, and "
"should pass that information to *start_response* when calling it (as "
"described in the \"Error Handling\" section of :pep:`3333`)."
msgstr ""
"此方法可以使用 ``sys.exception()`` 訪問當前錯誤，"
"並且應該在呼叫它時將該資訊傳遞給 *start_response*（如 :pep:`3333` "
"的“錯誤處理”部分所述）。"

#: ../../library/wsgiref.rst:681
#, fuzzy
msgid ""
"The default implementation just uses the :attr:`error_status`, :attr:"
"`error_headers`, and :attr:`error_body` attributes to generate an output "
"page.  Subclasses can override this to produce more dynamic error output."
msgstr ""
"預設實作僅使用 :attr:`error_status`、:attr:`error_headers` 和 "
":attr:`error_body` "
"屬性來生成輸出頁面。子類別可以覆蓋它以產生更多動態錯誤輸出。"

#: ../../library/wsgiref.rst:685
#, fuzzy
msgid ""
"Note, however, that it's not recommended from a security perspective to spit "
"out diagnostics to any old user; ideally, you should have to do something "
"special to enable diagnostic output, which is why the default implementation "
"doesn't include any."
msgstr ""
"但是請注意，從安全角度來看，不建議向任何老使用者吐出診斷資訊；理想情況下，您"
"應該必須做一些特殊的事情來啟用診斷輸出，這就是預設實作不包含任何內容的原因。"

#: ../../library/wsgiref.rst:693
#, fuzzy
msgid ""
"The HTTP status used for error responses.  This should be a status string as "
"defined in :pep:`3333`; it defaults to a 500 code and message."
msgstr "用於錯誤響應的 HTTP 狀態。這應該是 :pep:`3333` 中定義的狀態字串；它預設為 "
"500 程式碼和消息。"

#: ../../library/wsgiref.rst:699
#, fuzzy
msgid ""
"The HTTP headers used for error responses.  This should be a list of WSGI "
"response headers (``(name, value)`` tuples), as described in :pep:`3333`.  "
"The default list just sets the content type to ``text/plain``."
msgstr ""
"用於錯誤響應的 HTTP 標頭。這應該是一個 WSGI 響應頭列表（``(name, value)`` "
"元組），如 :pep:`3333` 中所述。預設列表只是將內容型別設定為“text/plain”。"

#: ../../library/wsgiref.rst:706
#, fuzzy
msgid ""
"The error response body.  This should be an HTTP response body bytestring. "
"It defaults to the plain text, \"A server error occurred.  Please contact "
"the administrator.\""
msgstr "錯誤響應主體。這應該是一個 HTTP "
"響應主體位元組串。它預設為純文本，“發生伺服器錯誤。請聯繫管理員。”"

#: ../../library/wsgiref.rst:710
#, fuzzy
msgid ""
"Methods and attributes for :pep:`3333`'s \"Optional Platform-Specific File "
"Handling\" feature:"
msgstr ":pep:`3333` 的“可選平台特定文件處理”功能的方法和屬性："

#: ../../library/wsgiref.rst:716
#, fuzzy
msgid ""
"A ``wsgi.file_wrapper`` factory, compatible with :class:`wsgiref.types."
"FileWrapper`, or ``None``.  The default value of this attribute is the :"
"class:`wsgiref.util.FileWrapper` class."
msgstr ""
"``wsgi.file_wrapper`` 工廠，相容 wsgiref.types.FileWrapper 或 ``None``。"
"此屬性的預設值是 wsgiref.util.FileWrapper 類。"

#: ../../library/wsgiref.rst:723
#, fuzzy
msgid ""
"Override to implement platform-specific file transmission.  This method is "
"called only if the application's return value is an instance of the class "
"specified by the :attr:`wsgi_file_wrapper` attribute.  It should return a "
"true value if it was able to successfully transmit the file, so that the "
"default transmission code will not be executed. The default implementation "
"of this method just returns a false value."
msgstr ""
"覆蓋以實作特定於平台的文件傳輸。僅當應用程式的回傳值是 wsgi_file_wrapper 屬性"
"指定的類的實例時，才會呼叫此方法。如果能夠成功傳輸文件，它應該回傳一個真值，"
"這樣就不會執行預設的傳輸程式碼。此方法的預設實作只回傳一個假值。"

#: ../../library/wsgiref.rst:730
#, fuzzy
msgid "Miscellaneous methods and attributes:"
msgstr "雜項方法和屬性："

#: ../../library/wsgiref.rst:735
#, fuzzy
msgid ""
"This attribute should be set to a true value if the handler's :meth:`_write` "
"and :meth:`_flush` are being used to communicate directly to the client, "
"rather than via a CGI-like gateway protocol that wants the HTTP status in a "
"special ``Status:`` header."
msgstr ""
"如果使用處理程式的 :meth:`_write` 和 :meth:`_flush` 直接與客戶端通信，"
"而不是通過需要 HTTP 狀態的 CGI "
"類網關協定，則應將此屬性設定為真值一個特殊的“狀態：”標題。"

#: ../../library/wsgiref.rst:740
#, fuzzy
msgid ""
"This attribute's default value is true in :class:`BaseHandler`, but false "
"in :class:`BaseCGIHandler` and :class:`CGIHandler`."
msgstr ""
"此屬性的預設值在 :class:`BaseHandler` 中為 true，但在 :class:`BaseCGIHandler`"
" 和 :class:`CGIHandler` 中為 false。"

#: ../../library/wsgiref.rst:746
#, fuzzy
msgid ""
"If :attr:`origin_server` is true, this string attribute is used to set the "
"HTTP version of the response set to the client.  It defaults to ``\"1.0\"``."
msgstr "如果 :attr:`origin_server` 為真，則此字串屬性用於設定響應集的 HTTP "
"版本到客戶端。它預設為``\"1.0\"``。"

#: ../../library/wsgiref.rst:752
#, fuzzy
msgid ""
"Transcode CGI variables from ``os.environ`` to :pep:`3333` \"bytes in "
"unicode\" strings, returning a new dictionary.  This function is used by :"
"class:`CGIHandler` and :class:`IISCGIHandler` in place of directly using "
"``os.environ``, which is not necessarily WSGI-compliant on all platforms and "
"web servers using Python 3 -- specifically, ones where the OS's actual "
"environment is Unicode (i.e. Windows), or ones where the environment is "
"bytes, but the system encoding used by Python to decode it is anything other "
"than ISO-8859-1 (e.g. Unix systems using UTF-8)."
msgstr ""
"將 CGI 變數從 ``os.environ`` 轉碼為 :pep:`3333` “unicode "
"中的位元組”字串，回傳一個新字典。 :class:`CGIHandler` 和 "
":class:`IISCGIHandler` 使用此函式代替直接使用 ``os.environ``，"
"這不一定在所有使用 Python 3 的平台和 Web 伺服器上都符合 WSGI——特別是，"
"操作系統的實際環境是 Unicode（即 Windows），或者環境是位元組的，但是 Python "
"用來解碼它的系統編碼不是 ISO-8859-1（例如使用 UTF-8 的 Unix 系統） ."

#: ../../library/wsgiref.rst:761
#, fuzzy
msgid ""
"If you are implementing a CGI-based handler of your own, you probably want "
"to use this routine instead of just copying values out of ``os.environ`` "
"directly."
msgstr "如果您正在實作自己的基於 CGI 的處理程式，您可能希望使用此例程而不是直接從 "
"``os.environ`` 中復制值。"

#: ../../library/wsgiref.rst:769
#, fuzzy
msgid ":mod:`wsgiref.types` -- WSGI types for static type checking"
msgstr ":mod:`wsgiref.types` -- 用於靜態型別檢查的 WSGI 型別"

#: ../../library/wsgiref.rst:775
#, fuzzy
msgid ""
"This module provides various types for static type checking as described in :"
"pep:`3333`."
msgstr "如 :pep:`3333` 中所述，此模組提供各種用於靜態型別檢查的型別。"

#: ../../library/wsgiref.rst:783
#, fuzzy
msgid ""
"A :class:`typing.Protocol` describing `start_response() <https://peps.python."
"org/pep-3333/#the-start-response-callable>`_ callables (:pep:`3333`)."
msgstr ""
"一個 :class:`typing.Protocol` 描述 `start_response() <https://peps.python."
"org/pep-3333/#the-start-response-callable>`_ callables (:pep:`3333`)。"

#: ../../library/wsgiref.rst:789
#, fuzzy
msgid "A type alias describing a WSGI environment dictionary."
msgstr "描述 WSGI 環境字典的型別別名。"

#: ../../library/wsgiref.rst:793
#, fuzzy
msgid "A type alias describing a WSGI application callable."
msgstr "描述 WSGI 應用程式可呼叫的型別別名。"

#: ../../library/wsgiref.rst:797
#, fuzzy
msgid ""
"A :class:`typing.Protocol` describing a `WSGI Input Stream <https://peps."
"python.org/pep-3333/#input-and-error-streams>`_."
msgstr ""
"描述 `WSGI 輸入流 <https://peps.python.org/pep-3333/#input-and-error-"
"streams>`_ 的 :class:`typing.Protocol`。"

#: ../../library/wsgiref.rst:802
#, fuzzy
msgid ""
"A :class:`typing.Protocol` describing a `WSGI Error Stream <https://peps."
"python.org/pep-3333/#input-and-error-streams>`_."
msgstr ""
"描述 `WSGI 錯誤流 <https://peps.python.org/pep-3333/#input-and-error-"
"streams>`_ 的 :class:`typing.Protocol`。"

#: ../../library/wsgiref.rst:807
#, fuzzy
msgid ""
"A :class:`typing.Protocol` describing a `file wrapper <https://peps.python."
"org/pep-3333/#optional-platform-specific-file-handling>`_. See :class:"
"`wsgiref.util.FileWrapper` for a concrete implementation of this protocol."
msgstr ""
"一個 :class:`typing.Protocol` 描述了一個`file wrapper <https://peps.python."
"org/pep-3333/#optional-platform-specific-file-"
"handling>`_。有關此協定的具體實作，請參閱 wsgiref.util.FileWrapper。"

#: ../../library/wsgiref.rst:814
msgid "Examples"
msgstr "範例"

#: ../../library/wsgiref.rst:816
#, fuzzy
msgid "This is a working \"Hello World\" WSGI application::"
msgstr "這是一個有效的“Hello World”WSGI 應用程式::"

#: ../../library/wsgiref.rst:845
#, fuzzy
msgid ""
"Example of a WSGI application serving the current directory, accept optional "
"directory and port number (default: 8000) on the command line::"
msgstr "為當前目錄提供服務的 WSGI "
"應用程式示例，在命令列上接受可選的目錄和端口號（預設值：8000）::"
