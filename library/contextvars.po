# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-21 00:15+0000\n"
"PO-Revision-Date: 2018-07-15 18:56+0800\n"
"Last-Translator: \n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../library/contextvars.rst:2
#, fuzzy
msgid ":mod:`contextvars` --- Context Variables"
msgstr ":mod:`contextvars` --- 情境變數"

#: ../../library/contextvars.rst:11
#, fuzzy
msgid ""
"This module provides APIs to manage, store, and access context-local state.  "
"The :class:`~contextvars.ContextVar` class is used to declare and work with "
"*Context Variables*.  The :func:`~contextvars.copy_context` function and "
"the :class:`~contextvars.Context` class should be used to manage the current "
"context in asynchronous frameworks."
msgstr ""
"該模組提供 API 來管理、儲存和訪問情境本地狀態。 :class:`~contextvars."
"ContextVar` 類用於聲明和使用*情境變數*。 :func:`~contextvars.copy_context` "
"函式和 :class:`~contextvars.Context` 類應該用於管理非同步框架中的當前情境。"

#: ../../library/contextvars.rst:17
#, fuzzy
msgid ""
"Context managers that have state should use Context Variables instead of :"
"func:`threading.local()` to prevent their state from bleeding to other code "
"unexpectedly, when used in concurrent code."
msgstr ""
"具有狀態的情境管理器應該使用情境變數而不是 :func:`threading.local()` "
"來防止它們的狀態在並發程式碼中使用時意外地滲入其他程式碼。"

#: ../../library/contextvars.rst:21
msgid "See also :pep:`567` for additional details."
msgstr "額外資訊請見 :pep:`567`\\ 。"

#: ../../library/contextvars.rst:27
#, fuzzy
msgid "Context Variables"
msgstr "情境變數"

#: ../../library/contextvars.rst:31
#, fuzzy
msgid "This class is used to declare a new Context Variable, e.g.::"
msgstr "此類用於聲明一個新的情境變數，例如："

#: ../../library/contextvars.rst:35
#, fuzzy
msgid ""
"The required *name* parameter is used for introspection and debug purposes."
msgstr "必需的 *name* 參數用於內省和除錯目的。"

#: ../../library/contextvars.rst:38
#, fuzzy
msgid ""
"The optional keyword-only *default* parameter is returned by :meth:"
"`ContextVar.get` when no value for the variable is found in the current "
"context."
msgstr "當在當前情境中找不到變數值時，可選的僅關鍵字 *default* 參數由 "
":meth:`ContextVar.get` 回傳。"

#: ../../library/contextvars.rst:42
#, fuzzy
msgid ""
"**Important:** Context Variables should be created at the top module level "
"and never in closures.  :class:`Context` objects hold strong references to "
"context variables which prevents context variables from being properly "
"garbage collected."
msgstr ""
"**重要：**情境變數應該在頂層模組級別建立，永遠不要在閉包中建立。 "
":class:`Context` "
"物件持有對情境變數的強引用，這會阻止情境變數被正確地垃圾收集。"

#: ../../library/contextvars.rst:49
#, fuzzy
msgid "The name of the variable.  This is a read-only property."
msgstr "變數的名稱。這是一個只讀屬性。"

#: ../../library/contextvars.rst:55
#, fuzzy
msgid "Return a value for the context variable for the current context."
msgstr "回傳當前情境的情境變數的值。"

#: ../../library/contextvars.rst:57
#, fuzzy
msgid ""
"If there is no value for the variable in the current context, the method "
"will:"
msgstr "如果當前情境中的變數沒有值，該方法將："

#: ../../library/contextvars.rst:60
#, fuzzy
msgid ""
"return the value of the *default* argument of the method, if provided; or"
msgstr "回傳方法的 *default* 參數的值，如果提供的話；或者"

#: ../../library/contextvars.rst:63
#, fuzzy
msgid ""
"return the default value for the context variable, if it was created with "
"one; or"
msgstr "回傳情境變數的預設值，如果它是用一個建立的；或者"

#: ../../library/contextvars.rst:66
#, fuzzy
msgid "raise a :exc:`LookupError`."
msgstr "提出一個 :exc:`LookupError`。"

#: ../../library/contextvars.rst:70
#, fuzzy
msgid ""
"Call to set a new value for the context variable in the current context."
msgstr "呼叫以在當前情境中為情境變數設定新值。"

#: ../../library/contextvars.rst:73
#, fuzzy
msgid ""
"The required *value* argument is the new value for the context variable."
msgstr "必需的 *value* 參數是情境變數的新值。"

#: ../../library/contextvars.rst:76
#, fuzzy
msgid ""
"Returns a :class:`~contextvars.Token` object that can be used to restore the "
"variable to its previous value via the :meth:`ContextVar.reset` method."
msgstr ""
"回傳一個 :class:`~contextvars.Token` 物件，可用於通過 :meth:`ContextVar."
"reset` 方法將變數恢復到其先前的值。"

#: ../../library/contextvars.rst:82
#, fuzzy
msgid ""
"Reset the context variable to the value it had before the :meth:`ContextVar."
"set` that created the *token* was used."
msgstr "將情境變數重置為使用建立 *token* 的 :meth:`ContextVar.set` 之前的值。"

#: ../../library/contextvars.rst:85
msgid "For example::"
msgstr ""
"舉例來說：\n"
"\n"
"::"

#: ../../library/contextvars.rst:99
#, fuzzy
msgid ""
"*Token* objects are returned by the :meth:`ContextVar.set` method. They can "
"be passed to the :meth:`ContextVar.reset` method to revert the value of the "
"variable to what it was before the corresponding *set*."
msgstr ""
"*Token* 物件由 :meth:`ContextVar.set` 方法回傳。它們可以傳遞給 "
":meth:`ContextVar.reset` 方法以將變數的值恢復為相應 *set* 之前的值。"

#: ../../library/contextvars.rst:106
#, fuzzy
msgid ""
"A read-only property.  Points to the :class:`ContextVar` object that created "
"the token."
msgstr "只讀屬性。指向建立令牌的 ContextVar 物件。"

#: ../../library/contextvars.rst:111
#, fuzzy
msgid ""
"A read-only property.  Set to the value the variable had before the :meth:"
"`ContextVar.set` method call that created the token. It points to :attr:"
"`Token.MISSING` if the variable was not set before the call."
msgstr ""
"只讀屬性。設定為變數在建立令牌的 ContextVar.set "
"方法呼叫之前的值。如果在呼叫之前未設定變數，它指向 :attr:`Token.MISSING`。"

#: ../../library/contextvars.rst:118
#, fuzzy
msgid "A marker object used by :attr:`Token.old_value`."
msgstr ":attr:`Token.old_value` 使用的標記物件。"

#: ../../library/contextvars.rst:122
#, fuzzy
msgid "Manual Context Management"
msgstr "手動情境管理"

#: ../../library/contextvars.rst:126
#, fuzzy
msgid "Returns a copy of the current :class:`~contextvars.Context` object."
msgstr "回傳當前 :class:`~contextvars.Context` 物件的副本。"

#: ../../library/contextvars.rst:128
#, fuzzy
msgid ""
"The following snippet gets a copy of the current context and prints all "
"variables and their values that are set in it::"
msgstr "以下程式碼片段獲取當前情境的副本並印出其中設定的所有變數及其值："

#: ../../library/contextvars.rst:134
#, fuzzy
msgid ""
"The function has an O(1) complexity, i.e. works equally fast for contexts "
"with a few context variables and for contexts that have a lot of them."
msgstr "該函式具有 O(1) 複雜度，即對於具有少量情境變數的情境和具有大量情境變數"
"的情境，其工作速度同樣快。"

#: ../../library/contextvars.rst:141
#, fuzzy
msgid "A mapping of :class:`ContextVars <ContextVar>` to their values."
msgstr ":class:`ContextVars <ContextVar>` 到它們的值的映射。"

#: ../../library/contextvars.rst:143
#, fuzzy
msgid ""
"``Context()`` creates an empty context with no values in it. To get a copy "
"of the current context use the :func:`~contextvars.copy_context` function."
msgstr ""
"``Context()`` 建立一個沒有任何值的空情境。要獲取當前情境的副本，請使用 "
":func:`~contextvars.copy_context` 函式。"

#: ../../library/contextvars.rst:147
#, fuzzy
msgid ""
"Every thread will have a different top-level :class:`~contextvars.Context` "
"object. This means that a :class:`ContextVar` object behaves in a similar "
"fashion to :func:`threading.local()` when values are assigned in different "
"threads."
msgstr ""
"每個執行緒都有一個不同的頂級 :class:`~contextvars.Context` "
"物件。這意味著當在不同執行緒中分配值時，:class:`ContextVar` 物件的行為與 "
":func:`threading.local()` 類似。"

#: ../../library/contextvars.rst:152
#, fuzzy
msgid "Context implements the :class:`collections.abc.Mapping` interface."
msgstr "Context 實作了 collections.abc.Mapping 介面。"

#: ../../library/contextvars.rst:156
#, fuzzy
msgid ""
"Execute ``callable(*args, **kwargs)`` code in the context object the *run* "
"method is called on.  Return the result of the execution or propagate an "
"exception if one occurred."
msgstr ""
"在呼叫 *run* 方法的情境對像中執行 ``callable(*args, **kwargs)`` "
"程式碼。回傳執行結果或傳播例外（如果發生）。"

#: ../../library/contextvars.rst:160
#, fuzzy
msgid ""
"Any changes to any context variables that *callable* makes will be contained "
"in the context object::"
msgstr "*callable* 對任何情境變數所做的任何更改都將包含在情境對像中::"

#: ../../library/contextvars.rst:189
#, fuzzy
msgid ""
"The method raises a :exc:`RuntimeError` when called on the same context "
"object from more than one OS thread, or when called recursively."
msgstr "當從多個 OS 執行緒呼叫同一情境物件時，或遞迴呼叫時，該方法會引發 "
":exc:`RuntimeError`。"

#: ../../library/contextvars.rst:195
#, fuzzy
msgid "Return a shallow copy of the context object."
msgstr "回傳情境物件的淺表副本。"

#: ../../library/contextvars.rst:199
#, fuzzy
msgid ""
"Return ``True`` if the *context* has a value for *var* set; return ``False`` "
"otherwise."
msgstr "如果 *context* 具有 *var* set 的值，則回傳 ``True``；否則回傳``False``。"

#: ../../library/contextvars.rst:204
#, fuzzy
msgid ""
"Return the value of the *var* :class:`ContextVar` variable. If the variable "
"is not set in the context object, a :exc:`KeyError` is raised."
msgstr "回傳 *var* :class:`ContextVar` 變數的值。如果未在情境對像中設定變數，"
"則會引發 :exc:`KeyError`。"

#: ../../library/contextvars.rst:210
#, fuzzy
msgid ""
"Return the value for *var* if *var* has the value in the context object.  "
"Return *default* otherwise.  If *default* is not given, return ``None``."
msgstr ""
"如果 *var* 在情境對像中有值，則回傳 *var* 的值。否則回傳 *default*。"
"如果未給出 *default*，則回傳 ``None``。"

#: ../../library/contextvars.rst:216
#, fuzzy
msgid "Return an iterator over the variables stored in the context object."
msgstr "回傳儲存在情境對像中的變數的疊代器。"

#: ../../library/contextvars.rst:221
#, fuzzy
msgid "Return the number of variables set in the context object."
msgstr "回傳情境對像中設定的變數數。"

#: ../../library/contextvars.rst:225
#, fuzzy
msgid "Return a list of all variables in the context object."
msgstr "回傳情境對像中所有變數的列表。"

#: ../../library/contextvars.rst:229
#, fuzzy
msgid "Return a list of all variables' values in the context object."
msgstr "回傳情境對像中所有變數值的列表。"

#: ../../library/contextvars.rst:234
#, fuzzy
msgid ""
"Return a list of 2-tuples containing all variables and their values in the "
"context object."
msgstr "回傳包含情境對像中所有變數及其值的二元組列表。"

#: ../../library/contextvars.rst:239
#, fuzzy
msgid "asyncio support"
msgstr "非同步支援"

#: ../../library/contextvars.rst:241
#, fuzzy
msgid ""
"Context variables are natively supported in :mod:`asyncio` and are ready to "
"be used without any extra configuration.  For example, here is a simple echo "
"server, that uses a context variable to make the address of a remote client "
"available in the Task that handles that client::"
msgstr ""
":mod:`asyncio` 原生支援情境變數，無需任何額外配置即可使用。例如，這是一個簡"
"單的回顯伺服器，它使用情境變數使遠程客戶端的地址在處理該客戶端的任務中可用"
"："
