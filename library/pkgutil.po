# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-25 00:20+0000\n"
"PO-Revision-Date: 2018-05-23 16:07+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/pkgutil.rst:2
#, fuzzy
msgid ":mod:`pkgutil` --- Package extension utility"
msgstr ":mod:`pkgutil` --- 套件擴充工具程式"

#: ../../library/pkgutil.rst:7
msgid "**Source code:** :source:`Lib/pkgutil.py`"
msgstr "**原始碼：**\\ :source:`Lib/pkgutil.py`"

#: ../../library/pkgutil.rst:11
#, fuzzy
msgid ""
"This module provides utilities for the import system, in particular package "
"support."
msgstr "該模組為導入系統提供實用程式，特別是包支援。"

#: ../../library/pkgutil.rst:16
#, fuzzy
msgid "A namedtuple that holds a brief summary of a module's info."
msgstr "一個包含模組資訊的簡短摘要的命名元組。"

#: ../../library/pkgutil.rst:22
#, fuzzy
msgid ""
"Extend the search path for the modules which comprise a package.  Intended "
"use is to place the following code in a package's :file:`__init__.py`::"
msgstr "擴充包含包的模組的搜索路徑。預期用途是將以下程式碼放入包的 :file:`__init__."
"py`::"

#: ../../library/pkgutil.rst:28
#, fuzzy
msgid ""
"For each directory on :data:`sys.path` that has a subdirectory that matches "
"the package name, add the subdirectory to the package's :attr:`__path__`.  "
"This is useful if one wants to distribute different parts of a single "
"logical package as multiple directories."
msgstr ""
"對於 :data:`sys.path` 上具有與包名稱匹配的子目錄的每個目錄，"
"將子目錄新增到包的 "
":attr:`__path__`。如果想要將單個邏輯包的不同部分分發為多個目錄，這將很有用。"

#: ../../library/pkgutil.rst:33
#, fuzzy
msgid ""
"It also looks for :file:`\\*.pkg` files beginning where ``*`` matches the "
"*name* argument.  This feature is similar to :file:`\\*.pth` files (see the :"
"mod:`site` module for more information), except that it doesn't special-case "
"lines starting with ``import``.  A :file:`\\*.pkg` file is trusted at face "
"value: apart from checking for duplicates, all entries found in a :file:`\\*."
"pkg` file are added to the path, regardless of whether they exist on the "
"filesystem.  (This is a feature.)"
msgstr ""
"它還會查找 :file:`\\*.pkg` 文件，其中 ``*`` 與 *name* 參數匹配。此功能類似於 "
":file:`\\*.pth` 文件（有關更多資訊，請參閱 :mod:`site` 模組），除了它不以 "
"``import`` 開頭的特殊行。 :file:`\\*.pkg` "
"文件從表面上看是可信的：除了檢查重複項之外，在 :file:`\\*.pkg` "
"文件中找到的所有條目都會新增到路徑中，無論它們是否存在於文件系統。 "
"（這是一個功能。）"

#: ../../library/pkgutil.rst:41
#, fuzzy
msgid ""
"If the input path is not a list (as is the case for frozen packages) it is "
"returned unchanged.  The input path is not modified; an extended copy is "
"returned.  Items are only appended to the copy at the end."
msgstr "如果輸入路徑不是列表（如冷凍包裹的情況），則回傳不變。輸入路徑沒有修改；回傳"
"擴充副本。項目僅在末尾附加到副本。"

#: ../../library/pkgutil.rst:45
#, fuzzy
msgid ""
"It is assumed that :data:`sys.path` is a sequence.  Items of :data:`sys."
"path` that are not strings referring to existing directories are ignored. "
"Unicode items on :data:`sys.path` that cause errors when used as filenames "
"may cause this function to raise an exception (in line with :func:`os.path."
"isdir` behavior)."
msgstr ""
"假定 :data:`sys.path` 是一個序列。不是引用現有目錄的字串的 :data:`sys.path` "
"項目將被忽略。 :data:`sys.path` 上的 Unicode "
"項在用作文件名時會導致錯誤，可能會導致此函式引發例外（與 :func:`os.path."
"isdir` 行為一致）。"

#: ../../library/pkgutil.rst:54
#, fuzzy
msgid ":pep:`302` Finder that wraps Python's \"classic\" import algorithm."
msgstr ":pep:`302` 包裝 Python 的“經典”導入演算法的查找器。"

#: ../../library/pkgutil.rst:56
#, fuzzy
msgid ""
"If *dirname* is a string, a :pep:`302` finder is created that searches that "
"directory.  If *dirname* is ``None``, a :pep:`302` finder is created that "
"searches the current :data:`sys.path`, plus any modules that are frozen or "
"built-in."
msgstr ""
"如果 *dirname* 是一個字串，則會建立一個 :pep:`302` 查找器來搜索該目錄。如果 "
"*dirname* 為 ``None``，則會建立一個 :pep:`302` 查找器來搜索當前的 :data:`sys."
"path`，以及任何凍結或內建的模組。"

#: ../../library/pkgutil.rst:61
#, fuzzy
msgid ""
"Note that :class:`ImpImporter` does not currently support being used by "
"placement on :data:`sys.meta_path`."
msgstr "請注意 :class:`ImpImporter` 目前不支援通過放置在 :data:`sys.meta_path` "
"上使用。"

#: ../../library/pkgutil.rst:64 ../../library/pkgutil.rst:73
#, fuzzy
msgid ""
"This emulation is no longer needed, as the standard import mechanism is now "
"fully :pep:`302` compliant and available in :mod:`importlib`."
msgstr "不再需要此模擬，因為標準導入機制現在完全符合 :pep:`302` 並在 :mod:`importlib`"
" 中可用。"

#: ../../library/pkgutil.rst:71
#, fuzzy
msgid ""
":term:`Loader <loader>` that wraps Python's \"classic\" import algorithm."
msgstr ":term:`Loader <loader>` 包裝了 Python 的“經典”導入演算法。"

#: ../../library/pkgutil.rst:80
#, fuzzy
msgid "Retrieve a module :term:`loader` for the given *fullname*."
msgstr "檢索給定 *fullname* 的模組 :term:`loader`。"

#: ../../library/pkgutil.rst:82
#, fuzzy
msgid ""
"This is a backwards compatibility wrapper around :func:`importlib.util."
"find_spec` that converts most failures to :exc:`ImportError` and only "
"returns the loader rather than the full :class:`importlib.machinery."
"ModuleSpec`."
msgstr ""
"這是一個圍繞 importlib.util.find_spec 的向後相容性包裝器，"
"它將大多數失敗轉換為 ImportError 並且只回傳加載器而不是完整的 "
"importlib.machinery.ModuleSpec 。"

#: ../../library/pkgutil.rst:87 ../../library/pkgutil.rst:104
#: ../../library/pkgutil.rst:119 ../../library/pkgutil.rst:140
#: ../../library/pkgutil.rst:161 ../../library/pkgutil.rst:200
#, fuzzy
msgid ""
"Updated to be based directly on :mod:`importlib` rather than relying on the "
"package internal :pep:`302` import emulation."
msgstr "更新為直接基於 :mod:`importlib` 而不是依賴包內部 :pep:`302` 導入模擬。"

#: ../../library/pkgutil.rst:91 ../../library/pkgutil.rst:123
msgid "Updated to be based on :pep:`451`"
msgstr "基於 :pep:`451` 來更新"

#: ../../library/pkgutil.rst:96
#, fuzzy
msgid "Retrieve a :term:`finder` for the given *path_item*."
msgstr "檢索給定 *path_item* 的 :term:`finder`。"

#: ../../library/pkgutil.rst:98
#, fuzzy
msgid ""
"The returned finder is cached in :data:`sys.path_importer_cache` if it was "
"newly created by a path hook."
msgstr "如果回傳的查找器是由路徑掛鉤新建立的，則它會快取在 sys.path_importer_cache "
"中。"

#: ../../library/pkgutil.rst:101
#, fuzzy
msgid ""
"The cache (or part of it) can be cleared manually if a rescan of :data:`sys."
"path_hooks` is necessary."
msgstr "如果需要重新掃描 :data:`sys.path_hooks`，可以手動清除快取（或部分快取）。"

#: ../../library/pkgutil.rst:111
#, fuzzy
msgid "Get a :term:`loader` object for *module_or_name*."
msgstr "為 *module_or_name* 獲取一個 :term:`loader` 物件。"

#: ../../library/pkgutil.rst:113
#, fuzzy
msgid ""
"If the module or package is accessible via the normal import mechanism, a "
"wrapper around the relevant part of that machinery is returned.  Returns "
"``None`` if the module cannot be found or imported.  If the named module is "
"not already imported, its containing package (if any) is imported, in order "
"to establish the package ``__path__``."
msgstr ""
"如果可以通過正常的導入機制訪問模組或包，則回傳該機器相關部分的包裝器。如果找"
"不到或無法導入模組，則回傳 ``None`` 。如果命名模組尚未導入，則導入其包含包（如果有"
"），以建立包 ``__path__``。"

#: ../../library/pkgutil.rst:129
#, fuzzy
msgid "Yield :term:`finder` objects for the given module name."
msgstr "為給定的模組名稱生成 :term:`finder` 物件。"

#: ../../library/pkgutil.rst:131
#, fuzzy
msgid ""
"If fullname contains a ``'.'``, the finders will be for the package "
"containing fullname, otherwise they will be all registered top level finders "
"(i.e. those on both :data:`sys.meta_path` and :data:`sys.path_hooks`)."
msgstr ""
"如果 fullname 包含 ``'.'``，查找器將針對包含 fullname "
"的包，否則它們將是所有已註冊的頂級查找器（即那些在 :data:`sys.meta_path` 和 "
":data:`sys 上的查找器.path_hooks`）。"

#: ../../library/pkgutil.rst:135
#, fuzzy
msgid ""
"If the named module is in a package, that package is imported as a side "
"effect of invoking this function."
msgstr "如果命名模組在包中，則該包將作為呼叫此函式的副作用導入。"

#: ../../library/pkgutil.rst:138
#, fuzzy
msgid "If no module name is specified, all top level finders are produced."
msgstr "如果未指定模組名稱，則會生成所有頂級查找器。"

#: ../../library/pkgutil.rst:147
#, fuzzy
msgid ""
"Yields :class:`ModuleInfo` for all submodules on *path*, or, if *path* is "
"``None``, all top-level modules on :data:`sys.path`."
msgstr ""
"為 *path* 上的所有子模組生成 :class:`ModuleInfo`，或者，如果 *path* 為 "
"``None``，則為 :data:`sys.path` 上的所有頂級模組。"

#: ../../library/pkgutil.rst:150 ../../library/pkgutil.rst:171
#, fuzzy
msgid ""
"*path* should be either ``None`` or a list of paths to look for modules in."
msgstr "*path* 應該是 ``None`` 或在其中查找模組的路徑列表。"

#: ../../library/pkgutil.rst:152 ../../library/pkgutil.rst:173
#, fuzzy
msgid ""
"*prefix* is a string to output on the front of every module name on output."
msgstr "*prefix* 是輸出在每個模組名稱前面的字串。"

#: ../../library/pkgutil.rst:156 ../../library/pkgutil.rst:195
#, fuzzy
msgid ""
"Only works for a :term:`finder` which defines an ``iter_modules()`` method. "
"This interface is non-standard, so the module also provides implementations "
"for :class:`importlib.machinery.FileFinder` and :class:`zipimport."
"zipimporter`."
msgstr ""
"僅適用於定義 ``iter_modules()`` 方法的 :term:`finder`。這個介面是非標準的，"
"因此該模組還提供了 importlib.machinery.FileFinder 和 zipimport.zipimporter "
"的實作。"

#: ../../library/pkgutil.rst:168
#, fuzzy
msgid ""
"Yields :class:`ModuleInfo` for all modules recursively on *path*, or, if "
"*path* is ``None``, all accessible modules."
msgstr ""
"在 *path* 上遞迴地為所有模組生成 :class:`ModuleInfo`，或者，如果 *path* 為 "
"``None``，則生成所有可訪問的模組。"

#: ../../library/pkgutil.rst:175
#, fuzzy
msgid ""
"Note that this function must import all *packages* (*not* all modules!) on "
"the given *path*, in order to access the ``__path__`` attribute to find "
"submodules."
msgstr ""
"請注意，此函式必須導入給定 *path* 上的所有 *packages*（*不是*所有模組！），"
"以便訪問 ``__path__`` 屬性以查找子模組。"

#: ../../library/pkgutil.rst:179
#, fuzzy
msgid ""
"*onerror* is a function which gets called with one argument (the name of the "
"package which was being imported) if any exception occurs while trying to "
"import a package.  If no *onerror* function is supplied, :exc:"
"`ImportError`\\s are caught and ignored, while all other exceptions are "
"propagated, terminating the search."
msgstr ""
"*onerror* 是一個函式，如果在嘗試導入包時發生任何例外，該函式將使用一個參數（"
"正在導入的包的名稱）呼叫。如果未提供 *onerror* 函式，則會捕獲並忽略 "
":exc:`ImportError`\\s，同時傳播所有其他例外，從而終止搜索。"

#: ../../library/pkgutil.rst:185
msgid "Examples::"
msgstr ""
"範例：\n"
"\n"
"::"

#: ../../library/pkgutil.rst:207
#, fuzzy
msgid "Get a resource from a package."
msgstr "從包中獲取資源。"

#: ../../library/pkgutil.rst:209
#, fuzzy
msgid ""
"This is a wrapper for the :term:`loader` :meth:`get_data <importlib.abc."
"ResourceLoader.get_data>` API.  The *package* argument should be the name of "
"a package, in standard module format (``foo.bar``).  The *resource* argument "
"should be in the form of a relative filename, using ``/`` as the path "
"separator.  The parent directory name ``..`` is not allowed, and nor is a "
"rooted name (starting with a ``/``)."
msgstr ""
"這是 :term:`loader` :meth:`get_data <importlib.abc.ResourceLoader.get_data>` "
"API 的包裝器。 *package* 參數應該是包的名稱，採用標準模組格式（``foo."
"bar``）。 *resource* 參數應採用相對文件名的形式，使用 ``/``作為路徑分隔符。"
"父目錄名 ``..`` 是不允許的，根名稱也不是（以 ``/`` 開頭）。"

#: ../../library/pkgutil.rst:216
#, fuzzy
msgid ""
"The function returns a binary string that is the contents of the specified "
"resource."
msgstr "該函式回傳一個二進位字串，它是指定資源的內容。"

#: ../../library/pkgutil.rst:219
#, fuzzy
msgid ""
"For packages located in the filesystem, which have already been imported, "
"this is the rough equivalent of::"
msgstr "對於位於文件系統中的已經導入的包，這大致相當於："

#: ../../library/pkgutil.rst:225
#, fuzzy
msgid ""
"If the package cannot be located or loaded, or it uses a :term:`loader` "
"which does not support :meth:`get_data <importlib.abc.ResourceLoader."
"get_data>`, then ``None`` is returned.  In particular, the :term:`loader` "
"for :term:`namespace packages <namespace package>` does not support :meth:"
"`get_data <importlib.abc.ResourceLoader.get_data>`."
msgstr ""
"如果無法定位或加載包，或者它使用不支援 get_data "
"<importlib.abc.ResourceLoader.get_data> 的 :term:`loader`，則回傳 "
"``None``。特別是，命名空間包 <namespace package> 的 loader 不支援 get_data "
"<importlib.abc.ResourceLoader.get_data>。"

#: ../../library/pkgutil.rst:234
#, fuzzy
msgid "Resolve a name to an object."
msgstr "將名稱解析為物件。"

#: ../../library/pkgutil.rst:236
#, fuzzy
msgid ""
"This functionality is used in numerous places in the standard library (see :"
"issue:`12915`) - and equivalent functionality is also in widely used third-"
"party packages such as setuptools, Django and Pyramid."
msgstr ""
"此功能在標準庫中的許多地方使用（請參閱 :issue:`12915`）- "
"等效功能也用於廣泛使用的第三方包，如 setuptools、Django 和 Pyramid。"

#: ../../library/pkgutil.rst:240
#, fuzzy
msgid ""
"It is expected that *name* will be a string in one of the following formats, "
"where W is shorthand for a valid Python identifier and dot stands for a "
"literal period in these pseudo-regexes:"
msgstr "預計 *name* 將是以下格式之一的字串，其中 W 是有效 Python "
"標識符的簡寫，點代表這些偽正則表達式中的文字句點："

#: ../../library/pkgutil.rst:244
msgid "``W(.W)*``"
msgstr "``W(.W)*``"

#: ../../library/pkgutil.rst:245
msgid "``W(.W)*:(W(.W)*)?``"
msgstr "``W(.W)*:(W(.W)*)?``"

#: ../../library/pkgutil.rst:247
#, fuzzy
msgid ""
"The first form is intended for backward compatibility only. It assumes that "
"some part of the dotted name is a package, and the rest is an object "
"somewhere within that package, possibly nested inside other objects. Because "
"the place where the package stops and the object hierarchy starts can't be "
"inferred by inspection, repeated attempts to import must be done with this "
"form."
msgstr ""
"第一種形式僅用於向後相容。它假定帶點的名稱的某些部分是一個包，其餘部分是該包"
"中某處的物件，可能嵌套在其他對像中。由於無法通過檢查推斷包停止的位置和物件層"
"次結構的開始位置，因此必須使用此表單重複嘗試導入。"

#: ../../library/pkgutil.rst:254
#, fuzzy
msgid ""
"In the second form, the caller makes the division point clear through the "
"provision of a single colon: the dotted name to the left of the colon is a "
"package to be imported, and the dotted name to the right is the object "
"hierarchy within that package. Only one import is needed in this form. If it "
"ends with the colon, then a module object is returned."
msgstr ""
"在第二種形式中，呼叫者通過提供單個冒號來明確劃分點：冒號左側的點名是要導入的"
"包，右側的點名是該包內的物件層次結構."
"這種形式只需要一次進口。如果它以冒號結尾，則回傳一個模組物件。"

#: ../../library/pkgutil.rst:260
#, fuzzy
msgid ""
"The function will return an object (which might be a module), or raise one "
"of the following exceptions:"
msgstr "該函式將回傳一個物件（可能是一個模組），或引發以下例外之一："

#: ../../library/pkgutil.rst:263
#, fuzzy
msgid ":exc:`ValueError` -- if *name* isn't in a recognised format."
msgstr ":exc:`ValueError` -- 如果 *name* 不是可識別的格式。"

#: ../../library/pkgutil.rst:265
#, fuzzy
msgid ":exc:`ImportError` -- if an import failed when it shouldn't have."
msgstr ":exc:`ImportError` -- 如果導入在不應該的時候失敗了。"

#: ../../library/pkgutil.rst:267
#, fuzzy
msgid ""
":exc:`AttributeError` -- If a failure occurred when traversing the object "
"hierarchy within the imported package to get to the desired object."
msgstr ":exc:`AttributeError` -- "
"如果在導入包中遍歷物件層次結構以獲取所需物件時發生故障。"
