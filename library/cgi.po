# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-13 00:17+0000\n"
"PO-Revision-Date: 2022-05-22 02:01+0800\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.0.1\n"

#: ../../library/cgi.rst:2
msgid ":mod:`cgi` --- Common Gateway Interface support"
msgstr ":mod:`cgi` --- 通用閘道器介面支援"

#: ../../library/cgi.rst:8
msgid "**Source code:** :source:`Lib/cgi.py`"
msgstr "**原始碼：**\\ :source:`Lib/cgi.py`"

#: ../../library/cgi.rst:27
msgid ""
"The :mod:`cgi` module is deprecated (see :pep:`PEP 594 <594#cgi>` for "
"details and alternatives)."
msgstr ""
":mod:`cgi` 模組 (module) 即將被棄用（詳情與替代方案請見 :pep:`PEP 594 "
"<594#cgi>`\\ ）。"

#: ../../library/cgi.rst:22
#, fuzzy
msgid ""
"The :class:`FieldStorage` class can typically be replaced with :func:`urllib."
"parse.parse_qsl` for ``GET`` and ``HEAD`` requests, and the :mod:`email."
"message` module or `multipart <https://pypi.org/project/multipart/>`_ for "
"``POST`` and ``PUT``. Most :ref:`utility functions <functions-in-cgi-"
"module>` have replacements."
msgstr ""
"對於 ``GET`` 和 ``HEAD`` 請求，FieldStorage 類通常可以替換為 :func:`urllib."
"parse.parse_qsl`，以及 :mod:`email.message` 模組或multipart <https://pypi."
"org/project/multipart/>`_ 用於 ``POST`` 和 ``PUT``。大多數 :ref:`實用函式 "
"<functions-in-cgi-module>` 都有替換。"

#: ../../library/cgi.rst:30
#, fuzzy
msgid "Support module for Common Gateway Interface (CGI) scripts."
msgstr "通用網關介面 (CGI) 腳本的支援模組。"

#: ../../library/cgi.rst:32
#, fuzzy
msgid ""
"This module defines a number of utilities for use by CGI scripts written in "
"Python."
msgstr "該模組定義了許多實用程式，供用 Python 編寫的 CGI 腳本使用。"

#: ../../library/cgi.rst:35
#, fuzzy
msgid ""
"The global variable ``maxlen`` can be set to an integer indicating the "
"maximum size of a POST request. POST requests larger than this size will "
"result in a :exc:`ValueError` being raised during parsing. The default value "
"of this variable is ``0``, meaning the request size is unlimited."
msgstr ""
"全局變數 ``maxlen`` 可以設定為一個整數，指示 POST 請求的最大大小。"
"大於此大小的 POST 請求將導致在解析期間引發 "
":exc:`ValueError`。此變數的預設值為 ``0``，表示請求大小不受限制。"

#: ../../includes/wasm-notavail.rst:3
#, fuzzy
msgid ":ref:`Availability <availability>`: not Emscripten, not WASI."
msgstr ":ref:`Availability <availability>`：不是 Emscripten，不是 WASI。"

#: ../../includes/wasm-notavail.rst:5
#, fuzzy
msgid ""
"This module does not work or is not available on WebAssembly platforms "
"``wasm32-emscripten`` and ``wasm32-wasi``. See :ref:`wasm-availability` for "
"more information."
msgstr ""
"此模組在 WebAssembly 平台 ``wasm32-emscripten`` 和 ``wasm32-wasi`` 上不起作用或不可用"
"。有關更多資訊，請參閱 :ref:`wasm-availability`。"

#: ../../library/cgi.rst:43
msgid "Introduction"
msgstr "簡介"

#: ../../library/cgi.rst:47
#, fuzzy
msgid ""
"A CGI script is invoked by an HTTP server, usually to process user input "
"submitted through an HTML ``<FORM>`` or ``<ISINDEX>`` element."
msgstr "CGI 腳本由 HTTP 伺服器呼叫，通常用於處理通過 HTML ``<FORM>`` 或``<ISINDEX>`` "
"元素提交的使用者輸入。"

#: ../../library/cgi.rst:50
#, fuzzy
msgid ""
"Most often, CGI scripts live in the server's special :file:`cgi-bin` "
"directory. The HTTP server places all sorts of information about the request "
"(such as the client's hostname, the requested URL, the query string, and "
"lots of other goodies) in the script's shell environment, executes the "
"script, and sends the script's output back to the client."
msgstr ""
"大多數情況下，CGI 腳本位於伺服器的特殊 :file:`cgi-bin` 目錄中。 HTTP "
"伺服器在腳本的 shell 環境中放置有關請求的各種資訊（例如客戶端的主機名、"
"請求的 URL、查詢字串和許多其他好東西），執行腳本，並將腳本的輸出發送回客戶。"

#: ../../library/cgi.rst:56
#, fuzzy
msgid ""
"The script's input is connected to the client too, and sometimes the form "
"data is read this way; at other times the form data is passed via the "
"\"query string\" part of the URL.  This module is intended to take care of "
"the different cases and provide a simpler interface to the Python script.  "
"It also provides a number of utilities that help in debugging scripts, and "
"the latest addition is support for file uploads from a form (if your browser "
"supports it)."
msgstr ""
"腳本的輸入也連接到客戶端，有時表單資料也是這樣讀取的；在其他時候，"
"表單資料通過 URL 的“查詢字串”部分傳遞。該模組旨在處理不同的情況，並為 Python "
"腳本提供更簡單的介面。它還提供了許多有助於除錯腳本的實用程式，最新新增的功能"
"是支援從表單上傳文件（如果您的瀏覽器支援的話）。"

#: ../../library/cgi.rst:63
#, fuzzy
msgid ""
"The output of a CGI script should consist of two sections, separated by a "
"blank line.  The first section contains a number of headers, telling the "
"client what kind of data is following.  Python code to generate a minimal "
"header section looks like this::"
msgstr ""
"CGI 腳本的輸出應該由兩部分組成，由一個空行分隔。第一部分包含許多標頭，告訴客"
"戶端后面是什麼型別的資料。生成最小標頭部分的 Python 程式碼如下所示："

#: ../../library/cgi.rst:71
#, fuzzy
msgid ""
"The second section is usually HTML, which allows the client software to "
"display nicely formatted text with header, in-line images, etc. Here's "
"Python code that prints a simple piece of HTML::"
msgstr "第二部分通常是 HTML，它允許客戶端軟件顯示帶有標題、內嵌圖像等格式良好的文本。"
"這是印出一段簡單 HTML 的 Python 程式碼："

#: ../../library/cgi.rst:83
#, fuzzy
msgid "Using the cgi module"
msgstr "使用 cgi 模組"

#: ../../library/cgi.rst:85
#, fuzzy
msgid "Begin by writing ``import cgi``."
msgstr "從寫“import cgi”開始。"

#: ../../library/cgi.rst:87
#, fuzzy
msgid "When you write a new script, consider adding these lines::"
msgstr "當您編寫新腳本時，請考慮新增以下行："

#: ../../library/cgi.rst:92
#, fuzzy
msgid ""
"This activates a special exception handler that will display detailed "
"reports in the web browser if any errors occur.  If you'd rather not show "
"the guts of your program to users of your script, you can have the reports "
"saved to files instead, with code like this::"
msgstr ""
"這將激活一個特殊的例外處理程式，如果發生任何錯誤，它將在 Web 瀏覽器中顯示詳細"
"報告。如果您不想向腳本使用者顯示程式的內容，您可以將報告保存到文件中，程式碼"
"如下："

#: ../../library/cgi.rst:100
#, fuzzy
msgid ""
"It's very helpful to use this feature during script development. The reports "
"produced by :mod:`cgitb` provide information that can save you a lot of time "
"in tracking down bugs.  You can always remove the ``cgitb`` line later when "
"you have tested your script and are confident that it works correctly."
msgstr ""
"在腳本開發期間使用此功能非常有幫助。 :mod:`cgitb` 生成的報告提供的資訊可以為"
"您節省大量跟踪錯誤的時間。當您測試腳本並確信它可以正常工作時，您可以隨時刪除 "
"``cgitb`` 行。"

#: ../../library/cgi.rst:105
#, fuzzy
msgid ""
"To get at submitted form data, use the :class:`FieldStorage` class. If the "
"form contains non-ASCII characters, use the *encoding* keyword parameter set "
"to the value of the encoding defined for the document. It is usually "
"contained in the META tag in the HEAD section of the HTML document or by "
"the :mailheader:`Content-Type` header.  This reads the form contents from "
"the standard input or the environment (depending on the value of various "
"environment variables set according to the CGI standard).  Since it may "
"consume standard input, it should be instantiated only once."
msgstr ""
"要獲取提交的表單資料，請使用 FieldStorage 類。如果表單包含非 ASCII 字元，"
"請使用 *encoding* 關鍵字參數設定為為文檔定義的編碼值。它通常包含在 HTML "
"文檔的 HEAD 部分的 META 標記中，或者包含在 :mailheader:`Content-Type` "
"標頭中。這從標準輸入或環境（取決於根據 CGI 標准設定的各種環境變數的值）讀取表"
"單內容。因為它可能會消耗標準輸入，所以它應該只被實例化一次。"

#: ../../library/cgi.rst:114
#, fuzzy
msgid ""
"The :class:`FieldStorage` instance can be indexed like a Python dictionary. "
"It allows membership testing with the :keyword:`in` operator, and also "
"supports the standard dictionary method :meth:`~dict.keys` and the built-in "
"function :func:`len`.  Form fields containing empty strings are ignored and "
"do not appear in the dictionary; to keep such values, provide a true value "
"for the optional *keep_blank_values* keyword parameter when creating the :"
"class:`FieldStorage` instance."
msgstr ""
":class:`FieldStorage` 實例可以像 Python 字典一樣被索引。它允許使用 "
":keyword:`in` 運算符進行成員資格測試，還支援標準字典方法 :meth:`~dict.keys` "
"和內建函式 "
":func:`len`。包含空字串的表單欄位將被忽略，不會出現在字典中；要保留這些值，"
"請在建立 FieldStorage 實例時為可選的 *keep_blank_values* "
"關鍵字參數提供一個真值。"

#: ../../library/cgi.rst:122
#, fuzzy
msgid ""
"For instance, the following code (which assumes that the :mailheader:"
"`Content-Type` header and blank line have already been printed) checks that "
"the fields ``name`` and ``addr`` are both set to a non-empty string::"
msgstr ""
"例如，下面的程式碼（假定 :mailheader:`Content-Type` 標題和空行已經被印出）"
"檢查欄位 ``name`` 和 ``addr`` 是否都設定為非-空字串::"

#: ../../library/cgi.rst:136
#, fuzzy
msgid ""
"Here the fields, accessed through ``form[key]``, are themselves instances "
"of :class:`FieldStorage` (or :class:`MiniFieldStorage`, depending on the "
"form encoding). The :attr:`~FieldStorage.value` attribute of the instance "
"yields the string value of the field.  The :meth:`~FieldStorage.getvalue` "
"method returns this string value directly; it also accepts an optional "
"second argument as a default to return if the requested key is not present."
msgstr ""
"這裡的欄位，通過 ``form[key]`` 訪問，它們本身是 :class:`FieldStorage`（或 "
":class:`MiniFieldStorage`，取決於表單編碼）的實例。實例的 "
":attr:`~FieldStorage.value` 屬性產生欄位的字串值。 :meth:`~FieldStorage."
"getvalue` 方法直接回傳這個字串值；如果請求的密鑰不存在，它還接受一個可選的第"
"二個參數作為預設回傳值。"

#: ../../library/cgi.rst:143
#, fuzzy
msgid ""
"If the submitted form data contains more than one field with the same name, "
"the object retrieved by ``form[key]`` is not a :class:`FieldStorage` or :"
"class:`MiniFieldStorage` instance but a list of such instances.  Similarly, "
"in this situation, ``form.getvalue(key)`` would return a list of strings. If "
"you expect this possibility (when your HTML form contains multiple fields "
"with the same name), use the :meth:`~FieldStorage.getlist` method, which "
"always returns a list of values (so that you do not need to special-case the "
"single item case).  For example, this code concatenates any number of "
"username fields, separated by commas::"
msgstr ""
"如果提交的表單資料包含多個同名欄位，則 ``form[key]`` 檢索到的對像不是 "
":class:`FieldStorage` 或 :class:`MiniFieldStorage` 實例，而是此類實例的列表."
"同樣，在這種情況下，``form.getvalue(key)`` "
"將回傳一個字串列表。如果您期望這種可能性（當您的 HTML "
"表單包含多個具有相同名稱的欄位時），請使用 :meth:`~FieldStorage.getlist` 方法"
"，它總是回傳一個值列表（這樣您就不需要特例單項情況）。例如，此程式碼連接任意"
"數量的使用者名欄位，以逗號分隔::"

#: ../../library/cgi.rst:156
#, fuzzy
msgid ""
"If a field represents an uploaded file, accessing the value via the :attr:"
"`~FieldStorage.value` attribute or the :meth:`~FieldStorage.getvalue` method "
"reads the entire file in memory as bytes.  This may not be what you want.  "
"You can test for an uploaded file by testing either the :attr:`~FieldStorage."
"filename` attribute or the :attr:`~FieldStorage.file` attribute.  You can "
"then read the data from the :attr:`!file` attribute before it is "
"automatically closed as part of the garbage collection of the :class:"
"`FieldStorage` instance (the :func:`~io.RawIOBase.read` and :func:`~io."
"IOBase.readline` methods will return bytes)::"
msgstr ""
"如果一個欄位表示一個上傳的文件，通過 :attr:`~FieldStorage.value` 屬性或 "
":meth:`~FieldStorage.getvalue` "
"方法訪問該值將讀取記憶體中的整個文件作為位元組。這可能不是你想要的。"
"您可以通過測試 :attr:`~FieldStorage.filename` 屬性或 :attr:`~FieldStorage."
"file` 屬性來測試上傳的文件。然後，您可以在 :attr:`!file` 屬性作為 "
":class:`FieldStorage` 實例的垃圾收集的一部分自動關閉之前讀取資料（:func:`~io."
"RawIOBase.read` 和 :func:`~io.IOBase.readline` 方法將回傳位元組：："

#: ../../library/cgi.rst:176
#, fuzzy
msgid ""
":class:`FieldStorage` objects also support being used in a :keyword:`with` "
"statement, which will automatically close them when done."
msgstr ":class:`FieldStorage` 對像還支援在 :keyword:`with` "
"語句中使用，完成後會自動關閉它們。"

#: ../../library/cgi.rst:179
#, fuzzy
msgid ""
"If an error is encountered when obtaining the contents of an uploaded file "
"(for example, when the user interrupts the form submission by clicking on a "
"Back or Cancel button) the :attr:`~FieldStorage.done` attribute of the "
"object for the field will be set to the value -1."
msgstr ""
"如果在獲取上傳文件的內容時遇到錯誤（例如，當使用者通過單擊回傳或取消按鈕中斷"
"表單提交時）欄位物件的 :attr:`~FieldStorage.done` 屬性將被設定為值-1。"

#: ../../library/cgi.rst:184
#, fuzzy
msgid ""
"The file upload draft standard entertains the possibility of uploading "
"multiple files from one field (using a recursive :mimetype:`multipart/\\*` "
"encoding). When this occurs, the item will be a dictionary-like :class:"
"`FieldStorage` item. This can be determined by testing its :attr:`!type` "
"attribute, which should be :mimetype:`multipart/form-data` (or perhaps "
"another MIME type matching :mimetype:`multipart/\\*`).  In this case, it can "
"be iterated over recursively just like the top-level form object."
msgstr ""
"文件上傳標準草案考慮了從一個欄位上傳多個文件的可能性（使用遞迴 :mimetype:`"
"multipart/\\*` 編碼）。發生這種情況時，該項目將是一個類似字典的 "
":class:`FieldStorage` 項目。這可以通過測試它的 :attr:`!type` 屬性來確定，"
"該屬性應該是 :mimetype:`multipart/form-data`（或者可能是另一個匹配 "
":mimetype:`multipart/\\*` 的 MIME "
"型別）。在這種情況下，它可以像頂級表單對像一樣遞迴疊代。"

#: ../../library/cgi.rst:192
#, fuzzy
msgid ""
"When a form is submitted in the \"old\" format (as the query string or as a "
"single data part of type :mimetype:`application/x-www-form-urlencoded`), the "
"items will actually be instances of the class :class:`MiniFieldStorage`.  In "
"this case, the :attr:`!list`, :attr:`!file`, and :attr:`filename` attributes "
"are always ``None``."
msgstr ""
"當以 ``舊``格式提交表單時（作為查詢字串或作為 :mimetype:`application/x-www-form-"
"urlencoded` 型別的單個資料部分），這些項目實際上是該類的實例 :class:`MiniFieldS"
"torage`。在這種情況下，:attr:`!list`、:attr:`!file` 和 :attr:`filename` "
"屬性始終為 ``None``。"

#: ../../library/cgi.rst:197
#, fuzzy
msgid ""
"A form submitted via POST that also has a query string will contain both :"
"class:`FieldStorage` and :class:`MiniFieldStorage` items."
msgstr ""
"通過 POST 提交的表單也有一個查詢字串，將同時包含 :class:`FieldStorage` 和 "
":class:`MiniFieldStorage` 項。"

#: ../../library/cgi.rst:200
#, fuzzy
msgid ""
"The :attr:`~FieldStorage.file` attribute is automatically closed upon the "
"garbage collection of the creating :class:`FieldStorage` instance."
msgstr ":attr:`~FieldStorage.file` 屬性在建立 :class:`FieldStorage` "
"實例的垃圾回收時自動關閉。"

#: ../../library/cgi.rst:204
#, fuzzy
msgid ""
"Added support for the context management protocol to the :class:"
"`FieldStorage` class."
msgstr "為 FieldStorage 類新增了對上下文管理協定的支援。"

#: ../../library/cgi.rst:210
#, fuzzy
msgid "Higher Level Interface"
msgstr "更高階別的介面"

#: ../../library/cgi.rst:212
#, fuzzy
msgid ""
"The previous section explains how to read CGI form data using the :class:"
"`FieldStorage` class.  This section describes a higher level interface which "
"was added to this class to allow one to do it in a more readable and "
"intuitive way.  The interface doesn't make the techniques described in "
"previous sections obsolete --- they are still useful to process file uploads "
"efficiently, for example."
msgstr ""
"上一節解釋瞭如何使用 FieldStorage 類讀取 CGI 表單資料。本節描述了一個更高階別"
"的介面，該介面被新增到此類中以允許人們以更具可讀性和直觀的方式進行操作。該接"
"口並沒有使前面部分中描述的技術過時——例如，它們對於有效地處理文件上傳仍然很有"
"用。"

#: ../../library/cgi.rst:221
#, fuzzy
msgid ""
"The interface consists of two simple methods. Using the methods you can "
"process form data in a generic way, without the need to worry whether only "
"one or more values were posted under one name."
msgstr "該介面由兩個簡單的方法組成。使用這些方法，您可以以一種通用的方式處理表單資料"
"，而無需擔心是否只有一個或多個值以一個名稱發布。"

#: ../../library/cgi.rst:225
#, fuzzy
msgid ""
"In the previous section, you learned to write following code anytime you "
"expected a user to post more than one value under one name::"
msgstr "在上一節中，您學會了在希望使用者在一個名稱下發布多個值時編寫以下程式碼："

#: ../../library/cgi.rst:234
#, fuzzy
msgid ""
"This situation is common for example when a form contains a group of "
"multiple checkboxes with the same name::"
msgstr "這種情況很常見，例如當一個表單包含一組具有相同名稱的多個複選框時::"

#: ../../library/cgi.rst:240
#, fuzzy
msgid ""
"In most situations, however, there's only one form control with a particular "
"name in a form and then you expect and need only one value associated with "
"this name.  So you write a script containing for example this code::"
msgstr ""
"然而，在大多數情況下，表單中只有一個具有特定名稱的表單控件，因此您期望並且只"
"需要一個與該名稱相關聯的值。所以你寫了一個腳本包含例如這個程式碼::"

#: ../../library/cgi.rst:246
#, fuzzy
msgid ""
"The problem with the code is that you should never expect that a client will "
"provide valid input to your scripts.  For example, if a curious user appends "
"another ``user=foo`` pair to the query string, then the script would crash, "
"because in this situation the ``getvalue(\"user\")`` method call returns a "
"list instead of a string.  Calling the :meth:`~str.upper` method on a list "
"is not valid (since lists do not have a method of this name) and results in "
"an :exc:`AttributeError` exception."
msgstr ""
"程式碼的問題是您永遠不應該期望客戶端會向您的腳本提供有效輸入。例如，"
"如果一個好奇的使用者將另一個 ``user=foo`` "
"對附加到查詢字串，那麼腳本就會崩潰，因為在這種情況下，``getvalue(\"user\")`` "
"方法呼叫回傳一個列表而不是一個字串。在列表上呼叫 :meth:`~str.upper` "
"方法是無效的（因為列表沒有這個名稱的方法）並導致 :exc:`AttributeError` 例外。"

#: ../../library/cgi.rst:254
#, fuzzy
msgid ""
"Therefore, the appropriate way to read form data values was to always use "
"the code which checks whether the obtained value is a single value or a list "
"of values.  That's annoying and leads to less readable scripts."
msgstr "因此，讀取表單資料值的適當方法是始終使用檢查獲取的值是單個值還是值列表的程式"
"碼。這很煩人，並且會導致腳本的可讀性降低。"

#: ../../library/cgi.rst:258
#, fuzzy
msgid ""
"A more convenient approach is to use the methods :meth:`~FieldStorage."
"getfirst` and :meth:`~FieldStorage.getlist` provided by this higher level "
"interface."
msgstr ""
"一種更方便的方法是使用此更高階別介面提供的方法 :meth:`~FieldStorage.getfirst`"
" 和 :meth:`~FieldStorage.getlist`。"

#: ../../library/cgi.rst:264
#, fuzzy
msgid ""
"This method always returns only one value associated with form field *name*. "
"The method returns only the first value in case that more values were posted "
"under such name.  Please note that the order in which the values are "
"received may vary from browser to browser and should not be counted on. "
"[#]_  If no such form field or value exists then the method returns the "
"value specified by the optional parameter *default*.  This parameter "
"defaults to ``None`` if not specified."
msgstr ""
"此方法始終只回傳一個與表單欄位 *name* 關聯的值。該方法僅回傳第一個值，以防在"
"該名稱下發布了更多值。請注意，接收值的順序可能因瀏覽器而異，因此不應依賴於此"
"。 [#]_ 如果不存在這樣的表單欄位或值，則該方法回傳由可選參數 *default* "
"指定的值。如果未指定，此參數預設為 ``None`` 。"

#: ../../library/cgi.rst:275
#, fuzzy
msgid ""
"This method always returns a list of values associated with form field "
"*name*. The method returns an empty list if no such form field or value "
"exists for *name*.  It returns a list consisting of one item if only one "
"such value exists."
msgstr ""
"此方法始終回傳與表單欄位 *name* 關聯的值列表。如果 *name* 不存在這樣的表單欄"
"位或值，則該方法回傳一個空列表。如果只存在一個這樣的值，它會回傳一個由一項組"
"成的列表。"

#: ../../library/cgi.rst:279
#, fuzzy
msgid "Using these methods you can write nice compact code::"
msgstr "使用這些方法，您可以編寫漂亮的緊湊程式碼::"

#: ../../library/cgi.rst:291
msgid "Functions"
msgstr "函式"

#: ../../library/cgi.rst:293
#, fuzzy
msgid ""
"These are useful if you want more control, or if you want to employ some of "
"the algorithms implemented in this module in other circumstances."
msgstr "如果你想要更多的控制，或者如果你想在其他情況下使用這個模組中實作的一些演算法"
"，這些都是有用的。"

#: ../../library/cgi.rst:299
#, fuzzy
msgid ""
"Parse a query in the environment or from a file (the file defaults to ``sys."
"stdin``).  The *keep_blank_values*, *strict_parsing* and *separator* "
"parameters are passed to :func:`urllib.parse.parse_qs` unchanged."
msgstr ""
"在環境中或從文件（文件預設為“sys.stdin”）解析查詢。 "
"*keep_blank_values*、*strict_parsing* 和 *separator* 參數傳遞給 :func:`urllib"
".parse.parse_qs` 不變。"

#: ../../library/cgi.rst:307
#, fuzzy
msgid ""
"This function, like the rest of the :mod:`cgi` module, is deprecated. It can "
"be replaced by calling :func:`urllib.parse.parse_qs` directly on the desired "
"query string (except for ``multipart/form-data`` input, which can be handled "
"as described for :func:`parse_multipart`)."
msgstr ""
"與 :mod:`cgi` 模組的其餘部分一樣，此函式已被棄用。"
"它可以通過直接在所需的查詢字串上呼叫 :func:`urllib.parse.parse_qs` 來替換（"
"除了 ``multipart/form-data`` 輸入，可以按照 :func:`parse_multipart` "
"的描述進行處理） ."

#: ../../library/cgi.rst:312
#, fuzzy
msgid ""
"Parse input of type :mimetype:`multipart/form-data` (for  file uploads). "
"Arguments are *fp* for the input file, *pdict* for a dictionary containing "
"other parameters in the :mailheader:`Content-Type` header, and *encoding*, "
"the request encoding."
msgstr ""
"解析 :mimetype:`multipart/form-data` 型別的輸入（用於文件上傳）。"
"輸入文件的參數是 *fp*，包含 :mailheader:`Content-Type` "
"標頭中其他參數的字典的 *pdict*，以及請求編碼 *encoding*。"

#: ../../library/cgi.rst:317
#, fuzzy
msgid ""
"Returns a dictionary just like :func:`urllib.parse.parse_qs`: keys are the "
"field names, each value is a list of values for that field. For non-file "
"fields, the value is a list of strings."
msgstr ""
"像 :func:`urllib.parse.parse_qs` 一樣回傳字典：鍵是欄位名，每個值是該欄位的值"
"列表。對於非文件欄位，該值是一個字串列表。"

#: ../../library/cgi.rst:321
#, fuzzy
msgid ""
"This is easy to use but not much good if you are expecting megabytes to be "
"uploaded --- in that case, use the :class:`FieldStorage` class instead which "
"is much more flexible."
msgstr "這很容易使用，但如果您希望上傳兆位元組，則效果不佳——在這種情況下，"
"請使用更加靈活的 FieldStorage 類。"

#: ../../library/cgi.rst:325
#, fuzzy
msgid ""
"Added the *encoding* and *errors* parameters.  For non-file fields, the "
"value is now a list of strings, not bytes."
msgstr "新增了 *encoding* 和 *errors* "
"參數。對於非文件欄位，該值現在是字串列表，而不是位元組。"

#: ../../library/cgi.rst:329
msgid "Added the *separator* parameter."
msgstr "新增 *separator* 參數。"

#: ../../library/cgi.rst:337
#, fuzzy
msgid ""
"This function, like the rest of the :mod:`cgi` module, is deprecated. It can "
"be replaced with the functionality in the :mod:`email` package (e.g. :class:"
"`email.message.EmailMessage`/:class:`email.message.Message`) which "
"implements the same MIME RFCs, or with the `multipart <https://pypi.org/"
"project/multipart/>`__ PyPI project."
msgstr ""
"與 :mod:`cgi` 模組的其餘部分一樣，此函式已被棄用。它可以替換為實作相同 MIME "
"RFC 的 :mod:`email` 包中的功能（例如 :class:`email.message."
"EmailMessage`/:class:`email.message.Message`），或者使用`multipart "
"<https://pypi.org/project/multipart/>`__ PyPI 項目。"

#: ../../library/cgi.rst:342
#, fuzzy
msgid ""
"Parse a MIME header (such as :mailheader:`Content-Type`) into a main value "
"and a dictionary of parameters."
msgstr "將 MIME 標頭（例如 :mailheader:`Content-Type`）解析為一個主值和一個參數字典。"

#: ../../library/cgi.rst:355
#, fuzzy
msgid ""
"This function, like the rest of the :mod:`cgi` module, is deprecated. It can "
"be replaced with the functionality in the :mod:`email` package, which "
"implements the same MIME RFCs."
msgstr ""
"與 :mod:`cgi` 模組的其餘部分一樣，此函式已被棄用。它可以用 :mod:`email` "
"包中的功能替換，它實作了相同的 MIME RFC。"

#: ../../library/cgi.rst:350
#, fuzzy
msgid "For example, with :class:`email.message.EmailMessage`::"
msgstr "例如，使用 :class:`email.message.EmailMessage`::"

#: ../../library/cgi.rst:360
#, fuzzy
msgid ""
"Robust test CGI script, usable as main program. Writes minimal HTTP headers "
"and formats all information provided to the script in HTML format."
msgstr "強大的測試 CGI 腳本，可用作主程式。編寫最少的 HTTP "
"標頭並將提供給腳本的所有資訊格式化為 HTML 格式。"

#: ../../library/cgi.rst:366
#, fuzzy
msgid "Format the shell environment in HTML."
msgstr "在 HTML 中格式化 shell 環境。"

#: ../../library/cgi.rst:371
#, fuzzy
msgid "Format a form in HTML."
msgstr "在 HTML 中格式化表單。"

#: ../../library/cgi.rst:376
#, fuzzy
msgid "Format the current directory in HTML."
msgstr "在 HTML 中格式化當前目錄。"

#: ../../library/cgi.rst:381
#, fuzzy
msgid "Print a list of useful (used by CGI) environment variables in HTML."
msgstr "在 HTML 中印出有用的（由 CGI 使用）環境變數列表。"

#: ../../library/cgi.rst:387
#, fuzzy
msgid "Caring about security"
msgstr "關心安全"

#: ../../library/cgi.rst:391
#, fuzzy
msgid ""
"There's one important rule: if you invoke an external program (via :func:`os."
"system`, :func:`os.popen` or other functions with similar functionality), "
"make very sure you don't pass arbitrary strings received from the client to "
"the shell.  This is a well-known security hole whereby clever hackers "
"anywhere on the web can exploit a gullible CGI script to invoke arbitrary "
"shell commands.  Even parts of the URL or field names cannot be trusted, "
"since the request doesn't have to come from your form!"
msgstr ""
"有一個重要的規則：如果你呼叫一個外部程式（通過 :func:`os.system`、:func:`os."
"popen` 或其他具有類似功能的函式），確保你沒有傳遞從客戶端到 "
"shell。這是一個眾所周知的安全漏洞，"
"網絡上任何地方的聰明黑客都可以利用容易上當受騙的 CGI 腳本來呼叫任意 shell "
"命令。甚至部分 URL 或欄位名稱也不可信，因為請求不一定來自您的表單！"

#: ../../library/cgi.rst:399
#, fuzzy
msgid ""
"To be on the safe side, if you must pass a string gotten from a form to a "
"shell command, you should make sure the string contains only alphanumeric "
"characters, dashes, underscores, and periods."
msgstr "為了安全起見，如果您必須將從表單獲取的字串傳遞給 shell "
"命令，則應確保該字串僅包含字母數字字元、破折號、底線和句點。"

#: ../../library/cgi.rst:405
#, fuzzy
msgid "Installing your CGI script on a Unix system"
msgstr "在 Unix 系統上安裝 CGI 腳本"

#: ../../library/cgi.rst:407
#, fuzzy
msgid ""
"Read the documentation for your HTTP server and check with your local system "
"administrator to find the directory where CGI scripts should be installed; "
"usually this is in a directory :file:`cgi-bin` in the server tree."
msgstr ""
"閱讀您的 HTTP 伺服器的文檔並與您的本地系統管理員聯繫以找到應該安裝 CGI "
"腳本的目錄；通常這是在伺服器樹中的目錄 :file:`cgi-bin` 中。"

#: ../../library/cgi.rst:411
#, fuzzy
msgid ""
"Make sure that your script is readable and executable by \"others\"; the "
"Unix file mode should be ``0o755`` octal (use ``chmod 0755 filename``).  "
"Make sure that the first line of the script contains ``#!`` starting in "
"column 1 followed by the pathname of the Python interpreter, for instance::"
msgstr ""
"確保你的腳本對“其他人”是可讀和可執行的； Unix 文件模式應該是 ``0o755`` "
"八進位（使用 ``chmod 0755 文件名``）。確保腳本的第一行包含從第 1 "
"列開始的“#!”，後跟 Python 直譯器的路徑名，例如："

#: ../../library/cgi.rst:418
#, fuzzy
msgid ""
"Make sure the Python interpreter exists and is executable by \"others\"."
msgstr "確保 Python 直譯器存在並且可由“其他人”執行。"

#: ../../library/cgi.rst:420
#, fuzzy
msgid ""
"Make sure that any files your script needs to read or write are readable or "
"writable, respectively, by \"others\" --- their mode should be ``0o644`` for "
"readable and ``0o666`` for writable.  This is because, for security reasons, "
"the HTTP server executes your script as user \"nobody\", without any special "
"privileges.  It can only read (write, execute) files that everybody can read "
"(write, execute).  The current directory at execution time is also different "
"(it is usually the server's cgi-bin directory) and the set of environment "
"variables is also different from what you get when you log in.  In "
"particular, don't count on the shell's search path for executables (:envvar:"
"`PATH`) or the Python module search path (:envvar:`PYTHONPATH`) to be set to "
"anything interesting."
msgstr ""
"確保你的腳本需要讀取或寫入的任何文件分別對“其他人”是可讀或可寫的——"
"它們的模式應該是 ``0o644`` 表示可讀，``0o666`` "
"表示可寫。這是因為，出於安全原因，HTTP 伺服器以使用者 ``nobody``的身份執行您的腳"
"本，沒有任何特殊權限。它只能讀取（寫入、執行）任何人都可以讀取（寫入、執行）"
"的文件。執行時的當前目錄也不一樣（一般是伺服器的cgi-"
"bin目錄），環境變數的設定也和你登錄時得到的不一樣。"
"特別是不要指望shell的搜索路徑將可執行文件 (:envvar:`PATH`) 或 Python "
"模組搜索路徑 (:envvar:`PYTHONPATH`) 設定為任何有趣的內容。"

#: ../../library/cgi.rst:431
#, fuzzy
msgid ""
"If you need to load modules from a directory which is not on Python's "
"default module search path, you can change the path in your script, before "
"importing other modules.  For example::"
msgstr "如果您需要從不在 Python 的預設模組搜索路徑上的目錄加載模組，您可以在導入其他"
"模組之前更改腳本中的路徑。例如：："

#: ../../library/cgi.rst:439
#, fuzzy
msgid "(This way, the directory inserted last will be searched first!)"
msgstr "（這樣最後插入的目錄會被優先搜索！）"

#: ../../library/cgi.rst:441
#, fuzzy
msgid ""
"Instructions for non-Unix systems will vary; check your HTTP server's "
"documentation (it will usually have a section on CGI scripts)."
msgstr "非 Unix 系統的說明會有所不同；檢查您的 HTTP 伺服器的文檔（它通常會有一個關於 "
"CGI 腳本的部分）。"

#: ../../library/cgi.rst:446
#, fuzzy
msgid "Testing your CGI script"
msgstr "測試 CGI 腳本"

#: ../../library/cgi.rst:448
#, fuzzy
msgid ""
"Unfortunately, a CGI script will generally not run when you try it from the "
"command line, and a script that works perfectly from the command line may "
"fail mysteriously when run from the server.  There's one reason why you "
"should still test your script from the command line: if it contains a syntax "
"error, the Python interpreter won't execute it at all, and the HTTP server "
"will most likely send a cryptic error to the client."
msgstr ""
"不幸的是，當您從命令列嘗試時，CGI 腳本通常不會運行，而從命令列運行完美的腳本"
"在從伺服器運行時可能會莫名其妙地失敗。您仍然應該從命令列測試腳本的原因之一是"
"：如果它包含語法錯誤，Python 直譯器根本不會執行它，並且 HTTP "
"伺服器很可能會向客戶端發送一個神秘的錯誤。"

#: ../../library/cgi.rst:455
#, fuzzy
msgid ""
"Assuming your script has no syntax errors, yet it does not work, you have no "
"choice but to read the next section."
msgstr "假設您的腳本沒有語法錯誤，但它不起作用，您別無選擇，只能閱讀下一節。"

#: ../../library/cgi.rst:460
#, fuzzy
msgid "Debugging CGI scripts"
msgstr "除錯 CGI 腳本"

#: ../../library/cgi.rst:464
#, fuzzy
msgid ""
"First of all, check for trivial installation errors --- reading the section "
"above on installing your CGI script carefully can save you a lot of time.  "
"If you wonder whether you have understood the installation procedure "
"correctly, try installing a copy of this module file (:file:`cgi.py`) as a "
"CGI script.  When invoked as a script, the file will dump its environment "
"and the contents of the form in HTML format. Give it the right mode etc., "
"and send it a request.  If it's installed in the standard :file:`cgi-bin` "
"directory, it should be possible to send it a request by entering a URL into "
"your browser of the form:"
msgstr ""
"首先，檢查是否存在細微的安裝錯誤 --- 仔細閱讀上面關於安裝 CGI "
"腳本的部分可以節省您很多時間。如果您想知道自己是否正確理解了安裝過程，"
"請嘗試將此模組文件 (:file:`cgi.py`) 的副本安裝為 CGI 腳本。當作為腳本呼叫時，"
"該文件將以 HTML 格式轉儲其環境和表單內容。給它正確的模式等，並向它發送請求。"
"如果它安裝在標準的 cgi-bin 目錄中，應該可以通過在瀏覽器中輸入以下形式的 URL "
"來向它發送請求："

#: ../../library/cgi.rst:477
#, fuzzy
msgid ""
"If this gives an error of type 404, the server cannot find the script -- "
"perhaps you need to install it in a different directory.  If it gives "
"another error, there's an installation problem that you should fix before "
"trying to go any further.  If you get a nicely formatted listing of the "
"environment and form content (in this example, the fields should be listed "
"as \"addr\" with value \"At Home\" and \"name\" with value \"Joe Blow\"), "
"the :file:`cgi.py` script has been installed correctly.  If you follow the "
"same procedure for your own script, you should now be able to debug it."
msgstr ""
"如果這給出了 404 型別的錯誤，則伺服器找不到該腳本——也許您需要將它安裝在不同的"
"目錄中。如果它給出另一個錯誤，那麼在嘗試進一步操作之前應該解決安裝問題。如果"
"你得到一個格式良好的環境列表和表單內容（在這個例子中，欄位應該被列為 ``addr``，"
"值為“At Home”和 ``name``，值為“Joe Blow”），:file:` cgi.py` 腳本已正確安裝。如果"
"您對自己的腳本執行相同的過程，您現在應該能夠對其進行除錯。"

#: ../../library/cgi.rst:486
#, fuzzy
msgid ""
"The next step could be to call the :mod:`cgi` module's :func:`test` function "
"from your script: replace its main code with the single statement ::"
msgstr "下一步可能是從您的腳本中呼叫 :mod:`cgi` 模組的 :func:`test` 函式："
"將其主要程式碼替換為單個語句 ::"

#: ../../library/cgi.rst:491
#, fuzzy
msgid ""
"This should produce the same results as those gotten from installing the :"
"file:`cgi.py` file itself."
msgstr "這應該產生與安裝 :file:`cgi.py` 文件本身相同的結果。"

#: ../../library/cgi.rst:494
#, fuzzy
msgid ""
"When an ordinary Python script raises an unhandled exception (for whatever "
"reason: of a typo in a module name, a file that can't be opened, etc.), the "
"Python interpreter prints a nice traceback and exits.  While the Python "
"interpreter will still do this when your CGI script raises an exception, "
"most likely the traceback will end up in one of the HTTP server's log files, "
"or be discarded altogether."
msgstr ""
"當普通的 Python 腳本引發未處理的例外時（無論出於何種原因：模組名稱中的拼寫錯"
"誤、無法打開的文件等），Python 直譯器會印出出一個很好的回溯並退出。"
"雖然當您的 CGI 腳本引發例外時 Python 直譯器仍會執行此操作，"
"但回溯很可能最終會出現在 HTTP 伺服器的日誌文件之一中，或者被完全丟棄。"

#: ../../library/cgi.rst:501
#, fuzzy
msgid ""
"Fortunately, once you have managed to get your script to execute *some* "
"code, you can easily send tracebacks to the web browser using the :mod:"
"`cgitb` module. If you haven't done so already, just add the lines::"
msgstr ""
"幸運的是，一旦你設法讓你的腳本執行*一些*程式碼，你就可以使用 :mod:`cgitb` "
"模組輕鬆地將回溯發送到網絡瀏覽器。如果您還沒有這樣做，只需新增以下行："

#: ../../library/cgi.rst:508
#, fuzzy
msgid ""
"to the top of your script.  Then try running it again; when a problem "
"occurs, you should see a detailed report that will likely make apparent the "
"cause of the crash."
msgstr "到你的腳本的頂部。然後嘗試再次運行它；當出現問題時，您應該會看到一份詳細的報"
"告，其中可能會說明崩潰的原因。"

#: ../../library/cgi.rst:512
#, fuzzy
msgid ""
"If you suspect that there may be a problem in importing the :mod:`cgitb` "
"module, you can use an even more robust approach (which only uses built-in "
"modules)::"
msgstr "如果您懷疑導入 :mod:`cgitb` "
"模組時可能存在問題，您可以使用更強大的方法（僅使用內建模組）::"

#: ../../library/cgi.rst:521
#, fuzzy
msgid ""
"This relies on the Python interpreter to print the traceback.  The content "
"type of the output is set to plain text, which disables all HTML "
"processing.  If your script works, the raw HTML will be displayed by your "
"client.  If it raises an exception, most likely after the first two lines "
"have been printed, a traceback will be displayed. Because no HTML "
"interpretation is going on, the traceback will be readable."
msgstr ""
"這依賴於 Python 直譯器來印出回溯。輸出的內容型別設定為純文本，這會禁用所有 "
"HTML 處理。如果您的腳本有效，原始 HTML "
"將由您的客戶端顯示。如果它引發例外，很可能在印出前兩行之後，將顯示回溯。"
"因為沒有進行 HTML 解釋，回溯將是可讀的。"

#: ../../library/cgi.rst:530
#, fuzzy
msgid "Common problems and solutions"
msgstr "常見問題及解決方案"

#: ../../library/cgi.rst:532
#, fuzzy
msgid ""
"Most HTTP servers buffer the output from CGI scripts until the script is "
"completed.  This means that it is not possible to display a progress report "
"on the client's display while the script is running."
msgstr "大多數 HTTP 伺服器緩衝 CGI 腳本的輸出，直到腳本完成。這意味著在腳本運行時不可"
"能在客戶端顯示器上顯示進度報告。"

#: ../../library/cgi.rst:536
#, fuzzy
msgid "Check the installation instructions above."
msgstr "檢查上面的安裝說明。"

#: ../../library/cgi.rst:538
#, fuzzy
msgid ""
"Check the HTTP server's log files.  (``tail -f logfile`` in a separate "
"window may be useful!)"
msgstr "檢查 HTTP 伺服器的日誌文件。 （單獨窗口中的“tail -f logfile”可能會有用！）"

#: ../../library/cgi.rst:541
#, fuzzy
msgid ""
"Always check a script for syntax errors first, by doing something like "
"``python script.py``."
msgstr "始終首先檢查腳本的語法錯誤，方法是執行類似 ``python script.py`` 的操作。"

#: ../../library/cgi.rst:544
#, fuzzy
msgid ""
"If your script does not have any syntax errors, try adding ``import cgitb; "
"cgitb.enable()`` to the top of the script."
msgstr "如果您的腳本沒有任何語法錯誤，請嘗試新增 ``import cgitb; cgitb.enable()`` "
"到腳本的頂部。"

#: ../../library/cgi.rst:547
#, fuzzy
msgid ""
"When invoking external programs, make sure they can be found. Usually, this "
"means using absolute path names --- :envvar:`PATH` is usually not set to a "
"very useful value in a CGI script."
msgstr ""
"呼叫外部程式時，確保可以找到它們。通常，這意味著使用絕對路徑名 --- "
":envvar:`PATH` 在 CGI 腳本中通常不會設定為非常有用的值。"

#: ../../library/cgi.rst:551
#, fuzzy
msgid ""
"When reading or writing external files, make sure they can be read or "
"written by the userid under which your CGI script will be running: this is "
"typically the userid under which the web server is running, or some "
"explicitly specified userid for a web server's ``suexec`` feature."
msgstr ""
"當讀取或寫入外部文件時，請確保它們可以由運行 CGI 腳本的使用者標識讀取或寫入："
"這通常是運行 Web 伺服器的使用者標識，或者為 Web "
"伺服器的一些明確指定的使用者標識`suexec`` 功能。"

#: ../../library/cgi.rst:556
#, fuzzy
msgid ""
"Don't try to give a CGI script a set-uid mode.  This doesn't work on most "
"systems, and is a security liability as well."
msgstr "不要試圖給 CGI 腳本一個 set-uid "
"模式。這在大多數係統上不起作用，並且也是一種安全責任。"

#: ../../library/cgi.rst:560
msgid "Footnotes"
msgstr "註解"

#: ../../library/cgi.rst:561
#, fuzzy
msgid ""
"Note that some recent versions of the HTML specification do state what order "
"the field values should be supplied in, but knowing whether a request was "
"received from a conforming browser, or even from a browser at all, is "
"tedious and error-prone."
msgstr ""
"請注意，一些最新版本的 HTML 規範確實說明了欄位值應按什麼順序提供，但要知道請"
"求是從符合標準的瀏覽器接收到的，還是從瀏覽器接收到的，是乏味且容易出錯的。"
