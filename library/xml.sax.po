# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-20 18:08+0800\n"
"PO-Revision-Date: 2016-11-19 00:36+0000\n"
"Last-Translator: Liang-Bo Wang <me@liang2.tw>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/xml.sax.rst:2
msgid ":mod:`xml.sax` --- Support for SAX2 parsers"
msgstr ":mod:`xml.sax` --- SAX2 剖析器的支援"

#: ../../library/xml.sax.rst:11
msgid "**Source code:** :source:`Lib/xml/sax/__init__.py`"
msgstr "**原始碼：**\\ :source:`Lib/xml/sax/__init__.py`"

#: ../../library/xml.sax.rst:15
#, fuzzy
msgid ""
"The :mod:`xml.sax` package provides a number of modules which implement the "
"Simple API for XML (SAX) interface for Python.  The package itself provides "
"the SAX exceptions and the convenience functions which will be most used by "
"users of the SAX API."
msgstr ""
":mod:`xml.sax` 包提供了許多模組，這些模組為 Python 實作了 Simple API for XML "
"(SAX) 介面。該包本身提供了 SAX 例外和 SAX API 使用者最常使用的便利函式。"

#: ../../library/xml.sax.rst:23
#, fuzzy
msgid ""
"The :mod:`xml.sax` module is not secure against maliciously constructed "
"data.  If you need to parse untrusted or unauthenticated data see :ref:`xml-"
"vulnerabilities`."
msgstr ""
":mod:`xml.sax` "
"模組對惡意構造的資料不安全。如果您需要剖析不受信任或未經身份驗證的資料，"
"請參閱 :ref:`xml-vulnerabilities`。"

#: ../../library/xml.sax.rst:29
#, fuzzy
msgid ""
"The SAX parser no longer processes general external entities by default to "
"increase security. Before, the parser created network connections to fetch "
"remote files or loaded local files from the file system for DTD and "
"entities. The feature can be enabled again with method :meth:`~xml.sax."
"xmlreader.XMLReader.setFeature` on the parser object and argument :data:"
"`~xml.sax.handler.feature_external_ges`."
msgstr ""
"預設情況下，SAX 剖析器不再處理一般外部實體以提高安全性。之前，"
"剖析器建立網絡連接以獲取遠程文件或從文件系統為 DTD 和實體加載本地文件。"
"可以使用剖析器對像上的方法 :meth:`~xml.sax.xmlreader.XMLReader.setFeature` "
"和參數 :data:`~xml.sax.handler.feature_external_ges` 再次啟用該功能。"

#: ../../library/xml.sax.rst:36
#, fuzzy
msgid "The convenience functions are:"
msgstr "方便的功能是："

#: ../../library/xml.sax.rst:41
#, fuzzy
msgid ""
"Create and return a SAX :class:`~xml.sax.xmlreader.XMLReader` object.  The "
"first parser found will be used.  If *parser_list* is provided, it must be "
"an iterable of strings which name modules that have a function named :func:"
"`create_parser`.  Modules listed in *parser_list* will be used before "
"modules in the default list of parsers."
msgstr ""
"建立並回傳一個 SAX :class:`~xml.sax.xmlreader.XMLReader` "
"物件。將使用找到的第一個剖析器。如果提供了 "
"*parser_list*，它必須是一個可疊代的字串，它命名模組具有名為 "
":func:`create_parser` 的函式。 *parser_list* "
"中列出的模組將在預設剖析器列表中的模組之前使用。"

#: ../../library/xml.sax.rst:47
#, fuzzy
msgid "The *parser_list* argument can be any iterable, not just a list."
msgstr "*parser_list* 參數可以是任何可疊代的，而不僅僅是一個列表。"

#: ../../library/xml.sax.rst:53
#, fuzzy
msgid ""
"Create a SAX parser and use it to parse a document.  The document, passed in "
"as *filename_or_stream*, can be a filename or a file object.  The *handler* "
"parameter needs to be a SAX :class:`~handler.ContentHandler` instance.  If "
"*error_handler* is given, it must be a SAX :class:`~handler.ErrorHandler` "
"instance; if omitted,  :exc:`SAXParseException` will be raised on all "
"errors.  There is no return value; all work must be done by the *handler* "
"passed in."
msgstr ""
"建立 SAX 剖析器並使用它來剖析文檔。作為 *filename_or_stream* "
"傳入的文檔可以是文件名或文件物件。 *handler* 參數需要是 SAX :class:`~handler."
"ContentHandler` 實例。如果給出 *error_handler*，它必須是一個 SAX "
":class:`~handler.ErrorHandler` 實例；如果省略，將在所有錯誤上引發 "
":exc:`SAXParseException`。沒有回傳值；所有工作都必須由傳入的 *handler* 完成。"

#: ../../library/xml.sax.rst:64
#, fuzzy
msgid ""
"Similar to :func:`parse`, but parses from a buffer *string* received as a "
"parameter.  *string* must be a :class:`str` instance or a :term:`bytes-like "
"object`."
msgstr ""
"類似於 :func:`parse`，但從作為參數接收的緩衝區 *string* 進行剖析。 *string* "
"必須是 :class:`str` 實例或 :term:`bytes-like object`。"

#: ../../library/xml.sax.rst:68
msgid "Added support of :class:`str` instances."
msgstr "新增 :class:`str` 實例的支援。"

#: ../../library/xml.sax.rst:71
#, fuzzy
msgid ""
"A typical SAX application uses three kinds of objects: readers, handlers and "
"input sources.  \"Reader\" in this context is another term for parser, i.e. "
"some piece of code that reads the bytes or characters from the input source, "
"and produces a sequence of events. The events then get distributed to the "
"handler objects, i.e. the reader invokes a method on the handler.  A SAX "
"application must therefore obtain a reader object, create or open the input "
"sources, create the handlers, and connect these objects all together.  As "
"the final step of preparation, the reader is called to parse the input. "
"During parsing, methods on the handler objects are called based on "
"structural and syntactic events from the input data."
msgstr ""
"典型的 SAX 應用程式使用三種物件：讀取器、處理程式和輸入源。在這種情況下，“閱"
"讀器”是剖析器的另一個術語，即從輸入源讀取位元組或字元並產生一系列事件的一段程"
"式碼。然後事件被分發到處理程式物件，即讀者呼叫處理程式上的方法。因此，SAX 應"
"用程式必須獲得讀取器物件、建立或打開輸入源、建立處理程式並將這些物件連接在一"
"起。作為準備的最後一步，呼叫讀取器來剖析輸入。在剖析期間，處理程式對像上的方"
"法根據來自輸入資料的結構和句法事件被呼叫。"

#: ../../library/xml.sax.rst:82
#, fuzzy
msgid ""
"For these objects, only the interfaces are relevant; they are normally not "
"instantiated by the application itself.  Since Python does not have an "
"explicit notion of interface, they are formally introduced as classes, but "
"applications may use implementations which do not inherit from the provided "
"classes.  The :class:`~xml.sax.xmlreader.InputSource`, :class:`~xml.sax."
"xmlreader.Locator`, :class:`~xml.sax.xmlreader.Attributes`, :class:`~xml.sax."
"xmlreader.AttributesNS`, and :class:`~xml.sax.xmlreader.XMLReader` "
"interfaces are defined in the module :mod:`xml.sax.xmlreader`.  The handler "
"interfaces are defined in :mod:`xml.sax.handler`.  For convenience, :class:"
"`~xml.sax.xmlreader.InputSource` (which is often instantiated directly) and "
"the handler classes are also available from :mod:`xml.sax`.  These "
"interfaces are described below."
msgstr ""
"對於這些物件，只有介面是相關的；它們通常不由應用程式本身實例化。由於 Python "
"沒有明確的介面概念，它們被正式作為類引入，但應用程式可能會使用不從提供的類繼"
"承的實作。 :class:`~xml.sax.xmlreader.InputSource`, :class:`~xml.sax."
"xmlreader.Locator`, :class:`~xml.sax.xmlreader.Attributes`, :class:`~xml。 "
"sax.xmlreader.AttributesNS` 和 :class:`~xml.sax.xmlreader.XMLReader` "
"介面在模組 :mod:`xml.sax.xmlreader` 中定義。處理程式介面在 :mod:`xml.sax."
"handler` 中定義。為方便起見，:class:`~xml.sax.xmlreader."
"InputSource`（通常直接實例化）和處理程式類也可從 :mod:`xml.sax` "
"獲得。這些介面如下所述。"

#: ../../library/xml.sax.rst:95
#, fuzzy
msgid ""
"In addition to these classes, :mod:`xml.sax` provides the following "
"exception classes."
msgstr "除了這些類之外，:mod:`xml.sax` 還提供以下例外類。"

#: ../../library/xml.sax.rst:101
#, fuzzy
msgid ""
"Encapsulate an XML error or warning.  This class can contain basic error or "
"warning information from either the XML parser or the application: it can be "
"subclassed to provide additional functionality or to add localization.  Note "
"that although the handlers defined in the :class:`~xml.sax.handler."
"ErrorHandler` interface receive instances of this exception, it is not "
"required to actually raise the exception --- it is also useful as a "
"container for information."
msgstr ""
"封裝 XML 錯誤或警告。此類可以包含來自 XML 剖析器或應用程式的基本錯誤或警告資"
"訊：它可以被子類別化以提供附加功能或新增本地化。請注意，雖然 :class:`~xml.sax"
".handler.ErrorHandler` 介面中定義的處理程式接收此例外的實例，"
"但實際上並不需要引發例外 --- 它也可用作資訊容器。"

#: ../../library/xml.sax.rst:109
#, fuzzy
msgid ""
"When instantiated, *msg* should be a human-readable description of the "
"error. The optional *exception* parameter, if given, should be ``None`` or "
"an exception that was caught by the parsing code and is being passed along "
"as information."
msgstr ""
"實例化時，*msg* 應該是人類可讀的錯誤描述。可選的 *exception* "
"參數，如果給定的話，應該是 ``None``或被剖析程式碼捕獲並作為資訊傳遞的例外。"

#: ../../library/xml.sax.rst:113
#, fuzzy
msgid "This is the base class for the other SAX exception classes."
msgstr "這是其他 SAX 例外類的基底類別。"

#: ../../library/xml.sax.rst:118
#, fuzzy
msgid ""
"Subclass of :exc:`SAXException` raised on parse errors. Instances of this "
"class are passed to the methods of the SAX :class:`~xml.sax.handler."
"ErrorHandler` interface to provide information about the parse error.  This "
"class supports the SAX :class:`~xml.sax.xmlreader.Locator` interface as well "
"as the :class:`SAXException` interface."
msgstr ""
":exc:`SAXException` 的子類別在剖析錯誤時引發。此類的實例被傳遞給 SAX "
":class:`~xml.sax.handler.ErrorHandler` 介面的方法以提供有關剖析錯誤的資訊。"
"此類支援 SAX :class:`~xml.sax.xmlreader.Locator` 介面以及 "
":class:`SAXException` 介面。"

#: ../../library/xml.sax.rst:128
#, fuzzy
msgid ""
"Subclass of :exc:`SAXException` raised when a SAX :class:`~xml.sax.xmlreader."
"XMLReader` is confronted with an unrecognized feature or property.  SAX "
"applications and extensions may use this class for similar purposes."
msgstr ""
":exc:`SAXException` 的子類別在 SAX :class:`~xml.sax.xmlreader.XMLReader` "
"遇到無法識別的特性或屬性時引發。 SAX 應用程式和擴充可以將此類用於類似目的。"

#: ../../library/xml.sax.rst:136
#, fuzzy
msgid ""
"Subclass of :exc:`SAXException` raised when a SAX :class:`~xml.sax.xmlreader."
"XMLReader` is asked to enable a feature that is not supported, or to set a "
"property to a value that the implementation does not support.  SAX "
"applications and extensions may use this class for similar purposes."
msgstr ""
"當要求 SAX :class:`~xml.sax.xmlreader.XMLReader` "
"啟用不支援的功能，或將屬性設定為實作不支援的值時，引發 SAXException "
"的子類別. SAX 應用程式和擴充可以將此類用於類似目的。"

#: ../../library/xml.sax.rst:148
#, fuzzy
msgid "`SAX: The Simple API for XML <http://www.saxproject.org/>`_"
msgstr "`SAX：XML 的簡單 API <http://www.saxproject.org/>`_"

#: ../../library/xml.sax.rst:146
#, fuzzy
msgid ""
"This site is the focal point for the definition of the SAX API.  It provides "
"a Java implementation and online documentation.  Links to implementations "
"and historical information are also available."
msgstr "該站點是 SAX API 定義的焦點。它提供了 Java "
"實作和在線文檔。還提供了實作和歷史資訊的鏈接。"

#: ../../library/xml.sax.rst:151
msgid "Module :mod:`xml.sax.handler`"
msgstr ":mod:`xml.sax.handler` 模組"

#: ../../library/xml.sax.rst:151
#, fuzzy
msgid "Definitions of the interfaces for application-provided objects."
msgstr "應用程式提供的物件的介面定義。"

#: ../../library/xml.sax.rst:154
msgid "Module :mod:`xml.sax.saxutils`"
msgstr ":mod:`xml.sax.saxutils` 模組"

#: ../../library/xml.sax.rst:154
#, fuzzy
msgid "Convenience functions for use in SAX applications."
msgstr "在 SAX 應用程式中使用的便利函式。"

#: ../../library/xml.sax.rst:156
msgid "Module :mod:`xml.sax.xmlreader`"
msgstr ":mod:`xml.sax.xmlreader` 模組"

#: ../../library/xml.sax.rst:157
#, fuzzy
msgid "Definitions of the interfaces for parser-provided objects."
msgstr "剖析器提供的物件的介面定義。"

#: ../../library/xml.sax.rst:163
msgid "SAXException Objects"
msgstr "SAXException 物件"

#: ../../library/xml.sax.rst:165
#, fuzzy
msgid ""
"The :class:`SAXException` exception class supports the following methods:"
msgstr ":class:`SAXException` 例外類支援以下方法："

#: ../../library/xml.sax.rst:170
#, fuzzy
msgid "Return a human-readable message describing the error condition."
msgstr "回傳描述錯誤情況的人類可讀消息。"

#: ../../library/xml.sax.rst:175
#, fuzzy
msgid "Return an encapsulated exception object, or ``None``."
msgstr "回傳一個封裝的例外物件，或 ``None`` 。"
