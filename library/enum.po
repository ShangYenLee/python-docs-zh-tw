# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-14 00:14+0000\n"
"PO-Revision-Date: 2018-05-23 16:01+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/enum.rst:2
msgid ":mod:`enum` --- Support for enumerations"
msgstr ":mod:`enum` --- 枚舉 (enumerations) 的支援"

#: ../../library/enum.rst:14
msgid "**Source code:** :source:`Lib/enum.py`"
msgstr "**原始碼：**\\ :source:`Lib/enum.py`"

#: ../../library/enum.rst:18
#, fuzzy
msgid ""
"This page contains the API reference information. For tutorial information "
"and discussion of more advanced topics, see"
msgstr "此頁麵包含 API 參考資訊。有關教程資訊和更高階主題的討論，請參閱"

#: ../../library/enum.rst:21
#, fuzzy
msgid ":ref:`Basic Tutorial <enum-basic-tutorial>`"
msgstr ":ref:`基礎教程 <enum-basic-tutorial>`"

#: ../../library/enum.rst:22
#, fuzzy
msgid ":ref:`Advanced Tutorial <enum-advanced-tutorial>`"
msgstr ":ref:`高階教程 <enum-advanced-tutorial>`"

#: ../../library/enum.rst:23
#, fuzzy
msgid ":ref:`Enum Cookbook <enum-cookbook>`"
msgstr ":ref:`枚舉食譜 <enum-cookbook>`"

#: ../../library/enum.rst:27
#, fuzzy
msgid "An enumeration:"
msgstr "枚舉："

#: ../../library/enum.rst:29
#, fuzzy
msgid "is a set of symbolic names (members) bound to unique values"
msgstr "是一組綁定到唯一值的符號名稱（成員）"

#: ../../library/enum.rst:30
#, fuzzy
msgid ""
"can be iterated over to return its canonical (i.e. non-alias) members in "
"definition order"
msgstr "可以疊代以按定義順序回傳其規範（即非別名）成員"

#: ../../library/enum.rst:32
#, fuzzy
msgid "uses *call* syntax to return members by value"
msgstr "使用 *call* 語法按值回傳成員"

#: ../../library/enum.rst:33
#, fuzzy
msgid "uses *index* syntax to return members by name"
msgstr "使用 *index* 語法按名稱回傳成員"

#: ../../library/enum.rst:35
#, fuzzy
msgid ""
"Enumerations are created either by using :keyword:`class` syntax, or by "
"using function-call syntax::"
msgstr "枚舉是通過使用 :keyword:`class` 語法或使用函式呼叫語法建立的："

#: ../../library/enum.rst:49
#, fuzzy
msgid ""
"Even though we can use :keyword:`class` syntax to create Enums, Enums are "
"not normal Python classes.  See :ref:`How are Enums different? <enum-class-"
"differences>` for more details."
msgstr ""
"儘管我們可以使用 :keyword:`class` 語法來建立枚舉，但枚舉不是普通的 Python "
"類。請參閱 :ref:`枚舉有何不同？ <enum-class-differences>` 了解更多詳情。"

#: ../../library/enum.rst:53
#, fuzzy
msgid "Nomenclature"
msgstr "命名法"

#: ../../library/enum.rst:55
#, fuzzy
msgid "The class :class:`!Color` is an *enumeration* (or *enum*)"
msgstr "類 :class:`!Color` 是一個*枚舉*（或*枚舉*）"

#: ../../library/enum.rst:56
#, fuzzy
msgid ""
"The attributes :attr:`!Color.RED`, :attr:`!Color.GREEN`, etc., are "
"*enumeration members* (or *members*) and are functionally constants."
msgstr "屬性 :attr:`!Color.RED`、:attr:`!Color.GREEN` "
"等是*枚舉成員*（或*成員*）並且在功能上是常數。"

#: ../../library/enum.rst:58
#, fuzzy
msgid ""
"The enum members have *names* and *values* (the name of :attr:`!Color.RED` "
"is ``RED``, the value of :attr:`!Color.BLUE` is ``3``, etc.)"
msgstr ""
"枚舉成員有 *names* 和 *values*（:attr:`!Color.RED` 的名稱是 "
"``RED``，:attr:`!Color.BLUE` 的值是 ``3``， ETC。）"

#: ../../library/enum.rst:65
msgid "Module Contents"
msgstr "模組內容"

#: ../../library/enum.rst:67
msgid ":class:`EnumType`"
msgstr ":class:`EnumType`"

#: ../../library/enum.rst:69
#, fuzzy
msgid "The ``type`` for Enum and its subclasses."
msgstr "枚舉及其子類別的“型別”。"

#: ../../library/enum.rst:71
msgid ":class:`Enum`"
msgstr ":class:`Enum`"

#: ../../library/enum.rst:73
#, fuzzy
msgid "Base class for creating enumerated constants."
msgstr "用於建立枚舉常數的基底類別。"

#: ../../library/enum.rst:75
msgid ":class:`IntEnum`"
msgstr ":class:`IntEnum`"

#: ../../library/enum.rst:77
#, fuzzy
msgid ""
"Base class for creating enumerated constants that are also subclasses of :"
"class:`int`. (`Notes`_)"
msgstr "用於建立枚舉常數的基底類別，這些常數也是 int 的子類別。 （`註釋`_）"

#: ../../library/enum.rst:80
msgid ":class:`StrEnum`"
msgstr ":class:`StrEnum`"

#: ../../library/enum.rst:82
#, fuzzy
msgid ""
"Base class for creating enumerated constants that are also subclasses of :"
"class:`str`. (`Notes`_)"
msgstr "用於建立枚舉常數的基底類別，這些常數也是 str 的子類別。 （`註釋`_）"

#: ../../library/enum.rst:85
msgid ":class:`Flag`"
msgstr ":class:`Flag`"

#: ../../library/enum.rst:87
#, fuzzy
msgid ""
"Base class for creating enumerated constants that can be combined using the "
"bitwise operations without losing their :class:`Flag` membership."
msgstr "用於建立枚舉常數的基底類別，這些常數可以使用按位運算進行組合而不會丟失其 "
":class:`Flag` 成員資格。"

#: ../../library/enum.rst:90
msgid ":class:`IntFlag`"
msgstr ":class:`IntFlag`"

#: ../../library/enum.rst:92
#, fuzzy
msgid ""
"Base class for creating enumerated constants that can be combined using the "
"bitwise operators without losing their :class:`IntFlag` membership. :class:"
"`IntFlag` members are also subclasses of :class:`int`. (`Notes`_)"
msgstr ""
"用於建立枚舉常數的基底類別，這些常數可以使用按位運算符組合而不會丟失其 "
"IntFlag 成員資格。 :class:`IntFlag` 成員也是 :class:`int` 的子類別。 "
"（`註釋`_）"

#: ../../library/enum.rst:96
msgid ":class:`ReprEnum`"
msgstr ":class:`ReprEnum`"

#: ../../library/enum.rst:98
#, fuzzy
msgid ""
"Used by :class:`IntEnum`, :class:`StrEnum`, and :class:`IntFlag` to keep "
"the :class:`str() <str>` of the mixed-in type."
msgstr ""
"由 :class:`IntEnum`、:class:`StrEnum` 和 :class:`IntFlag` "
"用來保持混合型別的 :class:`str() <str>`。"

#: ../../library/enum.rst:101
msgid ":class:`EnumCheck`"
msgstr ":class:`EnumCheck`"

#: ../../library/enum.rst:103
#, fuzzy
msgid ""
"An enumeration with the values ``CONTINUOUS``, ``NAMED_FLAGS``, and "
"``UNIQUE``, for use with :func:`verify` to ensure various constraints are "
"met by a given enumeration."
msgstr ""
"具有值 ``CONTINUOUS``、“NAMED_FLAGS”和 ``UNIQUE``的枚舉，用於 :func:`verify` "
"以確保給定枚舉滿足各種約束。"

#: ../../library/enum.rst:107
msgid ":class:`FlagBoundary`"
msgstr ":class:`FlagBoundary`"

#: ../../library/enum.rst:109
#, fuzzy
msgid ""
"An enumeration with the values ``STRICT``, ``CONFORM``, ``EJECT``, and "
"``KEEP`` which allows for more fine-grained control over how invalid values "
"are dealt with in an enumeration."
msgstr "具有值 ``STRICT``、 ``CONFORM`` 、 ``EJECT``和 ``KEEP``的枚舉，允許對枚舉中無效值的處理方"
"式進行更細粒度的控制。"

#: ../../library/enum.rst:113
msgid ":class:`auto`"
msgstr ":class:`auto`"

#: ../../library/enum.rst:115
#, fuzzy
msgid ""
"Instances are replaced with an appropriate value for Enum members. :class:"
"`StrEnum` defaults to the lower-cased version of the member name, while "
"other Enums default to 1 and increase from there."
msgstr "實例被替換為枚舉成員的適當值。 :class:`StrEnum` 預設為成員名稱的小寫版本，"
"而其他枚舉預設為 1 並從那裡增加。"

#: ../../library/enum.rst:119
msgid ":func:`~enum.property`"
msgstr ":func:`~enum.property`"

#: ../../library/enum.rst:121
#, fuzzy
msgid ""
"Allows :class:`Enum` members to have attributes without conflicting with "
"member names."
msgstr "允許 :class:`Enum` 成員擁有不與成員名稱衝突的屬性。"

#: ../../library/enum.rst:124
msgid ":func:`unique`"
msgstr ":func:`unique`"

#: ../../library/enum.rst:126
#, fuzzy
msgid ""
"Enum class decorator that ensures only one name is bound to any one value."
msgstr "確保只有一個名稱綁定到任何一個值的枚舉類裝飾器。"

#: ../../library/enum.rst:128
msgid ":func:`verify`"
msgstr ":func:`verify`"

#: ../../library/enum.rst:130
#, fuzzy
msgid ""
"Enum class decorator that checks user-selectable constraints on an "
"enumeration."
msgstr "檢查枚舉的使用者可選擇約束的枚舉類裝飾器。"

#: ../../library/enum.rst:133
msgid ":func:`member`"
msgstr ":func:`member`"

#: ../../library/enum.rst:135
#, fuzzy
msgid "Make ``obj`` a member.  Can be used as a decorator."
msgstr "使 ``obj`` 成為成員。可以用作裝飾器。"

#: ../../library/enum.rst:137
msgid ":func:`nonmember`"
msgstr ":func:`nonmember`"

#: ../../library/enum.rst:139
#, fuzzy
msgid "Do not make ``obj`` a member.  Can be used as a decorator."
msgstr "不要讓 ``obj`` 成為成員。可以用作裝飾器。"

#: ../../library/enum.rst:141
msgid ":func:`global_enum`"
msgstr ":func:`global_enum`"

#: ../../library/enum.rst:143
#, fuzzy
msgid ""
"Modify the :class:`str() <str>` and :func:`repr` of an enum to show its "
"members as belonging to the module instead of its class, and export the enum "
"members to the global namespace."
msgstr ""
"修改枚舉的 :class:`str() <str>` 和 :func:`repr` "
"以將其成員顯示為屬於模組而不是其類，並將枚舉成員導出到全局命名空間。"

#: ../../library/enum.rst:147
msgid ":func:`show_flag_values`"
msgstr ":func:`show_flag_values`"

#: ../../library/enum.rst:149
#, fuzzy
msgid "Return a list of all power-of-two integers contained in a flag."
msgstr "回傳旗標中包含的所有二次冪整數的列表。"

#: ../../library/enum.rst:152
msgid "``Flag``, ``IntFlag``, ``auto``"
msgstr "``Flag``, ``IntFlag``, ``auto``"

#: ../../library/enum.rst:153
msgid ""
"``StrEnum``, ``EnumCheck``, ``ReprEnum``, ``FlagBoundary``, ``property``, "
"``member``, ``nonmember``, ``global_enum``, ``show_flag_values``"
msgstr ""
"``StrEnum``, ``EnumCheck``, ``ReprEnum``, ``FlagBoundary``, ``property``, "
"``member``, ``nonmember``, ``global_enum``, ``show_flag_values``"

#: ../../library/enum.rst:158
#, fuzzy
msgid "Data Types"
msgstr "資料型別"

#: ../../library/enum.rst:163
#, fuzzy
msgid ""
"*EnumType* is the :term:`metaclass` for *enum* enumerations.  It is possible "
"to subclass *EnumType* -- see :ref:`Subclassing EnumType <enumtype-"
"examples>` for details."
msgstr ""
"*EnumType* 是 *enum* 枚舉的 :term:`metaclass`。可以對 *EnumType* "
"進行子類別化——有關詳細資訊，請參閱 :ref:`Subclassing EnumType <enumtype-"
"examples>`。"

#: ../../library/enum.rst:167
#, fuzzy
msgid ""
"*EnumType* is responsible for setting the correct :meth:`!__repr__`, :meth:`!"
"__str__`, :meth:`!__format__`, and :meth:`!__reduce__` methods on the final "
"*enum*, as well as creating the enum members, properly handling duplicates, "
"providing iteration over the enum class, etc."
msgstr ""
"*EnumType* 負責在最終的 *enum* "
"上設定正確的 :meth:`!__repr__`、:meth:`!__str__`、:meth:`!__format__` "
"和 :meth:`!__reduce__` "
"方法，如以及建立枚舉成員、正確處理重複項、提供枚舉類的疊代等。"

#: ../../library/enum.rst:174
#, fuzzy
msgid "This method is called in two different ways:"
msgstr "此方法以兩種不同的方式呼叫："

#: ../../library/enum.rst:176
#, fuzzy
msgid "to look up an existing member:"
msgstr "查找現有成員："

#: ../../library/enum.rst:0
msgid "cls"
msgstr "cls"

#: ../../library/enum.rst:178 ../../library/enum.rst:184
#, fuzzy
msgid "The enum class being called."
msgstr "被呼叫的枚舉類。"

#: ../../library/enum.rst:0
#, fuzzy
msgid "value"
msgstr "價值"

#: ../../library/enum.rst:179
#, fuzzy
msgid "The value to lookup."
msgstr "要查找的值。"

#: ../../library/enum.rst:181
#, fuzzy
msgid ""
"to use the ``cls`` enum to create a new enum (only if the existing enum does "
"not have any members):"
msgstr "使用 ``cls`` 枚舉建立新枚舉（僅當現有枚舉沒有任何成員時）："

#: ../../library/enum.rst:185
#, fuzzy
msgid "The name of the new Enum to create."
msgstr "要建立的新枚舉的名稱。"

#: ../../library/enum.rst:0
#, fuzzy
msgid "names"
msgstr "名字"

#: ../../library/enum.rst:186
#, fuzzy
msgid "The names/values of the members for the new Enum."
msgstr "新枚舉成員的名稱/值。"

#: ../../library/enum.rst:0
msgid "module"
msgstr "模組"

#: ../../library/enum.rst:187
#, fuzzy
msgid "The name of the module the new Enum is created in."
msgstr "在其中建立新枚舉的模組的名稱。"

#: ../../library/enum.rst:0
#, fuzzy
msgid "qualname"
msgstr "質量名稱"

#: ../../library/enum.rst:188
#, fuzzy
msgid "The actual location in the module where this Enum can be found."
msgstr "可以找到此枚舉的模組中的實際位置。"

#: ../../library/enum.rst:0
#, fuzzy
msgid "type"
msgstr "型別"

#: ../../library/enum.rst:189
#, fuzzy
msgid "A mix-in type for the new Enum."
msgstr "新枚舉的混合型別。"

#: ../../library/enum.rst:0
#, fuzzy
msgid "start"
msgstr "開始"

#: ../../library/enum.rst:190
#, fuzzy
msgid "The first integer value for the Enum (used by :class:`auto`)."
msgstr "枚舉的第一個整數值（由 auto 使用）。"

#: ../../library/enum.rst:0
#, fuzzy
msgid "boundary"
msgstr "邊界"

#: ../../library/enum.rst:191
#, fuzzy
msgid ""
"How to handle out-of-range values from bit operations (:class:`Flag` only)."
msgstr "如何處理來自位操作的超出範圍的值（僅限 :class:`Flag`）。"

#: ../../library/enum.rst:195
#, fuzzy
msgid "Returns ``True`` if member belongs to the ``cls``::"
msgstr "如果成員屬於 ``cls`` 則回傳 ``True``::"

#: ../../library/enum.rst:203
#, fuzzy
msgid ""
"In Python 3.12 it will be possible to check for member values and not just "
"members; until then, a ``TypeError`` will be raised if a non-Enum-member is "
"used in a containment check."
msgstr "在 Python 3.12 "
"中，可以檢查成員值而不僅僅是成員；在此之前，如果在包含檢查中使用非枚舉成員，"
"則會引發 TypeError 。"

#: ../../library/enum.rst:209
#, fuzzy
msgid ""
"Returns ``['__class__', '__doc__', '__members__', '__module__']`` and the "
"names of the members in *cls*::"
msgstr ""
"回傳``['__class__', '__doc__', '__members__', '__module__']`` 和 *cls*:: "
"中的成員名稱"

#: ../../library/enum.rst:217
#, fuzzy
msgid ""
"Returns the Enum member in *cls* matching *name*, or raises an :exc:"
"`AttributeError`::"
msgstr "回傳 *cls* 中匹配 *name* 的枚舉成員，或引發 :exc:`AttributeError`::"

#: ../../library/enum.rst:224
#, fuzzy
msgid ""
"Returns the Enum member in *cls* matching *name*, or raises a :exc:"
"`KeyError`::"
msgstr "回傳 *cls* 中匹配 *name* 的枚舉成員，或引發 :exc:`KeyError`::"

#: ../../library/enum.rst:231
#, fuzzy
msgid "Returns each member in *cls* in definition order::"
msgstr "按定義順序回傳 *cls* 中的每個成員："

#: ../../library/enum.rst:238
#, fuzzy
msgid "Returns the number of member in *cls*::"
msgstr "回傳 *cls*:: 中的成員數"

#: ../../library/enum.rst:245
#, fuzzy
msgid "Returns each member in *cls* in reverse definition order::"
msgstr "以相反的定義順序回傳 *cls* 中的每個成員::"

#: ../../library/enum.rst:253
#, fuzzy
msgid "*Enum* is the base class for all *enum* enumerations."
msgstr "*Enum* 是所有 *enum* 枚舉的基底類別。"

#: ../../library/enum.rst:257
#, fuzzy
msgid "The name used to define the ``Enum`` member::"
msgstr "用於定義“枚舉”成員的名稱::"

#: ../../library/enum.rst:264
#, fuzzy
msgid "The value given to the ``Enum`` member::"
msgstr "賦予 ``Enum`` 成員的值::"

#: ../../library/enum.rst:269
#, fuzzy
msgid "Enum member values"
msgstr "枚舉成員值"

#: ../../library/enum.rst:271
#, fuzzy
msgid ""
"Member values can be anything: :class:`int`, :class:`str`, etc.  If the "
"exact value is unimportant you may use :class:`auto` instances and an "
"appropriate value will be chosen for you.  See :class:`auto` for the details."
msgstr ""
"成員值可以是任何值：:class:`int`、:class:`str` "
"等。如果確切的值不重要，您可以使用 :class:`auto` "
"實例，系統會為您選擇合適的值。有關詳細資訊，請參閱 :class:`auto`。"

#: ../../library/enum.rst:278
#, fuzzy
msgid ""
"``_ignore_`` is only used during creation and is removed from the "
"enumeration once creation is complete."
msgstr "``_ignore_`` 僅在建立期間使用，並在建立完成後從枚舉中刪除。"

#: ../../library/enum.rst:281
#, fuzzy
msgid ""
"``_ignore_`` is a list of names that will not become members, and whose "
"names will also be removed from the completed enumeration.  See :ref:"
"`TimePeriod <enum-time-period>` for an example."
msgstr ""
"``_ignore_`` "
"是不會成為成員的名稱列表，它們的名稱也將從完整的枚舉中刪除。有關示例，請參閱 "
":ref:`TimePeriod <enum-time-period>`。"

#: ../../library/enum.rst:287
#, fuzzy
msgid ""
"Returns ``['__class__', '__doc__', '__module__', 'name', 'value']`` and any "
"public methods defined on *self.__class__*::"
msgstr ""
"回傳``['__class__', '__doc__', '__module__', 'name', 'value']`` 和定義在 "
"*self.__class__*:: 上的任何公開方法"

#: ../../library/enum.rst:0
#, fuzzy
msgid "name"
msgstr "姓名"

#: ../../library/enum.rst:307
#, fuzzy
msgid "The name of the member being defined (e.g. 'RED')."
msgstr "正在定義的成員的名稱（例如 ``RED``）。"

#: ../../library/enum.rst:308
#, fuzzy
msgid "The start value for the Enum; the default is 1."
msgstr "枚舉的起始值；預設值為 1。"

#: ../../library/enum.rst:0
#, fuzzy
msgid "count"
msgstr "數數"

#: ../../library/enum.rst:309
#, fuzzy
msgid "The number of members currently defined, not including this one."
msgstr "當前定義的成員數，不包括這個。"

#: ../../library/enum.rst:0
#, fuzzy
msgid "last_values"
msgstr "最後一個值"

#: ../../library/enum.rst:310
#, fuzzy
msgid "A list of the previous values."
msgstr "先前值的列表。"

#: ../../library/enum.rst:312
#, fuzzy
msgid ""
"A *staticmethod* that is used to determine the next value returned by :class:"
"`auto`::"
msgstr "一個*靜態方法*，用於確定 auto 回傳的下一個值："

#: ../../library/enum.rst:327
#, fuzzy
msgid ""
"A *classmethod* that is used to further configure subsequent subclasses. By "
"default, does nothing."
msgstr "用於進一步配置後續子類別的 *classmethod*。預設情況下，不執行任何操作。"

#: ../../library/enum.rst:332
#, fuzzy
msgid ""
"A *classmethod* for looking up values not found in *cls*.  By default it "
"does nothing, but can be overridden to implement custom search behavior::"
msgstr "用於查找在 *cls* 中找不到的值的 "
"*classmethod*。預設情況下它什麼都不做，但可以被覆蓋以實作自定義搜索行為::"

#: ../../library/enum.rst:353
#, fuzzy
msgid ""
"Returns the string used for *repr()* calls.  By default, returns the *Enum* "
"name, member name, and value, but can be overridden::"
msgstr "回傳用於 *repr()* 呼叫的字串。預設情況下，回傳 *Enum* "
"名稱、成員名稱和值，但可以被覆蓋："

#: ../../library/enum.rst:368
#, fuzzy
msgid ""
"Returns the string used for *str()* calls.  By default, returns the *Enum* "
"name and member name, but can be overridden::"
msgstr "回傳用於 *str()* 呼叫的字串。預設情況下，回傳 *Enum* "
"名稱和成員名稱，但可以被覆蓋::"

#: ../../library/enum.rst:382
#, fuzzy
msgid ""
"Returns the string used for *format()* and *f-string* calls.  By default, "
"returns :meth:`__str__` return value, but can be overridden::"
msgstr ""
"回傳用於 *format()* 和 *f-string* 呼叫的字串。預設情況下，回傳 "
":meth:`__str__` 回傳值，但可以被覆蓋::"

#: ../../library/enum.rst:396
#, fuzzy
msgid ""
"Using :class:`auto` with :class:`Enum` results in integers of increasing "
"value, starting with ``1``."
msgstr "將 :class:`auto` 與 :class:`Enum` 一起使用會產生遞增值的整數，從 ``1`` 開始。"

#: ../../library/enum.rst:402
#, fuzzy
msgid ""
"*IntEnum* is the same as *Enum*, but its members are also integers and can "
"be used anywhere that an integer can be used.  If any integer operation is "
"performed with an *IntEnum* member, the resulting value loses its "
"enumeration status."
msgstr ""
"*IntEnum* 與 *Enum* "
"相同，但它的成員也是整數，並且可以在任何可以使用整數的地方使用。如果對 "
"*IntEnum* 成員執行任何整數運算，則結果值將失去其枚舉狀態。"

#: ../../library/enum.rst:422
#, fuzzy
msgid ""
"Using :class:`auto` with :class:`IntEnum` results in integers of increasing "
"value, starting with ``1``."
msgstr "將 :class:`auto` 與 :class:`IntEnum` 一起使用會產生遞增值的整數，從 ``1`` "
"開始。"

#: ../../library/enum.rst:425
#, fuzzy
msgid ""
":meth:`~object.__str__` is now :meth:`!int.__str__` to better support the "
"*replacement of existing constants* use-case. :meth:`~object.__format__` was "
"already :meth:`!int.__format__` for that same reason."
msgstr ""
":meth:`~object.__str__` 現在是 :meth:`!int.__str__` 以更好地支援 "
"*替換現有常數* 用例。 :meth:`~object.__format__` 已經是 :meth:`!int."
"__format__` 出於同樣的原因。"

#: ../../library/enum.rst:432
#, fuzzy
msgid ""
"*StrEnum* is the same as *Enum*, but its members are also strings and can be "
"used in most of the same places that a string can be used.  The result of "
"any string operation performed on or with a *StrEnum* member is not part of "
"the enumeration."
msgstr ""
"*StrEnum* 與*Enum* "
"相同，但它的成員也是字串，並且可以在大多數可以使用字串的地方使用。對 "
"*StrEnum* 成員執行或使用 *StrEnum* "
"成員執行的任何字串操作的結果不是枚舉的一部分。"

#: ../../library/enum.rst:438
#, fuzzy
msgid ""
"There are places in the stdlib that check for an exact :class:`str` instead "
"of a :class:`str` subclass (i.e. ``type(unknown) == str`` instead of "
"``isinstance(unknown, str)``), and in those locations you will need to use "
"``str(StrEnum.member)``."
msgstr ""
"stdlib 中有一些地方檢查確切的 :class:`str` 而不是 :class:`str` 子類別（即 "
"``type(unknown) == str`` 而不是 ``isinstance(unknown, str) ``)，"
"在這些位置你需要使用 ``str(StrEnum.member)``。"

#: ../../library/enum.rst:445
#, fuzzy
msgid ""
"Using :class:`auto` with :class:`StrEnum` results in the lower-cased member "
"name as the value."
msgstr "將 :class:`auto` 與 :class:`StrEnum` 一起使用會導緻小寫成員名稱作為值。"

#: ../../library/enum.rst:450
#, fuzzy
msgid ""
":meth:`~object.__str__` is :meth:`!str.__str__` to better support the "
"*replacement of existing constants* use-case.  :meth:`~object.__format__` is "
"likewise :meth:`!str.__format__` for that same reason."
msgstr ""
":meth:`~object.__str__` 是 :meth:`!str.__str__` "
"以更好地支援*替換現有常數*用例。 :meth:`~object.__format__` 同樣是 "
":meth:`!str.__format__` 出於同樣的原因。"

#: ../../library/enum.rst:458
#, fuzzy
msgid ""
"*Flag* members support the bitwise operators ``&`` (*AND*), ``|`` (*OR*), "
"``^`` (*XOR*), and ``~`` (*INVERT*); the results of those operators are "
"members of the enumeration."
msgstr ""
"*Flag* 成員支援按位運算符``&`` (*AND*)、``|`` (*OR*)、``^`` (*XOR*) 和``~`` "
"(*INVERT *);這些運算符的結果是枚舉的成員。"

#: ../../library/enum.rst:464
#, fuzzy
msgid "Returns *True* if value is in self::"
msgstr "如果值在 self:: 中，則回傳 *True*"

#: ../../library/enum.rst:484
#, fuzzy
msgid "Returns all contained non-alias members::"
msgstr "回傳所有包含的非別名成員::"

#: ../../library/enum.rst:493
#, fuzzy
msgid "Aliases are no longer returned during iteration."
msgstr "疊代期間不再回傳別名。"

#: ../../library/enum.rst:497
#, fuzzy
msgid "Returns number of members in flag::"
msgstr "回傳 flag:: 中的成員數"

#: ../../library/enum.rst:506
#, fuzzy
msgid "Returns *True* if any members in flag, *False* otherwise::"
msgstr "如果旗標中有任何成員，則回傳 *True*，否則回傳 *False*::"

#: ../../library/enum.rst:518
#, fuzzy
msgid "Returns current flag binary or'ed with other::"
msgstr "回傳當前旗標二進位或與其他::"

#: ../../library/enum.rst:525
#, fuzzy
msgid "Returns current flag binary and'ed with other::"
msgstr "回傳當前旗標二進位和'ed with other::"

#: ../../library/enum.rst:534
#, fuzzy
msgid "Returns current flag binary xor'ed with other::"
msgstr "回傳與其他 :: 異或的當前旗標二進位"

#: ../../library/enum.rst:543
#, fuzzy
msgid "Returns all the flags in *type(self)* that are not in self::"
msgstr "回傳 *type(self)* 中不在 self:: 中的所有旗標"

#: ../../library/enum.rst:554
#, fuzzy
msgid ""
"Function used to format any remaining unnamed numeric values.  Default is "
"the value's repr; common choices are :func:`hex` and :func:`oct`."
msgstr "用於格式化任何剩餘的未命名數值的函式。預設值是值的 repr；常見的選擇是 "
":func:`hex` 和 :func:`oct`。"

#: ../../library/enum.rst:559
#, fuzzy
msgid ""
"Using :class:`auto` with :class:`Flag` results in integers that are powers "
"of two, starting with ``1``."
msgstr "將 :class:`auto` 與 :class:`Flag` 結合使用會生成以 ``1`` 開頭的 2 "
"的冪的整數。"

#: ../../library/enum.rst:562
#, fuzzy
msgid "The *repr()* of zero-valued flags has changed.  It is now::"
msgstr "零值旗標的 *repr()* 已更改。就是現在：："

#: ../../library/enum.rst:570
#, fuzzy
msgid ""
"*IntFlag* is the same as *Flag*, but its members are also integers and can "
"be used anywhere that an integer can be used."
msgstr "*IntFlag* 與*Flag* "
"相同，但它的成員也是整數，並且可以在任何可以使用整數的地方使用。"

#: ../../library/enum.rst:583
#, fuzzy
msgid ""
"If any integer operation is performed with an *IntFlag* member, the result "
"is not an *IntFlag*::"
msgstr "如果使用 *IntFlag* 成員執行任何整數運算，則結果不是 *IntFlag*::"

#: ../../library/enum.rst:589
#, fuzzy
msgid "If a *Flag* operation is performed with an *IntFlag* member and:"
msgstr "如果使用 *IntFlag* 成員執行 *Flag* 操作，並且："

#: ../../library/enum.rst:591
#, fuzzy
msgid "the result is a valid *IntFlag*: an *IntFlag* is returned"
msgstr "結果是一個有效的 *IntFlag*：回傳一個 *IntFlag*"

#: ../../library/enum.rst:592
#, fuzzy
msgid ""
"the result is not a valid *IntFlag*: the result depends on the "
"*FlagBoundary* setting"
msgstr "結果不是有效的 *IntFlag*：結果取決於 *FlagBoundary* 設定"

#: ../../library/enum.rst:594
#, fuzzy
msgid "The *repr()* of unnamed zero-valued flags has changed.  It is now:"
msgstr "未命名的零值旗標的 *repr()* 已更改。就是現在："

#: ../../library/enum.rst:601
#, fuzzy
msgid ""
"Using :class:`auto` with :class:`IntFlag` results in integers that are "
"powers of two, starting with ``1``."
msgstr "將 :class:`auto` 與 :class:`IntFlag` 結合使用會產生以 ``1`` 開頭的 2 "
"次冪的整數。"

#: ../../library/enum.rst:606
#, fuzzy
msgid ""
":meth:`~object.__str__` is now :meth:`!int.__str__` to better support the "
"*replacement of existing constants* use-case.  :meth:`~object.__format__` "
"was already :meth:`!int.__format__` for that same reason."
msgstr ""
":meth:`~object.__str__` 現在是 :meth:`!int.__str__` 以更好地支援 "
"*替換現有常數* 用例。 :meth:`~object.__format__` 已經是 :meth:`!int."
"__format__` 出於同樣的原因。"

#: ../../library/enum.rst:610
#, fuzzy
msgid ""
"Inversion of an :class:`!IntFlag` now returns a positive value that is the "
"union of all flags not in the given flag, rather than a negative value. This "
"matches the existing :class:`Flag` behavior."
msgstr ""
":class:`!IntFlag` "
"的反轉現在回傳一個正值，它是不在給定旗標中的所有旗標的並集，而不是負值。"
"這與現有的 :class:`Flag` 行為相匹配。"

#: ../../library/enum.rst:616
#, fuzzy
msgid ""
":class:`!ReprEnum` uses the :meth:`repr() <Enum.__repr__>` of :class:`Enum`, "
"but the :class:`str() <str>` of the mixed-in data type:"
msgstr ""
":class:`!ReprEnum` 使用 :class:`Enum` 的 :meth:`repr() <Enum.__repr__>`，"
"但是混合資料型別的 :class:`str() <str>` :"

#: ../../library/enum.rst:619
#, fuzzy
msgid ":meth:`!int.__str__` for :class:`IntEnum` and :class:`IntFlag`"
msgstr ":meth:`!int.__str__` 用於 :class:`IntEnum` 和 :class:`IntFlag`"

#: ../../library/enum.rst:620
#, fuzzy
msgid ":meth:`!str.__str__` for :class:`StrEnum`"
msgstr ":meth:`!str.__str__` 為 :class:`StrEnum`"

#: ../../library/enum.rst:622
#, fuzzy
msgid ""
"Inherit from :class:`!ReprEnum` to keep the :class:`str() <str>` / :func:"
"`format` of the mixed-in data type instead of using the :class:`Enum`-"
"default :meth:`str() <Enum.__str__>`."
msgstr ""
"從 :class:`!ReprEnum` 繼承以保留混合資料型別的 :class:`str() <str>` / "
":func:`format` 而不是使用 :class:`Enum`-default  :meth:`str() <Enum."
"__str__>`。"

#: ../../library/enum.rst:631
#, fuzzy
msgid ""
"*EnumCheck* contains the options used by the :func:`verify` decorator to "
"ensure various constraints; failed constraints result in a :exc:`ValueError`."
msgstr ""
"*EnumCheck* 包含 :func:`verify` 裝飾器用來確保各種約束的選項；"
"失敗的約束會導致 :exc:`ValueError`。"

#: ../../library/enum.rst:636
#, fuzzy
msgid "Ensure that each value has only one name::"
msgstr "確保每個值只有一個名稱::"

#: ../../library/enum.rst:652
#, fuzzy
msgid ""
"Ensure that there are no missing values between the lowest-valued member and "
"the highest-valued member::"
msgstr "確保最低值成員和最高值成員之間沒有缺失值::"

#: ../../library/enum.rst:667
#, fuzzy
msgid ""
"Ensure that any flag groups/masks contain only named flags -- useful when "
"values are specified instead of being generated by :func:`auto`::"
msgstr "確保任何旗標組/掩碼僅包含命名旗標——在指定值而不是由 :func:`auto`:: 生成時有用"

#: ../../library/enum.rst:684
#, fuzzy
msgid ""
"CONTINUOUS and NAMED_FLAGS are designed to work with integer-valued members."
msgstr "CONTINUOUS 和 NAMED_FLAGS 旨在與整數值成員一起使用。"

#: ../../library/enum.rst:690
#, fuzzy
msgid ""
"*FlagBoundary* controls how out-of-range values are handled in *Flag* and "
"its subclasses."
msgstr "*FlagBoundary* 控制如何在 *Flag* 及其子類別中處理超出範圍的值。"

#: ../../library/enum.rst:695
#, fuzzy
msgid ""
"Out-of-range values cause a :exc:`ValueError` to be raised. This is the "
"default for :class:`Flag`::"
msgstr "超出範圍的值會引發 :exc:`ValueError`。這是 :class:`Flag`:: 的預設值"

#: ../../library/enum.rst:712
#, fuzzy
msgid ""
"Out-of-range values have invalid values removed, leaving a valid *Flag* "
"value::"
msgstr "超出範圍的值已刪除無效值，留下有效的 *Flag* 值::"

#: ../../library/enum.rst:725
#, fuzzy
msgid ""
"Out-of-range values lose their *Flag* membership and revert to :class:`int`."
msgstr "超出範圍的值將失去其 *Flag* 成員資格並恢復為 :class:`int`。"

#: ../../library/enum.rst:737
#, fuzzy
msgid ""
"Out-of-range values are kept, and the *Flag* membership is kept. This is the "
"default for :class:`IntFlag`::"
msgstr "保留超出範圍的值，並保留 *Flag* 成員資格。這是 :class:`IntFlag`:: 的預設值"

#: ../../library/enum.rst:753
#, fuzzy
msgid "Supported ``__dunder__`` names"
msgstr "支援的 ``__dunder__`` 名稱"

#: ../../library/enum.rst:755
#, fuzzy
msgid ""
":attr:`~EnumType.__members__` is a read-only ordered mapping of "
"``member_name``:``member`` items.  It is only available on the class."
msgstr ""
":attr:`~EnumType.__members__` 是``member_name``:``member`` "
"項的只讀有序映射。它僅在課堂上可用。"

#: ../../library/enum.rst:758
#, fuzzy
msgid ""
":meth:`~object.__new__`, if specified, must create and return the enum "
"members; it is also a very good idea to set the member's :attr:`!_value_` "
"appropriately.  Once all the members are created it is no longer used."
msgstr ""
":meth:`~object.__new__`，如果指定，必須建立並回傳枚舉成員；適當地設定成員的 "
":attr:`!_value_` 也是一個很好的主意。一旦建立了所有成員，就不再使用它。"

#: ../../library/enum.rst:764
#, fuzzy
msgid "Supported ``_sunder_`` names"
msgstr "支援的 ``_sunder_`` 名稱"

#: ../../library/enum.rst:766
#, fuzzy
msgid "``_name_`` -- name of the member"
msgstr "``_name_`` -- 成員的名字"

#: ../../library/enum.rst:767
#, fuzzy
msgid ""
"``_value_`` -- value of the member; can be set / modified in ``__new__``"
msgstr "``_value_`` -- 成員的值；可以在``__new__``中設定/修改"

#: ../../library/enum.rst:769
#, fuzzy
msgid ""
"``_missing_`` -- a lookup function used when a value is not found; may be "
"overridden"
msgstr "``_missing_`` -- 找不到值時使用的查找函式；可能被覆蓋"

#: ../../library/enum.rst:771
#, fuzzy
msgid ""
"``_ignore_`` -- a list of names, either as a :class:`list` or a :class:"
"`str`, that will not be transformed into members, and will be removed from "
"the final class"
msgstr "``_ignore_`` -- 名稱列表，作為 :class:`list` 或 "
":class:`str`，不會轉換為成員，並將從最終類中刪除"

#: ../../library/enum.rst:774
#, fuzzy
msgid ""
"``_order_`` -- used in Python 2/3 code to ensure member order is consistent "
"(class attribute, removed during class creation)"
msgstr "``_order_`` -- 在 Python 2/3 "
"程式碼中使用以確保成員順序一致（類屬性，在建立類時移除）"

#: ../../library/enum.rst:776
#, fuzzy
msgid ""
"``_generate_next_value_`` -- used to get an appropriate value for an enum "
"member; may be overridden"
msgstr "``_generate_next_value_`` -- 用於為枚舉成員獲取適當的值；可能被覆蓋"

#: ../../library/enum.rst:781
#, fuzzy
msgid ""
"For standard :class:`Enum` classes the next value chosen is the last value "
"seen incremented by one."
msgstr "對於標準 :class:`Enum` 類，選擇的下一個值是最後看到的值加一。"

#: ../../library/enum.rst:784
#, fuzzy
msgid ""
"For :class:`Flag` classes the next value chosen will be the next highest "
"power-of-two, regardless of the last value seen."
msgstr "對於 :class:`Flag` 類，選擇的下一個值將是下一個最高的 2 "
"的冪，而不管看到的最後一個值。"

#: ../../library/enum.rst:787
msgid "``_missing_``, ``_order_``, ``_generate_next_value_``"
msgstr "``_missing_``\\ 、\\ ``_order_``\\ 、\\ ``_generate_next_value_``"

#: ../../library/enum.rst:788
msgid "``_ignore_``"
msgstr "``_ignore_``"

#: ../../library/enum.rst:793
#, fuzzy
msgid "Utilities and Decorators"
msgstr "實用程式和裝飾器"

#: ../../library/enum.rst:797
#, fuzzy
msgid ""
"*auto* can be used in place of a value.  If used, the *Enum* machinery will "
"call an *Enum*'s :meth:`~Enum._generate_next_value_` to get an appropriate "
"value. For *Enum* and *IntEnum* that appropriate value will be the last "
"value plus one; for *Flag* and *IntFlag* it will be the first power-of-two "
"greater than the highest value; for *StrEnum* it will be the lower-cased "
"version of the member's name.  Care must be taken if mixing *auto()* with "
"manually specified values."
msgstr ""
"*auto* 可以用來代替一個值。如果使用，*Enum* 機制將呼叫 *Enum* 的 :meth:`~Enum"
"._generate_next_value_` 以獲得適當的值。對於 *Enum* 和 "
"*IntEnum*，適當的值將是最後一個值加一；對於 *Flag* 和 *IntFlag* "
"它將是第一個大於最高值的 2 的冪；對於 *StrEnum* 它將是成員名稱的小寫版本。"
"如果將 *auto()* 與手動指定的值混合使用，則必須小心。"

#: ../../library/enum.rst:805
#, fuzzy
msgid ""
"*auto* instances are only resolved when at the top level of an assignment:"
msgstr "*auto* 實例僅在分配的頂層時才解析："

#: ../../library/enum.rst:807
#, fuzzy
msgid "``FIRST = auto()`` will work (auto() is replaced with ``1``);"
msgstr "``FIRST = auto()`` 將起作用（auto() 被替換為 ``1``）；"

#: ../../library/enum.rst:808
#, fuzzy
msgid ""
"``SECOND = auto(), -2`` will work (auto is replaced with ``2``, so ``2, -2`` "
"is"
msgstr "``SECOND = auto(), -2`` 將起作用（auto 被替換為 ``2``，所以 ``2, -2`` 是"

#: ../../library/enum.rst:809
#, fuzzy
msgid "used to create the ``SECOND`` enum member;"
msgstr "用於建立 ``SECOND`` 枚舉成員；"

#: ../../library/enum.rst:810
#, fuzzy
msgid ""
"``THREE = [auto(), -3]`` will *not* work (``<auto instance>, -3`` is used to "
"create the ``THREE`` enum member)"
msgstr ""
"``THREE = [auto(), -3]`` *不* 工作（``<auto instance>, -3`` 用於建立 "
"``THREE`` 枚舉成員）"

#: ../../library/enum.rst:815
#, fuzzy
msgid ""
"In prior versions, ``auto()`` had to be the only thing on the assignment "
"line to work properly."
msgstr "在以前的版本中，``auto()`` 必須是賦值線上唯一能正常工作的東西。"

#: ../../library/enum.rst:818
#, fuzzy
msgid ""
"``_generate_next_value_`` can be overridden to customize the values used by "
"*auto*."
msgstr "``_generate_next_value_`` 可以被覆蓋以自定義 *auto* 使用的值。"

#: ../../library/enum.rst:821
#, fuzzy
msgid ""
"in 3.13 the default ``_generate_next_value_`` will always return the highest "
"member value incremented by 1, and will fail if any member is an "
"incompatible type."
msgstr ""
"在 3.13 中，預設的``_generate_next_value_`` 將始終回傳遞增 1 "
"的最高成員值，如果任何成員是不相容的型別，則會失敗。"

#: ../../library/enum.rst:827
#, fuzzy
msgid ""
"A decorator similar to the built-in *property*, but specifically for "
"enumerations.  It allows member attributes to have the same names as members "
"themselves."
msgstr "類似於內建 *property* "
"的裝飾器，但專門用於枚舉。它允許成員屬性與成員本身俱有相同的名稱。"

#: ../../library/enum.rst:831
#, fuzzy
msgid ""
"the *property* and the member must be defined in separate classes; for "
"example, the *value* and *name* attributes are defined in the *Enum* class, "
"and *Enum* subclasses can define members with the names ``value`` and "
"``name``."
msgstr ""
"*property* 和成員必須在單獨的類中定義；例如，*value* 和 *name* 屬性在 *Enum* "
"類中定義，*Enum* 子類別可以定義名稱為 ``value``和 ``name``的成員。"

#: ../../library/enum.rst:840
#, fuzzy
msgid ""
"A :keyword:`class` decorator specifically for enumerations.  It searches an "
"enumeration's :attr:`~EnumType.__members__`, gathering any aliases it finds; "
"if any are found :exc:`ValueError` is raised with the details::"
msgstr ""
"專門用於枚舉的 :keyword:`class` 裝飾器。它搜索枚舉的 :attr:`~EnumType."
"__members__`，收集它找到的任何別名；如果找到 :exec:`ValueError` "
"將引發詳細資訊::"

#: ../../library/enum.rst:858
#, fuzzy
msgid ""
"A :keyword:`class` decorator specifically for enumerations.  Members from :"
"class:`EnumCheck` are used to specify which constraints should be checked on "
"the decorated enumeration."
msgstr "專門用於枚舉的 :keyword:`class` 裝飾器。 EnumCheck "
"中的成員用於指定應在裝飾枚舉上檢查哪些約束。"

#: ../../library/enum.rst:866
#, fuzzy
msgid "A decorator for use in enums: its target will become a member."
msgstr "用於枚舉的裝飾器：它的目標將成為成員。"

#: ../../library/enum.rst:872
#, fuzzy
msgid "A decorator for use in enums: its target will not become a member."
msgstr "用於枚舉的裝飾器：它的目標不會成為成員。"

#: ../../library/enum.rst:878
#, fuzzy
msgid ""
"A decorator to change the :class:`str() <str>` and :func:`repr` of an enum "
"to show its members as belonging to the module instead of its class. Should "
"only be used when the enum members are exported to the module global "
"namespace (see :class:`re.RegexFlag` for an example)."
msgstr ""
"一個裝飾器，用於更改枚舉的 :class:`str() <str>` 和 :func:`repr` 以顯示其成員"
"屬於模組而不是其類。僅應在將枚舉成員導出到模組全局命名空間時使用（有關示例，"
"請參見 :class:`re.RegexFlag`）。"

#: ../../library/enum.rst:888
#, fuzzy
msgid "Return a list of all power-of-two integers contained in a flag *value*."
msgstr "回傳旗標 *value* 中包含的所有二次冪整數的列表。"

#: ../../library/enum.rst:895
#, fuzzy
msgid "Notes"
msgstr "筆記"

#: ../../library/enum.rst:897
#, fuzzy
msgid ":class:`IntEnum`, :class:`StrEnum`, and :class:`IntFlag`"
msgstr ":class:`IntEnum`、:class:`StrEnum` 和 :class:`IntFlag`"

#: ../../library/enum.rst:899
#, fuzzy
msgid ""
"These three enum types are designed to be drop-in replacements for existing "
"integer- and string-based values; as such, they have extra limitations:"
msgstr "這三種枚舉型別旨在替代現有的基於整數和字串的值；因此，它們有額外的限制："

#: ../../library/enum.rst:902
#, fuzzy
msgid "``__str__`` uses the value and not the name of the enum member"
msgstr "``__str__`` 使用值而不是枚舉成員的名稱"

#: ../../library/enum.rst:904
#, fuzzy
msgid ""
"``__format__``, because it uses ``__str__``, will also use the value of the "
"enum member instead of its name"
msgstr "``__format__``，因為它使用了``__str__``，也會使用枚舉成員的值而不是它的名字"

#: ../../library/enum.rst:907
#, fuzzy
msgid ""
"If you do not need/want those limitations, you can either create your own "
"base class by mixing in the ``int`` or ``str`` type yourself::"
msgstr "如果您不需要/不想要這些限制，您可以通過自己混合 ``int`` 或 ``str`` "
"型別來建立自己的基底類別："

#: ../../library/enum.rst:914
#, fuzzy
msgid "or you can reassign the appropriate :meth:`str`, etc., in your enum::"
msgstr "或者您可以在您的枚舉中重新分配適當的 :meth:`str` 等："

#~ msgid "The *start* parameter was added."
#~ msgstr "新增 *start* 參數。"

#~ msgid "OrderedEnum"
#~ msgstr "OrderedEnum"

#~ msgid "DuplicateFreeEnum"
#~ msgstr "DuplicateFreeEnum"

#~ msgid "TimePeriod"
#~ msgstr "TimePeriod"

#~ msgid "_Private__names"
#~ msgstr "_Private__names"
