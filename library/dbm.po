# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# jerrychen <jerrychen.ee@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-15 20:43+0000\n"
"PO-Revision-Date: 2018-05-23 14:42+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/dbm.rst:2
msgid ":mod:`dbm` --- Interfaces to Unix \"databases\""
msgstr ":mod:`dbm` --- Unix \"databases\" 的介面"

#: ../../library/dbm.rst:7
msgid "**Source code:** :source:`Lib/dbm/__init__.py`"
msgstr "**原始碼：**\\ :source:`Lib/dbm/__init__.py`"

#: ../../library/dbm.rst:11
#, fuzzy
msgid ""
":mod:`dbm` is a generic interface to variants of the DBM database --- :mod:"
"`dbm.gnu` or :mod:`dbm.ndbm`.  If none of these modules is installed, the "
"slow-but-simple implementation in module :mod:`dbm.dumb` will be used.  "
"There is a `third party interface <https://www.jcea.es/programacion/pybsddb."
"htm>`_ to the Oracle Berkeley DB."
msgstr ""
":mod:`dbm` 是 DBM 資料庫變體的通用介面 --- :mod:`dbm.gnu` 或 :mod:`dbm."
"ndbm`。如果沒有安裝這些模組，將使用模組 :mod:`dbm.dumb` 中緩慢但簡單的實作。 "
"Oracle Berkeley DB 有一個“第三方介面 <https://www.jcea.es/programacion/"
"pybsddb.htm>”。"

#: ../../library/dbm.rst:20
#, fuzzy
msgid ""
"A tuple containing the exceptions that can be raised by each of the "
"supported modules, with a unique exception also named :exc:`dbm.error` as "
"the first item --- the latter is used when :exc:`dbm.error` is raised."
msgstr ""
"包含每個受支援模組可以引發的例外的元組，唯一的例外也命名為 :exc:`dbm.error` "
"作為第一項 --- 後者在 :exc:`dbm.error` 時使用被提出。"

#: ../../library/dbm.rst:27
#, fuzzy
msgid ""
"This function attempts to guess which of the several simple database modules "
"available --- :mod:`dbm.gnu`, :mod:`dbm.ndbm` or :mod:`dbm.dumb` --- should "
"be used to open a given file."
msgstr ""
"此函式嘗試猜測可用的幾個簡單資料庫模組中的哪一個 --- :mod:`dbm."
"gnu`、:mod:`dbm.ndbm` 或 :mod:`dbm.dumb` --- 應該用於打開一個給定的文件。"

#: ../../library/dbm.rst:31
#, fuzzy
msgid ""
"Returns one of the following values: ``None`` if the file can't be opened "
"because it's unreadable or doesn't exist; the empty string (``''``) if the "
"file's format can't be guessed; or a string containing the required module "
"name, such as ``'dbm.ndbm'`` or ``'dbm.gnu'``."
msgstr ""
"回傳以下值之一：``None`` 如果文件因為不可讀或不存在而無法打開；如果無法猜測文"
"件格式，則為空字串（``''``）；或包含所需模組名稱的字串，例如 ``'dbm.ndbm'`` "
"或 ``'dbm.gnu'``。"

#: ../../library/dbm.rst:36 ../../library/dbm.rst:210 ../../library/dbm.rst:309
#: ../../library/dbm.rst:393
#, fuzzy
msgid "Accepts :term:`path-like object` for filename."
msgstr "接受 :term:`path-like object` 作為文件名。"

#: ../../library/dbm.rst:41
#, fuzzy
msgid "Open the database file *file* and return a corresponding object."
msgstr "打開資料庫文件 *file* 並回傳一個對應的物件。"

#: ../../library/dbm.rst:43
#, fuzzy
msgid ""
"If the database file already exists, the :func:`whichdb` function is used to "
"determine its type and the appropriate module is used; if it does not exist, "
"the first module listed above that can be imported is used."
msgstr ""
"如果資料庫文件已經存在，則使用 :func:`whichdb` 函式確定其型別並使用適當的模組"
"；如果不存在，則使用上面列出的第一個可以導入的模組。"

#: ../../library/dbm.rst:47 ../../library/dbm.rst:166 ../../library/dbm.rst:357
#, fuzzy
msgid "The optional *flag* argument can be:"
msgstr "可選的 *flag* 參數可以是："

#: ../../library/dbm.rst:50 ../../library/dbm.rst:169 ../../library/dbm.rst:188
#: ../../library/dbm.rst:287 ../../library/dbm.rst:360
#, fuzzy
msgid "Value"
msgstr "價值"

#: ../../library/dbm.rst:50 ../../library/dbm.rst:169 ../../library/dbm.rst:188
#: ../../library/dbm.rst:287 ../../library/dbm.rst:360
#, fuzzy
msgid "Meaning"
msgstr "意義"

#: ../../library/dbm.rst:52 ../../library/dbm.rst:171 ../../library/dbm.rst:289
#: ../../library/dbm.rst:362
msgid "``'r'``"
msgstr "``'r'``"

#: ../../library/dbm.rst:52 ../../library/dbm.rst:171 ../../library/dbm.rst:289
#: ../../library/dbm.rst:362
#, fuzzy
msgid "Open existing database for reading only (default)"
msgstr "以只讀方式打開現有資料庫（預設）"

#: ../../library/dbm.rst:55 ../../library/dbm.rst:174 ../../library/dbm.rst:292
#: ../../library/dbm.rst:365
msgid "``'w'``"
msgstr "``'w'``"

#: ../../library/dbm.rst:55 ../../library/dbm.rst:174 ../../library/dbm.rst:292
#: ../../library/dbm.rst:365
#, fuzzy
msgid "Open existing database for reading and writing"
msgstr "打開現有資料庫進行讀寫"

#: ../../library/dbm.rst:58 ../../library/dbm.rst:177 ../../library/dbm.rst:295
#: ../../library/dbm.rst:368
msgid "``'c'``"
msgstr "``'c'``"

#: ../../library/dbm.rst:58 ../../library/dbm.rst:177 ../../library/dbm.rst:295
#: ../../library/dbm.rst:368
#, fuzzy
msgid "Open database for reading and writing, creating it if it doesn't exist"
msgstr "打開資料庫進行讀寫，不存在則建立"

#: ../../library/dbm.rst:61 ../../library/dbm.rst:180 ../../library/dbm.rst:298
#: ../../library/dbm.rst:371
msgid "``'n'``"
msgstr "``'n'``"

#: ../../library/dbm.rst:61 ../../library/dbm.rst:180 ../../library/dbm.rst:298
#: ../../library/dbm.rst:371
#, fuzzy
msgid "Always create a new, empty database, open for reading and writing"
msgstr "始終建立一個新的空資料庫，以讀寫方式打開"

#: ../../library/dbm.rst:65 ../../library/dbm.rst:302 ../../library/dbm.rst:375
#, fuzzy
msgid ""
"The optional *mode* argument is the Unix mode of the file, used only when "
"the database has to be created.  It defaults to octal ``0o666`` (and will be "
"modified by the prevailing umask)."
msgstr ""
"可選的 *mode* 參數是文件的 Unix 模式，僅在必須建立資料庫時使用。"
"它預設為八進位 ``0o666``（並且會被當前的 umask 修改）。"

#: ../../library/dbm.rst:70
#, fuzzy
msgid ""
"The object returned by :func:`.open` supports the same basic functionality "
"as dictionaries; keys and their corresponding values can be stored, "
"retrieved, and deleted, and the :keyword:`in` operator and the :meth:`keys` "
"method are available, as well as :meth:`get` and :meth:`setdefault`."
msgstr ""
":func:`.open` 回傳的物件支援與字典相同的基本功能；可以儲存、檢索和刪除鍵及其"
"對應的值，並且可以使用 :keyword:`in` 運算符和 :meth:`keys` "
"方法，以及 :meth:`get` 和 :meth:`setdefault `。"

#: ../../library/dbm.rst:75
#, fuzzy
msgid ""
":meth:`get` and :meth:`setdefault` are now available in all database modules."
msgstr ":meth:`get` 和 :meth:`setdefault` 現在在所有資料庫模組中都可用。"

#: ../../library/dbm.rst:78
#, fuzzy
msgid ""
"Deleting a key from a read-only database raises database module specific "
"error instead of :exc:`KeyError`."
msgstr "從只讀資料庫中刪除密鑰會引發特定於資料庫模組的錯誤，而不是 :exc:`KeyError`。"

#: ../../library/dbm.rst:82
#, fuzzy
msgid "Accepts :term:`path-like object` for file."
msgstr "接受文件的 :term:`path-like object`。"

#: ../../library/dbm.rst:85
#, fuzzy
msgid ""
"Key and values are always stored as bytes. This means that when strings are "
"used they are implicitly converted to the default encoding before being "
"stored."
msgstr "鍵和值始終儲存為位元組。這意味著當使用字串時，它們在儲存之前被隱式轉換為預設"
"編碼。"

#: ../../library/dbm.rst:89
#, fuzzy
msgid ""
"These objects also support being used in a :keyword:`with` statement, which "
"will automatically close them when done."
msgstr "這些對像還支援在 :keyword:`with` 語句中使用，完成後會自動關閉它們。"

#: ../../library/dbm.rst:92
#, fuzzy
msgid ""
"Added native support for the context management protocol to the objects "
"returned by :func:`.open`."
msgstr "為 :func:`.open` 回傳的物件新增了對上下文管理協定的本地支援。"

#: ../../library/dbm.rst:96
#, fuzzy
msgid ""
"The following example records some hostnames and a corresponding title,  and "
"then prints out the contents of the database::"
msgstr "下面的例子記錄了一些主機名和相應的標題，然後印出出資料庫的內容："

#: ../../library/dbm.rst:126
msgid "Module :mod:`shelve`"
msgstr ":mod:`shelve` 模組"

#: ../../library/dbm.rst:127
#, fuzzy
msgid "Persistence module which stores non-string data."
msgstr "儲存非字串資料的持久性模組。"

#: ../../library/dbm.rst:130
#, fuzzy
msgid "The individual submodules are described in the following sections."
msgstr "以下各節介紹了各個子模組。"

#: ../../library/dbm.rst:134
#, fuzzy
msgid ":mod:`dbm.gnu` --- GNU's reinterpretation of dbm"
msgstr ":mod:`dbm.gnu` --- GNU 對 dbm 的重新解釋"

#: ../../library/dbm.rst:140
msgid "**Source code:** :source:`Lib/dbm/gnu.py`"
msgstr "**原始碼：**\\ :source:`Lib/dbm/gnu.py`"

#: ../../library/dbm.rst:144
#, fuzzy
msgid ""
"This module is quite similar to the :mod:`dbm` module, but uses the GNU "
"library ``gdbm`` instead to provide some additional functionality.  Please "
"note that the file formats created by :mod:`dbm.gnu` and :mod:`dbm.ndbm` are "
"incompatible."
msgstr ""
"該模組與 :mod:`dbm` 模組非常相似，但使用 GNU 庫 ``gdbm`` "
"來提供一些額外的功能。請注意，由 :mod:`dbm.gnu` 和 :mod:`dbm.ndbm` "
"建立的文件格式不相容。"

#: ../../library/dbm.rst:148
#, fuzzy
msgid ""
"The :mod:`dbm.gnu` module provides an interface to the GNU DBM library. "
"``dbm.gnu.gdbm`` objects behave like mappings (dictionaries), except that "
"keys and values are always converted to bytes before storing.  Printing a "
"``gdbm`` object doesn't print the keys and values, and the :meth:`items` "
"and :meth:`values` methods are not supported."
msgstr ""
":mod:`dbm.gnu` 模組提供了 GNU DBM 庫的介面。 ``dbm.gnu.gdbm`` "
"物件的行為類似於映射（字典），除了鍵和值總是在儲存之前轉換為位元組。印出 "
"``gdbm`` 對像不會印出鍵和值，並且不支援 :meth:`items` 和 :meth:`values` "
"方法。"

#: ../../library/dbm.rst:157
#, fuzzy
msgid ""
"Raised on :mod:`dbm.gnu`-specific errors, such as I/O errors. :exc:"
"`KeyError` is raised for general mapping errors like specifying an incorrect "
"key."
msgstr ""
"在 :mod:`dbm.gnu` 特定的錯誤上引發，例如 I/O 錯誤。 :exc:`KeyError` "
"是針對一般映射錯誤（例如指定不正確的鍵）而引發的。"

#: ../../library/dbm.rst:163
#, fuzzy
msgid ""
"Open a ``gdbm`` database and return a :class:`gdbm` object.  The *filename* "
"argument is the name of the database file."
msgstr "打開一個 ``gdbm`` 資料庫並回傳一個 :class:`gdbm` 物件。 *filename* "
"參數是資料庫文件的名稱。"

#: ../../library/dbm.rst:184
#, fuzzy
msgid ""
"The following additional characters may be appended to the flag to control "
"how the database is opened:"
msgstr "可以將以下附加字元附加到旗標以控制資料庫的打開方式："

#: ../../library/dbm.rst:190
msgid "``'f'``"
msgstr "``'f'``"

#: ../../library/dbm.rst:190
#, fuzzy
msgid ""
"Open the database in fast mode.  Writes to the database will not be "
"synchronized."
msgstr "以快速模式打開資料庫。不會同步寫入資料庫。"

#: ../../library/dbm.rst:193
msgid "``'s'``"
msgstr "``'s'``"

#: ../../library/dbm.rst:193
#, fuzzy
msgid ""
"Synchronized mode. This will cause changes to the database to be immediately "
"written to the file."
msgstr "同步模式。這將導致對資料庫的更改立即寫入文件。"

#: ../../library/dbm.rst:197
msgid "``'u'``"
msgstr "``'u'``"

#: ../../library/dbm.rst:197
msgid "Do not lock database."
msgstr "不要鎖住資料庫"

#: ../../library/dbm.rst:200
#, fuzzy
msgid ""
"Not all flags are valid for all versions of ``gdbm``.  The module constant :"
"const:`open_flags` is a string of supported flag characters.  The exception :"
"exc:`error` is raised if an invalid flag is specified."
msgstr ""
"並非所有旗標都對所有版本的 ``gdbm`` 有效。模組常數 :const:`open_flags` "
"是支援的旗標字元的字串。如果指定了無效旗標，則會引發例外 :exec:`error`。"

#: ../../library/dbm.rst:204
#, fuzzy
msgid ""
"The optional *mode* argument is the Unix mode of the file, used only when "
"the database has to be created.  It defaults to octal ``0o666``."
msgstr "可選的 *mode* 參數是文件的 Unix "
"模式，僅在必須建立資料庫時使用。它預設為八進位 ``0o666``。"

#: ../../library/dbm.rst:207
#, fuzzy
msgid ""
"In addition to the dictionary-like methods, ``gdbm`` objects have the "
"following methods:"
msgstr "除了類似字典的方法之外，``gdbm`` 對像還有以下方法："

#: ../../library/dbm.rst:215
#, fuzzy
msgid ""
"It's possible to loop over every key in the database using this method  and "
"the :meth:`nextkey` method.  The traversal is ordered by ``gdbm``'s internal "
"hash values, and won't be sorted by the key values.  This method returns the "
"starting key."
msgstr ""
"可以使用此方法和 :meth:`nextkey` 方法遍歷資料庫中的每個鍵。遍歷按照``gdbm``的"
"內部雜湊值排序，不會按照鍵值排序。此方法回傳起始鍵。"

#: ../../library/dbm.rst:222
#, fuzzy
msgid ""
"Returns the key that follows *key* in the traversal.  The following code "
"prints every key in the database ``db``, without having to create a list in "
"memory that contains them all::"
msgstr "回傳遍歷中 *key* 之後的鍵。以下程式碼印出資料庫 ``db``中的每個鍵，而無需在記憶體"
"中建立一個包含所有鍵的列表："

#: ../../library/dbm.rst:233
#, fuzzy
msgid ""
"If you have carried out a lot of deletions and would like to shrink the "
"space used by the ``gdbm`` file, this routine will reorganize the database.  "
"``gdbm`` objects will not shorten the length of a database file except by "
"using this reorganization; otherwise, deleted file space will be kept and "
"reused as new (key, value) pairs are added."
msgstr ""
"如果您進行了很多刪除並希望縮小 ``gdbm`` 文件使用的空間，此例程將重組資料庫。 "
"``gdbm`` 對像不會縮短資料庫文件的長度，除非使用這種重組；否則，刪除的文件空間"
"將被保留並在新增新的（鍵，值）對時重新使用。"

#: ../../library/dbm.rst:241
#, fuzzy
msgid ""
"When the database has been opened in fast mode, this method forces any "
"unwritten data to be written to the disk."
msgstr "當資料庫以快速模式打開時，此方法會強制將任何未寫入的資料寫入磁盤。"

#: ../../library/dbm.rst:246
#, fuzzy
msgid "Close the ``gdbm`` database."
msgstr "關閉 ``gdbm`` 資料庫。"

#: ../../library/dbm.rst:249
#, fuzzy
msgid ":mod:`dbm.ndbm` --- Interface based on ndbm"
msgstr ":mod:`dbm.ndbm` --- 基於 ndbm 的介面"

#: ../../library/dbm.rst:255
msgid "**Source code:** :source:`Lib/dbm/ndbm.py`"
msgstr "**原始碼：**\\ :source:`Lib/dbm/ndbm.py`"

#: ../../library/dbm.rst:259
#, fuzzy
msgid ""
"The :mod:`dbm.ndbm` module provides an interface to the Unix \"(n)dbm\" "
"library. Dbm objects behave like mappings (dictionaries), except that keys "
"and values are always stored as bytes. Printing a ``dbm`` object doesn't "
"print the keys and values, and the :meth:`items` and :meth:`values` methods "
"are not supported."
msgstr ""
":mod:`dbm.ndbm` 模組為 Unix“(n)dbm”庫提供了一個介面。 Dbm "
"物件的行為類似於映射（字典），只是鍵和值始終儲存為位元組。印出 ``dbm`` "
"對像不會印出鍵和值，並且不支援 :meth:`items` 和 :meth:`values` 方法。"

#: ../../library/dbm.rst:264
#, fuzzy
msgid ""
"This module can be used with the \"classic\" ndbm interface or the GNU GDBM "
"compatibility interface. On Unix, the :program:`configure` script will "
"attempt to locate the appropriate header file to simplify building this "
"module."
msgstr ""
"該模組可以與“經典”ndbm 介面或 GNU GDBM 相容介面一起使用。在 Unix "
"上，:program:`configure` 腳本將嘗試定位適當的標頭檔以簡化此模組的構建。"

#: ../../library/dbm.rst:270
#, fuzzy
msgid ""
"Raised on :mod:`dbm.ndbm`-specific errors, such as I/O errors. :exc:"
"`KeyError` is raised for general mapping errors like specifying an incorrect "
"key."
msgstr ""
"在 :mod:`dbm.ndbm`-specific 錯誤上引發，例如 I/O 錯誤。 :exc:`KeyError` "
"是針對一般映射錯誤（例如指定不正確的鍵）而引發的。"

#: ../../library/dbm.rst:276
#, fuzzy
msgid "Name of the ``ndbm`` implementation library used."
msgstr "使用的``ndbm`` 實作庫的名稱。"

#: ../../library/dbm.rst:281
#, fuzzy
msgid ""
"Open a dbm database and return a ``ndbm`` object.  The *filename* argument "
"is the name of the database file (without the :file:`.dir` or :file:`.pag` "
"extensions)."
msgstr ""
"打開一個 dbm 資料庫並回傳一個 ``ndbm`` 物件。 *filename* "
"參數是資料庫文件的名稱（沒有 :file:`.dir` 或 :file:`.pag` 擴充名）。"

#: ../../library/dbm.rst:284
#, fuzzy
msgid "The optional *flag* argument must be one of these values:"
msgstr "可選的 *flag* 參數必須是以下值之一："

#: ../../library/dbm.rst:306
#, fuzzy
msgid ""
"In addition to the dictionary-like methods, ``ndbm`` objects provide the "
"following method:"
msgstr "除了類似字典的方法外，``ndbm`` 對像還提供以下方法："

#: ../../library/dbm.rst:314
#, fuzzy
msgid "Close the ``ndbm`` database."
msgstr "關閉``ndbm`` 資料庫。"

#: ../../library/dbm.rst:318
#, fuzzy
msgid ":mod:`dbm.dumb` --- Portable DBM implementation"
msgstr ":mod:`dbm.dumb` --- 便攜式 DBM 實作"

#: ../../library/dbm.rst:323
msgid "**Source code:** :source:`Lib/dbm/dumb.py`"
msgstr "**原始碼：**\\ :source:`Lib/dbm/dumb.py`"

#: ../../library/dbm.rst:329
#, fuzzy
msgid ""
"The :mod:`dbm.dumb` module is intended as a last resort fallback for the :"
"mod:`dbm` module when a more robust module is not available. The :mod:`dbm."
"dumb` module is not written for speed and is not nearly as heavily used as "
"the other database modules."
msgstr ""
":mod:`dbm.dumb` 模組旨在作為 :mod:`dbm` "
"模組的最後手段，當沒有更強大的模組可用時。 :mod:`dbm.dumb` "
"模組不是為了提高速度而編寫的，並且不像其他資料庫模組那樣被頻繁使用。"

#: ../../library/dbm.rst:336
#, fuzzy
msgid ""
"The :mod:`dbm.dumb` module provides a persistent dictionary-like interface "
"which is written entirely in Python.  Unlike other modules such as :mod:`dbm."
"gnu` no external library is required.  As with other persistent mappings, "
"the keys and values are always stored as bytes."
msgstr ""
":mod:`dbm.dumb` 模組提供了一個持久的類似字典的介面，它完全用 Python 編寫。與 "
":mod:`dbm.gnu` "
"等其他模組不同，不需要外部庫。與其他持久映射一樣，鍵和值始終儲存為位元組。"

#: ../../library/dbm.rst:341
#, fuzzy
msgid "The module defines the following:"
msgstr "該模組定義了以下內容："

#: ../../library/dbm.rst:346
#, fuzzy
msgid ""
"Raised on :mod:`dbm.dumb`-specific errors, such as I/O errors.  :exc:"
"`KeyError` is raised for general mapping errors like specifying an incorrect "
"key."
msgstr ""
"引發 :mod:`dbm.dumb` 特定錯誤，例如 I/O 錯誤。 :exc:`KeyError` "
"是針對一般映射錯誤（例如指定不正確的鍵）而引發的。"

#: ../../library/dbm.rst:352
#, fuzzy
msgid ""
"Open a ``dumbdbm`` database and return a dumbdbm object.  The *filename* "
"argument is the basename of the database file (without any specific "
"extensions).  When a dumbdbm database is created, files with :file:`.dat` "
"and :file:`.dir` extensions are created."
msgstr ""
"打開一個 ``dumbdbm`` 資料庫並回傳一個 dumbdbm 物件。 *filename* "
"參數是資料庫文件的基本名稱（沒有任何特定的擴充名）。建立 dumbdbm 資料庫時，"
"會建立擴充名為 :file:`.dat` 和 :file:`.dir` 的文件。"

#: ../../library/dbm.rst:380
#, fuzzy
msgid ""
"It is possible to crash the Python interpreter when loading a database with "
"a sufficiently large/complex entry due to stack depth limitations in "
"Python's AST compiler."
msgstr "由於 Python 的 AST "
"編譯器中的堆疊深度限制，在加載具有足夠大/複雜條目的資料庫時，Python "
"直譯器可能會崩潰。"

#: ../../library/dbm.rst:384
#, fuzzy
msgid ""
":func:`.open` always creates a new database when the flag has the value "
"``'n'``."
msgstr ":func:`.open` 總是在旗標的值為 ``'n'`` 時建立一個新資料庫。"

#: ../../library/dbm.rst:388
#, fuzzy
msgid ""
"A database opened with flags ``'r'`` is now read-only.  Opening with flags "
"``'r'`` and ``'w'`` no longer creates a database if it does not exist."
msgstr "使用旗標 ``'r'`` 打開的資料庫現在是只讀的。如果資料庫不存在，則使用旗標 ``r``和“"
"w”打開將不再建立資料庫。"

#: ../../library/dbm.rst:396
#, fuzzy
msgid ""
"In addition to the methods provided by the :class:`collections.abc."
"MutableMapping` class, :class:`dumbdbm` objects provide the following "
"methods:"
msgstr ""
"除了 :class:`collections.abc.MutableMapping` 類提供的方法外，:class:`dumbdbm`"
" 對像還提供以下方法："

#: ../../library/dbm.rst:402
#, fuzzy
msgid ""
"Synchronize the on-disk directory and data files.  This method is called by "
"the :meth:`Shelve.sync` method."
msgstr "同步磁盤目錄和資料文件。此方法由 Shelve.sync 方法呼叫。"

#: ../../library/dbm.rst:407
#, fuzzy
msgid "Close the ``dumbdbm`` database."
msgstr "關閉 ``dumbdbm`` 資料庫。"
