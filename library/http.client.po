# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-24 00:16+0000\n"
"PO-Revision-Date: 2018-05-23 16:03+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/http.client.rst:2
msgid ":mod:`http.client` --- HTTP protocol client"
msgstr ":mod:`http.client` --- HTTP 協定用戶端"

#: ../../library/http.client.rst:7
msgid "**Source code:** :source:`Lib/http/client.py`"
msgstr "**原始碼：**\\ :source:`Lib/http/client.py`"

#: ../../library/http.client.rst:17
#, fuzzy
msgid ""
"This module defines classes that implement the client side of the HTTP and "
"HTTPS protocols.  It is normally not used directly --- the module :mod:"
"`urllib.request` uses it to handle URLs that use HTTP and HTTPS."
msgstr ""
"該模組定義了實作 HTTP 和 HTTPS 協定用戶端的類。它通常不直接使用——模組 "
":mod:`urllib.request` 使用它來處理使用 HTTP 和 HTTPS 的 URL。"

#: ../../library/http.client.rst:23
#, fuzzy
msgid ""
"The `Requests package <https://requests.readthedocs.io/en/master/>`_ is "
"recommended for a higher-level HTTP client interface."
msgstr ""
"`請求包 <https://requests.readthedocs.io/en/master/>`_ 推薦用於更高階別的 "
"HTTP 用戶端介面。"

#: ../../library/http.client.rst:28
#, fuzzy
msgid ""
"HTTPS support is only available if Python was compiled with SSL support "
"(through the :mod:`ssl` module)."
msgstr "僅當 Python 編譯時支援 SSL（通過 :mod:`ssl` 模組）時，HTTPS 支援才可用。"

#: ../../includes/wasm-notavail.rst:3
#, fuzzy
msgid ":ref:`Availability <availability>`: not Emscripten, not WASI."
msgstr ":ref:`Availability <availability>`：不是 Emscripten，不是 WASI。"

#: ../../includes/wasm-notavail.rst:5
#, fuzzy
msgid ""
"This module does not work or is not available on WebAssembly platforms "
"``wasm32-emscripten`` and ``wasm32-wasi``. See :ref:`wasm-availability` for "
"more information."
msgstr ""
"此模組在 WebAssembly 平台 ``wasm32-emscripten`` 和 ``wasm32-wasi`` 上不起作用或不可用"
"。有關更多資訊，請參閱 :ref:`wasm-availability`。"

#: ../../library/http.client.rst:33
#, fuzzy
msgid "The module provides the following classes:"
msgstr "該模組提供以下類："

#: ../../library/http.client.rst:39
#, fuzzy
msgid ""
"An :class:`HTTPConnection` instance represents one transaction with an HTTP "
"server.  It should be instantiated by passing it a host and optional port "
"number.  If no port number is passed, the port is extracted from the host "
"string if it has the form ``host:port``, else the default HTTP port (80) is "
"used.  If the optional *timeout* parameter is given, blocking operations "
"(like connection attempts) will timeout after that many seconds (if it is "
"not given, the global default timeout setting is used). The optional "
"*source_address* parameter may be a tuple of a (host, port) to use as the "
"source address the HTTP connection is made from. The optional *blocksize* "
"parameter sets the buffer size in bytes for sending a file-like message body."
msgstr ""
":class:`HTTPConnection` 實例表示與 HTTP 伺服器的一個事務。它應該通過傳遞一個"
"主機和可選的端口號來實例化。如果沒有傳遞端口號，如果端口的格式為“host:port”，"
"則從主機字串中提取端口，否則使用預設的 HTTP 端口 (80)。如果給出可選的 "
"*timeout* 參數，阻塞操作（如連接嘗試）將在該秒數後超時（如果未給出，則使用全"
"局預設超時設定）。可選的 *source_address* 參數可以是 (host, port) 的元組，"
"用作建立 HTTP 連接的源地址。可選的 *blocksize* "
"參數以位元組為單位設定緩衝區大小，用於發送類似文件的消息正文。"

#: ../../library/http.client.rst:51
#, fuzzy
msgid ""
"For example, the following calls all create instances that connect to the "
"server at the same host and port::"
msgstr "例如，以下呼叫所有在同一主機和端口連接到伺服器的建立實例："

#: ../../library/http.client.rst:59
msgid "*source_address* was added."
msgstr "新增 *source_address*\\ 。"

#: ../../library/http.client.rst:62
#, fuzzy
msgid ""
"The  *strict* parameter was removed. HTTP 0.9-style \"Simple Responses\" are "
"no longer supported."
msgstr "*strict* 參數已刪除。不再支援 HTTP 0.9 樣式的“簡單響應”。"

#: ../../library/http.client.rst:66
msgid "*blocksize* parameter was added."
msgstr "新增 *blocksize* 參數。"

#: ../../library/http.client.rst:75
#, fuzzy
msgid ""
"A subclass of :class:`HTTPConnection` that uses SSL for communication with "
"secure servers.  Default port is ``443``.  If *context* is specified, it "
"must be a :class:`ssl.SSLContext` instance describing the various SSL "
"options."
msgstr ""
"HTTPConnection 的子類別，使用 SSL 與安全伺服器通信。預設端口是 ``443``。"
"如果指定了 *context*，它必須是一個描述各種 SSL 選項的 :class:`ssl.SSLContext`"
" 實例。"

#: ../../library/http.client.rst:80
#, fuzzy
msgid "Please read :ref:`ssl-security` for more information on best practices."
msgstr "請閱讀 :ref:`ssl-security` 以獲取有關最佳實踐的更多資訊。"

#: ../../library/http.client.rst:82
msgid "*source_address*, *context* and *check_hostname* were added."
msgstr "新增 *source_address*\\ 、\\ *context* 與 *check_hostname*\\ 。"

#: ../../library/http.client.rst:85
#, fuzzy
msgid ""
"This class now supports HTTPS virtual hosts if possible (that is, if :data:"
"`ssl.HAS_SNI` is true)."
msgstr "此類現在盡可能支援 HTTPS 虛擬主機（即，如果 :data:`ssl.HAS_SNI` 為真）。"

#: ../../library/http.client.rst:89
#, fuzzy
msgid ""
"The *strict* parameter was removed. HTTP 0.9-style \"Simple Responses\" are "
"no longer supported."
msgstr "*strict* 參數已刪除。不再支援 HTTP 0.9 樣式的“簡單響應”。"

#: ../../library/http.client.rst:93
#, fuzzy
msgid ""
"This class now performs all the necessary certificate and hostname checks by "
"default. To revert to the previous, unverified, behavior :func:`ssl."
"_create_unverified_context` can be passed to the *context* parameter."
msgstr ""
"此類現在預設執行所有必要的證書和主機名檢查。要恢復到以前的、未經驗證的行為，"
"可以將 ssl._create_unverified_context 傳遞給 *context* 參數。"

#: ../../library/http.client.rst:99
#, fuzzy
msgid ""
"This class now enables TLS 1.3 :attr:`ssl.SSLContext.post_handshake_auth` "
"for the default *context* or when *cert_file* is passed with a custom "
"*context*."
msgstr ""
"此類現在為預設 *context* 或當 *cert_file* 與自定義 *context* 一起傳遞時啟用 "
"TLS 1.3 :attr:`ssl.SSLContext.post_handshake_auth`。"

#: ../../library/http.client.rst:104
#, fuzzy
msgid ""
"This class now sends an ALPN extension with protocol indicator ``http/1.1`` "
"when no *context* is given. Custom *context* should set ALPN protocols with :"
"meth:`~ssl.SSLContext.set_alpn_protocol`."
msgstr ""
"當沒有給出 *context* 時，此類現在發送帶有協定指示符“http/1.1”的 ALPN 擴充。"
"自定義 *context* 應該使用 :meth:`~ssl.SSLContext.set_alpn_protocol` 設定 "
"ALPN 協定。"

#: ../../library/http.client.rst:111
#, fuzzy
msgid ""
"*key_file* and *cert_file* are deprecated in favor of *context*. Please use :"
"meth:`ssl.SSLContext.load_cert_chain` instead, or let :func:`ssl."
"create_default_context` select the system's trusted CA certificates for you."
msgstr ""
"*key_file* 和 *cert_file* 已棄用，取而代之的是 *context*。請改用 :meth:`ssl."
"SSLContext.load_cert_chain`，或讓 :func:`ssl.create_default_context` "
"為您選擇系統的可信 CA 證書。"

#: ../../library/http.client.rst:116
#, fuzzy
msgid ""
"The *check_hostname* parameter is also deprecated; the :attr:`ssl.SSLContext."
"check_hostname` attribute of *context* should be used instead."
msgstr ""
"*check_hostname* 參數也已棄用；應改用 *context* 的 :attr:`ssl.SSLContext."
"check_hostname` 屬性。"

#: ../../library/http.client.rst:123
#, fuzzy
msgid ""
"Class whose instances are returned upon successful connection.  Not "
"instantiated directly by user."
msgstr "成功連接後回傳其實例的類。不由使用者直接實例化。"

#: ../../library/http.client.rst:126
#, fuzzy
msgid ""
"The *strict* parameter was removed. HTTP 0.9 style \"Simple Responses\" are "
"no longer supported."
msgstr "*strict* 參數已刪除。不再支援 HTTP 0.9 樣式的“簡單響應”。"

#: ../../library/http.client.rst:130
#, fuzzy
msgid "This module provides the following function:"
msgstr "該模組提供以下功能："

#: ../../library/http.client.rst:134
#, fuzzy
msgid ""
"Parse the headers from a file pointer *fp* representing a HTTP request/"
"response. The file has to be a :class:`BufferedIOBase` reader (i.e. not "
"text) and must provide a valid :rfc:`2822` style header."
msgstr ""
"從表示 HTTP 請求/響應的文件指標 *fp* 解析標頭。該文件必須是 BufferedIOBase "
"閱讀器（即不是文本），並且必須提供有效的 :rfc:`2822` 樣式標頭。"

#: ../../library/http.client.rst:138
#, fuzzy
msgid ""
"This function returns an instance of :class:`http.client.HTTPMessage` that "
"holds the header fields, but no payload (the same as :attr:`HTTPResponse."
"msg` and :attr:`http.server.BaseHTTPRequestHandler.headers`). After "
"returning, the file pointer *fp* is ready to read the HTTP body."
msgstr ""
"此函式回傳一個 http.client.HTTPMessage "
"的實例，該實例包含標頭欄位，但沒有負載（與 HTTPResponse.msg 和 "
"http.server.BaseHTTPRequestHandler.headers 相同） ).回傳後，文件指標 *fp* "
"準備好讀取 HTTP 主體。"

#: ../../library/http.client.rst:145
#, fuzzy
msgid ""
":meth:`parse_headers` does not parse the start-line of a HTTP message; it "
"only parses the ``Name: value`` lines. The file has to be ready to read "
"these field lines, so the first line should already be consumed before "
"calling the function."
msgstr ""
":meth:`parse_headers` 不解析 HTTP 消息的起始行；它只解析 ``Name: value`` 行。"
"該文件必須準備好讀取這些欄位行，因此在呼叫該函式之前應該已經使用了第一行。"

#: ../../library/http.client.rst:150
#, fuzzy
msgid "The following exceptions are raised as appropriate:"
msgstr "適當時提出以下例外情況："

#: ../../library/http.client.rst:155
#, fuzzy
msgid ""
"The base class of the other exceptions in this module.  It is a subclass of :"
"exc:`Exception`."
msgstr "該模組中其他例外的基底類別。它是 :exc:`Exception` 的子類別。"

#: ../../library/http.client.rst:161 ../../library/http.client.rst:172
#: ../../library/http.client.rst:177 ../../library/http.client.rst:182
#: ../../library/http.client.rst:187 ../../library/http.client.rst:192
#, fuzzy
msgid "A subclass of :exc:`HTTPException`."
msgstr ":exc:`HTTPException` 的子類別。"

#: ../../library/http.client.rst:166
#, fuzzy
msgid ""
"A subclass of :exc:`HTTPException`, raised if a port is given and is either "
"non-numeric or empty."
msgstr ":exc:`HTTPException` 的子類別，如果給定端口且非數字或空則引發。"

#: ../../library/http.client.rst:197 ../../library/http.client.rst:202
#: ../../library/http.client.rst:207
#, fuzzy
msgid "A subclass of :exc:`ImproperConnectionState`."
msgstr ":exc:`ImproperConnectionState` 的子類別。"

#: ../../library/http.client.rst:212
#, fuzzy
msgid ""
"A subclass of :exc:`HTTPException`.  Raised if a server responds with a HTTP "
"status code that we don't understand."
msgstr ":exc:`HTTPException` 的子類別。如果伺服器響應我們不理解的 HTTP "
"狀態程式碼，則引發。"

#: ../../library/http.client.rst:218
#, fuzzy
msgid ""
"A subclass of :exc:`HTTPException`.  Raised if an excessively long line is "
"received in the HTTP protocol from the server."
msgstr ":exc:`HTTPException` 的子類別。如果在 HTTP "
"協定中從伺服器接收到過長的行，則引發。"

#: ../../library/http.client.rst:224
#, fuzzy
msgid ""
"A subclass of :exc:`ConnectionResetError` and :exc:`BadStatusLine`.  Raised "
"by :meth:`HTTPConnection.getresponse` when the attempt to read the response "
"results in no data read from the connection, indicating that the remote end "
"has closed the connection."
msgstr ""
"ConnectionResetError 和 BadStatusLine 的子類別。由 :meth:`HTTPConnection."
"getresponse` "
"引發，當嘗試讀取響應導致沒有從連接讀取資料時，表明遠程端已關閉連接。"

#: ../../library/http.client.rst:229
#, fuzzy
msgid "Previously, :exc:`BadStatusLine`\\ ``('')`` was raised."
msgstr "以前，:exc:`BadStatusLine`\\ ``('')`` 被提出。"

#: ../../library/http.client.rst:233
#, fuzzy
msgid "The constants defined in this module are:"
msgstr "該模組中定義的常數是："

#: ../../library/http.client.rst:237
#, fuzzy
msgid "The default port for the HTTP protocol (always ``80``)."
msgstr "HTTP 協定的預設端口（始終為 ``80``）。"

#: ../../library/http.client.rst:241
#, fuzzy
msgid "The default port for the HTTPS protocol (always ``443``)."
msgstr "HTTPS 協定的預設端口（總是 ``443``）。"

#: ../../library/http.client.rst:245
#, fuzzy
msgid "This dictionary maps the HTTP 1.1 status codes to the W3C names."
msgstr "該字典將 HTTP 1.1 狀態程式碼映射到 W3C 名稱。"

#: ../../library/http.client.rst:247
#, fuzzy
msgid ""
"Example: ``http.client.responses[http.client.NOT_FOUND]`` is ``'Not Found'``."
msgstr "示例：``http.client.responses[http.client.NOT_FOUND]`` 是``'未找到'``。"

#: ../../library/http.client.rst:249
#, fuzzy
msgid ""
"See :ref:`http-status-codes` for a list of HTTP status codes that are "
"available in this module as constants."
msgstr "有關此模組中作為常數可用的 HTTP 狀態程式碼列表，請參閱 :ref:`http-status-"
"codes`。"

#: ../../library/http.client.rst:256
msgid "HTTPConnection Objects"
msgstr "HTTPConnection 物件"

#: ../../library/http.client.rst:258
#, fuzzy
msgid ":class:`HTTPConnection` instances have the following methods:"
msgstr ":class:`HTTPConnection` 實例具有以下方法："

#: ../../library/http.client.rst:264
#, fuzzy
msgid ""
"This will send a request to the server using the HTTP request method "
"*method* and the selector *url*."
msgstr "這將使用 HTTP 請求方法 *method* 和選擇器 *url* 向伺服器發送請求。"

#: ../../library/http.client.rst:267
#, fuzzy
msgid ""
"If *body* is specified, the specified data is sent after the headers are "
"finished.  It may be a :class:`str`, a :term:`bytes-like object`, an open :"
"term:`file object`, or an iterable of :class:`bytes`.  If *body* is a "
"string, it is encoded as ISO-8859-1, the default for HTTP.  If it is a bytes-"
"like object, the bytes are sent as is.  If it is a :term:`file object`, the "
"contents of the file is sent; this file object should support at least the "
"``read()`` method.  If the file object is an instance of :class:`io."
"TextIOBase`, the data returned by the ``read()`` method will be encoded as "
"ISO-8859-1, otherwise the data returned by ``read()`` is sent as is.  If "
"*body* is an iterable, the elements of the iterable are sent as is until the "
"iterable is exhausted."
msgstr ""
"如果指定了*body*，則指定的資料在標頭完成後發送。它可能是一個 :class:`str`、"
"一個 :term:`bytes-like object`、一個開放的 :term:`file object` 或一個 "
":class:`bytes` 的可疊代物件。如果 *body* 是一個字串，它被編碼為 ISO-8859-1，"
"HTTP 的預設值。如果它是類似位元組的物件，則按原樣發送位元組。如果是 :term:`"
"file object`，則發送文件的內容；這個文件物件應該至少支援 ``read()`` 方法。"
"如果文件對像是 io.TextIOBase 的實例，則 read() 方法回傳的資料將被編碼為 "
"ISO-8859-1，否則 read() 回傳的資料`` 按原樣發送。如果 *body* "
"是一個可疊代物件，則可疊代物件的元素將按原樣發送，直到該可疊代物件耗盡為止。"

#: ../../library/http.client.rst:279
#, fuzzy
msgid ""
"The *headers* argument should be a mapping of extra HTTP headers to send "
"with the request."
msgstr "*headers* 參數應該是與請求一起發送的額外 HTTP 標頭的映射。"

#: ../../library/http.client.rst:282
#, fuzzy
msgid ""
"If *headers* contains neither Content-Length nor Transfer-Encoding, but "
"there is a request body, one of those header fields will be added "
"automatically.  If *body* is ``None``, the Content-Length header is set to "
"``0`` for methods that expect a body (``PUT``, ``POST``, and ``PATCH``).  If "
"*body* is a string or a bytes-like object that is not also a :term:`file "
"<file object>`, the Content-Length header is set to its length.  Any other "
"type of *body* (files and iterables in general) will be chunk-encoded, and "
"the Transfer-Encoding header will automatically be set instead of Content-"
"Length."
msgstr ""
"如果 *headers* 既不包含 Content-Length 也不包含 Transfer-"
"Encoding，但有一個請求正文，這些標頭欄位之一將被自動新增。如果 *body* "
"為 ``None``，則對於需要主體的方法（ ``PUT``、 ``POST``和 ``PATCH``），Content-Length "
"標頭設定為 ``0`` .如果 *body* 是一個字串或類似位元組的物件，但不是 :term:`file "
"<file object>`，則 Content-Length 標頭設定為它的長度。任何其他型別的 "
"*body*（通常是文件和可疊代物件）將被塊編碼，並且將自動設定 Transfer-Encoding "
"標頭而不是 Content-Length。"

#: ../../library/http.client.rst:294
#, fuzzy
msgid ""
"The *encode_chunked* argument is only relevant if Transfer-Encoding is "
"specified in *headers*.  If *encode_chunked* is ``False``, the "
"HTTPConnection object assumes that all encoding is handled by the calling "
"code.  If it is ``True``, the body will be chunk-encoded."
msgstr ""
"*encode_chunked* 參數僅在 *headers* 中指定了 Transfer-Encoding 時才相關。"
"如果 *encode_chunked* 為 ``False``，則 HTTPConnection "
"物件假定所有編碼均由呼叫程式碼處理。如果它是 ``True``，正文將被塊編碼。"

#: ../../library/http.client.rst:300
#, fuzzy
msgid ""
"Chunked transfer encoding has been added to the HTTP protocol version 1.1.  "
"Unless the HTTP server is known to handle HTTP 1.1, the caller must either "
"specify the Content-Length, or must pass a :class:`str` or bytes-like object "
"that is not also a file as the body representation."
msgstr ""
"分塊傳輸編碼已新增到 HTTP 協定版本 1.1。除非已知 HTTP 伺服器可以處理 HTTP 1."
"1，否則呼叫者必須指定 Content-Length，或者必須傳遞一個 :class:`str` "
"或類似位元組的物件，它也不是文件作為正文表示。"

#: ../../library/http.client.rst:306
#, fuzzy
msgid "*body* can now be an iterable."
msgstr "*body* 現在可以是一個可疊代物件。"

#: ../../library/http.client.rst:309
#, fuzzy
msgid ""
"If neither Content-Length nor Transfer-Encoding are set in *headers*, file "
"and iterable *body* objects are now chunk-encoded. The *encode_chunked* "
"argument was added. No attempt is made to determine the Content-Length for "
"file objects."
msgstr ""
"如果在 *headers* 中既沒有設定 Content-Length 也沒有設定 Transfer-Encoding，"
"文件和可疊代的 *body* 物件現在是塊編碼的。新增了 *encode_chunked* "
"參數。不會嘗試確定文件物件的內容長度。"

#: ../../library/http.client.rst:318
#, fuzzy
msgid ""
"Should be called after a request is sent to get the response from the "
"server. Returns an :class:`HTTPResponse` instance."
msgstr "應在發送請求以獲取伺服器響應後呼叫。回傳一個 :class:`HTTPResponse` 實例。"

#: ../../library/http.client.rst:323
#, fuzzy
msgid ""
"Note that you must have read the whole response before you can send a new "
"request to the server."
msgstr "請注意，您必須先閱讀整個響應，然後才能向伺服器發送新請求。"

#: ../../library/http.client.rst:326
#, fuzzy
msgid ""
"If a :exc:`ConnectionError` or subclass is raised, the :class:"
"`HTTPConnection` object will be ready to reconnect when a new request is "
"sent."
msgstr ""
"如果引發 :exc:`ConnectionError` 或子類別，則 :class:`HTTPConnection` "
"物件將準備好在發送新請求時重新連接。"

#: ../../library/http.client.rst:334
#, fuzzy
msgid ""
"Set the debugging level.  The default debug level is ``0``, meaning no "
"debugging output is printed.  Any value greater than ``0`` will cause all "
"currently defined debug output to be printed to stdout.  The ``debuglevel`` "
"is passed to any new :class:`HTTPResponse` objects that are created."
msgstr ""
"設定除錯級別。預設除錯級別為 ``0``，表示不印出除錯輸出。任何大於 ``0``的值都會導致"
"所有當前定義的除錯輸出印出到標準輸出。 ``debuglevel`` 被傳遞給任何新建立的 "
"HTTPResponse 物件。"

#: ../../library/http.client.rst:344
#, fuzzy
msgid ""
"Set the host and the port for HTTP Connect Tunnelling. This allows running "
"the connection through a proxy server."
msgstr "為 HTTP 連接隧道設定主機和端口。這允許通過代理伺服器運行連接。"

#: ../../library/http.client.rst:347
#, fuzzy
msgid ""
"The host and port arguments specify the endpoint of the tunneled connection "
"(i.e. the address included in the CONNECT request, *not* the address of the "
"proxy server)."
msgstr "主機和端口參數指定隧道連接的端點（即包含在 CONNECT "
"請求中的地址，*不是*代理伺服器的地址）。"

#: ../../library/http.client.rst:351
#, fuzzy
msgid ""
"The headers argument should be a mapping of extra HTTP headers to send with "
"the CONNECT request."
msgstr "headers 參數應該是與 CONNECT 請求一起發送的額外 HTTP 標頭的映射。"

#: ../../library/http.client.rst:354
#, fuzzy
msgid ""
"For example, to tunnel through a HTTPS proxy server running locally on port "
"8080, we would pass the address of the proxy to the :class:`HTTPSConnection` "
"constructor, and the address of the host that we eventually want to reach to "
"the :meth:`~HTTPConnection.set_tunnel` method::"
msgstr ""
"例如，要通過在端口 8080 上本地運行的 HTTPS 代理伺服器建立隧道，"
"我們會將代理的地址傳遞給 HTTPSConnection 構造函式，"
"並將我們最終想要到達的主機地址傳遞給 :meth :`~HTTPConnection.set_tunnel` "
"方法::"

#: ../../library/http.client.rst:369
#, fuzzy
msgid ""
"Connect to the server specified when the object was created.  By default, "
"this is called automatically when making a request if the client does not "
"already have a connection."
msgstr "連接到建立物件時指定的伺服器。預設情況下，如果用戶端尚未建立連接，則在發出請"
"求時會自動呼叫它。"

#: ../../library/http.client.rst:384
msgid ""
"Raises an :ref:`auditing event <auditing>` ``http.client.connect`` with "
"arguments ``self``, ``host``, ``port``."
msgstr ""
"引發一個附帶引數 ``self``、``host``、``port`` 的\\ :ref:`稽核事件 <auditing>` ``http.client.connect``。"

#: ../../library/http.client.rst:378
#, fuzzy
msgid "Close the connection to the server."
msgstr "關閉與伺服器的連接。"

#: ../../library/http.client.rst:383
#, fuzzy
msgid "Buffer size in bytes for sending a file-like message body."
msgstr "用於發送類似文件的消息正文的緩衝區大小（以位元組為單位）。"

#: ../../library/http.client.rst:388
#, fuzzy
msgid ""
"As an alternative to using the :meth:`request` method described above, you "
"can also send your request step by step, by using the four functions below."
msgstr "作為使用上述 :meth:`request` "
"方法的替代方法，您還可以使用以下四個函式逐步發送您的請求。"

#: ../../library/http.client.rst:395
#, fuzzy
msgid ""
"This should be the first call after the connection to the server has been "
"made. It sends a line to the server consisting of the *method* string, the "
"*url* string, and the HTTP version (``HTTP/1.1``).  To disable automatic "
"sending of ``Host:`` or ``Accept-Encoding:`` headers (for example to accept "
"additional content encodings), specify *skip_host* or *skip_accept_encoding* "
"with non-False values."
msgstr ""
"這應該是與伺服器建立連接後的第一個呼叫。它向伺服器發送一行，其中包含 *method*"
" 字串、*url* 字串和 HTTP 版本 (``HTTP/1.1``)。要禁用自動發送 ``Host:`` 或 "
"``Accept-Encoding:`` 標頭（例如接受額外的內容編碼），指定 *skip_host* 或 "
"*skip_accept_encoding* 為非假值。"

#: ../../library/http.client.rst:405
#, fuzzy
msgid ""
"Send an :rfc:`822`\\ -style header to the server.  It sends a line to the "
"server consisting of the header, a colon and a space, and the first "
"argument.  If more arguments are given, continuation lines are sent, each "
"consisting of a tab and an argument."
msgstr ""
"向伺服器發送 :rfc:`822`\\ 樣式的標頭。它向伺服器發送一行，其中包含標題、一個"
"冒號和一個空格以及第一個參數。如果給出了更多參數，則發送續行，每行由一個製表"
"符和一個參數組成。"

#: ../../library/http.client.rst:413
#, fuzzy
msgid ""
"Send a blank line to the server, signalling the end of the headers. The "
"optional *message_body* argument can be used to pass a message body "
"associated with the request."
msgstr "向伺服器發送一個空行，表示標頭結束。可選的 *message_body* "
"參數可用於傳遞與請求關聯的消息正文。"

#: ../../library/http.client.rst:417
#, fuzzy
msgid ""
"If *encode_chunked* is ``True``, the result of each iteration of "
"*message_body* will be chunk-encoded as specified in :rfc:`7230`, Section "
"3.3.1.  How the data is encoded is dependent on the type of *message_body*.  "
"If *message_body* implements the :ref:`buffer interface <bufferobjects>` the "
"encoding will result in a single chunk. If *message_body* is a :class:"
"`collections.abc.Iterable`, each iteration of *message_body* will result in "
"a chunk.  If *message_body* is a :term:`file object`, each call to ``."
"read()`` will result in a chunk. The method automatically signals the end of "
"the chunk-encoded data immediately after *message_body*."
msgstr ""
"如果 *encode_chunked* 為 ``True``，則 *message_body* 的每次疊代的結果將按照 "
":rfc:`7230`，第 3.3.1 節中的規定進行塊編碼。資料的編碼方式取決於 "
"*message_body* 的型別。如果 *message_body* 實作了 :ref:`buffer interface "
"<bufferobjects>` 編碼將導致單個塊。如果 *message_body* 是一個 "
":class:`collections.abc.Iterable`，*message_body* 的每次疊代都會產生一個塊。"
"如果 *message_body* 是一個文件物件，每次呼叫 .read() 都會產生一個塊。"
"該方法會在 *message_body* 之後立即自動發出塊編碼資料的結束信號。"

#: ../../library/http.client.rst:428
#, fuzzy
msgid ""
"Due to the chunked encoding specification, empty chunks yielded by an "
"iterator body will be ignored by the chunk-encoder. This is to avoid "
"premature termination of the read of the request by the target server due to "
"malformed encoding."
msgstr "由於分塊編碼規範，疊代器主體產生的空塊將被塊編碼器忽略。這是為了避免由於格式"
"錯誤的編碼而導致目標伺服器過早終止請求的讀取。"

#: ../../library/http.client.rst:433
#, fuzzy
msgid "Chunked encoding support.  The *encode_chunked* parameter was added."
msgstr "分塊編碼支援。新增了 *encode_chunked* 參數。"

#: ../../library/http.client.rst:440
#, fuzzy
msgid ""
"Send data to the server.  This should be used directly only after the :meth:"
"`endheaders` method has been called and before :meth:`getresponse` is called."
msgstr "向伺服器發送資料。這應該僅在呼叫 endheaders 方法之後和呼叫 getresponse "
"之前直接使用。"

#: ../../library/http.client.rst:455
msgid ""
"Raises an :ref:`auditing event <auditing>` ``http.client.send`` with "
"arguments ``self``, ``data``."
msgstr ""
"引發一個附帶引數 ``self``、``data`` 的\\ :ref:`稽核事件 <auditing>` ``http.client.send``。"

#: ../../library/http.client.rst:450
msgid "HTTPResponse Objects"
msgstr "HTTPResponse 物件"

#: ../../library/http.client.rst:452
#, fuzzy
msgid ""
"An :class:`HTTPResponse` instance wraps the HTTP response from the server.  "
"It provides access to the request headers and the entity body.  The response "
"is an iterable object and can be used in a with statement."
msgstr ""
":class:`HTTPResponse` 實例包裝來自伺服器的 HTTP "
"響應。它提供對請求標頭和實體主體的訪問。響應是一個可疊代物件，可以在 with "
"語句中使用。"

#: ../../library/http.client.rst:457
#, fuzzy
msgid ""
"The :class:`io.BufferedIOBase` interface is now implemented and all of its "
"reader operations are supported."
msgstr ":class:`io.BufferedIOBase` 介面現已實作，並且支援其所有讀取器操作。"

#: ../../library/http.client.rst:464
#, fuzzy
msgid "Reads and returns the response body, or up to the next *amt* bytes."
msgstr "讀取並回傳響應主體，或直到下一個 *amt* 位元組。"

#: ../../library/http.client.rst:468
#, fuzzy
msgid ""
"Reads up to the next len(b) bytes of the response body into the buffer *b*. "
"Returns the number of bytes read."
msgstr "將響應主體的下一個 len(b) 個位元組讀入緩衝區 *b*。回傳讀取的位元組數。"

#: ../../library/http.client.rst:475
#, fuzzy
msgid ""
"Return the value of the header *name*, or *default* if there is no header "
"matching *name*.  If there is more than one  header with the name *name*, "
"return all of the values joined by ', '.  If *default* is any iterable other "
"than a single string, its elements are similarly returned joined by commas."
msgstr ""
"回傳標頭 *name* 的值，如果沒有標頭匹配 *name* 則回傳 *default* 。"
"如果有多個標頭名稱為 *name*，則回傳所有由 ', ' 連接的值。如果 *default* "
"是除單個字串之外的任何可疊代物件，則其元素類似地以逗號連接回傳。"

#: ../../library/http.client.rst:482
#, fuzzy
msgid "Return a list of (header, value) tuples."
msgstr "回傳 (header, value) 元組的列表。"

#: ../../library/http.client.rst:486
#, fuzzy
msgid "Return the ``fileno`` of the underlying socket."
msgstr "回傳底層 socket 的 ``fileno``。"

#: ../../library/http.client.rst:490
#, fuzzy
msgid ""
"A :class:`http.client.HTTPMessage` instance containing the response "
"headers.  :class:`http.client.HTTPMessage` is a subclass of :class:`email."
"message.Message`."
msgstr ""
"包含響應標頭的 :class:`http.client.HTTPMessage` 實例。 :class:`http.client."
"HTTPMessage` 是 :class:`email.message.Message` 的子類別。"

#: ../../library/http.client.rst:496
#, fuzzy
msgid ""
"HTTP protocol version used by server.  10 for HTTP/1.0, 11 for HTTP/1.1."
msgstr "伺服器使用的 HTTP 協定版本。 10 表示 HTTP/1.0，11 表示 HTTP/1.1。"

#: ../../library/http.client.rst:500
#, fuzzy
msgid ""
"URL of the resource retrieved, commonly used to determine if a redirect was "
"followed."
msgstr "檢索到的資源的 URL，通常用於確定是否遵循了重定向。"

#: ../../library/http.client.rst:504
#, fuzzy
msgid ""
"Headers of the response in the form of an :class:`email.message."
"EmailMessage` instance."
msgstr "email.message.EmailMessage 實例形式的響應標頭。"

#: ../../library/http.client.rst:508
#, fuzzy
msgid "Status code returned by server."
msgstr "伺服器回傳的狀態程式碼。"

#: ../../library/http.client.rst:512
#, fuzzy
msgid "Reason phrase returned by server."
msgstr "伺服器回傳的原因短語。"

#: ../../library/http.client.rst:516
#, fuzzy
msgid ""
"A debugging hook.  If :attr:`debuglevel` is greater than zero, messages will "
"be printed to stdout as the response is read and parsed."
msgstr "一個除錯鉤子。如果 :attr:`debuglevel` "
"大於零，則在讀取和解析響應時將消息印出到標準輸出。"

#: ../../library/http.client.rst:521
#, fuzzy
msgid "Is ``True`` if the stream is closed."
msgstr "如果流已關閉，則為 ``True``。"

#: ../../library/http.client.rst:525
#, fuzzy
msgid "Deprecated in favor of :attr:`~HTTPResponse.url`."
msgstr "已棄用，取而代之的是 :attr:`~HTTPResponse.url`。"

#: ../../library/http.client.rst:530
#, fuzzy
msgid "Deprecated in favor of :attr:`~HTTPResponse.headers`."
msgstr "已棄用，取而代之的是 :attr:`~HTTPResponse.headers`。"

#: ../../library/http.client.rst:535
#, fuzzy
msgid "Deprecated in favor of :attr:`~HTTPResponse.status`."
msgstr "已棄用，取而代之的是 :attr:`~HTTPResponse.status`。"

#: ../../library/http.client.rst:539
msgid "Examples"
msgstr "範例"

#: ../../library/http.client.rst:541
#, fuzzy
msgid "Here is an example session that uses the ``GET`` method::"
msgstr "這是一個使用 ``GET`` 方法的示例會話："

#: ../../library/http.client.rst:566
#, fuzzy
msgid ""
"Here is an example session that uses the ``HEAD`` method.  Note that the "
"``HEAD`` method never returns any data. ::"
msgstr "這是一個使用 ``HEAD`` 方法的示例會話。請注意，``HEAD`` 方法從不回傳任何資料。"
" ::"

#: ../../library/http.client.rst:581
#, fuzzy
msgid "Here is an example session that uses the ``POST`` method::"
msgstr "這是一個使用 ``POST`` 方法的示例會話："

#: ../../library/http.client.rst:597
#, fuzzy
msgid ""
"Client side HTTP ``PUT`` requests are very similar to ``POST`` requests. The "
"difference lies only on the server side where HTTP servers will allow "
"resources to be created via ``PUT`` requests. It should be noted that custom "
"HTTP methods are also handled in :class:`urllib.request.Request` by setting "
"the appropriate method attribute. Here is an example session that uses the "
"``PUT`` method::"
msgstr ""
"用戶端 HTTP ``PUT`` 請求與 ``POST`` 請求非常相似。區別僅在於伺服器端，其中 "
"HTTP 伺服器將允許通過 ``PUT``請求建立資源。應該注意的是，自定義 HTTP 方法也在 "
":class:`urllib.request.Request` "
"中通過設定適當的方法屬性來處理。這是一個使用 ``PUT``方法的示例會話："

#: ../../library/http.client.rst:618
msgid "HTTPMessage Objects"
msgstr "HTTPMessage 物件"

#: ../../library/http.client.rst:620
#, fuzzy
msgid ""
"An :class:`http.client.HTTPMessage` instance holds the headers from an HTTP "
"response.  It is implemented using the :class:`email.message.Message` class."
msgstr ""
":class:`http.client.HTTPMessage` 實例保存來自 HTTP 響應的標頭。它是使用 "
"email.message.Message 類實作的。"
