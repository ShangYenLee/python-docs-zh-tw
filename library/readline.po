# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-24 00:16+0000\n"
"PO-Revision-Date: 2018-05-23 16:09+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/readline.rst:2
msgid ":mod:`readline` --- GNU readline interface"
msgstr ":mod:`readline` --- GNU readline 介面"

#: ../../library/readline.rst:12
#, fuzzy
msgid ""
"The :mod:`readline` module defines a number of functions to facilitate "
"completion and reading/writing of history files from the Python interpreter. "
"This module can be used directly, or via the :mod:`rlcompleter` module, "
"which supports completion of Python identifiers at the interactive prompt.  "
"Settings made using  this module affect the behaviour of both the "
"interpreter's interactive prompt  and the prompts offered by the built-in :"
"func:`input` function."
msgstr ""
":mod:`readline` 模組定義了許多函式，以促進從 Python "
"直譯器完成和讀取/寫入歷史文件。該模組可以直接使用，也可以通過 "
":mod:`rlcompleter` 模組使用，該模組支援在交互式提示符下完成 Python 標識符。"
"使用此模組所做的設定會影響直譯器的交互式提示和內建 :func:`input` "
"函式提供的提示的行為。"

#: ../../library/readline.rst:20
#, fuzzy
msgid ""
"Readline keybindings may be configured via an initialization file, typically "
"``.inputrc`` in your home directory.  See `Readline Init File <https://"
"tiswww.cwru.edu/php/chet/readline/rluserman.html#Readline-Init-File>`_ in "
"the GNU Readline manual for information about the format and allowable "
"constructs of that file, and the capabilities of the Readline library in "
"general."
msgstr ""
"Readline 鍵綁定可以通過初始化文件進行配置，通常是您的主目錄中的 ``."
"inputrc``。請參閱 GNU Readline 手冊中的 `Readline Init File <https://tiswww."
"cwru.edu/php/chet/readline/rluserman.html#Readline-Init-File>`_ "
"有關該文件的格式和允許結構的資訊，以及 Readline 庫的一般功能。"

#: ../../library/readline.rst:29
#, fuzzy
msgid ""
"The underlying Readline library API may be implemented by the ``libedit`` "
"library instead of GNU readline. On macOS the :mod:`readline` module detects "
"which library is being used at run time."
msgstr ""
"底層的 Readline 庫 API 可以由 ``libedit`` 庫而不是 GNU readline 實作。在 "
"macOS 上，:mod:`readline` 模組檢測運行時正在使用哪個庫。"

#: ../../library/readline.rst:34
#, fuzzy
msgid ""
"The configuration file for ``libedit`` is different from that of GNU "
"readline. If you programmatically load configuration strings you can check "
"for the text \"libedit\" in :const:`readline.__doc__` to differentiate "
"between GNU readline and libedit."
msgstr ""
"``libedit`` 的配置文件與 GNU readline 的不同。如果您以編程方式加載配置字串，"
"您可以檢查 :const:`readline.__doc__` 中的文本 ``libedit`` 以區分 GNU readline 和 "
"libedit。"

#: ../../library/readline.rst:39
#, fuzzy
msgid ""
"If you use *editline*/``libedit`` readline emulation on macOS, the "
"initialization file located in your home directory is named ``.editrc``. For "
"example, the following content in ``~/.editrc`` will turn ON *vi* "
"keybindings and TAB completion::"
msgstr ""
"如果您在 macOS 上使用 *editline*/``libedit`` readline 仿真，"
"則位於您的主目錄中的初始化文件名為 ``.editrc``。例如，``~/."
"editrc`` 中的以下內容將開啟 *vi* 鍵綁定和 TAB 補全："

#: ../../library/readline.rst:49
#, fuzzy
msgid "Init file"
msgstr "初始化文件"

#: ../../library/readline.rst:51
#, fuzzy
msgid "The following functions relate to the init file and user configuration:"
msgstr "以下函式與初始化文件和使用者配置有關："

#: ../../library/readline.rst:56
#, fuzzy
msgid ""
"Execute the init line provided in the *string* argument. This calls :c:func:"
"`rl_parse_and_bind` in the underlying library."
msgstr "執行 *string* 參數中提供的 init 行。這會呼叫底層庫中的 "
":c:func:`rl_parse_and_bind`。"

#: ../../library/readline.rst:62
#, fuzzy
msgid ""
"Execute a readline initialization file. The default filename is the last "
"filename used. This calls :c:func:`rl_read_init_file` in the underlying "
"library."
msgstr ""
"執行一個 readline 初始化文件。預設文件名是上次使用的文件名。"
"這會呼叫底層庫中的 :c:func:`rl_read_init_file`。"

#: ../../library/readline.rst:67
#, fuzzy
msgid "Line buffer"
msgstr "行緩衝區"

#: ../../library/readline.rst:69
#, fuzzy
msgid "The following functions operate on the line buffer:"
msgstr "以下函式對行緩衝區進行操作："

#: ../../library/readline.rst:74
#, fuzzy
msgid ""
"Return the current contents of the line buffer (:c:data:`rl_line_buffer` in "
"the underlying library)."
msgstr "回傳行緩衝區的當前內容（底層庫中的:c:data:`rl_line_buffer`）。"

#: ../../library/readline.rst:80
#, fuzzy
msgid ""
"Insert text into the line buffer at the cursor position.  This calls :c:func:"
"`rl_insert_text` in the underlying library, but ignores the return value."
msgstr "在光標位置將文本插入行緩衝區。這會呼叫底層庫中的 "
":c:func:`rl_insert_text`，但會忽略回傳值。"

#: ../../library/readline.rst:87
#, fuzzy
msgid ""
"Change what's displayed on the screen to reflect the current contents of the "
"line buffer.  This calls :c:func:`rl_redisplay` in the underlying library."
msgstr "更改屏幕上顯示的內容以反映行緩衝區的當前內容。這會呼叫底層庫中的 "
":c:func:`rl_redisplay`。"

#: ../../library/readline.rst:92
#, fuzzy
msgid "History file"
msgstr "歷史文件"

#: ../../library/readline.rst:94
#, fuzzy
msgid "The following functions operate on a history file:"
msgstr "以下函式對歷史文件進行操作："

#: ../../library/readline.rst:99
#, fuzzy
msgid ""
"Load a readline history file, and append it to the history list. The default "
"filename is :file:`~/.history`.  This calls :c:func:`read_history` in the "
"underlying library."
msgstr ""
"加載一個 readline 歷史文件，並將其附加到歷史列表中。預設文件名為 :file:`~/."
"history`。這會呼叫底層庫中的 :c:func:`read_history`。"

#: ../../library/readline.rst:106
#, fuzzy
msgid ""
"Save the history list to a readline history file, overwriting any existing "
"file.  The default filename is :file:`~/.history`.  This calls :c:func:"
"`write_history` in the underlying library."
msgstr ""
"將歷史列表保存到 readline 歷史文件，覆蓋任何現有文件。預設文件名為 :file:`~/."
"history`。這會呼叫底層庫中的 :c:func:`write_history`。"

#: ../../library/readline.rst:113
#, fuzzy
msgid ""
"Append the last *nelements* items of history to a file.  The default "
"filename is :file:`~/.history`.  The file must already exist.  This calls :c:"
"func:`append_history` in the underlying library.  This function only exists "
"if Python was compiled for a version of the library that supports it."
msgstr ""
"將歷史的最後 *nelements* 項附加到文件中。預設文件名為 :file:`~/."
"history`。該文件必須已經存在。這會呼叫底層庫中的 :c:func:`append_history`。"
"此函式僅在 Python 為支援它的庫版本編譯時才存在。"

#: ../../library/readline.rst:125
#, fuzzy
msgid ""
"Set or return the desired number of lines to save in the history file. The :"
"func:`write_history_file` function uses this value to truncate the history "
"file, by calling :c:func:`history_truncate_file` in the underlying library.  "
"Negative values imply unlimited history file size."
msgstr ""
"設定或回傳要保存在歷史文件中的所需行數。 :func:`write_history_file` "
"函式通過呼叫底層庫中的:c:func:`history_truncate_file` "
"使用此值截斷歷史文件。負值意味著無限的歷史文件大小。"

#: ../../library/readline.rst:133
#, fuzzy
msgid "History list"
msgstr "歷史列表"

#: ../../library/readline.rst:135
#, fuzzy
msgid "The following functions operate on a global history list:"
msgstr "以下函式對全局歷史列表進行操作："

#: ../../library/readline.rst:140
#, fuzzy
msgid ""
"Clear the current history.  This calls :c:func:`clear_history` in the "
"underlying library.  The Python function only exists if Python was compiled "
"for a version of the library that supports it."
msgstr ""
"清除當前歷史記錄。這會呼叫底層庫中的 :c:func:`clear_history`。"
"只有在為支援它的庫版本編譯 Python 時，Python 函式才存在。"

#: ../../library/readline.rst:147
#, fuzzy
msgid ""
"Return the number of items currently in the history.  (This is different "
"from :func:`get_history_length`, which returns the maximum number of lines "
"that will be written to a history file.)"
msgstr "回傳當前歷史記錄中的項目數。 （這與 :func:`get_history_length` "
"不同，後者回傳將寫入歷史文件的最大行數。）"

#: ../../library/readline.rst:154
#, fuzzy
msgid ""
"Return the current contents of history item at *index*.  The item index is "
"one-based.  This calls :c:func:`history_get` in the underlying library."
msgstr "回傳 *index* 處歷史項的當前內容。項目索引以一為基礎。這會呼叫底層庫中的 "
":c:func:`history_get`。"

#: ../../library/readline.rst:160
#, fuzzy
msgid ""
"Remove history item specified by its position from the history. The position "
"is zero-based.  This calls :c:func:`remove_history` in the underlying "
"library."
msgstr "從歷史記錄中刪除由其位置指定的歷史記錄項。該職位是從零開始的。"
"這會呼叫底層庫中的 :c:func:`remove_history`。"

#: ../../library/readline.rst:167
#, fuzzy
msgid ""
"Replace history item specified by its position with *line*. The position is "
"zero-based.  This calls :c:func:`replace_history_entry` in the underlying "
"library."
msgstr ""
"用 *line* 替換由其位置指定的歷史項。該職位是從零開始的。這會呼叫底層庫中的 "
":c:func:`replace_history_entry`。"

#: ../../library/readline.rst:174
#, fuzzy
msgid ""
"Append *line* to the history buffer, as if it was the last line typed. This "
"calls :c:func:`add_history` in the underlying library."
msgstr "將 *line* 附加到歷史緩衝區，就好像它是最後輸入的行一樣。這會呼叫底層庫中的 "
":c:func:`add_history`。"

#: ../../library/readline.rst:180
#, fuzzy
msgid ""
"Enable or disable automatic calls to :c:func:`add_history` when reading "
"input via readline.  The *enabled* argument should be a Boolean value that "
"when true, enables auto history, and that when false, disables auto history."
msgstr ""
"通過 readline 讀取輸入時啟用或禁用對 :c:func:`add_history` 的自動呼叫。 "
"*enabled* 參數應該是一個布爾值，當為真時，啟用自動歷史記錄，當為假時，禁用自"
"動歷史記錄。"

#: ../../library/readline.rst:188
#, fuzzy
msgid ""
"Auto history is enabled by default, and changes to this do not persist "
"across multiple sessions."
msgstr "預設情況下啟用自動歷史記錄，對此的更改不會在多個會話中持續存在。"

#: ../../library/readline.rst:193
#, fuzzy
msgid "Startup hooks"
msgstr "啟動掛鉤"

#: ../../library/readline.rst:198
#, fuzzy
msgid ""
"Set or remove the function invoked by the :c:data:`rl_startup_hook` callback "
"of the underlying library.  If *function* is specified, it will be used as "
"the new hook function; if omitted or ``None``, any function already "
"installed is removed.  The hook is called with no arguments just before "
"readline prints the first prompt."
msgstr ""
"設定或刪除底層庫的 :c:data:`rl_startup_hook` 回呼呼叫的函式。如果指定了*funct"
"ion*，它將被用作新的鉤子函式；如果省略或 ``None`` ，則刪除任何已安裝的功能。在 "
"readline 印出第一個提示之前呼叫該掛鉤時不帶任何參數。"

#: ../../library/readline.rst:207
#, fuzzy
msgid ""
"Set or remove the function invoked by the :c:data:`rl_pre_input_hook` "
"callback of the underlying library.  If *function* is specified, it will be "
"used as the new hook function; if omitted or ``None``, any function already "
"installed is removed.  The hook is called with no arguments after the first "
"prompt has been printed and just before readline starts reading input "
"characters.  This function only exists if Python was compiled for a version "
"of the library that supports it."
msgstr ""
"設定或刪除底層庫的 :c:data:`rl_pre_input_hook` 回呼呼叫的函式。如果指定了*fun"
"ction*，它將被用作新的鉤子函式；如果省略或 ``None`` ，則刪除任何已安裝的功能。"
"在印出出第一個提示之後且就在 readline "
"開始讀取輸入字元之前呼叫該掛鉤時不帶任何參數。此函式僅在 Python "
"為支援它的庫版本編譯時才存在。"

#: ../../library/readline.rst:217
#, fuzzy
msgid "Completion"
msgstr "完成"

#: ../../library/readline.rst:219
#, fuzzy
msgid ""
"The following functions relate to implementing a custom word completion "
"function.  This is typically operated by the Tab key, and can suggest and "
"automatically complete a word being typed.  By default, Readline is set up "
"to be used by :mod:`rlcompleter` to complete Python identifiers for the "
"interactive interpreter.  If the :mod:`readline` module is to be used with a "
"custom completer, a different set of word delimiters should be set."
msgstr ""
"以下函式與實作自定義單詞完成函式有關。這通常由 Tab "
"鍵操作，可以建議並自動完成正在鍵入的單詞。預設情況下，Readline 設定為由 "
":mod:`rlcompleter` 使用來完成交互式直譯器的 Python 標識符。如果 "
":mod:`readline` 模組要與自定義完成器一起使用，則應設定一組不同的單詞分隔符。"

#: ../../library/readline.rst:229
#, fuzzy
msgid ""
"Set or remove the completer function.  If *function* is specified, it will "
"be used as the new completer function; if omitted or ``None``, any completer "
"function already installed is removed.  The completer function is called as "
"``function(text, state)``, for *state* in ``0``, ``1``, ``2``, ..., until it "
"returns a non-string value.  It should return the next possible completion "
"starting with *text*."
msgstr ""
"設定或刪除完成函式。如果指定了*function*，它將被用作新的完成函式；如果省略或“"
"無”，則刪除任何已安裝的完成功能。完成函式被稱為``函式（文本，狀態）``，對於``"
"0``，``1``，``2``，......中的*狀態*，直到它回傳一個非字串值。它應該回傳以 "
"*text* 開頭的下一個可能的完成。"

#: ../../library/readline.rst:236
#, fuzzy
msgid ""
"The installed completer function is invoked by the *entry_func* callback "
"passed to :c:func:`rl_completion_matches` in the underlying library. The "
"*text* string comes from the first parameter to the :c:data:"
"`rl_attempted_completion_function` callback of the underlying library."
msgstr ""
"安裝的完成函式由傳遞給底層庫中的 :c:func:`rl_completion_matches` 的 "
"*entry_func* 回呼呼叫。 *text* 字串來自底層庫的 "
":c:data:`rl_attempted_completion_function` 回呼的第一個參數。"

#: ../../library/readline.rst:245
#, fuzzy
msgid ""
"Get the completer function, or ``None`` if no completer function has been "
"set."
msgstr "獲取完成函式，如果未設定完成函式，則獲取 ``None``。"

#: ../../library/readline.rst:250
#, fuzzy
msgid ""
"Get the type of completion being attempted.  This returns the :c:data:"
"`rl_completion_type` variable in the underlying library as an integer."
msgstr "獲取正在嘗試的完成型別。這將底層庫中的 :c:data:`rl_completion_type` "
"變數作為整數回傳。"

#: ../../library/readline.rst:258
#, fuzzy
msgid ""
"Get the beginning or ending index of the completion scope. These indexes are "
"the *start* and *end* arguments passed to the :c:data:"
"`rl_attempted_completion_function` callback of the underlying library.  The "
"values may be different in the same input editing scenario based on the "
"underlying C readline implementation. Ex: libedit is known to behave "
"differently than libreadline."
msgstr ""
"獲取完成範圍的開始或結束索引。這些索引是傳遞給基礎庫的 "
"rl_attempted_completion_function 回呼的 *start* 和 *end* 參數。在基於底層 C "
"readline 實作的相同輸入編輯場景中，這些值可能不同。例如：眾所周知，libedit "
"的行為不同於 libreadline。"

#: ../../library/readline.rst:269
#, fuzzy
msgid ""
"Set or get the word delimiters for completion.  These determine the start of "
"the word to be considered for completion (the completion scope). These "
"functions access the :c:data:`rl_completer_word_break_characters` variable "
"in the underlying library."
msgstr ""
"設定或獲取用於完成的單詞定界符。這些確定要考慮完成的單詞的開始（完成範圍）。"
"這些函式訪問底層庫中的 :c:data:`rl_completer_word_break_characters` 變數。"

#: ../../library/readline.rst:277
#, fuzzy
msgid ""
"Set or remove the completion display function.  If *function* is specified, "
"it will be used as the new completion display function; if omitted or "
"``None``, any completion display function already installed is removed.  "
"This sets or clears the :c:data:`rl_completion_display_matches_hook` "
"callback in the underlying library.  The completion display function is "
"called as ``function(substitution, [matches], longest_match_length)`` once "
"each time matches need to be displayed."
msgstr ""
"設定或移除完成顯示功能。如果指定了*function*，它將被用作新的完成顯示函式；如"
"果省略或 ``None`` ，則刪除任何已安裝的完成顯示功能。這會設定或清除底層庫中的 "
":c:data:`rl_completion_display_matches_hook` "
"回呼。每次需要顯示匹配時，完成顯示函式被呼叫為``function(substitution, "
"[matches], longest_match_length)``。"

#: ../../library/readline.rst:290
msgid "Example"
msgstr "範例"

#: ../../library/readline.rst:292
#, fuzzy
msgid ""
"The following example demonstrates how to use the :mod:`readline` module's "
"history reading and writing functions to automatically load and save a "
"history file named :file:`.python_history` from the user's home directory.  "
"The code below would normally be executed automatically during interactive "
"sessions from the user's :envvar:`PYTHONSTARTUP` file. ::"
msgstr ""
"下面的示例演示如何使用 :mod:`readline` "
"模組的歷史讀寫功能自動加載和保存使用者主目錄中名為 :file:`.python_history` "
"的歷史文件。下面的程式碼通常會在使用者的 :envvar:`PYTHONSTARTUP` "
"文件的交互式會話期間自動執行。 ::"

#: ../../library/readline.rst:312
#, fuzzy
msgid ""
"This code is actually automatically run when Python is run in :ref:"
"`interactive mode <tut-interactive>` (see :ref:`rlcompleter-config`)."
msgstr ""
"當 Python 在交互模式 <tut-interactive> "
"中運行時，這段程式碼實際上會自動運行（參見 :ref:`rlcompleter-config`）。"

#: ../../library/readline.rst:315
#, fuzzy
msgid ""
"The following example achieves the same goal but supports concurrent "
"interactive sessions, by only appending the new history. ::"
msgstr "以下示例實作了相同的目標，但僅通過附加新歷史記錄來支援並發交互式會話。 ::"

#: ../../library/readline.rst:336
#, fuzzy
msgid ""
"The following example extends the :class:`code.InteractiveConsole` class to "
"support history save/restore. ::"
msgstr "以下示例擴充了 code.InteractiveConsole 類以支援歷史記錄保存/恢復。 ::"
