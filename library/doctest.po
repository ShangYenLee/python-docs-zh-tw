# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-15 20:43+0000\n"
"PO-Revision-Date: 2018-05-23 14:43+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/doctest.rst:2
#, fuzzy
msgid ":mod:`doctest` --- Test interactive Python examples"
msgstr ":mod:`doctest` --- 測試交互式 Python 範例"

#: ../../library/doctest.rst:12
msgid "**Source code:** :source:`Lib/doctest.py`"
msgstr "**原始碼：**\\ :source:`Lib/doctest.py`"

#: ../../library/doctest.rst:16
#, fuzzy
msgid ""
"The :mod:`doctest` module searches for pieces of text that look like "
"interactive Python sessions, and then executes those sessions to verify that "
"they work exactly as shown.  There are several common ways to use doctest:"
msgstr ""
":mod:`doctest` 模組搜索看起來像交互式 Python 會話的文本片段，然後執行這些會話"
"以驗證它們是否完全按照顯示的方式工作。有幾種常見的使用doctest的方法："

#: ../../library/doctest.rst:20
#, fuzzy
msgid ""
"To check that a module's docstrings are up-to-date by verifying that all "
"interactive examples still work as documented."
msgstr "通過驗證所有交互式示例是否仍按記錄工作來檢查模組的文檔字串是否是最新的。"

#: ../../library/doctest.rst:23
#, fuzzy
msgid ""
"To perform regression testing by verifying that interactive examples from a "
"test file or a test object work as expected."
msgstr "通過驗證來自測試文件或測試物件的交互式示例是否按預期工作來執行回歸測試。"

#: ../../library/doctest.rst:26
#, fuzzy
msgid ""
"To write tutorial documentation for a package, liberally illustrated with "
"input-output examples.  Depending on whether the examples or the expository "
"text are emphasized, this has the flavor of \"literate testing\" or "
"\"executable documentation\"."
msgstr "為包編寫教程文檔，用輸入輸出示例進行大量說明。根據是強調示例還是說明性文本，"
"這具有“文字測試”或“可執行文檔”的風格。"

#: ../../library/doctest.rst:31
#, fuzzy
msgid "Here's a complete but small example module::"
msgstr "這是一個完整但很小的示例模組::"

#: ../../library/doctest.rst:88
#, fuzzy
msgid ""
"If you run :file:`example.py` directly from the command line, :mod:`doctest` "
"works its magic:"
msgstr "如果你直接從命令列運行 :file:`example.py`，:mod:`doctest` 就會發揮它的魔力："

#: ../../library/doctest.rst:96
#, fuzzy
msgid ""
"There's no output!  That's normal, and it means all the examples worked.  "
"Pass ``-v`` to the script, and :mod:`doctest` prints a detailed log of what "
"it's trying, and prints a summary at the end:"
msgstr ""
"沒有輸出！這很正常，這意味著所有示例都有效。將 ``-v`` 傳遞給腳本，然後 "
":mod:`doctest` 印出它正在嘗試的內容的詳細日誌，並在末尾印出摘要："

#: ../../library/doctest.rst:114
#, fuzzy
msgid "And so on, eventually ending with:"
msgstr "依此類推，最終以："

#: ../../library/doctest.rst:133
#, fuzzy
msgid ""
"That's all you need to know to start making productive use of :mod:"
"`doctest`! Jump in.  The following sections provide full details.  Note that "
"there are many examples of doctests in the standard Python test suite and "
"libraries. Especially useful examples can be found in the standard test "
"file :file:`Lib/test/test_doctest.py`."
msgstr ""
"這就是開始有效使用 :mod:`doctest` "
"所需了解的全部內容！跳進去。以下部分提供了完整的詳細資訊。請注意，標準 "
"Python 測試套件和庫中有許多 doctest 示例。在標準測試文件 :file:`Lib/test/"
"test_doctest.py` 中可以找到特別有用的示例。"

#: ../../library/doctest.rst:143
#, fuzzy
msgid "Simple Usage: Checking Examples in Docstrings"
msgstr "簡單用法：檢查文檔字串中的示例"

#: ../../library/doctest.rst:145
#, fuzzy
msgid ""
"The simplest way to start using doctest (but not necessarily the way you'll "
"continue to do it) is to end each module :mod:`M` with::"
msgstr "開始使用 doctest 的最簡單方法（但不一定是您將繼續使用的方法）是在每個模組 "
":mod:`M` 末尾加上 ::"

#: ../../library/doctest.rst:152
#, fuzzy
msgid ":mod:`doctest` then examines docstrings in module :mod:`M`."
msgstr ":mod:`doctest` 然後檢查模組 :mod:`M` 中的文檔字串。"

#: ../../library/doctest.rst:154
#, fuzzy
msgid ""
"Running the module as a script causes the examples in the docstrings to get "
"executed and verified::"
msgstr "將模組作為腳本運行會導致文檔字串中的示例得到執行和驗證："

#: ../../library/doctest.rst:159
#, fuzzy
msgid ""
"This won't display anything unless an example fails, in which case the "
"failing example(s) and the cause(s) of the failure(s) are printed to stdout, "
"and the final line of output is ``***Test Failed*** N failures.``, where *N* "
"is the number of examples that failed."
msgstr ""
"除非示例失敗，否則這不會顯示任何內容，在這種情況下，失敗的示例和失敗的原因將"
"印出到標準輸出，輸出的最後一行是 ``***Test失敗*** N 次失敗。``，其中 *N* "
"是失敗示例的數量。"

#: ../../library/doctest.rst:164
#, fuzzy
msgid "Run it with the ``-v`` switch instead::"
msgstr "使用 ``-v`` 開關運行它："

#: ../../library/doctest.rst:168
#, fuzzy
msgid ""
"and a detailed report of all examples tried is printed to standard output, "
"along with assorted summaries at the end."
msgstr "所有嘗試過的示例的詳細報告都印出到標準輸出，最後還有各種摘要。"

#: ../../library/doctest.rst:171
#, fuzzy
msgid ""
"You can force verbose mode by passing ``verbose=True`` to :func:`testmod`, "
"or prohibit it by passing ``verbose=False``.  In either of those cases, "
"``sys.argv`` is not examined by :func:`testmod` (so passing ``-v`` or not "
"has no effect)."
msgstr ""
"您可以通過將 ``verbose=True`` 傳遞給 :func:`testmod` 來強制使用詳細模式，"
"或者通過傳遞 ``verbose=False`` 來禁止它。在任何一種情況下，``sys.argv`` "
"都不會被 :func:`testmod` 檢查（因此傳遞 ``-v`` 或不傳遞都沒有效果）。"

#: ../../library/doctest.rst:176
#, fuzzy
msgid ""
"There is also a command line shortcut for running :func:`testmod`.  You can "
"instruct the Python interpreter to run the doctest module directly from the "
"standard library and pass the module name(s) on the command line::"
msgstr ""
"還有一個用於運行 :func:`testmod` 的命令列快捷方式。您可以指示 Python "
"直譯器直接從標準庫運行 doctest 模組，並在命令列上傳遞模組名稱："

#: ../../library/doctest.rst:182
#, fuzzy
msgid ""
"This will import :file:`example.py` as a standalone module and run :func:"
"`testmod` on it.  Note that this may not work correctly if the file is part "
"of a package and imports other submodules from that package."
msgstr ""
"這會將 :file:`example.py` 作為獨立模組導入並在其上運行 :func:`testmod`。請注"
"意，如果文件是包的一部分並從該包導入其他子模組，則這可能無法正常工作。"

#: ../../library/doctest.rst:186
#, fuzzy
msgid ""
"For more information on :func:`testmod`, see section :ref:`doctest-basic-"
"api`."
msgstr "有關 :func:`testmod` 的更多資訊，請參閱 :ref:`doctest-basic-api` 部分。"

#: ../../library/doctest.rst:192
#, fuzzy
msgid "Simple Usage: Checking Examples in a Text File"
msgstr "簡單用法：檢查文本文件中的示例"

#: ../../library/doctest.rst:194
#, fuzzy
msgid ""
"Another simple application of doctest is testing interactive examples in a "
"text file.  This can be done with the :func:`testfile` function::"
msgstr "doctest 的另一個簡單應用是測試文本文件中的交互式示例。這可以通過 "
":func:`testfile` 函式來完成："

#: ../../library/doctest.rst:200
#, fuzzy
msgid ""
"That short script executes and verifies any interactive Python examples "
"contained in the file :file:`example.txt`.  The file content is treated as "
"if it were a single giant docstring; the file doesn't need to contain a "
"Python program!   For example, perhaps :file:`example.txt` contains this:"
msgstr ""
"該簡短腳本執行並驗證文件 example.txt 中包含的任何交互式 Python "
"示例。文件內容被視為一個巨大的文檔字串；該文件不需要包含 Python 程式！例如，"
"也許 :file:`example.txt` 包含這個："

#: ../../library/doctest.rst:223
#, fuzzy
msgid ""
"Running ``doctest.testfile(\"example.txt\")`` then finds the error in this "
"documentation::"
msgstr "運行``doctest.testfile(\"example.txt\")`` 然後發現這個文檔中的錯誤::"

#: ../../library/doctest.rst:234
#, fuzzy
msgid ""
"As with :func:`testmod`, :func:`testfile` won't display anything unless an "
"example fails.  If an example does fail, then the failing example(s) and the "
"cause(s) of the failure(s) are printed to stdout, using the same format as :"
"func:`testmod`."
msgstr ""
"與 :func:`testmod` 一樣，:func:`testfile` 不會顯示任何內容，除非示例失敗。如"
"果一個例子確實失敗了，那麼失敗的例子和失敗的原因將被印出到標準輸出，使用與 "
":func:`testmod` 相同的格式。"

#: ../../library/doctest.rst:239
#, fuzzy
msgid ""
"By default, :func:`testfile` looks for files in the calling module's "
"directory. See section :ref:`doctest-basic-api` for a description of the "
"optional arguments that can be used to tell it to look for files in other "
"locations."
msgstr ""
"預設情況下，:func:`testfile` 在呼叫模組的目錄中查找文件。有關可用於告訴它在其"
"他位置查找文件的可選參數的描述，請參閱 doctest-basic-api 部分。"

#: ../../library/doctest.rst:243
#, fuzzy
msgid ""
"Like :func:`testmod`, :func:`testfile`'s verbosity can be set with the ``-"
"v`` command-line switch or with the optional keyword argument *verbose*."
msgstr ""
"與 :func:`testmod` 一樣，:func:`testfile` 的詳細程度可以使用 ``-v`` "
"命令列開關或可選關鍵字參數 *verbose* 進行設定。"

#: ../../library/doctest.rst:247
#, fuzzy
msgid ""
"There is also a command line shortcut for running :func:`testfile`.  You can "
"instruct the Python interpreter to run the doctest module directly from the "
"standard library and pass the file name(s) on the command line::"
msgstr ""
"還有一個用於運行 :func:`testfile` 的命令列快捷方式。您可以指示 Python "
"直譯器直接從標準庫運行 doctest 模組並在命令列上傳遞文件名::"

#: ../../library/doctest.rst:253
#, fuzzy
msgid ""
"Because the file name does not end with :file:`.py`, :mod:`doctest` infers "
"that it must be run with :func:`testfile`, not :func:`testmod`."
msgstr ""
"因為文件名不以 :file:`.py` 結尾，所以 :mod:`doctest` 推斷它必須與 "
":func:`testfile` 而不是 :func:`testmod` 一起運行。"

#: ../../library/doctest.rst:256
#, fuzzy
msgid ""
"For more information on :func:`testfile`, see section :ref:`doctest-basic-"
"api`."
msgstr "有關 :func:`testfile` 的更多資訊，請參閱 :ref:`doctest-basic-api` 部分。"

#: ../../library/doctest.rst:262
#, fuzzy
msgid "How It Works"
msgstr "怎麼運行的"

#: ../../library/doctest.rst:264
#, fuzzy
msgid ""
"This section examines in detail how doctest works: which docstrings it looks "
"at, how it finds interactive examples, what execution context it uses, how "
"it handles exceptions, and how option flags can be used to control its "
"behavior. This is the information that you need to know to write doctest "
"examples; for information about actually running doctest on these examples, "
"see the following sections."
msgstr ""
"本節詳細介紹 doctest 的工作原理：它查看哪些文檔字串、它如何找到交互式示例、它"
"使用什麼執行上下文、它如何處理例外以及如何使用選項旗標來控制其行為。這是編寫 "
"doctest 示例所需了解的資訊；有關在這些示例上實際運行 doctest "
"的資訊，請參閱以下部分。"

#: ../../library/doctest.rst:275
#, fuzzy
msgid "Which Docstrings Are Examined?"
msgstr "檢查了哪些文檔字串？"

#: ../../library/doctest.rst:277
#, fuzzy
msgid ""
"The module docstring, and all function, class and method docstrings are "
"searched.  Objects imported into the module are not searched."
msgstr "搜索模組文檔字串，以及所有函式、類和方法文檔字串。不搜索導入到模組中的物件。"

#: ../../library/doctest.rst:280
#, fuzzy
msgid ""
"In addition, if ``M.__test__`` exists and \"is true\", it must be a dict, "
"and each entry maps a (string) name to a function object, class object, or "
"string. Function and class object docstrings found from ``M.__test__`` are "
"searched, and strings are treated as if they were docstrings.  In output, a "
"key ``K`` in ``M.__test__`` appears with name ::"
msgstr ""
"此外，如果``M.__test__`` 存在且“為真”，則它必須是一個字典，並且每個條目將一個"
"（字串）名稱映射到一個函式物件、類對像或字串。搜索從 M.__test__ "
"找到的函式和類物件文檔字串，並將字串視為文檔字串。在輸出中，``M.__test__`` "
"中的鍵 ``K`` 出現了名稱 ::"

#: ../../library/doctest.rst:288
#, fuzzy
msgid ""
"Any classes found are recursively searched similarly, to test docstrings in "
"their contained methods and nested classes."
msgstr "類似地遞迴搜索找到的任何類，以測試其包含的方法和嵌套類中的文檔字串。"

#: ../../library/doctest.rst:295
#, fuzzy
msgid "How are Docstring Examples Recognized?"
msgstr "如何識別 Docstring 示例？"

#: ../../library/doctest.rst:297
#, fuzzy
msgid ""
"In most cases a copy-and-paste of an interactive console session works fine, "
"but doctest isn't trying to do an exact emulation of any specific Python "
"shell."
msgstr "在大多數情況下，交互式控制台會話的複制和粘貼工作正常，但 doctest "
"並不試圖對任何特定的 Python shell 進行精確模擬。"

#: ../../library/doctest.rst:322
#, fuzzy
msgid ""
"Any expected output must immediately follow the final ``'>>> '`` or ``'... "
"'`` line containing the code, and the expected output (if any) extends to "
"the next ``'>>> '`` or all-whitespace line."
msgstr ""
"任何預期的輸出必須緊跟在包含程式碼的最後 ``'>>> '`` 或 ``'... '`` "
"行之後，並且預期輸出（如果有的話）延伸到下一個 ``'>>> '`` 或全空白行。"

#: ../../library/doctest.rst:326
#, fuzzy
msgid "The fine print:"
msgstr "細則："

#: ../../library/doctest.rst:328
#, fuzzy
msgid ""
"Expected output cannot contain an all-whitespace line, since such a line is "
"taken to signal the end of expected output.  If expected output does contain "
"a blank line, put ``<BLANKLINE>`` in your doctest example each place a blank "
"line is expected."
msgstr ""
"預期輸出不能包含全空白行，因為這樣的行被用來表示預期輸出的結束。如果預期的輸"
"出確實包含一個空行，請在您的 doctest 示例中放置 "
"``<BLANKLINE>``，每個地方都需要一個空行。"

#: ../../library/doctest.rst:333
#, fuzzy
msgid ""
"All hard tab characters are expanded to spaces, using 8-column tab stops. "
"Tabs in output generated by the tested code are not modified.  Because any "
"hard tabs in the sample output *are* expanded, this means that if the code "
"output includes hard tabs, the only way the doctest can pass is if the :"
"const:`NORMALIZE_WHITESPACE` option or :ref:`directive <doctest-directives>` "
"is in effect. Alternatively, the test can be rewritten to capture the output "
"and compare it to an expected value as part of the test.  This handling of "
"tabs in the source was arrived at through trial and error, and has proven to "
"be the least error prone way of handling them.  It is possible to use a "
"different algorithm for handling tabs by writing a custom :class:"
"`DocTestParser` class."
msgstr ""
"使用 8 列製表位將所有硬製表符擴充為空格。測試程式碼生成的輸出中的選項卡未被修"
"改。因為示例輸出中的任何硬製表符*都*展開了，這意味著如果程式碼輸出包含硬製表"
"符，doctest 可以通過的唯一方法是 :const:`NORMALIZE_WHITESPACE` 選項或 :ref:`"
"指令 <doctest-指令>` 生效。或者，可以重寫測試以捕獲輸出並將其與作為測試一部分"
"的預期值進行比較。這種對源程式碼中選項卡的處理是通過反複試驗得出的，並且已被"
"證明是最不容易出錯的處理方式。通過編寫自定義 DocTestParser "
"類，可以使用不同的演算法來處理製表符。"

#: ../../library/doctest.rst:345
#, fuzzy
msgid ""
"Output to stdout is captured, but not output to stderr (exception tracebacks "
"are captured via a different means)."
msgstr "輸出到 stdout 被捕獲，但不輸出到 stderr（通過不同的方式捕獲例外回溯）。"

#: ../../library/doctest.rst:348
#, fuzzy
msgid ""
"If you continue a line via backslashing in an interactive session, or for "
"any other reason use a backslash, you should use a raw docstring, which will "
"preserve your backslashes exactly as you type them::"
msgstr "如果你在交互式會話中通過反斜杠繼續一行，或者出於任何其他原因使用反斜杠，你應"
"該使用原始文檔字串，它將在你鍵入它們時完全保留你的反斜杠::"

#: ../../library/doctest.rst:357
#, fuzzy
msgid ""
"Otherwise, the backslash will be interpreted as part of the string. For "
"example, the ``\\n`` above would be interpreted as a newline character.  "
"Alternatively, you can double each backslash in the doctest version (and not "
"use a raw string)::"
msgstr ""
"否則，反斜杠將被解釋為字串的一部分。例如，上面的 ``\\n"
"`` 將被解釋為換行符。或者，您可以將 doctest "
"版本中的每個反斜杠加倍（而不使用原始字串）::"

#: ../../library/doctest.rst:366
#, fuzzy
msgid "The starting column doesn't matter::"
msgstr "起始列無關緊要::"

#: ../../library/doctest.rst:373
#, fuzzy
msgid ""
"and as many leading whitespace characters are stripped from the expected "
"output as appeared in the initial ``'>>> '`` line that started the example."
msgstr "並且從開始示例的初始 ``'>>> '`` "
"行中出現的預期輸出中去除了盡可能多的前導空白字元。"

#: ../../library/doctest.rst:380
#, fuzzy
msgid "What's the Execution Context?"
msgstr "什麼是執行上下文？"

#: ../../library/doctest.rst:382
#, fuzzy
msgid ""
"By default, each time :mod:`doctest` finds a docstring to test, it uses a "
"*shallow copy* of :mod:`M`'s globals, so that running tests doesn't change "
"the module's real globals, and so that one test in :mod:`M` can't leave "
"behind crumbs that accidentally allow another test to work.  This means "
"examples can freely use any names defined at top-level in :mod:`M`, and "
"names defined earlier in the docstring being run. Examples cannot see names "
"defined in other docstrings."
msgstr ""
"預設情況下，每次 :mod:`doctest` 找到要測試的文檔字串時，它都會使用 :mod:`M` "
"的全局變數的*淺拷貝*，以便運行測試不會更改模組的真實全局變數，因此 :mod:`M` "
"中的那個測試不能留下意外允許另一個測試工作的麵包屑。"
"這意味著示例可以自由使用在 :mod:`M` 中頂層定義的任何名稱，以及之前在正在運行"
"的文檔字串中定義的名稱。示例看不到其他文檔字串中定義的名稱。"

#: ../../library/doctest.rst:390
#, fuzzy
msgid ""
"You can force use of your own dict as the execution context by passing "
"``globs=your_dict`` to :func:`testmod` or :func:`testfile` instead."
msgstr ""
"您可以通過將 ``globs=your_dict`` 傳遞給 :func:`testmod` 或 :func:`testfile` "
"來強制使用您自己的字典作為執行上下文。"

#: ../../library/doctest.rst:397
#, fuzzy
msgid "What About Exceptions?"
msgstr "例外呢？"

#: ../../library/doctest.rst:399
#, fuzzy
msgid ""
"No problem, provided that the traceback is the only output produced by the "
"example:  just paste in the traceback. [#]_ Since tracebacks contain details "
"that are likely to change rapidly (for example, exact file paths and line "
"numbers), this is one case where doctest works hard to be flexible in what "
"it accepts."
msgstr ""
"沒問題，前提是回溯是示例產生的唯一輸出：只需粘貼回溯。 [#]_ "
"由於回溯包含可能會快速變化的細節（例如，確切的文件路徑和行號），這是 doctest "
"努力靈活接受的一種情況。"

#: ../../library/doctest.rst:405
msgid "Simple example::"
msgstr ""
"簡單範例：\n"
"\n"
"::"

#: ../../library/doctest.rst:412
#, fuzzy
msgid ""
"That doctest succeeds if :exc:`ValueError` is raised, with the ``list."
"remove(x): x not in list`` detail as shown."
msgstr ""
"如果引發 :exc:`ValueError`，則 doctest 成功，並顯示 ``list.remove(x): x not "
"in list`` 的詳細資訊。"

#: ../../library/doctest.rst:415
#, fuzzy
msgid ""
"The expected output for an exception must start with a traceback header, "
"which may be either of the following two lines, indented the same as the "
"first line of the example::"
msgstr "例外的預期輸出必須以回溯標頭開頭，它可以是以下兩行之一，縮進與示例的第一行相"
"同："

#: ../../library/doctest.rst:422
#, fuzzy
msgid ""
"The traceback header is followed by an optional traceback stack, whose "
"contents are ignored by doctest.  The traceback stack is typically omitted, "
"or copied verbatim from an interactive session."
msgstr "追溯標頭後面是一個可選的追溯堆疊，其內容被 doctest "
"忽略。回溯堆疊通常被省略，或者從交互式會話中逐字複製。"

#: ../../library/doctest.rst:426
#, fuzzy
msgid ""
"The traceback stack is followed by the most interesting part: the line(s) "
"containing the exception type and detail.  This is usually the last line of "
"a traceback, but can extend across multiple lines if the exception has a "
"multi-line detail::"
msgstr "跟踪堆疊之後是最有趣的部分：包含例外型別和詳細資訊的行。這通常是回溯的最後一"
"行，但如果例外具有多行詳細資訊，則可以擴充到多行："

#: ../../library/doctest.rst:438
#, fuzzy
msgid ""
"The last three lines (starting with :exc:`ValueError`) are compared against "
"the exception's type and detail, and the rest are ignored."
msgstr "最後三行（以 :exc:`ValueError` "
"開頭）與例外的型別和詳細資訊進行比較，其餘的將被忽略。"

#: ../../library/doctest.rst:441
#, fuzzy
msgid ""
"Best practice is to omit the traceback stack, unless it adds significant "
"documentation value to the example.  So the last example is probably better "
"as::"
msgstr "最佳做法是省略回溯堆疊，除非它為示例增加了重要的文檔價值。所以最後一個例子可"
"能更好："

#: ../../library/doctest.rst:451
#, fuzzy
msgid ""
"Note that tracebacks are treated very specially.  In particular, in the "
"rewritten example, the use of ``...`` is independent of doctest's :const:"
"`ELLIPSIS` option.  The ellipsis in that example could be left out, or could "
"just as well be three (or three hundred) commas or digits, or an indented "
"transcript of a Monty Python skit."
msgstr ""
"請注意，回溯處理非常特殊。特別是，在重寫的示例中，``...`` 的使用獨立於 "
"doctest 的 :const:`ELLIPSIS` "
"選項。該示例中的省略號可以省略，也可以是三個（或三百）個逗號或數字，或者是 "
"Monty Python 短劇的縮進抄本。"

#: ../../library/doctest.rst:457
#, fuzzy
msgid "Some details you should read once, but won't need to remember:"
msgstr "有些細節你應該讀一次，但不需要記住："

#: ../../library/doctest.rst:459
#, fuzzy
msgid ""
"Doctest can't guess whether your expected output came from an exception "
"traceback or from ordinary printing.  So, e.g., an example that expects "
"``ValueError: 42 is prime`` will pass whether :exc:`ValueError` is actually "
"raised or if the example merely prints that traceback text.  In practice, "
"ordinary output rarely begins with a traceback header line, so this doesn't "
"create real problems."
msgstr ""
"Doctest 無法猜測您的預期輸出是來自例外回溯還是來自普通印出。因此，例如，"
"一個期望 ``ValueError: 42 is prime`` 的示例將通過，無論 :exc:`ValueError` 是"
"否實際引發，或者該示例是否僅印出該回溯文本。實際上，普通輸出很少以追溯標題行"
"開頭，因此這不會產生真正的問題。"

#: ../../library/doctest.rst:466
#, fuzzy
msgid ""
"Each line of the traceback stack (if present) must be indented further than "
"the first line of the example, *or* start with a non-alphanumeric character. "
"The first line following the traceback header indented the same and starting "
"with an alphanumeric is taken to be the start of the exception detail.  Of "
"course this does the right thing for genuine tracebacks."
msgstr ""
"回溯堆疊的每一行（如果存在）必須比示例的第一行縮進更多，*或*以非字母數字字元"
"開頭。追溯標頭之後的第一行縮進相同並以字母數字開頭，被視為例外詳細資訊的開頭"
"。當然，這對於真正的回溯是正確的。"

#: ../../library/doctest.rst:472
#, fuzzy
msgid ""
"When the :const:`IGNORE_EXCEPTION_DETAIL` doctest option is specified, "
"everything following the leftmost colon and any module information in the "
"exception name is ignored."
msgstr ""
"當指定 :const:`IGNORE_EXCEPTION_DETAIL` doctest "
"選項時，最左邊的冒號後面的所有內容和例外名稱中的任何模組資訊都將被忽略。"

#: ../../library/doctest.rst:476
#, fuzzy
msgid ""
"The interactive shell omits the traceback header line for some :exc:"
"`SyntaxError`\\ s.  But doctest uses the traceback header line to "
"distinguish exceptions from non-exceptions.  So in the rare case where you "
"need to test a :exc:`SyntaxError` that omits the traceback header, you will "
"need to manually add the traceback header line to your test example."
msgstr ""
"交互式 shell 省略了一些 :exc:`SyntaxError`\\ 的回溯標題行。但是 doctest 使用 "
"traceback 標題行來區分例外和非例外。因此，在極少數情況下，"
"您需要測試省略回溯標頭的 "
":exc:`SyntaxError`，您需要手動將回溯標頭行新增到測試示例中。"

#: ../../library/doctest.rst:484
#, fuzzy
msgid ""
"For some exceptions, Python displays the position of the error using ``^`` "
"markers and tildes::"
msgstr "對於某些例外，Python 使用 ``^`` 標記和波浪號顯示錯誤的位置："

#: ../../library/doctest.rst:493
#, fuzzy
msgid ""
"Since the lines showing the position of the error come before the exception "
"type and detail, they are not checked by doctest.  For example, the "
"following test would pass, even though it puts the ``^`` marker in the wrong "
"location::"
msgstr ""
"由於顯示錯誤位置的行出現在例外型別和詳細資訊之前，因此 doctest "
"不會檢查它們。例如，下面的測試會通過，即使它把 ``^`` 標記放在了錯誤的位置："

#: ../../library/doctest.rst:508
#, fuzzy
msgid "Option Flags"
msgstr "選項旗標"

#: ../../library/doctest.rst:510
#, fuzzy
msgid ""
"A number of option flags control various aspects of doctest's behavior. "
"Symbolic names for the flags are supplied as module constants, which can be :"
"ref:`bitwise ORed <bitwise>` together and passed to various functions. The "
"names can also be used in :ref:`doctest directives <doctest-directives>`, "
"and may be passed to the doctest command line interface via the ``-o`` "
"option."
msgstr ""
"許多選項旗標控制 doctest 行為的各個方面。旗標的符號名稱作為模組常數提供，"
"它們可以按位或 <bitwise> 一起傳遞給各種函式。這些名稱也可以在 :ref:`doctest "
"指令 <doctest-directives>` 中使用，並且可以通過 ``-o`` 選項傳遞給 doctest "
"命令列界面。"

#: ../../library/doctest.rst:516
#, fuzzy
msgid "The ``-o`` command line option."
msgstr "``-o`` 命令列選項。"

#: ../../library/doctest.rst:519
#, fuzzy
msgid ""
"The first group of options define test semantics, controlling aspects of how "
"doctest decides whether actual output matches an example's expected output:"
msgstr "第一組選項定義測試語義，控制 doctest "
"如何決定實際輸出是否與示例的預期輸出相匹配的方面："

#: ../../library/doctest.rst:525
#, fuzzy
msgid ""
"By default, if an expected output block contains just ``1``, an actual "
"output block containing just ``1`` or just ``True`` is considered to be a "
"match, and similarly for ``0`` versus ``False``.  When :const:"
"`DONT_ACCEPT_TRUE_FOR_1` is specified, neither substitution is allowed.  The "
"default behavior caters to that Python changed the return type of many "
"functions from integer to boolean; doctests expecting \"little integer\" "
"output still work in these cases.  This option will probably go away, but "
"not for several years."
msgstr ""
"預設情況下，如果預期輸出塊僅包含 ``1``，則僅包含 ``1``或 ``True``的實際輸出塊被認為是"
"匹配項，類似地， ``0``與 ``0``與``錯誤``。當指定 :const:`DONT_ACCEPT_TRUE_FOR_1` "
"時，不允許進行任何替換。預設行為迎合了 Python 將許多函式的回傳型別從整數更改"
"為布爾值；期望“小整數”輸出的文檔測試在這些情況下仍然有效。這個選項可能會消失"
"，但不會持續數年。"

#: ../../library/doctest.rst:537
#, fuzzy
msgid ""
"By default, if an expected output block contains a line containing only the "
"string ``<BLANKLINE>``, then that line will match a blank line in the actual "
"output.  Because a genuinely blank line delimits the expected output, this "
"is the only way to communicate that a blank line is expected.  When :const:"
"`DONT_ACCEPT_BLANKLINE` is specified, this substitution is not allowed."
msgstr ""
"預設情況下，如果預期輸出塊包含僅包含字串“<BLANKLINE>”的行，則該行將匹配實際輸"
"出中的空行。因為真正的空行分隔了預期的輸出，所以這是傳達空行是預期的唯一方式"
"。當指定 :const:`DONT_ACCEPT_BLANKLINE` 時，不允許進行此替換。"

#: ../../library/doctest.rst:546
#, fuzzy
msgid ""
"When specified, all sequences of whitespace (blanks and newlines) are "
"treated as equal.  Any sequence of whitespace within the expected output "
"will match any sequence of whitespace within the actual output. By default, "
"whitespace must match exactly. :const:`NORMALIZE_WHITESPACE` is especially "
"useful when a line of expected output is very long, and you want to wrap it "
"across multiple lines in your source."
msgstr ""
"指定後，所有空白序列（空格和換行符）都被視為相等。預期輸出中的任何空白序列將"
"匹配實際輸出中的任何空白序列。預設情況下，空格必須完全匹配。 "
":const:`NORMALIZE_WHITESPACE` "
"在預期輸出的一行很長並且您想在源程式碼中將其包裝成多行時特別有用。"

#: ../../library/doctest.rst:557
#, fuzzy
msgid ""
"When specified, an ellipsis marker (``...``) in the expected output can "
"match any substring in the actual output.  This includes substrings that "
"span line boundaries, and empty substrings, so it's best to keep usage of "
"this simple. Complicated uses can lead to the same kinds of \"oops, it "
"matched too much!\" surprises that ``.*`` is prone to in regular expressions."
msgstr ""
"指定後，預期輸出中的省略號標記 (``...``) 可以匹配實際輸出中的任何子字串。這包"
"括跨越行邊界的子字串和空子字串，因此最好保持這種簡單的用法。複雜的使用會導致"
"同樣的“哎呀，太匹配了！”令人驚訝的是 ``.*`` 在正則表達式中很容易出現。"

#: ../../library/doctest.rst:566
#, fuzzy
msgid ""
"When specified, doctests expecting exceptions pass so long as an exception "
"of the expected type is raised, even if the details (message and fully "
"qualified exception name) don't match."
msgstr "指定後，只要引發預期型別的例外，預期例外的文檔測試就會通過，即使詳細資訊（消"
"息和完全限定的例外名稱）不匹配。"

#: ../../library/doctest.rst:570
#, fuzzy
msgid ""
"For example, an example expecting ``ValueError: 42`` will pass if the actual "
"exception raised is ``ValueError: 3*14``, but will fail if, say, a :exc:"
"`TypeError` is raised instead. It will also ignore any fully qualified name "
"included before the exception class, which can vary between implementations "
"and versions of Python and the code/libraries in use. Hence, all three of "
"these variations will work with the flag specified:"
msgstr ""
"例如，如果實際引發的例外是 ValueError: 3*14 ，則期望 ValueError: 42 "
"的示例將通過，但如果改為引發 :exc: TypeError "
"，則會失敗。它還將忽略例外類之前包含的任何完全限定名稱，這些名稱可能因 "
"Python "
"的實作和版本以及使用的程式碼/庫而異。因此，所有這三種變體都將使用指定的旗標："

#: ../../library/doctest.rst:592
#, fuzzy
msgid ""
"Note that :const:`ELLIPSIS` can also be used to ignore the details of the "
"exception message, but such a test may still fail based on whether the "
"module name is present or matches exactly."
msgstr "請注意 :const:`ELLIPSIS` 也可用於忽略例外消息的詳細資訊，但根據模組名稱是否存"
"在或是否完全匹配，此類測試仍可能失敗。"

#: ../../library/doctest.rst:596
#, fuzzy
msgid ""
":const:`IGNORE_EXCEPTION_DETAIL` now also ignores any information relating "
"to the module containing the exception under test."
msgstr ":const:`IGNORE_EXCEPTION_DETAIL` "
"現在也忽略與包含被測例外的模組相關的任何資訊。"

#: ../../library/doctest.rst:603
#, fuzzy
msgid ""
"When specified, do not run the example at all.  This can be useful in "
"contexts where doctest examples serve as both documentation and test cases, "
"and an example should be included for documentation purposes, but should not "
"be checked.  E.g., the example's output might be random; or the example "
"might depend on resources which would be unavailable to the test driver."
msgstr ""
"指定後，根本不運行該示例。這在 doctest 示例同時用作文檔和測試用例的上下文中很"
"有用，並且應該包含一個示例用於文檔目的，但不應檢查。例如，示例的輸出可能是隨"
"機的；或者示例可能依賴於測試驅動程式不可用的資源。"

#: ../../library/doctest.rst:609
#, fuzzy
msgid ""
"The SKIP flag can also be used for temporarily \"commenting out\" examples."
msgstr "SKIP 旗標也可用於臨時“註釋掉”示例。"

#: ../../library/doctest.rst:614
#, fuzzy
msgid "A bitmask or'ing together all the comparison flags above."
msgstr "位掩碼或將上面的所有比較旗標組合在一起。"

#: ../../library/doctest.rst:616
#, fuzzy
msgid "The second group of options controls how test failures are reported:"
msgstr "第二組選項控制如何報告測試失敗："

#: ../../library/doctest.rst:621
#, fuzzy
msgid ""
"When specified, failures that involve multi-line expected and actual outputs "
"are displayed using a unified diff."
msgstr "指定後，涉及多行預期和實際輸出的故障將使用統一差異顯示。"

#: ../../library/doctest.rst:627
#, fuzzy
msgid ""
"When specified, failures that involve multi-line expected and actual outputs "
"will be displayed using a context diff."
msgstr "指定後，將使用上下文差異顯示涉及多行預期和實際輸出的故障。"

#: ../../library/doctest.rst:633
#, fuzzy
msgid ""
"When specified, differences are computed by ``difflib.Differ``, using the "
"same algorithm as the popular :file:`ndiff.py` utility. This is the only "
"method that marks differences within lines as well as across lines.  For "
"example, if a line of expected output contains digit ``1`` where actual "
"output contains letter ``l``, a line is inserted with a caret marking the "
"mismatching column positions."
msgstr ""
"當指定時，差異由 difflib.Differ 計算，使用與流行的 :file:`ndiff.py` 實用程式"
"相同的演算法。這是標記線內和線間差異的唯一方法。例如，如果預期輸出的一行包含"
"數字 ``1``，而實際輸出包含字母 ``l``，則會插入一行，插入符號標記不匹配的列位置。"

#: ../../library/doctest.rst:642
#, fuzzy
msgid ""
"When specified, display the first failing example in each doctest, but "
"suppress output for all remaining examples.  This will prevent doctest from "
"reporting correct examples that break because of earlier failures; but it "
"might also hide incorrect examples that fail independently of the first "
"failure.  When :const:`REPORT_ONLY_FIRST_FAILURE` is specified, the "
"remaining examples are still run, and still count towards the total number "
"of failures reported; only the output is suppressed."
msgstr ""
"指定時，顯示每個 doctest 中的第一個失敗示例，但抑制所有剩餘示例的輸出。"
"這將防止 doctest 報告由於早期失敗而中斷的正確示例；但它也可能隱藏不正確的例子"
"，這些例子與第一次失敗無關。當指定 :const:`REPORT_ONLY_FIRST_FAILURE` "
"時，剩餘的示例仍然運行，並且仍然計入報告的失敗總數；只有輸出被抑制。"

#: ../../library/doctest.rst:653
#, fuzzy
msgid ""
"When specified, exit after the first failing example and don't attempt to "
"run the remaining examples. Thus, the number of failures reported will be at "
"most 1.  This flag may be useful during debugging, since examples after the "
"first failure won't even produce debugging output."
msgstr ""
"指定後，在第一個失敗示例後退出，並且不要嘗試運行其餘示例"
"。因此，報告的失敗次數最多為 "
"1。此旗標在除錯期間可能很有用，因為第一次失敗後的示例甚至不會產生除錯輸出。"

#: ../../library/doctest.rst:658
#, fuzzy
msgid ""
"The doctest command line accepts the option ``-f`` as a shorthand for ``-o "
"FAIL_FAST``."
msgstr "doctest 命令列接受選項 ``-f``作為“-o FAIL_FAST”的簡寫。"

#: ../../library/doctest.rst:666
#, fuzzy
msgid "A bitmask or'ing together all the reporting flags above."
msgstr "一個位掩碼或將上面的所有報告旗標組合在一起。"

#: ../../library/doctest.rst:669
#, fuzzy
msgid ""
"There is also a way to register new option flag names, though this isn't "
"useful unless you intend to extend :mod:`doctest` internals via subclassing:"
msgstr "還有一種方法可以註冊新的選項旗標名稱，儘管這沒有用，"
"除非你打算通過子類別化擴充 :mod:`doctest` 內部結構："

#: ../../library/doctest.rst:675
#, fuzzy
msgid ""
"Create a new option flag with a given name, and return the new flag's "
"integer value.  :func:`register_optionflag` can be used when subclassing :"
"class:`OutputChecker` or :class:`DocTestRunner` to create new options that "
"are supported by your subclasses.  :func:`register_optionflag` should always "
"be called using the following idiom::"
msgstr ""
"使用給定的名稱建立一個新的選項旗標，並回傳新旗標的整數值。 "
":func:`register_optionflag` 可以在繼承 :class:`OutputChecker` 或 "
":class:`DocTestRunner` 時使用，以建立子類別支援的新選項。 "
":func:`register_optionflag` 應始終使用以下成語呼叫："

#: ../../library/doctest.rst:691
#, fuzzy
msgid "Directives"
msgstr "指令"

#: ../../library/doctest.rst:693
#, fuzzy
msgid ""
"Doctest directives may be used to modify the :ref:`option flags <doctest-"
"options>` for an individual example.  Doctest directives are special Python "
"comments following an example's source code:"
msgstr ""
"Doctest 指令可用於修改單個示例的選項旗標 <doctest-options>。 Doctest "
"指令是在示例源程式碼之後的特殊 Python 註釋："

#: ../../library/doctest.rst:704
#, fuzzy
msgid ""
"Whitespace is not allowed between the ``+`` or ``-`` and the directive "
"option name.  The directive option name can be any of the option flag names "
"explained above."
msgstr "``+`` 或 ``-`` 和指令選項名稱之間不允許有空格。指令選項名稱可以是上面解釋的任"
"何選項旗標名稱。"

#: ../../library/doctest.rst:708
#, fuzzy
msgid ""
"An example's doctest directives modify doctest's behavior for that single "
"example.  Use ``+`` to enable the named behavior, or ``-`` to disable it."
msgstr "一個示例的 doctest 指令修改了該單個示例的 doctest 行為。使用 ``+`` "
"啟用命名行為，或使用 ``-`` 禁用它。"

#: ../../library/doctest.rst:711
#, fuzzy
msgid "For example, this test passes:"
msgstr "例如，此測試通過："

#: ../../library/doctest.rst:720
#, fuzzy
msgid ""
"Without the directive it would fail, both because the actual output doesn't "
"have two blanks before the single-digit list elements, and because the "
"actual output is on a single line.  This test also passes, and also requires "
"a directive to do so:"
msgstr ""
"如果沒有該指令，它將失敗，這既是因為實際輸出在單個數字列表元素之前沒有兩個空"
"格，也是因為實際輸出在一行上。這個測試也通過了，並且還需要一個指令來這樣做："

#: ../../library/doctest.rst:731
#, fuzzy
msgid ""
"Multiple directives can be used on a single physical line, separated by "
"commas:"
msgstr "可以在單個物理行上使用多個指令，以逗號分隔："

#: ../../library/doctest.rst:740
#, fuzzy
msgid ""
"If multiple directive comments are used for a single example, then they are "
"combined:"
msgstr "如果多個指令註釋用於單個示例，則將它們合併："

#: ../../library/doctest.rst:750
#, fuzzy
msgid ""
"As the previous example shows, you can add ``...`` lines to your example "
"containing only directives.  This can be useful when an example is too long "
"for a directive to comfortably fit on the same line:"
msgstr "如前面的示例所示，您可以將 ``...`` 行新增到僅包含指令的示例中。當示例太長而指"
"令無法舒適地放在同一行時，這可能很有用："

#: ../../library/doctest.rst:761
#, fuzzy
msgid ""
"Note that since all options are disabled by default, and directives apply "
"only to the example they appear in, enabling options (via ``+`` in a "
"directive) is usually the only meaningful choice.  However, option flags can "
"also be passed to functions that run doctests, establishing different "
"defaults.  In such cases, disabling an option via ``-`` in a directive can "
"be useful."
msgstr ""
"請注意，由於預設情況下禁用所有選項，並且指令僅適用於它們出現的示例，因此啟用"
"選項（通過指令中的 ``+``）通常是唯一有意義的選擇。但是，"
"選項旗標也可以傳遞給運行 doctests "
"的函式，建立不同的預設值。在這種情況下，通過指令中的 ``-``禁用選項可能很有用。"

#: ../../library/doctest.rst:771
#, fuzzy
msgid "Warnings"
msgstr "警告"

#: ../../library/doctest.rst:773
#, fuzzy
msgid ""
":mod:`doctest` is serious about requiring exact matches in expected output.  "
"If even a single character doesn't match, the test fails.  This will "
"probably surprise you a few times, as you learn exactly what Python does and "
"doesn't guarantee about output.  For example, when printing a set, Python "
"doesn't guarantee that the element is printed in any particular order, so a "
"test like ::"
msgstr ""
":mod:`doctest` 非常重視在預期輸出中要求完全匹配。如果連一個字元都不匹配，則測"
"試失敗。這可能會讓您大吃一驚，因為您確切地了解了 Python "
"對輸出的保證和不保證。例如，當印出一個集合時，Python "
"不保證該元素以任何特定順序印出，所以像 :: 這樣的測試"

#: ../../library/doctest.rst:782
#, fuzzy
msgid "is vulnerable!  One workaround is to do ::"
msgstr "很脆弱！一種解決方法是執行 ::"

#: ../../library/doctest.rst:787
#, fuzzy
msgid "instead.  Another is to do ::"
msgstr "反而。另一個是做 ::"

#: ../../library/doctest.rst:793
#, fuzzy
msgid "There are others, but you get the idea."
msgstr "還有其他的，但你明白了。"

#: ../../library/doctest.rst:795
#, fuzzy
msgid "Another bad idea is to print things that embed an object address, like"
msgstr "另一個壞主意是印出嵌入對像地址的東西，比如"

#: ../../library/doctest.rst:805
#, fuzzy
msgid ""
"The :const:`ELLIPSIS` directive gives a nice approach for the last example:"
msgstr ":const:`ELLIPSIS` 指令為最後一個示例提供了一個很好的方法："

#: ../../library/doctest.rst:813
#, fuzzy
msgid ""
"Floating-point numbers are also subject to small output variations across "
"platforms, because Python defers to the platform C library for float "
"formatting, and C libraries vary widely in quality here. ::"
msgstr "浮點數在不同平台上的輸出變化也很小，因為 Python 遵從平台 C 庫的浮點格式，而 "
"C 庫的質量差異很大。 ::"

#: ../../library/doctest.rst:824
#, fuzzy
msgid ""
"Numbers of the form ``I/2.**J`` are safe across all platforms, and I often "
"contrive doctest examples to produce numbers of that form::"
msgstr "``I/2.**J`` 形式的數字在所有平台上都是安全的，我經常設計 doctest "
"示例來生成這種形式的數字::"

#: ../../library/doctest.rst:830
#, fuzzy
msgid ""
"Simple fractions are also easier for people to understand, and that makes "
"for better documentation."
msgstr "人們也更容易理解簡單分數，這有助於更好地記錄。"

#: ../../library/doctest.rst:837
#, fuzzy
msgid "Basic API"
msgstr "基礎API"

#: ../../library/doctest.rst:839
#, fuzzy
msgid ""
"The functions :func:`testmod` and :func:`testfile` provide a simple "
"interface to doctest that should be sufficient for most basic uses.  For a "
"less formal introduction to these two functions, see sections :ref:`doctest-"
"simple-testmod` and :ref:`doctest-simple-testfile`."
msgstr ""
"函式 :func:`testmod` 和 :func:`testfile` 為 doctest 提供了一個簡單的介面，足"
"以滿足大多數基本用途。有關這兩個函式的不太正式的介紹，請參閱 doctest-simple-"
"testmod 和 doctest-simple-testfile 部分。"

#: ../../library/doctest.rst:847
#, fuzzy
msgid ""
"All arguments except *filename* are optional, and should be specified in "
"keyword form."
msgstr "除了 *filename* 之外的所有參數都是可選的，並且應該以關鍵字形式指定。"

#: ../../library/doctest.rst:850
#, fuzzy
msgid ""
"Test examples in the file named *filename*.  Return ``(failure_count, "
"test_count)``."
msgstr "名為 *filename* 的文件中的測試示例。回傳``(failure_count, test_count)``。"

#: ../../library/doctest.rst:853
#, fuzzy
msgid ""
"Optional argument *module_relative* specifies how the filename should be "
"interpreted:"
msgstr "可選參數 *module_relative* 指定應如何解釋文件名："

#: ../../library/doctest.rst:856
#, fuzzy
msgid ""
"If *module_relative* is ``True`` (the default), then *filename* specifies an "
"OS-independent module-relative path.  By default, this path is relative to "
"the calling module's directory; but if the *package* argument is specified, "
"then it is relative to that package.  To ensure OS-independence, *filename* "
"should use ``/`` characters to separate path segments, and may not be an "
"absolute path (i.e., it may not begin with ``/``)."
msgstr ""
"如果 *module_relative* 為 ``True``（預設值），則 *filename* 指定一個獨立於操"
"作系統的模組相對路徑。預設情況下，這個路徑是相對於呼叫模組目錄的；"
"但是如果指定了 *package* "
"參數，那麼它是相對於那個包的。為確保操作系統獨立性，*filename* "
"應使用 ``/``字元分隔路徑段，並且可能不是絕對路徑（即，它可能不以 ``/``開頭）。"

#: ../../library/doctest.rst:863
#, fuzzy
msgid ""
"If *module_relative* is ``False``, then *filename* specifies an OS-specific "
"path.  The path may be absolute or relative; relative paths are resolved "
"with respect to the current working directory."
msgstr ""
"如果 *module_relative* 為 ``False``，則 *filename* 指定特定於操作系統的路徑。路"
"徑可以是絕對的或相對的；相對路徑是相對於當前工作目錄解析的。"

#: ../../library/doctest.rst:867
#, fuzzy
msgid ""
"Optional argument *name* gives the name of the test; by default, or if "
"``None``, ``os.path.basename(filename)`` is used."
msgstr "可選參數 *name* 給出測試的名稱；預設情況下，或者如果 ``None`` ，則使用“os.path."
"basename（文件名）”。"

#: ../../library/doctest.rst:870
#, fuzzy
msgid ""
"Optional argument *package* is a Python package or the name of a Python "
"package whose directory should be used as the base directory for a module-"
"relative filename.  If no package is specified, then the calling module's "
"directory is used as the base directory for module-relative filenames.  It "
"is an error to specify *package* if *module_relative* is ``False``."
msgstr ""
"可選參數 *package* 是 Python 包或 Python 包的名稱，其目錄應用作模組相關文件名"
"的基本目錄。如果未指定包，則呼叫模組的目錄將用作模組相關文件名的基目錄。如果 "
"*module_relative* 為 ``False``，則指定 *package* 是錯誤的。"

#: ../../library/doctest.rst:876
#, fuzzy
msgid ""
"Optional argument *globs* gives a dict to be used as the globals when "
"executing examples.  A new shallow copy of this dict is created for the "
"doctest, so its examples start with a clean slate. By default, or if "
"``None``, a new empty dict is used."
msgstr ""
"可選參數 *globs* 給出一個字典，在執行示例時用作全局變數。這個 dict "
"的一個新的淺表副本是為 doctest 建立的，所以它的例子從一個乾淨的石板開始。預設"
"情況下，或者如果 ``None`` ，則使用一個新的空字典。"

#: ../../library/doctest.rst:881
#, fuzzy
msgid ""
"Optional argument *extraglobs* gives a dict merged into the globals used to "
"execute examples.  This works like :meth:`dict.update`:  if *globs* and "
"*extraglobs* have a common key, the associated value in *extraglobs* appears "
"in the combined dict.  By default, or if ``None``, no extra globals are "
"used.  This is an advanced feature that allows parameterization of "
"doctests.  For example, a doctest can be written for a base class, using a "
"generic name for the class, then reused to test any number of subclasses by "
"passing an *extraglobs* dict mapping the generic name to the subclass to be "
"tested."
msgstr ""
"可選參數 *extraglobs* 給出了一個合併到用於執行示例的全局變數中的字典。這就像 "
":meth:`dict.update` 一樣工作：如果 *globs* 和 *extraglobs* "
"有一個公開鍵，*extraglobs* 中的關聯值出現在組合字典中。預設情況下，或者如果“"
"無”，則不使用額外的全局變數。這是一個允許對 doctest "
"進行參數化的高階功能。例如，可以為基底類別編寫一個 "
"doctest，使用該類的通用名稱，然後通過傳遞將通用名稱映射到要測試的子類別的 "
"*extraglobs* dict 來重新用於測試任意數量的子類別。"

#: ../../library/doctest.rst:890
#, fuzzy
msgid ""
"Optional argument *verbose* prints lots of stuff if true, and prints only "
"failures if false; by default, or if ``None``, it's true if and only if ``'-"
"v'`` is in ``sys.argv``."
msgstr ""
"可選參數 *verbose* 如果為真則印出大量內容，如果為假則僅印出失敗；預設情況下，"
"或者如果 ``None`` ，當且僅當 ``-v``在“sys.argv”中時為真。"

#: ../../library/doctest.rst:894
#, fuzzy
msgid ""
"Optional argument *report* prints a summary at the end when true, else "
"prints nothing at the end.  In verbose mode, the summary is detailed, else "
"the summary is very brief (in fact, empty if all tests passed)."
msgstr ""
"可選參數 *report* 為真時在末尾印出摘要，否則在末尾不印出任何內容。在詳細模式"
"下，摘要是詳細的，否則摘要非常簡短（實際上，如果所有測試都通過，則為空）。"

#: ../../library/doctest.rst:898
#, fuzzy
msgid ""
"Optional argument *optionflags* (default value 0) takes the :ref:`bitwise OR "
"<bitwise>` of option flags. See section :ref:`doctest-options`."
msgstr ""
"可選參數 *optionflags*（預設值 0）採用選項旗標的 :ref:`按位或 <bitwise>`。"
"請參閱 :ref:`doctest-options` 部分。"

#: ../../library/doctest.rst:902
#, fuzzy
msgid ""
"Optional argument *raise_on_error* defaults to false.  If true, an exception "
"is raised upon the first failure or unexpected exception in an example.  "
"This allows failures to be post-mortem debugged. Default behavior is to "
"continue running examples."
msgstr ""
"可選參數 *raise_on_error* 預設為 false。如果為真，則在示例中的第一次失敗或意"
"外例外時引發例外。這允許對故障進行事後除錯。預設行為是繼續運行示例。"

#: ../../library/doctest.rst:907 ../../library/doctest.rst:1047
#, fuzzy
msgid ""
"Optional argument *parser* specifies a :class:`DocTestParser` (or subclass) "
"that should be used to extract tests from the files.  It defaults to a "
"normal parser (i.e., ``DocTestParser()``)."
msgstr ""
"可選參數 *parser* 指定應該用於從文件中提取測試的 "
"DocTestParser（或子類別）。它預設為普通解析器（即``DocTestParser()``）。"

#: ../../library/doctest.rst:911 ../../library/doctest.rst:1051
#, fuzzy
msgid ""
"Optional argument *encoding* specifies an encoding that should be used to "
"convert the file to unicode."
msgstr "可選參數 *encoding* 指定應該用於將文件轉換為 unicode 的編碼。"

#: ../../library/doctest.rst:917
#, fuzzy
msgid ""
"All arguments are optional, and all except for *m* should be specified in "
"keyword form."
msgstr "所有參數都是可選的，除 *m* 外的所有參數都應以關鍵字形式指定。"

#: ../../library/doctest.rst:920
#, fuzzy
msgid ""
"Test examples in docstrings in functions and classes reachable from module "
"*m* (or module :mod:`__main__` if *m* is not supplied or is ``None``), "
"starting with ``m.__doc__``."
msgstr ""
"從模組*m*（或模組 :mod:`__main__`如果*m*未提供或為``None``）可訪問的函式和類"
"中的文檔字串中的測試示例，以``m.__doc__``開頭。"

#: ../../library/doctest.rst:924
#, fuzzy
msgid ""
"Also test examples reachable from dict ``m.__test__``, if it exists and is "
"not ``None``.  ``m.__test__`` maps names (strings) to functions, classes and "
"strings; function and class docstrings are searched for examples; strings "
"are searched directly, as if they were docstrings."
msgstr ""
"如果它存在並且不是 ``None``，也可以從 dict``m.__test__`` 中測試示例。 ``m."
"__test__`` 將名稱（字串）映射到函式、類和字串；搜索函式和類文檔字串以獲取示例"
"；直接搜索字串，就好像它們是文檔字串一樣。"

#: ../../library/doctest.rst:929
#, fuzzy
msgid ""
"Only docstrings attached to objects belonging to module *m* are searched."
msgstr "僅搜索附加到屬於模組 *m* 的物件的文檔字串。"

#: ../../library/doctest.rst:931
#, fuzzy
msgid "Return ``(failure_count, test_count)``."
msgstr "回傳``(failure_count, test_count)``。"

#: ../../library/doctest.rst:933
#, fuzzy
msgid ""
"Optional argument *name* gives the name of the module; by default, or if "
"``None``, ``m.__name__`` is used."
msgstr "可選參數 *name* 給出模組的名稱；預設情況下，或者如果 ``None`` ，則使用“m."
"__name__”。"

#: ../../library/doctest.rst:936
#, fuzzy
msgid ""
"Optional argument *exclude_empty* defaults to false.  If true, objects for "
"which no doctests are found are excluded from consideration. The default is "
"a backward compatibility hack, so that code still using :meth:`doctest."
"master.summarize` in conjunction with :func:`testmod` continues to get "
"output for objects with no tests. The *exclude_empty* argument to the newer :"
"class:`DocTestFinder` constructor defaults to true."
msgstr ""
"可選參數 *exclude_empty* 預設為 false。如果為 true，則不考慮未找到 doctest "
"的物件。預設是向後相容 hack，因此程式碼仍然使用 :meth:`doctest.master."
"summarize` 和 :func:`testmod` 繼續獲取沒有測試的物件的輸出。較新的 "
"DocTestFinder 構造函式的 *exclude_empty* 參數預設為 true。"

#: ../../library/doctest.rst:943
#, fuzzy
msgid ""
"Optional arguments *extraglobs*, *verbose*, *report*, *optionflags*, "
"*raise_on_error*, and *globs* are the same as for function :func:`testfile` "
"above, except that *globs* defaults to ``m.__dict__``."
msgstr ""
"可選參數 *extraglobs*、*verbose*、*report*、*optionflags*、*raise_on_error* "
"和 *globs* 與上面的函式 :func:`testfile` 相同，除了 *globs* 預設為 ``m ."
"__dict__``。"

#: ../../library/doctest.rst:950
#, fuzzy
msgid ""
"Test examples associated with object *f*; for example, *f* may be a string, "
"a module, a function, or a class object."
msgstr "與物件 *f* 關聯的測試示例；例如，*f* 可以是字串、模組、函式或類物件。"

#: ../../library/doctest.rst:953
#, fuzzy
msgid ""
"A shallow copy of dictionary argument *globs* is used for the execution "
"context."
msgstr "字典參數 *globs* 的淺表副本用於執行上下文。"

#: ../../library/doctest.rst:955
#, fuzzy
msgid ""
"Optional argument *name* is used in failure messages, and defaults to ``"
"\"NoName\"``."
msgstr "可選參數 *name* 用於失敗消息，預設為 ``\"NoName\"``。"

#: ../../library/doctest.rst:958
#, fuzzy
msgid ""
"If optional argument *verbose* is true, output is generated even if there "
"are no failures.  By default, output is generated only in case of an example "
"failure."
msgstr "如果可選參數 *verbose* "
"為真，即使沒有失敗也會生成輸出。預設情況下，僅在示例失敗時才生成輸出。"

#: ../../library/doctest.rst:961
#, fuzzy
msgid ""
"Optional argument *compileflags* gives the set of flags that should be used "
"by the Python compiler when running the examples.  By default, or if "
"``None``, flags are deduced corresponding to the set of future features "
"found in *globs*."
msgstr ""
"可選參數 *compileflags* 給出了 Python "
"編譯器在運行示例時應使用的旗標集。預設情況下，或者如果 ``None`` ，則根據 *globs* "
"中找到的未來特徵集推導出旗標。"

#: ../../library/doctest.rst:965
#, fuzzy
msgid ""
"Optional argument *optionflags* works as for function :func:`testfile` above."
msgstr "可選參數 *optionflags* 與上面的函式 :func:`testfile` 一樣工作。"

#: ../../library/doctest.rst:971
#, fuzzy
msgid "Unittest API"
msgstr "單元測試API"

#: ../../library/doctest.rst:973
#, fuzzy
msgid ""
"As your collection of doctest'ed modules grows, you'll want a way to run all "
"their doctests systematically.  :mod:`doctest` provides two functions that "
"can be used to create :mod:`unittest` test suites from modules and text "
"files containing doctests.  To integrate with :mod:`unittest` test "
"discovery, include a :func:`load_tests` function in your test module::"
msgstr ""
"隨著你的 doctest'ed 模組集合的增長，你會想要一種方法來系統地運行他們所有的 "
"doctests。 :mod:`doctest` 提供了兩個函式，可用於從模組和包含 doctests "
"的文本文件建立 :mod:`unittest` 測試套件。要與 :mod:`unittest` 測試發現集成，"
"請在您的測試模組中包含一個 :func:`load_tests` 函式::"

#: ../../library/doctest.rst:987
#, fuzzy
msgid ""
"There are two main functions for creating :class:`unittest.TestSuite` "
"instances from text files and modules with doctests:"
msgstr "有兩個主要函式用於從文本文件和帶有 doctests 的模組建立 :class:`unittest."
"TestSuite` 實例："

#: ../../library/doctest.rst:993
#, fuzzy
msgid ""
"Convert doctest tests from one or more text files to a :class:`unittest."
"TestSuite`."
msgstr "將 doctest 測試從一個或多個文本文件轉換為 :class:`unittest.TestSuite`。"

#: ../../library/doctest.rst:996
#, fuzzy
msgid ""
"The returned :class:`unittest.TestSuite` is to be run by the unittest "
"framework and runs the interactive examples in each file.  If an example in "
"any file fails, then the synthesized unit test fails, and a :exc:"
"`failureException` exception is raised showing the name of the file "
"containing the test and a (sometimes approximate) line number."
msgstr ""
"回傳的 :class:`unittest.TestSuite` 將由 unittest 框架運行，並運行每個文件中的"
"交互式示例。如果任何文件中的示例失敗，則綜合單元測試失敗，並引發 "
":exc:`failureException` "
"例外，顯示包含測試的文件的名稱和（有時是近似的）行號。"

#: ../../library/doctest.rst:1002
#, fuzzy
msgid "Pass one or more paths (as strings) to text files to be examined."
msgstr "將一個或多個路徑（作為字串）傳遞給要檢查的文本文件。"

#: ../../library/doctest.rst:1004
#, fuzzy
msgid "Options may be provided as keyword arguments:"
msgstr "選項可以作為關鍵字參數提供："

#: ../../library/doctest.rst:1006
#, fuzzy
msgid ""
"Optional argument *module_relative* specifies how the filenames in *paths* "
"should be interpreted:"
msgstr "可選參數 *module_relative* 指定應如何解釋 *paths* 中的文件名："

#: ../../library/doctest.rst:1009
#, fuzzy
msgid ""
"If *module_relative* is ``True`` (the default), then each filename in "
"*paths* specifies an OS-independent module-relative path.  By default, this "
"path is relative to the calling module's directory; but if the *package* "
"argument is specified, then it is relative to that package.  To ensure OS-"
"independence, each filename should use ``/`` characters to separate path "
"segments, and may not be an absolute path (i.e., it may not begin with ``/"
"``)."
msgstr ""
"如果 *module_relative* 是 ``True``（預設值），那麼 *paths* 中的每個文件名都指"
"定了一個獨立於操作系統的模組相對路徑。預設情況下，這個路徑是相對於呼叫模組目"
"錄的；但是如果指定了 *package* 參數，那麼它是相對於那個包的。為確保操作系統獨"
"立性，每個文件名應使用 ``/``字元分隔路徑段，並且可能不是絕對路徑（即，它可能不以"
" ``/``開頭）。"

#: ../../library/doctest.rst:1017
#, fuzzy
msgid ""
"If *module_relative* is ``False``, then each filename in *paths* specifies "
"an OS-specific path.  The path may be absolute or relative; relative paths "
"are resolved with respect to the current working directory."
msgstr ""
"如果 *module_relative* 為 ``False``，則 *paths* 中的每個文件名指定一個特定於"
"操作系統的路徑。路徑可以是絕對的或相對的；相對路徑是相對於當前工作目錄解析的"
"。"

#: ../../library/doctest.rst:1021
#, fuzzy
msgid ""
"Optional argument *package* is a Python package or the name of a Python "
"package whose directory should be used as the base directory for module-"
"relative filenames in *paths*.  If no package is specified, then the calling "
"module's directory is used as the base directory for module-relative "
"filenames.  It is an error to specify *package* if *module_relative* is "
"``False``."
msgstr ""
"可選參數 *package* 是 Python 包或 Python 包的名稱，其目錄應用作 *paths* 中模"
"組相關文件名的基本目錄。如果未指定包，則呼叫模組的目錄將用作模組相關文件名的"
"基目錄。如果 *module_relative* 為 ``False``，則指定 *package* 是錯誤的。"

#: ../../library/doctest.rst:1028
#, fuzzy
msgid ""
"Optional argument *setUp* specifies a set-up function for the test suite. "
"This is called before running the tests in each file.  The *setUp* function "
"will be passed a :class:`DocTest` object.  The setUp function can access the "
"test globals as the *globs* attribute of the test passed."
msgstr ""
"可選參數 *setUp* 指定測試套件的設定函式。這是在每個文件中運行測試之前呼叫的。"
" *setUp* 函式將傳遞一個 DocTest 物件。 setUp "
"函式可以訪問測試全局變數作為已通過測試的 *globs* 屬性。"

#: ../../library/doctest.rst:1033
#, fuzzy
msgid ""
"Optional argument *tearDown* specifies a tear-down function for the test "
"suite.  This is called after running the tests in each file.  The *tearDown* "
"function will be passed a :class:`DocTest` object.  The setUp function can "
"access the test globals as the *globs* attribute of the test passed."
msgstr ""
"可選參數 *tearDown* "
"指定測試套件的拆卸功能。這是在每個文件中運行測試後呼叫的。 *tearDown* "
"函式將傳遞一個 DocTest 物件。 setUp 函式可以訪問測試全局變數作為已通過測試的 "
"*globs* 屬性。"

#: ../../library/doctest.rst:1038 ../../library/doctest.rst:1072
#, fuzzy
msgid ""
"Optional argument *globs* is a dictionary containing the initial global "
"variables for the tests.  A new copy of this dictionary is created for each "
"test.  By default, *globs* is a new empty dictionary."
msgstr "可選參數 *globs* 是包含測試的初始全局變數的字典。為每個測試建立該詞典的新副本"
"。預設情況下，*globs* 是一個新的空字典。"

#: ../../library/doctest.rst:1042
#, fuzzy
msgid ""
"Optional argument *optionflags* specifies the default doctest options for "
"the tests, created by or-ing together individual option flags.  See section :"
"ref:`doctest-options`. See function :func:`set_unittest_reportflags` below "
"for a better way to set reporting options."
msgstr ""
"可選參數 *optionflags* 指定測試的預設 doctest "
"選項，通過將各個選項旗標組合在一起建立。請參閱 :ref:`doctest-options` 部分。"
"有關設定報告選項的更好方法，請參見下面的函式 :func:`set_unittest_reportflags`"
"。"

#: ../../library/doctest.rst:1054
#, fuzzy
msgid ""
"The global ``__file__`` is added to the globals provided to doctests loaded "
"from a text file using :func:`DocFileSuite`."
msgstr "全局 ``__file__`` 被新增到提供給使用 DocFileSuite 從文本文件加載的 doctests "
"的全局變數中。"

#: ../../library/doctest.rst:1060
#, fuzzy
msgid "Convert doctest tests for a module to a :class:`unittest.TestSuite`."
msgstr "將模組的 doctest 測試轉換為 :class:`unittest.TestSuite`。"

#: ../../library/doctest.rst:1062
#, fuzzy
msgid ""
"The returned :class:`unittest.TestSuite` is to be run by the unittest "
"framework and runs each doctest in the module.  If any of the doctests fail, "
"then the synthesized unit test fails, and a :exc:`failureException` "
"exception is raised showing the name of the file containing the test and a "
"(sometimes approximate) line number."
msgstr ""
"回傳的 :class:`unittest.TestSuite` 將由 unittest 框架運行，"
"並運行模組中的每個 doctest。如果任何 doctests 失敗，則綜合單元測試失敗，"
"並引發 :exc:`failureException` "
"例外，顯示包含測試的文件的名稱和（有時是近似的）行號。"

#: ../../library/doctest.rst:1068
#, fuzzy
msgid ""
"Optional argument *module* provides the module to be tested.  It can be a "
"module object or a (possibly dotted) module name.  If not specified, the "
"module calling this function is used."
msgstr "可選參數 *module* 提供要測試的模組。它可以是一個模組對像或一個（可能是帶點的"
"）模組名稱。如果未指定，則使用呼叫此函式的模組。"

#: ../../library/doctest.rst:1076
#, fuzzy
msgid ""
"Optional argument *extraglobs* specifies an extra set of global variables, "
"which is merged into *globs*.  By default, no extra globals are used."
msgstr "可選參數 *extraglobs* 指定一組額外的全局變數，這些變數被合併到 *globs* "
"中。預設情況下，不使用額外的全局變數。"

#: ../../library/doctest.rst:1079
#, fuzzy
msgid ""
"Optional argument *test_finder* is the :class:`DocTestFinder` object (or a "
"drop-in replacement) that is used to extract doctests from the module."
msgstr "可選參數 *test_finder* 是用於從模組中提取 doctests 的 DocTestFinder "
"物件（或直接替換）。"

#: ../../library/doctest.rst:1082
#, fuzzy
msgid ""
"Optional arguments *setUp*, *tearDown*, and *optionflags* are the same as "
"for function :func:`DocFileSuite` above."
msgstr "可選參數 *setUp*、*tearDown* 和 *optionflags* 與上面的函式 "
":func:`DocFileSuite` 相同。"

#: ../../library/doctest.rst:1085
#, fuzzy
msgid "This function uses the same search technique as :func:`testmod`."
msgstr "此函式使用與 :func:`testmod` 相同的搜索技術。"

#: ../../library/doctest.rst:1087
#, fuzzy
msgid ""
":func:`DocTestSuite` returns an empty :class:`unittest.TestSuite` if "
"*module* contains no docstrings instead of raising :exc:`ValueError`."
msgstr ""
":func:`DocTestSuite` 回傳一個空的 :class:`unittest.TestSuite` 如果 *module* "
"不包含文檔字串而不是引發 :exc:`ValueError`。"

#: ../../library/doctest.rst:1092
#, fuzzy
msgid ""
"Under the covers, :func:`DocTestSuite` creates a :class:`unittest.TestSuite` "
"out of :class:`doctest.DocTestCase` instances, and :class:`DocTestCase` is a "
"subclass of :class:`unittest.TestCase`. :class:`DocTestCase` isn't "
"documented here (it's an internal detail), but studying its code can answer "
"questions about the exact details of :mod:`unittest` integration."
msgstr ""
"在幕後，DocTestSuite 從 doctest.DocTestCase 實例中建立了一個 unittest."
"TestSuite，並且 DocTestCase 是 unittest.TestCase 的子類別`。 "
":class:`DocTestCase` 未在此處記錄（這是一個內部細節），"
"但研究其程式碼可以回答有關 :mod:`unittest` 集成的確切細節的問題。"

#: ../../library/doctest.rst:1098
#, fuzzy
msgid ""
"Similarly, :func:`DocFileSuite` creates a :class:`unittest.TestSuite` out "
"of :class:`doctest.DocFileCase` instances, and :class:`DocFileCase` is a "
"subclass of :class:`DocTestCase`."
msgstr ""
"類似地，DocFileSuite 從 doctest.DocFileCase 實例中建立一個 unittest."
"TestSuite，而 DocFileCase 是 DocTestCase 的子類別。"

#: ../../library/doctest.rst:1102
#, fuzzy
msgid ""
"So both ways of creating a :class:`unittest.TestSuite` run instances of :"
"class:`DocTestCase`.  This is important for a subtle reason: when you run :"
"mod:`doctest` functions yourself, you can control the :mod:`doctest` options "
"in use directly, by passing option flags to :mod:`doctest` functions.  "
"However, if you're writing a :mod:`unittest` framework, :mod:`unittest` "
"ultimately controls when and how tests get run.  The framework author "
"typically wants to control :mod:`doctest` reporting options (perhaps, e.g., "
"specified by command line options), but there's no way to pass options "
"through :mod:`unittest` to :mod:`doctest` test runners."
msgstr ""
"因此，兩種建立 unittest.TestSuite 的方法都運行 :class:`DocTestCase` "
"的實例。這一點很重要，原因很微妙：當您自己運行 :mod:`doctest` 函式時，"
"您可以通過將選項旗標傳遞給 :mod:`doctest` 函式來控制直接使用的 :mod:`doctest`"
" 選項。但是，如果您正在編寫 :mod:`unittest` 框架，:mod:`unittest` "
"最終控制測試何時以及如何運行。框架作者通常想要控制 :mod:`doctest` "
"報告選項（也許，例如，由命令列選項指定），但無法通過 :mod:`unittest` "
"將選項傳遞給 :mod:`doctest` 測試運行器."

#: ../../library/doctest.rst:1112
#, fuzzy
msgid ""
"For this reason, :mod:`doctest` also supports a notion of :mod:`doctest` "
"reporting flags specific to :mod:`unittest` support, via this function:"
msgstr ""
"出於這個原因， :mod:`doctest` 還通過以下函式支援特定於 :mod:`unittest` "
"支援的 :mod:`doctest` 報告旗標的概念："

#: ../../library/doctest.rst:1118
#, fuzzy
msgid "Set the :mod:`doctest` reporting flags to use."
msgstr "設定要使用的 :mod:`doctest` 報告旗標。"

#: ../../library/doctest.rst:1120
#, fuzzy
msgid ""
"Argument *flags* takes the :ref:`bitwise OR <bitwise>` of option flags.  See "
"section :ref:`doctest-options`.  Only \"reporting flags\" can be used."
msgstr ""
"參數 *flags* 採用選項旗標的 :ref:`按位或 <bitwise>`。請參閱 :ref:`doctest-"
"options` 部分。只能使用“報告旗標”。"

#: ../../library/doctest.rst:1123
#, fuzzy
msgid ""
"This is a module-global setting, and affects all future doctests run by "
"module :mod:`unittest`:  the :meth:`runTest` method of :class:`DocTestCase` "
"looks at the option flags specified for the test case when the :class:"
"`DocTestCase` instance was constructed.  If no reporting flags were "
"specified (which is the typical and expected case), :mod:`doctest`'s :mod:"
"`unittest` reporting flags are :ref:`bitwise ORed <bitwise>` into the option "
"flags, and the option flags so augmented are passed to the :class:"
"`DocTestRunner` instance created to run the doctest.  If any reporting flags "
"were specified when the :class:`DocTestCase` instance was constructed, :mod:"
"`doctest`'s :mod:`unittest` reporting flags are ignored."
msgstr ""
"這是一個模組全局設定，並影響模組 unittest 運行的所有未來 doctests："
"DocTestCase 的 runTest "
"方法查看為測試用例指定的選項旗標，當 :class:`DocTestCase` "
"實例已構建。如果未指定報告旗標（這是典型和預期的情況），則 :mod:`doctest` 的 "
":mod:`unittest` 報告旗標是 :ref:`按位或 <bitwise>` 到選項旗標中，"
"並且如此擴充的選項旗標被傳遞給為運行 doctest 而建立的 DocTestRunner 實例。"
"如果在構建 DocTestCase 實例時指定了任何報告旗標，則忽略 mod:`doctest` 的 "
":mod:`unittest` 報告旗標。"

#: ../../library/doctest.rst:1134
#, fuzzy
msgid ""
"The value of the :mod:`unittest` reporting flags in effect before the "
"function was called is returned by the function."
msgstr "呼叫函式之前有效的 :mod:`unittest` 報告旗標的值由函式回傳。"

#: ../../library/doctest.rst:1141
#, fuzzy
msgid "Advanced API"
msgstr "高階介面"

#: ../../library/doctest.rst:1143
#, fuzzy
msgid ""
"The basic API is a simple wrapper that's intended to make doctest easy to "
"use. It is fairly flexible, and should meet most users' needs; however, if "
"you require more fine-grained control over testing, or wish to extend "
"doctest's capabilities, then you should use the advanced API."
msgstr ""
"基本 API 是一個簡單的包裝器，旨在使 doctest 易於使用。它相當靈活，應該可以滿"
"足大多數使用者的需求；但是，如果您需要對測試進行更細粒度的控制，或者希望擴充 "
"doctest 的功能，那麼您應該使用高階 API。"

#: ../../library/doctest.rst:1148
#, fuzzy
msgid ""
"The advanced API revolves around two container classes, which are used to "
"store the interactive examples extracted from doctest cases:"
msgstr "高階 API 圍繞兩個容器類，用於儲存從 doctest 案例中提取的交互式示例："

#: ../../library/doctest.rst:1151
#, fuzzy
msgid ""
":class:`Example`: A single Python :term:`statement`, paired with its "
"expected output."
msgstr ":class:`Example`: 單個 Python :term:`statement`，與其預期輸出配對。"

#: ../../library/doctest.rst:1154
#, fuzzy
msgid ""
":class:`DocTest`: A collection of :class:`Example`\\ s, typically extracted "
"from a single docstring or text file."
msgstr ":class:`DocTest`: :class:`Example`\\ "
"的集合，通常從單個文檔字串或文本文件中提取。"

#: ../../library/doctest.rst:1157
#, fuzzy
msgid ""
"Additional processing classes are defined to find, parse, and run, and check "
"doctest examples:"
msgstr "定義了額外的處理類來查找、解析、運行和檢查 doctest 示例："

#: ../../library/doctest.rst:1160
#, fuzzy
msgid ""
":class:`DocTestFinder`: Finds all docstrings in a given module, and uses a :"
"class:`DocTestParser` to create a :class:`DocTest` from every docstring that "
"contains interactive examples."
msgstr ""
"DocTestFinder：查找給定模組中的所有文檔字串，並使用 DocTestParser "
"從每個包含交互式示例的文檔字串建立一個 DocTest。"

#: ../../library/doctest.rst:1164
#, fuzzy
msgid ""
":class:`DocTestParser`: Creates a :class:`DocTest` object from a string "
"(such as an object's docstring)."
msgstr ":class:`DocTestParser`: 從字串（例如物件的文檔字串）建立一個 :class:`DocTest`"
" 物件。"

#: ../../library/doctest.rst:1167
#, fuzzy
msgid ""
":class:`DocTestRunner`: Executes the examples in a :class:`DocTest`, and "
"uses an :class:`OutputChecker` to verify their output."
msgstr ""
":class:`DocTestRunner`：執行 DocTest 中的示例，並使用 :class:`OutputChecker` "
"來驗證它們的輸出。"

#: ../../library/doctest.rst:1170
#, fuzzy
msgid ""
":class:`OutputChecker`: Compares the actual output from a doctest example "
"with the expected output, and decides whether they match."
msgstr ":class:`OutputChecker`：將 doctest "
"示例的實際輸出與預期輸出進行比較，並確定它們是否匹配。"

#: ../../library/doctest.rst:1173
#, fuzzy
msgid ""
"The relationships among these processing classes are summarized in the "
"following diagram::"
msgstr "這些處理類之間的關係總結如下圖："

#: ../../library/doctest.rst:1189
msgid "DocTest Objects"
msgstr "DocTest 物件"

#: ../../library/doctest.rst:1194
#, fuzzy
msgid ""
"A collection of doctest examples that should be run in a single namespace.  "
"The constructor arguments are used to initialize the attributes of the same "
"names."
msgstr "應該在單個命名空間中運行的 doctest "
"示例的集合。構造函式參數用於初始化同名屬性。"

#: ../../library/doctest.rst:1198
#, fuzzy
msgid ""
":class:`DocTest` defines the following attributes.  They are initialized by "
"the constructor, and should not be modified directly."
msgstr ":class:`DocTest` 定義了以下屬性。它們由構造函式初始化，不應直接修改。"

#: ../../library/doctest.rst:1204
#, fuzzy
msgid ""
"A list of :class:`Example` objects encoding the individual interactive "
"Python examples that should be run by this test."
msgstr "一個 :class:`Example` 物件的列表，編碼應該由該測試運行的單個交互式 Python "
"示例。"

#: ../../library/doctest.rst:1210
#, fuzzy
msgid ""
"The namespace (aka globals) that the examples should be run in. This is a "
"dictionary mapping names to values.  Any changes to the namespace made by "
"the examples (such as binding new variables) will be reflected in :attr:"
"`globs` after the test is run."
msgstr ""
"示例應該在其中運行的命名空間（也稱為全局變數）。這是一個將名稱映射到值的字典"
"。示例對命名空間所做的任何更改（例如綁定新變數）都將在測試運行後反映在 globs "
"中。"

#: ../../library/doctest.rst:1218
#, fuzzy
msgid ""
"A string name identifying the :class:`DocTest`.  Typically, this is the name "
"of the object or file that the test was extracted from."
msgstr "標識 DocTest 的字串名稱。通常，這是從中提取測試的對像或文件的名稱。"

#: ../../library/doctest.rst:1224
#, fuzzy
msgid ""
"The name of the file that this :class:`DocTest` was extracted from; or "
"``None`` if the filename is unknown, or if the :class:`DocTest` was not "
"extracted from a file."
msgstr "從中提取此 DocTest 的文件的名稱；或者 ``None`` 如果文件名未知，或者 DocTest "
"不是從文件中提取的。"

#: ../../library/doctest.rst:1231
#, fuzzy
msgid ""
"The line number within :attr:`filename` where this :class:`DocTest` begins, "
"or ``None`` if the line number is unavailable.  This line number is zero-"
"based with respect to the beginning of the file."
msgstr ":attr:`filename` 中此 DocTest 開始的行號，如果行號不可用，則為 "
"``None``。該行號相對於文件的開頭從零開始。"

#: ../../library/doctest.rst:1238
#, fuzzy
msgid ""
"The string that the test was extracted from, or ``None`` if the string is "
"unavailable, or if the test was not extracted from a string."
msgstr "從中提取測試的字串，如果字串不可用，或者如果未從字串中提取測試，則為 ``None``。"

#: ../../library/doctest.rst:1245
msgid "Example Objects"
msgstr "Example 物件"

#: ../../library/doctest.rst:1250
#, fuzzy
msgid ""
"A single interactive example, consisting of a Python statement and its "
"expected output.  The constructor arguments are used to initialize the "
"attributes of the same names."
msgstr "一個交互式示例，由 Python "
"語句及其預期輸出組成。構造函式參數用於初始化同名屬性。"

#: ../../library/doctest.rst:1255
#, fuzzy
msgid ""
":class:`Example` defines the following attributes.  They are initialized by "
"the constructor, and should not be modified directly."
msgstr ":class:`Example` 定義了以下屬性。它們由構造函式初始化，不應直接修改。"

#: ../../library/doctest.rst:1261
#, fuzzy
msgid ""
"A string containing the example's source code.  This source code consists of "
"a single Python statement, and always ends with a newline; the constructor "
"adds a newline when necessary."
msgstr "包含示例源程式碼的字串。此源程式碼由單個 Python "
"語句組成，並始終以換行符結尾；構造函式在必要時新增換行符。"

#: ../../library/doctest.rst:1268
#, fuzzy
msgid ""
"The expected output from running the example's source code (either from "
"stdout, or a traceback in case of exception).  :attr:`want` ends with a "
"newline unless no output is expected, in which case it's an empty string.  "
"The constructor adds a newline when necessary."
msgstr ""
"運行示例源程式碼的預期輸出（來自標準輸出，或例外情況下的回溯）。 :attr:`want`"
" 以換行符結尾，除非沒有預期的輸出，在這種情況下它是一個空字串。構造函式在必要"
"時新增換行符。"

#: ../../library/doctest.rst:1276
#, fuzzy
msgid ""
"The exception message generated by the example, if the example is expected "
"to generate an exception; or ``None`` if it is not expected to generate an "
"exception.  This exception message is compared against the return value of :"
"func:`traceback.format_exception_only`.  :attr:`exc_msg` ends with a newline "
"unless it's ``None``.  The constructor adds a newline if needed."
msgstr ""
"example產生的例外資訊，如果example預計會產生例外；或 ``None`` "
"如果預計不會產生例外。此例外消息與 traceback.format_exception_only "
"的回傳值進行比較。 :attr:`exc_msg` 以換行符結尾，除非它是 "
"``None``。如果需要，構造函式會新增一個換行符。"

#: ../../library/doctest.rst:1285
#, fuzzy
msgid ""
"The line number within the string containing this example where the example "
"begins.  This line number is zero-based with respect to the beginning of the "
"containing string."
msgstr "包含此示例的字串中示例開始的行號。該行號相對於包含字串的開頭是從零開始的。"

#: ../../library/doctest.rst:1292
#, fuzzy
msgid ""
"The example's indentation in the containing string, i.e., the number of "
"space characters that precede the example's first prompt."
msgstr "示例在包含字串中的縮進，即示例第一個提示符之前的空格字元數。"

#: ../../library/doctest.rst:1298
#, fuzzy
msgid ""
"A dictionary mapping from option flags to ``True`` or ``False``, which is "
"used to override default options for this example.  Any option flags not "
"contained in this dictionary are left at their default value (as specified "
"by the :class:`DocTestRunner`'s :attr:`optionflags`). By default, no options "
"are set."
msgstr ""
"從選項旗標到 ``True`` 或 ``False`` 的字典映射，用於覆蓋此示例的預設選項。此字"
"典中未包含的任何選項旗標均保留其預設值（由 DocTestRunner 的 optionflags "
"指定）。預設情況下，沒有設定任何選項。"

#: ../../library/doctest.rst:1307
msgid "DocTestFinder objects"
msgstr "DocTestFinder 物件"

#: ../../library/doctest.rst:1312
#, fuzzy
msgid ""
"A processing class used to extract the :class:`DocTest`\\ s that are "
"relevant to a given object, from its docstring and the docstrings of its "
"contained objects. :class:`DocTest`\\ s can be extracted from modules, "
"classes, functions, methods, staticmethods, classmethods, and properties."
msgstr ""
"用於從給定物件的文檔字串及其包含物件的文檔字串中提取與給定物件相關的 "
":class:`DocTest`\\ 的處理類。 :class:`DocTest`\\ "
"可以從模組、類、函式、方法、靜態方法、類方法和屬性中提取。"

#: ../../library/doctest.rst:1317
#, fuzzy
msgid ""
"The optional argument *verbose* can be used to display the objects searched "
"by the finder.  It defaults to ``False`` (no output)."
msgstr "可選參數 *verbose* 可用於顯示查找器搜索的物件。它預設為 ``False``（無輸出）。"

#: ../../library/doctest.rst:1320
#, fuzzy
msgid ""
"The optional argument *parser* specifies the :class:`DocTestParser` object "
"(or a drop-in replacement) that is used to extract doctests from docstrings."
msgstr "可選參數 *parser* 指定用於從 docstrings 中提取 doctests 的 DocTestParser "
"物件（或直接替換）。"

#: ../../library/doctest.rst:1323
#, fuzzy
msgid ""
"If the optional argument *recurse* is false, then :meth:`DocTestFinder.find` "
"will only examine the given object, and not any contained objects."
msgstr "如果可選參數 *recurse* 為 false，則 DocTestFinder.find "
"將僅檢查給定物件，而不檢查任何包含的物件。"

#: ../../library/doctest.rst:1326
#, fuzzy
msgid ""
"If the optional argument *exclude_empty* is false, then :meth:`DocTestFinder."
"find` will include tests for objects with empty docstrings."
msgstr "如果可選參數 *exclude_empty* 為 false，則 DocTestFinder.find "
"將包括對具有空文檔字串的物件的測試。"

#: ../../library/doctest.rst:1330
#, fuzzy
msgid ":class:`DocTestFinder` defines the following method:"
msgstr ":class:`DocTestFinder` 定義了以下方法："

#: ../../library/doctest.rst:1335
#, fuzzy
msgid ""
"Return a list of the :class:`DocTest`\\ s that are defined by *obj*'s "
"docstring, or by any of its contained objects' docstrings."
msgstr "回傳由 *obj* 的文檔字串或其包含的任何物件的文檔字串定義的 :class:`DocTest`\\ "
"的列表。"

#: ../../library/doctest.rst:1338
#, fuzzy
msgid ""
"The optional argument *name* specifies the object's name; this name will be "
"used to construct names for the returned :class:`DocTest`\\ s.  If *name* is "
"not specified, then ``obj.__name__`` is used."
msgstr ""
"可選參數 *name* 指定物件的名稱；此名稱將用於為回傳的 :class:`DocTest`\\ "
"構造名稱。如果未指定 *name*，則使用 ``obj.__name__``。"

#: ../../library/doctest.rst:1342
#, fuzzy
msgid ""
"The optional parameter *module* is the module that contains the given "
"object. If the module is not specified or is ``None``, then the test finder "
"will attempt to automatically determine the correct module.  The object's "
"module is used:"
msgstr "可選參數 *module* 是包含給定物件的模組。如果模組未指定或為 ``None`` ，則測試查找器"
"將嘗試自動確定正確的模組。使用物件的模組："

#: ../../library/doctest.rst:1346
#, fuzzy
msgid "As a default namespace, if *globs* is not specified."
msgstr "作為預設命名空間，如果未指定 *globs*。"

#: ../../library/doctest.rst:1348
#, fuzzy
msgid ""
"To prevent the DocTestFinder from extracting DocTests from objects that are "
"imported from other modules.  (Contained objects with modules other than "
"*module* are ignored.)"
msgstr "防止 DocTestFinder 從從其他模組導入的對像中提取 DocTest。 （包含的模組不是 "
"*module* 的物件將被忽略。）"

#: ../../library/doctest.rst:1352
#, fuzzy
msgid "To find the name of the file containing the object."
msgstr "查找包含該物件的文件的名稱。"

#: ../../library/doctest.rst:1354
#, fuzzy
msgid "To help find the line number of the object within its file."
msgstr "幫助查找對像在其文件中的行號。"

#: ../../library/doctest.rst:1356
#, fuzzy
msgid ""
"If *module* is ``False``, no attempt to find the module will be made.  This "
"is obscure, of use mostly in testing doctest itself: if *module* is "
"``False``, or is ``None`` but cannot be found automatically, then all "
"objects are considered to belong to the (non-existent) module, so all "
"contained objects will (recursively) be searched for doctests."
msgstr ""
"如果 *module* 為 ``False``，則不會嘗試查找模組。這是晦澀的，主要用於測試 "
"doctest 本身：如果 *module* 是 ``False``，或者是 ``None``但不能自動找到，那麼所有對"
"像都被認為屬於（不存在的）模組，因此將（遞迴地）搜索所有包含的對像以查找docte"
"sts。"

#: ../../library/doctest.rst:1362
#, fuzzy
msgid ""
"The globals for each :class:`DocTest` is formed by combining *globs* and "
"*extraglobs* (bindings in *extraglobs* override bindings in *globs*).  A new "
"shallow copy of the globals dictionary is created for each :class:`DocTest`. "
"If *globs* is not specified, then it defaults to the module's *__dict__*, if "
"specified, or ``{}`` otherwise.  If *extraglobs* is not specified, then it "
"defaults to ``{}``."
msgstr ""
"每個 DocTest 的全局變數都是通過組合 *globs* 和 *extraglobs* "
"形成的（*extraglobs* 中的綁定覆蓋 *globs* 中的綁定）。為每個 DocTest "
"建立一個新的全局字典的淺表副本。如果未指定 *globs*，則預設為模組的 "
"*__dict__*（如果指定），否則為“{}”。如果未指定 *extraglobs*，則預設為“{}”。"

#: ../../library/doctest.rst:1373
msgid "DocTestParser objects"
msgstr "DocTestParser 物件"

#: ../../library/doctest.rst:1378
#, fuzzy
msgid ""
"A processing class used to extract interactive examples from a string, and "
"use them to create a :class:`DocTest` object."
msgstr "一個處理類，用於從字串中提取交互式示例，並使用它們建立 DocTest 物件。"

#: ../../library/doctest.rst:1382 ../../library/doctest.rst:1450
#, fuzzy
msgid ":class:`DocTestParser` defines the following methods:"
msgstr ":class:`DocTestParser` 定義了以下方法："

#: ../../library/doctest.rst:1387
#, fuzzy
msgid ""
"Extract all doctest examples from the given string, and collect them into a :"
"class:`DocTest` object."
msgstr "從給定的字串中提取所有 doctest 示例，並將它們收集到 DocTest 對像中。"

#: ../../library/doctest.rst:1390
#, fuzzy
msgid ""
"*globs*, *name*, *filename*, and *lineno* are attributes for the new :class:"
"`DocTest` object.  See the documentation for :class:`DocTest` for more "
"information."
msgstr ""
"*globs*、*name*、*filename* 和 *lineno* 是新 DocTest "
"物件的屬性。有關詳細資訊，請參閱 :class:`DocTest` 的文檔。"

#: ../../library/doctest.rst:1397
#, fuzzy
msgid ""
"Extract all doctest examples from the given string, and return them as a "
"list of :class:`Example` objects.  Line numbers are 0-based.  The optional "
"argument *name* is a name identifying this string, and is only used for "
"error messages."
msgstr ""
"從給定的字串中提取所有 doctest 示例，並將它們作為 Example 物件列表回傳。"
"行號從 0 開始。可選參數 *name* 是標識此字串的名稱，僅用於錯誤消息。"

#: ../../library/doctest.rst:1404
#, fuzzy
msgid ""
"Divide the given string into examples and intervening text, and return them "
"as a list of alternating :class:`Example`\\ s and strings. Line numbers for "
"the :class:`Example`\\ s are 0-based.  The optional argument *name* is a "
"name identifying this string, and is only used for error messages."
msgstr ""
"將給定的字串分成示例和中間文本，並將它們作為交替 :class:`Example`\\ "
"和字串的列表回傳。 :class:`Example`\\ 的行號是從 0 開始的。可選參數 *name* "
"是標識此字串的名稱，僅用於錯誤消息。"

#: ../../library/doctest.rst:1413
msgid "DocTestRunner objects"
msgstr "DocTestRunner 物件"

#: ../../library/doctest.rst:1418
#, fuzzy
msgid ""
"A processing class used to execute and verify the interactive examples in a :"
"class:`DocTest`."
msgstr "用於執行和驗證 DocTest 中的交互式示例的處理類。"

#: ../../library/doctest.rst:1421
#, fuzzy
msgid ""
"The comparison between expected outputs and actual outputs is done by an :"
"class:`OutputChecker`.  This comparison may be customized with a number of "
"option flags; see section :ref:`doctest-options` for more information.  If "
"the option flags are insufficient, then the comparison may also be "
"customized by passing a subclass of :class:`OutputChecker` to the "
"constructor."
msgstr ""
"預期輸出和實際輸出之間的比較由 OutputChecker "
"完成。這種比較可以用一些選項旗標來定制；有關詳細資訊，請參閱部分：ref"
"：`doctest-options`。如果選項旗標不足，則還可以通過將 OutputChecker "
"的子類別傳遞給構造函式來自定義比較。"

#: ../../library/doctest.rst:1427
#, fuzzy
msgid ""
"The test runner's display output can be controlled in two ways. First, an "
"output function can be passed to :meth:`TestRunner.run`; this function will "
"be called with strings that should be displayed.  It defaults to ``sys."
"stdout.write``.  If capturing the output is not sufficient, then the display "
"output can be also customized by subclassing DocTestRunner, and overriding "
"the methods :meth:`report_start`, :meth:`report_success`, :meth:"
"`report_unexpected_exception`, and :meth:`report_failure`."
msgstr ""
"可以通過兩種方式控制測試運行程式的顯示輸出。首先，可以將輸出函式傳遞給 :meth:`"
"TestRunner.run`；將使用應顯示的字串呼叫此函式。它預設為“sys.stdout."
"write”。如果捕獲輸出還不夠，那麼還可以通過子類別化 DocTestRunner 並重寫方法來"
"自定義顯示輸出 :meth:`report_start`、:meth:`report_success`、:meth:`report_un"
"expected_exception` 和報告失敗`。"

#: ../../library/doctest.rst:1435
#, fuzzy
msgid ""
"The optional keyword argument *checker* specifies the :class:`OutputChecker` "
"object (or drop-in replacement) that should be used to compare the expected "
"outputs to the actual outputs of doctest examples."
msgstr ""
"可選的關鍵字參數 *checker* 指定應該用於將預期輸出與 doctest "
"示例的實際輸出進行比較的 OutputChecker 物件（或直接替換）。"

#: ../../library/doctest.rst:1439
#, fuzzy
msgid ""
"The optional keyword argument *verbose* controls the :class:"
"`DocTestRunner`'s verbosity.  If *verbose* is ``True``, then information is "
"printed about each example, as it is run.  If *verbose* is ``False``, then "
"only failures are printed.  If *verbose* is unspecified, or ``None``, then "
"verbose output is used iff the command-line switch ``-v`` is used."
msgstr ""
"可選的關鍵字參數 *verbose* 控制 DocTestRunner 的詳細程度。如果 *verbose* 為 "
"``True``，則在運行時印出有關每個示例的資訊。如果 *verbose* 是 "
"``False``，那麼只印出失敗。如果未指定 *verbose* "
"或 ``None``，則使用詳細輸出，前提是使用命令列開關 ``-v``。"

#: ../../library/doctest.rst:1445
#, fuzzy
msgid ""
"The optional keyword argument *optionflags* can be used to control how the "
"test runner compares expected output to actual output, and how it displays "
"failures. For more information, see section :ref:`doctest-options`."
msgstr ""
"可選關鍵字參數 *optionflags* 可用於控制測試運行器如何將預期輸出與實際輸出進行"
"比較，以及如何顯示失敗。有關更多資訊，請參閱 :ref:`doctest-options` 部分。"

#: ../../library/doctest.rst:1455
#, fuzzy
msgid ""
"Report that the test runner is about to process the given example. This "
"method is provided to allow subclasses of :class:`DocTestRunner` to "
"customize their output; it should not be called directly."
msgstr "報告測試運行器即將處理給定的示例。提供此方法是為了允許 DocTestRunner "
"的子類別自定義其輸出；它不應該被直接呼叫。"

#: ../../library/doctest.rst:1459
#, fuzzy
msgid ""
"*example* is the example about to be processed.  *test* is the test "
"*containing example*.  *out* is the output function that was passed to :meth:"
"`DocTestRunner.run`."
msgstr ""
"*example* 是要處理的例子。 *test* 是測試 *containing example*。 *out* "
"是傳遞給 DocTestRunner.run 的輸出函式。"

#: ../../library/doctest.rst:1466
#, fuzzy
msgid ""
"Report that the given example ran successfully.  This method is provided to "
"allow subclasses of :class:`DocTestRunner` to customize their output; it "
"should not be called directly."
msgstr "報告給定示例成功運行。提供此方法是為了允許 DocTestRunner "
"的子類別自定義其輸出；它不應該被直接呼叫。"

#: ../../library/doctest.rst:1470 ../../library/doctest.rst:1481
#, fuzzy
msgid ""
"*example* is the example about to be processed.  *got* is the actual output "
"from the example.  *test* is the test containing *example*.  *out* is the "
"output function that was passed to :meth:`DocTestRunner.run`."
msgstr ""
"*example* 是要處理的例子。 *got* 是示例的實際輸出。 *test* 是包含*example* "
"的測試。 *out* 是傳遞給 DocTestRunner.run 的輸出函式。"

#: ../../library/doctest.rst:1477
#, fuzzy
msgid ""
"Report that the given example failed.  This method is provided to allow "
"subclasses of :class:`DocTestRunner` to customize their output; it should "
"not be called directly."
msgstr "報告給定示例失敗。提供此方法是為了允許 DocTestRunner "
"的子類別自定義其輸出；它不應該被直接呼叫。"

#: ../../library/doctest.rst:1488
#, fuzzy
msgid ""
"Report that the given example raised an unexpected exception. This method is "
"provided to allow subclasses of :class:`DocTestRunner` to customize their "
"output; it should not be called directly."
msgstr "報告給定示例引發了意外例外。提供此方法是為了允許 DocTestRunner "
"的子類別自定義其輸出；它不應該被直接呼叫。"

#: ../../library/doctest.rst:1492
#, fuzzy
msgid ""
"*example* is the example about to be processed. *exc_info* is a tuple "
"containing information about the unexpected exception (as returned by :func:"
"`sys.exc_info`). *test* is the test containing *example*.  *out* is the "
"output function that was passed to :meth:`DocTestRunner.run`."
msgstr ""
"*example* 是要處理的例子。 *exc_info* 是一個元組，包含有關意外例外的資訊（由 "
":func:`sys.exc_info` 回傳）。 *test* 是包含*example* 的測試。 *out* 是傳遞給 "
"DocTestRunner.run 的輸出函式。"

#: ../../library/doctest.rst:1500
#, fuzzy
msgid ""
"Run the examples in *test* (a :class:`DocTest` object), and display the "
"results using the writer function *out*."
msgstr "在 *test*（一個 DocTest 物件）中運行示例，並使用編寫器函式 *out* 顯示結果。"

#: ../../library/doctest.rst:1503
#, fuzzy
msgid ""
"The examples are run in the namespace ``test.globs``.  If *clear_globs* is "
"true (the default), then this namespace will be cleared after the test runs, "
"to help with garbage collection. If you would like to examine the namespace "
"after the test completes, then use *clear_globs=False*."
msgstr ""
"這些示例在命名空間“test.globs”中運行。如果 *clear_globs* 為 true（預設值），"
"則此命名空間將在測試運行後被清除，以幫助進行垃圾收集。如果您想在測試完成後檢"
"查名稱空間，請使用 *clear_globs=False*。"

#: ../../library/doctest.rst:1508
#, fuzzy
msgid ""
"*compileflags* gives the set of flags that should be used by the Python "
"compiler when running the examples.  If not specified, then it will default "
"to the set of future-import flags that apply to *globs*."
msgstr ""
"*compileflags* 給出了 Python 編譯器在運行示例時應該使用的旗標集。如果未指定，"
"則它將預設為適用於 *globs* 的一組未來導入旗標。"

#: ../../library/doctest.rst:1512
#, fuzzy
msgid ""
"The output of each example is checked using the :class:`DocTestRunner`'s "
"output checker, and the results are formatted by the :meth:`DocTestRunner."
"report_\\*` methods."
msgstr "每個示例的輸出都使用 DocTestRunner 的輸出檢查器進行檢查，結果由 DocTestRunner"
".report_* 方法格式化。"

#: ../../library/doctest.rst:1519
#, fuzzy
msgid ""
"Print a summary of all the test cases that have been run by this "
"DocTestRunner, and return a :term:`named tuple` ``TestResults(failed, "
"attempted)``."
msgstr ""
"印出此 DocTestRunner 運行的所有測試用例的摘要，並回傳一個命名元組 "
"``TestResults(failed, attempted)``。"

#: ../../library/doctest.rst:1522
#, fuzzy
msgid ""
"The optional *verbose* argument controls how detailed the summary is.  If "
"the verbosity is not specified, then the :class:`DocTestRunner`'s verbosity "
"is used."
msgstr "可選的 *verbose* 參數控制摘要的詳細程度。如果未指定詳細程度，則使用 "
"DocTestRunner 的詳細程度。"

#: ../../library/doctest.rst:1529
msgid "OutputChecker objects"
msgstr "OutputChecker 物件"

#: ../../library/doctest.rst:1534
#, fuzzy
msgid ""
"A class used to check the whether the actual output from a doctest example "
"matches the expected output.  :class:`OutputChecker` defines two methods: :"
"meth:`check_output`, which compares a given pair of outputs, and returns "
"``True`` if they match; and :meth:`output_difference`, which returns a "
"string describing the differences between two outputs."
msgstr ""
"用於檢查 doctest 示例的實際輸出是否與預期輸出匹配的類。 "
":class:`OutputChecker` "
"定義了兩個方法：:meth:`check_output`，比較給定的一對輸出，如果匹配則回傳 "
"``True``；和 "
":meth:`output_difference`，它回傳一個描述兩個輸出之間差異的字串。"

#: ../../library/doctest.rst:1541
#, fuzzy
msgid ":class:`OutputChecker` defines the following methods:"
msgstr ":class:`OutputChecker` 定義了以下方法："

#: ../../library/doctest.rst:1545
#, fuzzy
msgid ""
"Return ``True`` iff the actual output from an example (*got*) matches the "
"expected output (*want*).  These strings are always considered to match if "
"they are identical; but depending on what option flags the test runner is "
"using, several non-exact match types are also possible.  See section :ref:"
"`doctest-options` for more information about option flags."
msgstr ""
"如果示例的實際輸出 (*got*) 與預期輸出 (*want*) 匹配，則回傳 ``True``。如果這"
"些字串相同，則始終認為它們匹配；但是根據測試運行器使用的選項旗標，也可能有幾"
"種非精確匹配型別。有關選項旗標的更多資訊，請參閱 :ref:`doctest-options` "
"部分。"

#: ../../library/doctest.rst:1554
#, fuzzy
msgid ""
"Return a string describing the differences between the expected output for a "
"given example (*example*) and the actual output (*got*).  *optionflags* is "
"the set of option flags used to compare *want* and *got*."
msgstr ""
"回傳一個字串，描述給定示例 (*example*) 的預期輸出與實際輸出 (*got*) "
"之間的差異。 *optionflags* 是用於比較 *want* 和 *got* 的選項旗標集。"

#: ../../library/doctest.rst:1562
#, fuzzy
msgid "Debugging"
msgstr "除錯"

#: ../../library/doctest.rst:1564
#, fuzzy
msgid "Doctest provides several mechanisms for debugging doctest examples:"
msgstr "Doctest 提供了幾種除錯 doctest 示例的機制："

#: ../../library/doctest.rst:1566
#, fuzzy
msgid ""
"Several functions convert doctests to executable Python programs, which can "
"be run under the Python debugger, :mod:`pdb`."
msgstr "幾個函式將 doctests 轉換為可執行的 Python 程式，這些程式可以在 Python 除錯器 "
":mod:`pdb` 下運行。"

#: ../../library/doctest.rst:1569
#, fuzzy
msgid ""
"The :class:`DebugRunner` class is a subclass of :class:`DocTestRunner` that "
"raises an exception for the first failing example, containing information "
"about that example. This information can be used to perform post-mortem "
"debugging on the example."
msgstr ""
":class:`DebugRunner` 類是 :class:`DocTestRunner` 的子類別，它為第一個失敗的示"
"例引發例外，包含有關該示例的資訊。此資訊可用於對示例執行事後除錯。"

#: ../../library/doctest.rst:1574
#, fuzzy
msgid ""
"The :mod:`unittest` cases generated by :func:`DocTestSuite` support the :"
"meth:`debug` method defined by :class:`unittest.TestCase`."
msgstr ""
":func:`DocTestSuite` 生成的 :mod:`unittest` 案例支援 :class:`unittest.TestCase`"
" 定義的 :meth:`debug` 方法。"

#: ../../library/doctest.rst:1577
#, fuzzy
msgid ""
"You can add a call to :func:`pdb.set_trace` in a doctest example, and you'll "
"drop into the Python debugger when that line is executed.  Then you can "
"inspect current values of variables, and so on.  For example, suppose :file:"
"`a.py` contains just this module docstring::"
msgstr ""
"您可以在 doctest 示例中新增對 :func:`pdb.set_trace` 的呼叫，當該行被執行時，"
"您將進入 Python 除錯器。然後您可以檢查變數的當前值，等等。例如，假設 :file:`a"
".py` 只包含這個模組 docstring::"

#: ../../library/doctest.rst:1592
#, fuzzy
msgid "Then an interactive Python session may look like this::"
msgstr "然後交互式 Python 會話可能如下所示："

#: ../../library/doctest.rst:1625
#, fuzzy
msgid ""
"Functions that convert doctests to Python code, and possibly run the "
"synthesized code under the debugger:"
msgstr "將 doctests 轉換為 Python 程式碼的函式，並可能在除錯器下運行合成程式碼："

#: ../../library/doctest.rst:1631
#, fuzzy
msgid "Convert text with examples to a script."
msgstr "將帶有示例的文本轉換為腳本。"

#: ../../library/doctest.rst:1633
#, fuzzy
msgid ""
"Argument *s* is a string containing doctest examples.  The string is "
"converted to a Python script, where doctest examples in *s* are converted to "
"regular code, and everything else is converted to Python comments.  The "
"generated script is returned as a string. For example, ::"
msgstr ""
"參數 *s* 是一個包含 doctest 示例的字串。該字串被轉換為 Python 腳本，其中 *s* "
"中的 doctest 示例被轉換為常規程式碼，其他所有內容都被轉換為 Python "
"註釋。生成的腳本作為字串回傳。例如， ：："

#: ../../library/doctest.rst:1648
#, fuzzy
msgid "displays::"
msgstr "顯示::"

#: ../../library/doctest.rst:1658
#, fuzzy
msgid ""
"This function is used internally by other functions (see below), but can "
"also be useful when you want to transform an interactive Python session into "
"a Python script."
msgstr "此函式由其他函式在內部使用（見下文），但在您想要將交互式 Python 會話轉換為 "
"Python 腳本時也很有用。"

#: ../../library/doctest.rst:1665
#, fuzzy
msgid "Convert the doctest for an object to a script."
msgstr "將物件的 doctest 轉換為腳本。"

#: ../../library/doctest.rst:1667
#, fuzzy
msgid ""
"Argument *module* is a module object, or dotted name of a module, containing "
"the object whose doctests are of interest.  Argument *name* is the name "
"(within the module) of the object with the doctests of interest.  The result "
"is a string, containing the object's docstring converted to a Python script, "
"as described for :func:`script_from_examples` above.  For example, if "
"module :file:`a.py` contains a top-level function :func:`f`, then ::"
msgstr ""
"參數 *module* 是一個模組物件，或者模組的點名，包含感興趣的 doctests 的物件。"
"參數 *name* 是具有感興趣的 doctests "
"的物件的名稱（在模組內）。結果是一個字串，包含轉換為 Python "
"腳本的物件的文檔字串，如上文所述 :func:`script_from_examples`。例如，"
"如果模組 :file:`a.py` 包含頂級函式 :func:`f`，則 ::"

#: ../../library/doctest.rst:1677
#, fuzzy
msgid ""
"prints a script version of function :func:`f`'s docstring, with doctests "
"converted to code, and the rest placed in comments."
msgstr "印出函式 :func:`f` "
"的文檔字串的腳本版本，將文檔測試轉換為程式碼，其餘部分放在註釋中。"

#: ../../library/doctest.rst:1683
#, fuzzy
msgid "Debug the doctests for an object."
msgstr "除錯物件的文檔測試。"

#: ../../library/doctest.rst:1685
#, fuzzy
msgid ""
"The *module* and *name* arguments are the same as for function :func:"
"`testsource` above.  The synthesized Python script for the named object's "
"docstring is written to a temporary file, and then that file is run under "
"the control of the Python debugger, :mod:`pdb`."
msgstr ""
"*module* 和 *name* 參數與上面的函式 :func:`testsource` 相同。"
"命名物件的文檔字串的合成 Python 腳本被寫入一個臨時文件，然後該文件在 Python "
"除錯器的控制下運行，:mod:`pdb`。"

#: ../../library/doctest.rst:1690
#, fuzzy
msgid ""
"A shallow copy of ``module.__dict__`` is used for both local and global "
"execution context."
msgstr "``module.__dict__`` 的淺表副本用於本地和全局執行上下文。"

#: ../../library/doctest.rst:1693
#, fuzzy
msgid ""
"Optional argument *pm* controls whether post-mortem debugging is used.  If "
"*pm* has a true value, the script file is run directly, and the debugger "
"gets involved only if the script terminates via raising an unhandled "
"exception.  If it does, then post-mortem debugging is invoked, via :func:"
"`pdb.post_mortem`, passing the traceback object from the unhandled "
"exception.  If *pm* is not specified, or is false, the script is run under "
"the debugger from the start, via passing an appropriate :func:`exec` call "
"to :func:`pdb.run`."
msgstr ""
"可選參數 *pm* 控制是否使用事後除錯。如果 *pm* 具有真值，則直接運行腳本文件，"
"並且僅當腳本通過引發未處理的例外而終止時除錯器才會介入。如果是，則通過 "
"pdb.post_mortem 呼叫事後除錯，從未處理的例外傳遞回溯物件。如果未指定 *pm* "
"或為 false，則腳本從一開始就在除錯器下運行，方法是將適當的 :func:`exec` "
"呼叫傳遞給 :func:`pdb.run`。"

#: ../../library/doctest.rst:1704
#, fuzzy
msgid "Debug the doctests in a string."
msgstr "在字串中除錯 doctests。"

#: ../../library/doctest.rst:1706
#, fuzzy
msgid ""
"This is like function :func:`debug` above, except that a string containing "
"doctest examples is specified directly, via the *src* argument."
msgstr "這類似於上面的函式 :func:`debug`，除了通過 *src* 參數直接指定包含 doctest "
"示例的字串。"

#: ../../library/doctest.rst:1709
#, fuzzy
msgid ""
"Optional argument *pm* has the same meaning as in function :func:`debug` "
"above."
msgstr "可選參數 *pm* 與上面的函式 :func:`debug` 具有相同的含義。"

#: ../../library/doctest.rst:1711
#, fuzzy
msgid ""
"Optional argument *globs* gives a dictionary to use as both local and global "
"execution context.  If not specified, or ``None``, an empty dictionary is "
"used. If specified, a shallow copy of the dictionary is used."
msgstr "可選參數 *globs* 給出了一個字典以用作本地和全局執行上下文。如果未指定或 ``None`` ，"
"則使用空字典。如果指定，則使用字典的淺表副本。"

#: ../../library/doctest.rst:1716
#, fuzzy
msgid ""
"The :class:`DebugRunner` class, and the special exceptions it may raise, are "
"of most interest to testing framework authors, and will only be sketched "
"here.  See the source code, and especially :class:`DebugRunner`'s docstring "
"(which is a doctest!) for more details:"
msgstr ""
":class:`DebugRunner` 類，以及它可能引發的特殊例外，是測試框架作者最感興趣的，"
"將僅在此處進行概述。請參閱源程式碼，尤其是 DebugRunner 的文檔字串（這是一個 "
"doctest！）以獲取更多詳細資訊："

#: ../../library/doctest.rst:1724
#, fuzzy
msgid ""
"A subclass of :class:`DocTestRunner` that raises an exception as soon as a "
"failure is encountered.  If an unexpected exception occurs, an :exc:"
"`UnexpectedException` exception is raised, containing the test, the example, "
"and the original exception.  If the output doesn't match, then a :exc:"
"`DocTestFailure` exception is raised, containing the test, the example, and "
"the actual output."
msgstr ""
":class:`DocTestRunner` 的子類別，一旦遇到故障就會引發例外。如果發生意外例外，"
"則會引發 :exc:`UnexpectedException` "
"例外，其中包含測試、示例和原始例外。如果輸出不匹配，則會引發 "
":exc:`DocTestFailure` 例外，其中包含測試、示例和實際輸出。"

#: ../../library/doctest.rst:1731
#, fuzzy
msgid ""
"For information about the constructor parameters and methods, see the "
"documentation for :class:`DocTestRunner` in section :ref:`doctest-advanced-"
"api`."
msgstr "有關構造函式參數和方法的資訊，請參閱 :ref:`doctest-advanced-api` 部分中的 "
"DocTestRunner 文檔。"

#: ../../library/doctest.rst:1734
#, fuzzy
msgid ""
"There are two exceptions that may be raised by :class:`DebugRunner` "
"instances:"
msgstr "DebugRunner 實例可能引發兩個例外："

#: ../../library/doctest.rst:1739
#, fuzzy
msgid ""
"An exception raised by :class:`DocTestRunner` to signal that a doctest "
"example's actual output did not match its expected output. The constructor "
"arguments are used to initialize the attributes of the same names."
msgstr "DocTestRunner 引發的例外，表示 doctest "
"示例的實際輸出與其預期輸出不匹配。構造函式參數用於初始化同名屬性。"

#: ../../library/doctest.rst:1743
#, fuzzy
msgid ":exc:`DocTestFailure` defines the following attributes:"
msgstr ":exc:`DocTestFailure` 定義了以下屬性："

#: ../../library/doctest.rst:1748 ../../library/doctest.rst:1772
#, fuzzy
msgid "The :class:`DocTest` object that was being run when the example failed."
msgstr "示例失敗時正在運行的 DocTest 物件。"

#: ../../library/doctest.rst:1753 ../../library/doctest.rst:1777
#, fuzzy
msgid "The :class:`Example` that failed."
msgstr "失敗的 :class:`Example`。"

#: ../../library/doctest.rst:1758
#, fuzzy
msgid "The example's actual output."
msgstr "該示例的實際輸出。"

#: ../../library/doctest.rst:1763
#, fuzzy
msgid ""
"An exception raised by :class:`DocTestRunner` to signal that a doctest "
"example raised an unexpected exception.  The constructor arguments are used "
"to initialize the attributes of the same names."
msgstr ":class:`DocTestRunner` 引發的例外，表示 doctest "
"示例引發了意外例外。構造函式參數用於初始化同名屬性。"

#: ../../library/doctest.rst:1767
#, fuzzy
msgid ":exc:`UnexpectedException` defines the following attributes:"
msgstr ":exc:`UnexpectedException` 定義了以下屬性："

#: ../../library/doctest.rst:1782
#, fuzzy
msgid ""
"A tuple containing information about the unexpected exception, as returned "
"by :func:`sys.exc_info`."
msgstr "包含有關意外例外的資訊的元組，由 :func:`sys.exc_info` 回傳。"

#: ../../library/doctest.rst:1789
#, fuzzy
msgid "Soapbox"
msgstr "肥皂盒"

#: ../../library/doctest.rst:1791
#, fuzzy
msgid ""
"As mentioned in the introduction, :mod:`doctest` has grown to have three "
"primary uses:"
msgstr "如介紹中所述，:mod:`doctest` 已發展為具有三個主要用途："

#: ../../library/doctest.rst:1794
#, fuzzy
msgid "Checking examples in docstrings."
msgstr "檢查文檔字串中的示例。"

#: ../../library/doctest.rst:1796
#, fuzzy
msgid "Regression testing."
msgstr "回歸測試。"

#: ../../library/doctest.rst:1798
#, fuzzy
msgid "Executable documentation / literate testing."
msgstr "可執行文檔/文學測試。"

#: ../../library/doctest.rst:1800
#, fuzzy
msgid ""
"These uses have different requirements, and it is important to distinguish "
"them. In particular, filling your docstrings with obscure test cases makes "
"for bad documentation."
msgstr "這些用途有不同的要求，區分它們很重要。特別是，用模糊的測試用例填充你的文檔字"
"串會導致糟糕的文檔。"

#: ../../library/doctest.rst:1804
#, fuzzy
msgid ""
"When writing a docstring, choose docstring examples with care. There's an "
"art to this that needs to be learned---it may not be natural at first.  "
"Examples should add genuine value to the documentation.  A good example can "
"often be worth many words. If done with care, the examples will be "
"invaluable for your users, and will pay back the time it takes to collect "
"them many times over as the years go by and things change.  I'm still amazed "
"at how often one of my :mod:`doctest` examples stops working after a "
"\"harmless\" change."
msgstr ""
"編寫文檔字串時，請謹慎選擇文檔字串示例。這需要學習一門藝術——一開始可能並不自"
"然。示例應該為文檔增加真正的價值。一個好的例子往往值得多說幾句。如果小心完成"
"，這些示例對您的使用者來說將是無價的，並且隨著歲月的流逝和情況的變化，將收回"
"多次收集它們所花費的時間。我仍然對我的一個 :mod:`doctest` "
"示例在“無害”更改後停止工作的頻率感到驚訝。"

#: ../../library/doctest.rst:1812
#, fuzzy
msgid ""
"Doctest also makes an excellent tool for regression testing, especially if "
"you don't skimp on explanatory text.  By interleaving prose and examples, it "
"becomes much easier to keep track of what's actually being tested, and why.  "
"When a test fails, good prose can make it much easier to figure out what the "
"problem is, and how it should be fixed.  It's true that you could write "
"extensive comments in code-based testing, but few programmers do. Many have "
"found that using doctest approaches instead leads to much clearer tests.  "
"Perhaps this is simply because doctest makes writing prose a little easier "
"than writing code, while writing comments in code is a little harder.  I "
"think it goes deeper than just that: the natural attitude when writing a "
"doctest-based test is that you want to explain the fine points of your "
"software, and illustrate them with examples. This in turn naturally leads to "
"test files that start with the simplest features, and logically progress to "
"complications and edge cases.  A coherent narrative is the result, instead "
"of a collection of isolated functions that test isolated bits of "
"functionality seemingly at random.  It's a different attitude, and produces "
"different results, blurring the distinction between testing and explaining."
msgstr ""
"Doctest 還是一個出色的回歸測試工具，尤其是在您不吝嗇解釋性文本的情況下。通過"
"交織散文和示例，可以更容易地跟踪實際測試的內容以及原因。當測試失敗時，好的散"
"文可以更容易地弄清楚問題是什麼，以及應該如何解決。的確，您可以在基於程式碼的"
"測試中編寫大量註釋，但很少有程式員這樣做。許多人發現使用 doctest "
"方法反而會導致更清晰的測試。也許這僅僅是因為 doctest "
"使寫散文比寫程式碼容易一些，而在程式碼中寫註釋則更難一些。我認為它不僅如此："
"編寫基於 doctest 的測試時的自然態度是你想解釋軟件的優點，並用例子來說明它們。"
"這反過來自然會導致測試文件從最簡單的功能開始，並在邏輯上發展到復雜性和邊緣情"
"況。結果是連貫的敘述，而不是看似隨機測試功能的孤立位的孤立功能的集合。這是一"
"種不同的態度，會產生不同的結果，模糊了測試和解釋之間的區別。"

#: ../../library/doctest.rst:1830
#, fuzzy
msgid ""
"Regression testing is best confined to dedicated objects or files.  There "
"are several options for organizing tests:"
msgstr "回歸測試最好局限於專用對像或文件。組織測試有多種選擇："

#: ../../library/doctest.rst:1833
#, fuzzy
msgid ""
"Write text files containing test cases as interactive examples, and test the "
"files using :func:`testfile` or :func:`DocFileSuite`.  This is recommended, "
"although is easiest to do for new projects, designed from the start to use "
"doctest."
msgstr ""
"編寫包含測試用例的文本文件作為交互式示例，並使用 :func:`testfile` 或 "
":func:`DocFileSuite` 測試文件。這是推薦的，儘管對於從一開始就設計為使用 "
"doctest 的新項目來說最容易做到。"

#: ../../library/doctest.rst:1838
#, fuzzy
msgid ""
"Define functions named ``_regrtest_topic`` that consist of single "
"docstrings, containing test cases for the named topics.  These functions can "
"be included in the same file as the module, or separated out into a separate "
"test file."
msgstr ""
"定義名為“_regrtest_topic”的函式，它由單個文檔字串組成，包含命名主題的測試用例"
"。這些函式可以包含在與模組相同的文件中，或者分離到單獨的測試文件中。"

#: ../../library/doctest.rst:1842
#, fuzzy
msgid ""
"Define a ``__test__`` dictionary mapping from regression test topics to "
"docstrings containing test cases."
msgstr "定義從回歸測試主題到包含測試用例的文檔字串的 ``__test__`` 字典映射。"

#: ../../library/doctest.rst:1845
#, fuzzy
msgid ""
"When you have placed your tests in a module, the module can itself be the "
"test runner.  When a test fails, you can arrange for your test runner to re-"
"run only the failing doctest while you debug the problem.  Here is a minimal "
"example of such a test runner::"
msgstr ""
"當您將測試放在模組中時，模組本身可以成為測試運行器。當測試失敗時，"
"您可以安排測試運行器在除錯問題時僅重新運行失敗的 "
"doctest。這是此類測試運行器的最小示例::"

#: ../../library/doctest.rst:1867
msgid "Footnotes"
msgstr "註解"

#: ../../library/doctest.rst:1868
#, fuzzy
msgid ""
"Examples containing both expected output and an exception are not supported. "
"Trying to guess where one ends and the other begins is too error-prone, and "
"that also makes for a confusing test."
msgstr "不支援同時包含預期輸出和例外的示例。試圖猜測一個結束和另一個開始的地方太容易"
"出錯，而且這也會導致測試混亂。"
