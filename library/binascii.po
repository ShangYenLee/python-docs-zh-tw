# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-15 20:43+0000\n"
"PO-Revision-Date: 2018-05-23 14:39+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/binascii.rst:2
msgid ":mod:`binascii` --- Convert between binary and ASCII"
msgstr ":mod:`binascii` --- 在二進制和 ASCII 之間轉換"

#: ../../library/binascii.rst:14
#, fuzzy
msgid ""
"The :mod:`binascii` module contains a number of methods to convert between "
"binary and various ASCII-encoded binary representations. Normally, you will "
"not use these functions directly but use wrapper modules like :mod:`uu` or :"
"mod:`base64` instead. The :mod:`binascii` module contains low-level "
"functions written in C for greater speed that are used by the higher-level "
"modules."
msgstr ""
":mod:`binascii` 模組包含許多在二進位和各種 ASCII "
"編碼二進位表示之間進行轉換的方法。通常，您不會直接使用這些函式，而是使用像 "
":mod:`uu` 或 :mod:`base64` 這樣的包裝器模組。 :mod:`binascii` 模組包含用 C "
"語言編寫的低階函式，以提高高階模組使用的速度。"

#: ../../library/binascii.rst:23
#, fuzzy
msgid ""
"``a2b_*`` functions accept Unicode strings containing only ASCII characters. "
"Other functions only accept :term:`bytes-like objects <bytes-like object>` "
"(such as :class:`bytes`, :class:`bytearray` and other objects that support "
"the buffer protocol)."
msgstr ""
"``a2b_*`` 函式接受僅包含 ASCII 字元的 Unicode 字串。其他函式只接受 :term"
":`bytes-like objects <bytes-like "
"object>`（例如 :class:`bytes`、:class:`bytearray` "
"和其他支援緩衝協定的物件）。"

#: ../../library/binascii.rst:28
#, fuzzy
msgid "ASCII-only unicode strings are now accepted by the ``a2b_*`` functions."
msgstr "``a2b_*`` 函式現在接受僅 ASCII 的 unicode 字串。"

#: ../../library/binascii.rst:32
#, fuzzy
msgid "The :mod:`binascii` module defines the following functions:"
msgstr ":mod:`binascii` 模組定義了以下函式："

#: ../../library/binascii.rst:37
#, fuzzy
msgid ""
"Convert a single line of uuencoded data back to binary and return the binary "
"data. Lines normally contain 45 (binary) bytes, except for the last line. "
"Line data may be followed by whitespace."
msgstr "將單行 uuencoded 資料轉換回二進位並回傳二進位資料。除最後一行外，行通常包含 "
"45（二進位）位元組。行資料後面可能跟有空格。"

#: ../../library/binascii.rst:44
#, fuzzy
msgid ""
"Convert binary data to a line of ASCII characters, the return value is the "
"converted line, including a newline char. The length of *data* should be at "
"most 45. If *backtick* is true, zeros are represented by ``'`'`` instead of "
"spaces."
msgstr ""
"將二進位資料轉換為一行ASCII字元，回傳值為轉換後的行，包括一個換行符。 *data* "
"的長度最多應為 45。如果 *backtick* 為 true，則零由 ``'`'`` 而不是空格表示。"

#: ../../library/binascii.rst:48
msgid "Added the *backtick* parameter."
msgstr "新增 *backtick* 參數。"

#: ../../library/binascii.rst:54
#, fuzzy
msgid ""
"Convert a block of base64 data back to binary and return the binary data. "
"More than one line may be passed at a time."
msgstr "將 base64 資料塊轉換回二進位並回傳二進位資料。一次可以傳遞多於一行。"

#: ../../library/binascii.rst:57
#, fuzzy
msgid ""
"If *strict_mode* is true, only valid base64 data will be converted. Invalid "
"base64 data will raise :exc:`binascii.Error`."
msgstr ""
"如果 *strict_mode* 為真，則僅轉換有效的 base64 資料。無效的 base64 "
"資料將引發 :exc:`binascii.Error`。"

#: ../../library/binascii.rst:64
#, fuzzy
msgid "Valid base64:"
msgstr "有效的 base64："

#: ../../library/binascii.rst:61
#, fuzzy
msgid "Conforms to :rfc:`3548`."
msgstr "符合 :rfc:`3548`。"

#: ../../library/binascii.rst:62
#, fuzzy
msgid "Contains only characters from the base64 alphabet."
msgstr "僅包含 base64 字母表中的字元。"

#: ../../library/binascii.rst:63
#, fuzzy
msgid ""
"Contains no excess data after padding (including excess padding, newlines, "
"etc.)."
msgstr "填充後不包含多餘的資料（包括多餘的填充、換行等）。"

#: ../../library/binascii.rst:64
#, fuzzy
msgid "Does not start with a padding."
msgstr "不以填充開頭。"

#: ../../library/binascii.rst:66
msgid "Added the *strict_mode* parameter."
msgstr "新增 *strict_mode* 參數。"

#: ../../library/binascii.rst:72
#, fuzzy
msgid ""
"Convert binary data to a line of ASCII characters in base64 coding. The "
"return value is the converted line, including a newline char if *newline* is "
"true.  The output of this function conforms to :rfc:`3548`."
msgstr ""
"將二進位資料轉換為 base64 編碼的一行 ASCII 字元。回傳值是轉換後的行，如果 "
"*newline* 為真，則包括換行符。此函式的輸出符合 :rfc:`3548`。"

#: ../../library/binascii.rst:76
msgid "Added the *newline* parameter."
msgstr "新增 *newline* 參數。"

#: ../../library/binascii.rst:82
#, fuzzy
msgid ""
"Convert a block of quoted-printable data back to binary and return the "
"binary data. More than one line may be passed at a time. If the optional "
"argument *header* is present and true, underscores will be decoded as spaces."
msgstr "將引用可印出資料塊轉換回二進位並回傳二進位資料。一次可以傳遞多於一行。"
"如果可選參數 *header* 存在且為真，則底線將被解碼為空格。"

#: ../../library/binascii.rst:89
#, fuzzy
msgid ""
"Convert binary data to a line(s) of ASCII characters in quoted-printable "
"encoding.  The return value is the converted line(s). If the optional "
"argument *quotetabs* is present and true, all tabs and spaces will be "
"encoded.   If the optional argument *istext* is present and true, newlines "
"are not encoded but trailing whitespace will be encoded. If the optional "
"argument *header* is present and true, spaces will be encoded as underscores "
"per :rfc:`1522`. If the optional argument *header* is present and false, "
"newline characters will be encoded as well; otherwise linefeed conversion "
"might corrupt the binary data stream."
msgstr ""
"將二進位資料轉換為引用印出編碼中的一行 ASCII 字元。回傳值是轉換後的行。"
"如果可選參數 *quotetabs* 存在且為真，所有製表符和空格都將被編碼。"
"如果可選參數 *istext* "
"存在且為真，則不對換行符進行編碼，但對尾隨空格進行編碼。如果可選參數 *header*"
" 存在且為真，空格將按照 :rfc:`1522` 編碼為底線。如果可選參數 *header* "
"存在且為假，換行符也將被編碼；否則換行轉換可能會破壞二進位資料流。"

#: ../../library/binascii.rst:102
#, fuzzy
msgid ""
"Compute a 16-bit CRC value of *data*, starting with *value* as the initial "
"CRC, and return the result.  This uses the CRC-CCITT polynomial *x* :sup:`16` "
"+ *x* :sup:`12` + *x* :sup:`5` + 1, often represented as 0x1021.  This CRC is "
"used in the binhex4 format."
msgstr ""
"計算 *data* 的 16 位 CRC 值，以 *value* 作為初始 CRC，並回傳結果。這使用 CRC-"
"CCITT 多項式 *x* :sup:`16` + *x* :sup:`12` + *x* :sup:`5` + 1，通常表示為 "
"0x1021。此 CRC 以 binhex4 格式使用。"

#: ../../library/binascii.rst:110
#, fuzzy
msgid ""
"Compute CRC-32, the unsigned 32-bit checksum of *data*, starting with an "
"initial CRC of *value*.  The default initial CRC is zero.  The algorithm is "
"consistent with the ZIP file checksum.  Since the algorithm is designed for "
"use as a checksum algorithm, it is not suitable for use as a general hash "
"algorithm.  Use as follows::"
msgstr ""
"計算 CRC-32，即 *data* 的無符號 32 位校驗和，從 *value* 的初始 CRC 開始。"
"預設初始 CRC 為零。該演算法與 ZIP 文件校驗和一致。由於該演算法是為用作校驗和"
"演算法而設計的，因此不適合用作通用雜湊演算法。使用如下："

#: ../../library/binascii.rst:122
#, fuzzy
msgid "The result is always unsigned."
msgstr "結果總是無符號的。"

#: ../../library/binascii.rst:128
#, fuzzy
msgid ""
"Return the hexadecimal representation of the binary *data*.  Every byte of "
"*data* is converted into the corresponding 2-digit hex representation.  The "
"returned bytes object is therefore twice as long as the length of *data*."
msgstr ""
"回傳二進位 *data* 的十六進位表示。 *data* 的每個位元組都被轉換為相應的 2 "
"位十六進位表示。因此，回傳的 bytes 對像是 *data* 長度的兩倍。"

#: ../../library/binascii.rst:132
#, fuzzy
msgid ""
"Similar functionality (but returning a text string) is also conveniently "
"accessible using the :meth:`bytes.hex` method."
msgstr "使用 bytes.hex 方法也可以方便地訪問類似的功能（但回傳文本字串）。"

#: ../../library/binascii.rst:135
#, fuzzy
msgid ""
"If *sep* is specified, it must be a single character str or bytes object. It "
"will be inserted in the output after every *bytes_per_sep* input bytes. "
"Separator placement is counted from the right end of the output by default, "
"if you wish to count from the left, supply a negative *bytes_per_sep* value."
msgstr ""
"如果指定了 *sep*，則它必須是單個字元 str 或 bytes 物件。它將在每個 "
"*bytes_per_sep* 輸入位元組之後插入到輸出中。預設情況下，分隔符位置從輸出的右"
"端開始計算，如果您希望從左側開始計算，請提供一個負的 *bytes_per_sep* 值。"

#: ../../library/binascii.rst:150
msgid "The *sep* and *bytes_per_sep* parameters were added."
msgstr "新增 *sep* 與 *bytes_per_sep* 參數。"

#: ../../library/binascii.rst:156
#, fuzzy
msgid ""
"Return the binary data represented by the hexadecimal string *hexstr*.  This "
"function is the inverse of :func:`b2a_hex`. *hexstr* must contain an even "
"number of hexadecimal digits (which can be upper or lower case), otherwise "
"an :exc:`Error` exception is raised."
msgstr ""
"回傳由十六進位字串 *hexstr* 表示的二進位資料。這個函式是 :func:`b2a_hex` "
"的反函式。 *hexstr* 必須包含偶數個十六進位數字（可以是大寫或小寫），"
"否則會引發 :exc:`Error` 例外。"

#: ../../library/binascii.rst:161
#, fuzzy
msgid ""
"Similar functionality (accepting only text string arguments, but more "
"liberal towards whitespace) is also accessible using the :meth:`bytes."
"fromhex` class method."
msgstr "使用 bytes.fromhex "
"類方法也可以訪問類似的功能（只接受文本字串參數，但對空格更自由）。"

#: ../../library/binascii.rst:167
#, fuzzy
msgid "Exception raised on errors. These are usually programming errors."
msgstr "錯誤引發例外。這些通常是編程錯誤。"

#: ../../library/binascii.rst:172
#, fuzzy
msgid ""
"Exception raised on incomplete data. These are usually not programming "
"errors, but may be handled by reading a little more data and trying again."
msgstr "資料不完整引發例外。這些通常不是編程錯誤，但可以通過讀取更多資料並重試來處理"
"。"

#: ../../library/binascii.rst:180
msgid "Module :mod:`base64`"
msgstr ":mod:`base64` 模組"

#: ../../library/binascii.rst:179
#, fuzzy
msgid ""
"Support for RFC compliant base64-style encoding in base 16, 32, 64, and 85."
msgstr "在 base 16、32、64 和 85 中支援符合 RFC 標準的 base64 樣式編碼。"

#: ../../library/binascii.rst:183
msgid "Module :mod:`uu`"
msgstr ":mod:`uu` 模組"

#: ../../library/binascii.rst:183
#, fuzzy
msgid "Support for UU encoding used on Unix."
msgstr "支援 Unix 上使用的 UU 編碼。"

#: ../../library/binascii.rst:185
msgid "Module :mod:`quopri`"
msgstr ":mod:`quopri` 模組"

#: ../../library/binascii.rst:186
#, fuzzy
msgid "Support for quoted-printable encoding used in MIME email messages."
msgstr "支援 MIME 電子郵件消息中使用的引用印出編碼。"

#~ msgid "Module :mod:`binhex`"
#~ msgstr ":mod:`binhex` 模組"
