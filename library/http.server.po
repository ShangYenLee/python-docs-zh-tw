# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-13 00:17+0000\n"
"PO-Revision-Date: 2018-05-23 16:03+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/http.server.rst:2
msgid ":mod:`http.server` --- HTTP servers"
msgstr ":mod:`http.server` --- HTTP 伺服器"

#: ../../library/http.server.rst:7
msgid "**Source code:** :source:`Lib/http/server.py`"
msgstr "**原始碼：**\\ :source:`Lib/http/server.py`"

#: ../../library/http.server.rst:17
msgid "This module defines classes for implementing HTTP servers."
msgstr "該模組定義了用於實作 HTTP 伺服器的類別。"

#: ../../library/http.server.rst:22
#, fuzzy
msgid ""
":mod:`http.server` is not recommended for production. It only implements :"
"ref:`basic security checks <http.server-security>`."
msgstr ":mod:`http.server` 不推薦用於生產。它只實作 :ref:`基本安全檢查 <http.server-"
"security>`。"

#: ../../includes/wasm-notavail.rst:3
msgid ":ref:`Availability <availability>`: not Emscripten, not WASI."
msgstr ":ref:`Availability <availability>`：非 Emscripten、非 WASI。"

#: ../../includes/wasm-notavail.rst:5
#, fuzzy
msgid ""
"This module does not work or is not available on WebAssembly platforms "
"``wasm32-emscripten`` and ``wasm32-wasi``. See :ref:`wasm-availability` for "
"more information."
msgstr ""
"此模組在 WebAssembly 平台 ``wasm32-emscripten`` 和 ``wasm32-wasi`` 上不起作用或不可用"
"。有關更多資訊，請參閱 :ref:`wasm-availability`。"

#: ../../library/http.server.rst:27
#, fuzzy
msgid ""
"One class, :class:`HTTPServer`, is a :class:`socketserver.TCPServer` "
"subclass. It creates and listens at the HTTP socket, dispatching the "
"requests to a handler.  Code to create and run the server looks like this::"
msgstr ""
"一個類 :class:`HTTPServer` 是 :class:`socketserver.TCPServer` 的子類別。"
"它建立並偵聽 HTTP "
" socket ，將請求分派給處理程式。建立和運行伺服器的程式碼如下所示："

#: ../../library/http.server.rst:39
#, fuzzy
msgid ""
"This class builds on the :class:`~socketserver.TCPServer` class by storing "
"the server address as instance variables named :attr:`server_name` and :attr:"
"`server_port`. The server is accessible by the handler, typically through "
"the handler's :attr:`server` instance variable."
msgstr ""
"該類建立在 :class:`~socketserver.TCPServer` 類之上，"
"通過將伺服器地址儲存為名為 :attr:`server_name` 和 :attr:`server_port` "
"的實例變數。處理程式可以訪問伺服器，通常是通過處理程式的 :attr:`server` "
"實例變數。"

#: ../../library/http.server.rst:46
#, fuzzy
msgid ""
"This class is identical to HTTPServer but uses threads to handle requests by "
"using the :class:`~socketserver.ThreadingMixIn`. This is useful to handle "
"web browsers pre-opening sockets, on which :class:`HTTPServer` would wait "
"indefinitely."
msgstr ""
"此類與 HTTPServer 相同，但使用執行緒通過使用 :class:`~socketserver."
"ThreadingMixIn` 來處理請求。這對於處理 Web 瀏覽器預打開 socket 很有用，"
"HTTPServer 會無限期等待。"

#: ../../library/http.server.rst:54
#, fuzzy
msgid ""
"The :class:`HTTPServer` and :class:`ThreadingHTTPServer` must be given a "
"*RequestHandlerClass* on instantiation, of which this module provides three "
"different variants:"
msgstr ""
":class:`HTTPServer` 和 :class:`ThreadingHTTPServer` 必須在實例化時被賦予 "
"*RequestHandlerClass*，該模組提供了三種不同的變體："

#: ../../library/http.server.rst:60
#, fuzzy
msgid ""
"This class is used to handle the HTTP requests that arrive at the server.  "
"By itself, it cannot respond to any actual HTTP requests; it must be "
"subclassed to handle each request method (e.g. GET or POST). :class:"
"`BaseHTTPRequestHandler` provides a number of class and instance variables, "
"and methods for use by subclasses."
msgstr ""
"此類用於處理到達伺服器的 HTTP 請求。它本身不能響應任何實際的 HTTP "
"請求；它必須被子類別化以處理每個請求方法（例如 GET 或 POST）。 "
":class:`BaseHTTPRequestHandler` "
"提供了許多類和實例變數，以及供子類別使用的方法。"

#: ../../library/http.server.rst:66
#, fuzzy
msgid ""
"The handler will parse the request and the headers, then call a method "
"specific to the request type. The method name is constructed from the "
"request. For example, for the request method ``SPAM``, the :meth:`do_SPAM` "
"method will be called with no arguments. All of the relevant information is "
"stored in instance variables of the handler.  Subclasses should not need to "
"override or extend the :meth:`__init__` method."
msgstr ""
"處理程式將解析請求和標頭，然後呼叫特定於請求型別的方法。方法名稱是根據請求構"
"造的。例如，對於請求方法 ``SPAM``，:meth:`do_SPAM` "
"方法將在沒有參數的情況下被呼叫。所有相關資訊都儲存在處理程式的實例變數中。"
"子類別不需要覆蓋或擴充 :meth:`__init__` 方法。"

#: ../../library/http.server.rst:73
msgid ":class:`BaseHTTPRequestHandler` has the following instance variables:"
msgstr ":class:`BaseHTTPRequestHandler` 具有以下實例變數："

#: ../../library/http.server.rst:77
#, fuzzy
msgid ""
"Contains a tuple of the form ``(host, port)`` referring to the client's "
"address."
msgstr "包含形式為 ``(host, port)`` 的元組，指的是客戶端的地址。"

#: ../../library/http.server.rst:82
#, fuzzy
msgid "Contains the server instance."
msgstr "包含伺服器實例。"

#: ../../library/http.server.rst:86
#, fuzzy
msgid ""
"Boolean that should be set before :meth:`handle_one_request` returns, "
"indicating if another request may be expected, or if the connection should "
"be shut down."
msgstr "應在 handle_one_request "
"回傳之前設定的布爾值，指示是否可能需要另一個請求，或者是否應關閉連接。"

#: ../../library/http.server.rst:92
#, fuzzy
msgid ""
"Contains the string representation of the HTTP request line. The terminating "
"CRLF is stripped. This attribute should be set by :meth:"
"`handle_one_request`. If no valid request line was processed, it should be "
"set to the empty string."
msgstr ""
"包含 HTTP 請求行的字串表示形式。終止 CRLF 被剝離。此屬性應由 "
"handle_one_request 設定。如果沒有處理有效的請求行，則應將其設定為空字串。"

#: ../../library/http.server.rst:99
#, fuzzy
msgid "Contains the command (request type). For example, ``'GET'``."
msgstr "包含命令（請求型別）。例如，``'GET'``。"

#: ../../library/http.server.rst:103
#, fuzzy
msgid ""
"Contains the request path. If query component of the URL is present, then "
"``path`` includes the query. Using the terminology of :rfc:`3986`, ``path`` "
"here includes ``hier-part`` and the ``query``."
msgstr ""
"包含請求路徑。如果 URL 的查詢部分存在，則 ``path`` 包括查詢。使用 :rfc:`3986`"
" 的術語，這裡的 ``path`` 包括 ``hier-part`` 和 ``query``。"

#: ../../library/http.server.rst:109
#, fuzzy
msgid ""
"Contains the version string from the request. For example, ``'HTTP/1.0'``."
msgstr "包含來自請求的版本字串。例如，``'HTTP/1.0'``。"

#: ../../library/http.server.rst:113
#, fuzzy
msgid ""
"Holds an instance of the class specified by the :attr:`MessageClass` class "
"variable. This instance parses and manages the headers in the HTTP request. "
"The :func:`~http.client.parse_headers` function from :mod:`http.client` is "
"used to parse the headers and it requires that the HTTP request provide a "
"valid :rfc:`2822` style header."
msgstr ""
"持有由 :attr:`MessageClass` 類變數指定的類的實例。此實例解析和管理 HTTP "
"請求中的標頭。 :mod:`http.client` 中的 :func:`~http.client.parse_headers` "
"函式用於解析標頭，它要求 HTTP 請求提供有效的 :rfc:`2822` 樣式標頭。"

#: ../../library/http.server.rst:121
#, fuzzy
msgid ""
"An :class:`io.BufferedIOBase` input stream, ready to read from the start of "
"the optional input data."
msgstr "一個 io.BufferedIOBase 輸入流，準備從可選輸入資料的開頭讀取。"

#: ../../library/http.server.rst:126
#, fuzzy
msgid ""
"Contains the output stream for writing a response back to the client. Proper "
"adherence to the HTTP protocol must be used when writing to this stream in "
"order to achieve successful interoperation with HTTP clients."
msgstr "包含用於將響應寫回客戶端的輸出流。寫入此流時必須正確遵守 HTTP 協定，以實作與 "
"HTTP 客戶端的成功互操作。"

#: ../../library/http.server.rst:131
msgid "This is an :class:`io.BufferedIOBase` stream."
msgstr "這是一個 :class:`io.BufferedIOBase` 串流。"

#: ../../library/http.server.rst:134
msgid ":class:`BaseHTTPRequestHandler` has the following attributes:"
msgstr ":class:`BaseHTTPRequestHandler` 擁有以下屬性："

#: ../../library/http.server.rst:138
#, fuzzy
msgid ""
"Specifies the server software version.  You may want to override this. The "
"format is multiple whitespace-separated strings, where each string is of the "
"form name[/version]. For example, ``'BaseHTTP/0.2'``."
msgstr ""
"指定伺服器軟件版本。您可能想要覆蓋它。格式是多個以空格分隔的字串，其中每個字"
"串的格式為名稱[/版本]。例如，``'BaseHTTP/0.2'``。"

#: ../../library/http.server.rst:144
#, fuzzy
msgid ""
"Contains the Python system version, in a form usable by the :attr:"
"`version_string` method and the :attr:`server_version` class variable. For "
"example, ``'Python/1.4'``."
msgstr ""
"包含 Python 系統版本，以 :attr:`version_string` 方法和 :attr:`server_version`"
" 類變數可用的形式。例如，``'Python/1.4'``。"

#: ../../library/http.server.rst:150
#, fuzzy
msgid ""
"Specifies a format string that should be used by :meth:`send_error` method "
"for building an error response to the client. The string is filled by "
"default with variables from :attr:`responses` based on the status code that "
"passed to :meth:`send_error`."
msgstr ""
"指定 send_error 方法應使用的格式字串，用於構建對客戶端的錯誤響應。根據傳遞給 "
":meth:`send_error` 的狀態程式碼，預設情況下，該字串由來自 :attr:`responses` "
"的變數填充。"

#: ../../library/http.server.rst:157
#, fuzzy
msgid ""
"Specifies the Content-Type HTTP header of error responses sent to the "
"client.  The default value is ``'text/html'``."
msgstr "指定發送到客戶端的錯誤響應的 Content-Type HTTP 標頭。預設值是``'text/"
"html'``。"

#: ../../library/http.server.rst:162
#, fuzzy
msgid ""
"Specifies the HTTP version to which the server is conformant. It is sent in "
"responses to let the client know the server's communication capabilities for "
"future requests. If set to ``'HTTP/1.1'``, the server will permit HTTP "
"persistent connections; however, your server *must* then include an accurate "
"``Content-Length`` header (using :meth:`send_header`) in all of its "
"responses to clients. For backwards compatibility, the setting defaults to "
"``'HTTP/1.0'``."
msgstr ""
"指定伺服器符合的 HTTP "
"版本。它在響應中發送，讓客戶端知道伺服器對未來請求的通信能力。如果設定為“"
"HTTP/1.1”，伺服器將允許 HTTP "
"持久連接；但是，您的伺服器*必須*然後在其對客戶端的所有響應中包含一個準確的"
"``Content-Length`` 標頭（使用 :meth:`send_header`）。為了向後相容，設定預設為“"
"HTTP/1.0”。"

#: ../../library/http.server.rst:172
#, fuzzy
msgid ""
"Specifies an :class:`email.message.Message`\\ -like class to parse HTTP "
"headers.  Typically, this is not overridden, and it defaults to :class:`http."
"client.HTTPMessage`."
msgstr ""
"指定一個類似 :class:`email.message.Message`\\ 的類來解析 HTTP "
"標頭。通常，這不會被覆蓋，它預設為 :class:`http.client.HTTPMessage`。"

#: ../../library/http.server.rst:178
#, fuzzy
msgid ""
"This attribute contains a mapping of error code integers to two-element "
"tuples containing a short and long message. For example, ``{code: "
"(shortmessage, longmessage)}``. The *shortmessage* is usually used as the "
"*message* key in an error response, and *longmessage* as the *explain* key.  "
"It is used by :meth:`send_response_only` and :meth:`send_error` methods."
msgstr ""
"此屬性包含錯誤程式碼整數到包含短消息和長消息的雙元素元組的映射。例如，``{code"
": (shortmessage, longmessage)}``。 *shortmessage* 通常用作錯誤響應中的 "
"*message* 鍵，而 *longmessage* 用作 *explain* 鍵。它被 "
":meth:`send_response_only` 和 :meth:`send_error` 方法使用。"

#: ../../library/http.server.rst:184
msgid "A :class:`BaseHTTPRequestHandler` instance has the following methods:"
msgstr ":class:`BaseHTTPRequestHandler` 實例具有以下方法："

#: ../../library/http.server.rst:188
#, fuzzy
msgid ""
"Calls :meth:`handle_one_request` once (or, if persistent connections are "
"enabled, multiple times) to handle incoming HTTP requests. You should never "
"need to override it; instead, implement appropriate :meth:`do_\\*` methods."
msgstr ""
"呼叫 :meth:`handle_one_request` 一次（或者，如果啟用了持久連接，則呼叫多次）"
"來處理傳入的 HTTP 請求。您永遠不需要覆蓋它；相反，實施適當的 :meth:`do_\\*` "
"方法。"

#: ../../library/http.server.rst:195
#, fuzzy
msgid ""
"This method will parse and dispatch the request to the appropriate :meth:"
"`do_\\*` method.  You should never need to override it."
msgstr "此方法將解析請求並將其分派給適當的 :meth:`do_\\*` 方法。您永遠不需要覆蓋它。"

#: ../../library/http.server.rst:200
#, fuzzy
msgid ""
"When an HTTP/1.1 conformant server receives an ``Expect: 100-continue`` "
"request header it responds back with a ``100 Continue`` followed by ``200 "
"OK`` headers. This method can be overridden to raise an error if the server "
"does not want the client to continue.  For e.g. server can choose to send "
"``417 Expectation Failed`` as a response header and ``return False``."
msgstr ""
"當符合 HTTP/1.1 標準的伺服器接收到“Expect: 100-continue”請求標頭時，它會用“"
"100 Continue”後跟“200 OK”標頭進行響應。如果伺服器不希望客戶端繼續，可以覆蓋此"
"方法以引發錯誤。例如伺服器可以選擇發送“417 Expectation Failed”作為響應頭並“"
"回傳 False”。"

#: ../../library/http.server.rst:211
#, fuzzy
msgid ""
"Sends and logs a complete error reply to the client. The numeric *code* "
"specifies the HTTP error code, with *message* as an optional, short, human "
"readable description of the error.  The *explain* argument can be used to "
"provide more detailed information about the error; it will be formatted "
"using the :attr:`error_message_format` attribute and emitted, after a "
"complete set of headers, as the response body.  The :attr:`responses` "
"attribute holds the default values for *message* and *explain* that will be "
"used if no value is provided; for unknown codes the default value for both "
"is the string ``???``. The body will be empty if the method is HEAD or the "
"response code is one of the following: ``1xx``, ``204 No Content``, ``205 "
"Reset Content``, ``304 Not Modified``."
msgstr ""
"向客戶端發送並記錄完整的錯誤回覆。數字 *code* 指定 HTTP 錯誤程式碼，*message*"
" 作為可選的、簡短的、人類可讀的錯誤描述。 *explain* "
"參數可用於提供有關錯誤的更多詳細資訊；它將使用 :attr:`error_message_format` "
"屬性進行格式化，並在一組完整的標頭之後作為響應主體發出。 :attr:`responses` "
"屬性包含 *message* 和 *explain* "
"的預設值，如果沒有提供值，將使用這些值；對於未知程式碼，兩者的預設值都是字串 "
"``???``。如果方法是 HEAD 或響應程式碼是以下之一，主體將為空：``1xx``、``204 "
"無內容``、``205 重置內容``、``304 未修改``。"

#: ../../library/http.server.rst:223
#, fuzzy
msgid ""
"The error response includes a Content-Length header. Added the *explain* "
"argument."
msgstr "錯誤響應包含 Content-Length 標頭。新增了 *explain* 參數。"

#: ../../library/http.server.rst:229
#, fuzzy
msgid ""
"Adds a response header to the headers buffer and logs the accepted request. "
"The HTTP response line is written to the internal buffer, followed by "
"*Server* and *Date* headers. The values for these two headers are picked up "
"from the :meth:`version_string` and :meth:`date_time_string` methods, "
"respectively. If the server does not intend to send any other headers using "
"the :meth:`send_header` method, then :meth:`send_response` should be "
"followed by an :meth:`end_headers` call."
msgstr ""
"將響應標頭新增到標頭緩衝區並記錄接受的請求。 HTTP 響應行被寫入內部緩衝區，"
"後跟 *Server* 和 *Date* 標頭。這兩個標頭的值分別從 :meth:`version_string` 和 "
":meth:`date_time_string` 方法中獲取。如果伺服器不打算使用 :meth:`send_header`"
" 方法發送任何其他標頭，則 :meth:`send_response` 後應跟有 :meth:`end_headers` "
"呼叫。"

#: ../../library/http.server.rst:238
#, fuzzy
msgid ""
"Headers are stored to an internal buffer and :meth:`end_headers` needs to be "
"called explicitly."
msgstr "標頭儲存在內部緩衝區中，並且需要顯式呼叫 end_headers 。"

#: ../../library/http.server.rst:244
#, fuzzy
msgid ""
"Adds the HTTP header to an internal buffer which will be written to the "
"output stream when either :meth:`end_headers` or :meth:`flush_headers` is "
"invoked. *keyword* should specify the header keyword, with *value* "
"specifying its value. Note that, after the send_header calls are done, :meth:"
"`end_headers` MUST BE called in order to complete the operation."
msgstr ""
"將 HTTP 標頭新增到內部緩衝區，當呼叫 end_headers 或 flush_headers "
"時，該緩衝區將寫入輸出流。 *keyword* 應指定標頭關鍵字，*value* "
"指定其值。請注意，在 send_header 呼叫完成後，必須呼叫 :meth:`end_headers` "
"才能完成操作。"

#: ../../library/http.server.rst:250
#, fuzzy
msgid "Headers are stored in an internal buffer."
msgstr "標頭儲存在內部緩衝區中。"

#: ../../library/http.server.rst:255
#, fuzzy
msgid ""
"Sends the response header only, used for the purposes when ``100 Continue`` "
"response is sent by the server to the client. The headers not buffered and "
"sent directly the output stream.If the *message* is not specified, the HTTP "
"message corresponding the response *code*  is sent."
msgstr ""
"僅發送響應頭，用於伺服器向客戶端發送“100 "
"Continue”響應時的目的。標頭未緩衝並直接發送到輸出流。如果未指定 *message*，"
"則發送與響應 *code* 對應的 HTTP 消息。"

#: ../../library/http.server.rst:264
#, fuzzy
msgid ""
"Adds a blank line (indicating the end of the HTTP headers in the response) "
"to the headers buffer and calls :meth:`flush_headers()`."
msgstr "新增一個空行（表示響應中 HTTP 標頭的結尾）到標頭緩衝區並呼叫 flush_headers() "
"。"

#: ../../library/http.server.rst:268
#, fuzzy
msgid "The buffered headers are written to the output stream."
msgstr "緩衝的標頭被寫入輸出流。"

#: ../../library/http.server.rst:273
#, fuzzy
msgid ""
"Finally send the headers to the output stream and flush the internal headers "
"buffer."
msgstr "最後將標頭髮送到輸出流並刷新內部標頭緩衝區。"

#: ../../library/http.server.rst:280
#, fuzzy
msgid ""
"Logs an accepted (successful) request. *code* should specify the numeric "
"HTTP code associated with the response. If a size of the response is "
"available, then it should be passed as the *size* parameter."
msgstr ""
"記錄接受的（成功的）請求。 *code* 應該指定與響應關聯的數字 HTTP "
"程式碼。如果響應的大小可用，則應將其作為 *size* 參數傳遞。"

#: ../../library/http.server.rst:286
#, fuzzy
msgid ""
"Logs an error when a request cannot be fulfilled. By default, it passes the "
"message to :meth:`log_message`, so it takes the same arguments (*format* and "
"additional values)."
msgstr ""
"當無法滿足請求時記錄錯誤。預設情況下，它會將消息傳遞給 "
":meth:`log_message`，因此它採用相同的參數（*格式* 和其他值）。"

#: ../../library/http.server.rst:293
#, fuzzy
msgid ""
"Logs an arbitrary message to ``sys.stderr``. This is typically overridden to "
"create custom error logging mechanisms. The *format* argument is a standard "
"printf-style format string, where the additional arguments to :meth:"
"`log_message` are applied as inputs to the formatting. The client ip address "
"and current date and time are prefixed to every message logged."
msgstr ""
"將任意消息記錄到“sys.stderr”。這通常被覆蓋以建立自定義錯誤記錄機制。 *format*"
" 參數是標準的 printf 樣式格式字串，其中 :meth:`log_message` "
"的附加參數用作格式的輸入。客戶端 ip "
"地址和當前日期和時間作為前綴新增到每條記錄的消息中。"

#: ../../library/http.server.rst:301
#, fuzzy
msgid ""
"Returns the server software's version string. This is a combination of the :"
"attr:`server_version` and :attr:`sys_version` attributes."
msgstr "回傳伺服器軟件的版本字串。這是 :attr:`server_version` 和 :attr:`sys_version` "
"屬性的組合。"

#: ../../library/http.server.rst:306
#, fuzzy
msgid ""
"Returns the date and time given by *timestamp* (which must be ``None`` or in "
"the format returned by :func:`time.time`), formatted for a message header. "
"If *timestamp* is omitted, it uses the current date and time."
msgstr ""
"回傳由 *timestamp* 給出的日期和時間（必須為 ``None`` 或 :func:`time.time` "
"回傳的格式），格式為消息頭。如果省略 *timestamp*，則使用當前日期和時間。"

#: ../../library/http.server.rst:310
#, fuzzy
msgid "The result looks like ``'Sun, 06 Nov 1994 08:49:37 GMT'``."
msgstr "結果看起來像``'Sun, 06 Nov 1994 08:49:37 GMT'``。"

#: ../../library/http.server.rst:314
#, fuzzy
msgid "Returns the current date and time, formatted for logging."
msgstr "回傳當前日期和時間，格式化用於記錄。"

#: ../../library/http.server.rst:318
#, fuzzy
msgid "Returns the client address."
msgstr "回傳客戶端地址。"

#: ../../library/http.server.rst:320
#, fuzzy
msgid ""
"Previously, a name lookup was performed. To avoid name resolution delays, it "
"now always returns the IP address."
msgstr "之前，執行了名稱查找。為避免名稱解析延遲，它現在始終回傳 IP 地址。"

#: ../../library/http.server.rst:327
#, fuzzy
msgid ""
"This class serves files from the directory *directory* and below, or the "
"current directory if *directory* is not provided, directly mapping the "
"directory structure to HTTP requests."
msgstr ""
"此類提供目錄 *directory* 及以下目錄中的文件，如果未提供 *directory* "
"則提供當前目錄，直接將目錄結構映射到 HTTP 請求。"

#: ../../library/http.server.rst:331
msgid "The *directory* parameter."
msgstr "*directory* 參數。"

#: ../../library/http.server.rst:334
#, fuzzy
msgid "The *directory* parameter accepts a :term:`path-like object`."
msgstr "*directory* 參數接受一個 :term:`path-like object`。"

#: ../../library/http.server.rst:337
#, fuzzy
msgid ""
"A lot of the work, such as parsing the request, is done by the base class :"
"class:`BaseHTTPRequestHandler`.  This class implements the :func:`do_GET` "
"and :func:`do_HEAD` functions."
msgstr ""
"很多工作，例如解析請求，都是由基底類別 :class:`BaseHTTPRequestHandler` "
"完成的。此類實作了 :func:`do_GET` 和 :func:`do_HEAD` 函式。"

#: ../../library/http.server.rst:341
#, fuzzy
msgid ""
"The following are defined as class-level attributes of :class:"
"`SimpleHTTPRequestHandler`:"
msgstr "以下定義為 :class:`SimpleHTTPRequestHandler` 的類級屬性："

#: ../../library/http.server.rst:346
#, fuzzy
msgid ""
"This will be ``\"SimpleHTTP/\" + __version__``, where ``__version__`` is "
"defined at the module level."
msgstr "這將是 ``\"SimpleHTTP/\" + __version__``，其中 ``__version__`` "
"在模組級別定義。"

#: ../../library/http.server.rst:351
#, fuzzy
msgid ""
"A dictionary mapping suffixes into MIME types, contains custom overrides for "
"the default system mappings. The mapping is used case-insensitively, and so "
"should contain only lower-cased keys."
msgstr "字典映射後綴到 MIME 型別，包含預設系統映射的自定義覆蓋。映射不區分大小寫使用"
"，因此應該只包含小寫的鍵。"

#: ../../library/http.server.rst:355
#, fuzzy
msgid ""
"This dictionary is no longer filled with the default system mappings, but "
"only contains overrides."
msgstr "該字典不再填充預設系統映射，而只包含覆蓋。"

#: ../../library/http.server.rst:359
#, fuzzy
msgid ""
"The :class:`SimpleHTTPRequestHandler` class defines the following methods:"
msgstr ":class:`SimpleHTTPRequestHandler` 類定義了以下方法："

#: ../../library/http.server.rst:363
#, fuzzy
msgid ""
"This method serves the ``'HEAD'`` request type: it sends the headers it "
"would send for the equivalent ``GET`` request. See the :meth:`do_GET` method "
"for a more complete explanation of the possible headers."
msgstr ""
"此方法服務於 ``'HEAD'`` 請求型別：它發送它為等效的 ``GET`` "
"請求發送的標頭。有關可能的標頭的更完整說明，請參閱 do_GET 方法。"

#: ../../library/http.server.rst:369
#, fuzzy
msgid ""
"The request is mapped to a local file by interpreting the request as a path "
"relative to the current working directory."
msgstr "通過將請求解釋為相對於當前工作目錄的路徑，將請求映射到本地文件。"

#: ../../library/http.server.rst:372
#, fuzzy
msgid ""
"If the request was mapped to a directory, the directory is checked for a "
"file named ``index.html`` or ``index.htm`` (in that order). If found, the "
"file's contents are returned; otherwise a directory listing is generated by "
"calling the :meth:`list_directory` method. This method uses :func:`os."
"listdir` to scan the directory, and returns a ``404`` error response if the :"
"func:`~os.listdir` fails."
msgstr ""
"如果請求被映射到目錄，則檢查該目錄是否有名為“index.html”或“index."
"htm”（按此順序）的文件。如果找到，則回傳文件的內容；否則通過呼叫 "
"list_directory 方法生成目錄列表。此方法使用 :func:`os.listdir` 掃描目錄，"
"如果 :func:`~os.listdir` 失敗，則回傳 ``404`` 錯誤響應。"

#: ../../library/http.server.rst:379
#, fuzzy
msgid ""
"If the request was mapped to a file, it is opened. Any :exc:`OSError` "
"exception in opening the requested file is mapped to a ``404``, ``'File not "
"found'`` error. If there was a ``'If-Modified-Since'`` header in the "
"request, and the file was not modified after this time, a ``304``, ``'Not "
"Modified'`` response is sent. Otherwise, the content type is guessed by "
"calling the :meth:`guess_type` method, which in turn uses the "
"*extensions_map* variable, and the file contents are returned."
msgstr ""
"如果請求被映射到一個文件，它被打開。打開請求文件時的任何 :exc:`OSError` "
"例外都會映射到 ``404``、``'找不到文件'`` 錯誤。如果請求中有一個``'If-"
"Modified-Since'`` 標頭，並且文件在此之後沒有被修改，則發送一個``304``，``"
"'Not Modified'`` 響應。否則，通過呼叫 :meth:`guess_type` 方法猜測內容型別，"
"該方法又使用 *extensions_map* 變數，並回傳文件內容。"

#: ../../library/http.server.rst:387
#, fuzzy
msgid ""
"A ``'Content-type:'`` header with the guessed content type is output, "
"followed by a ``'Content-Length:'`` header with the file's size and a "
"``'Last-Modified:'`` header with the file's modification time."
msgstr ""
"輸出帶有猜測內容型別的``'Content-type:'`` 標頭，後跟帶有文件大小的``'Content-"
"Length:'`` 標頭和``'Last-Modified:'``帶有文件修改時間的標頭。"

#: ../../library/http.server.rst:391
#, fuzzy
msgid ""
"Then follows a blank line signifying the end of the headers, and then the "
"contents of the file are output. If the file's MIME type starts with ``text/"
"`` the file is opened in text mode; otherwise binary mode is used."
msgstr "然後是一個空行，表示標題結束，然後輸出文件的內容。如果文件的 MIME 型別以“"
"text/”開頭，則文件以文本模式打開；否則使用二進位模式。"

#: ../../library/http.server.rst:395
#, fuzzy
msgid ""
"For example usage, see the implementation of the ``test`` function in :"
"source:`Lib/http/server.py`."
msgstr "例如用法，請參閱 :source:`Lib/http/server.py` 中 ``test`` 函式的實作。"

#: ../../library/http.server.rst:398
#, fuzzy
msgid "Support of the ``'If-Modified-Since'`` header."
msgstr "支援``'If-Modified-Since'`` 標頭。"

#: ../../library/http.server.rst:401
#, fuzzy
msgid ""
"The :class:`SimpleHTTPRequestHandler` class can be used in the following "
"manner in order to create a very basic webserver serving files relative to "
"the current directory::"
msgstr ""
":class:`SimpleHTTPRequestHandler` "
"類可以按以下方式使用，以建立一個非常基本的網絡伺服器服務文件相對於當前目錄::"

#: ../../library/http.server.rst:418
#, fuzzy
msgid ""
":mod:`http.server` can also be invoked directly using the :option:`-m` "
"switch of the interpreter.  Similar to the previous example, this serves "
"files relative to the current directory::"
msgstr ":mod:`http.server` 也可以使用直譯器的 :option:`-m` "
"開關直接呼叫。與前面的示例類似，這提供相對於當前目錄的文件："

#: ../../library/http.server.rst:424
#, fuzzy
msgid ""
"The server listens to port 8000 by default. The default can be overridden by "
"passing the desired port number as an argument::"
msgstr "伺服器預設監聽8000連接埠。可以通過將所需的連接埠號作為參數傳遞來覆蓋預設值::"

#: ../../library/http.server.rst:429
#, fuzzy
msgid ""
"By default, the server binds itself to all interfaces.  The option ``-b/--"
"bind`` specifies a specific address to which it should bind. Both IPv4 and "
"IPv6 addresses are supported. For example, the following command causes the "
"server to bind to localhost only::"
msgstr ""
"預設情況下，伺服器將自己綁定到所有介面。選項 ``-b/--bind`` "
"指定它應該綁定到的特定地址。支援 IPv4 和 IPv6 "
"地址。例如，以下命令使伺服器僅綁定到本地主機："

#: ../../library/http.server.rst:436
#, fuzzy
msgid "``--bind`` argument was introduced."
msgstr "``--bind`` 參數被引入。"

#: ../../library/http.server.rst:439
#, fuzzy
msgid "``--bind`` argument enhanced to support IPv6"
msgstr "``--bind`` 參數增強以支援 IPv6"

#: ../../library/http.server.rst:442
#, fuzzy
msgid ""
"By default, the server uses the current directory. The option ``-d/--"
"directory`` specifies a directory to which it should serve the files. For "
"example, the following command uses a specific directory::"
msgstr "預設情況下，伺服器使用當前目錄。選項 ``-d/--directory`` "
"指定它應該為文件提供服務的目錄。例如，以下命令使用特定目錄::"

#: ../../library/http.server.rst:448
#, fuzzy
msgid "``--directory`` argument was introduced."
msgstr "``--directory`` 參數被引入。"

#: ../../library/http.server.rst:451
#, fuzzy
msgid ""
"By default, the server is conformant to HTTP/1.0. The option ``-p/--"
"protocol`` specifies the HTTP version to which the server is conformant. For "
"example, the following command runs an HTTP/1.1 conformant server::"
msgstr ""
"預設情況下，伺服器符合 HTTP/1.0。選項 ``-p/--protocol`` 指定伺服器符合的 "
"HTTP 版本。例如，以下命令運行符合 HTTP/1.1 標準的伺服器："

#: ../../library/http.server.rst:457
#, fuzzy
msgid "``--protocol`` argument was introduced."
msgstr "``--protocol`` 參數被引入。"

#: ../../library/http.server.rst:462
#, fuzzy
msgid ""
"This class is used to serve either files or output of CGI scripts from the "
"current directory and below. Note that mapping HTTP hierarchic structure to "
"local directory structure is exactly as in :class:`SimpleHTTPRequestHandler`."
msgstr ""
"此類用於提供當前目錄及以下目錄中的文件或 CGI 腳本的輸出。請注意，將 HTTP "
"層次結構映射到本地目錄結構與 SimpleHTTPRequestHandler 中的完全相同。"

#: ../../library/http.server.rst:468
#, fuzzy
msgid ""
"CGI scripts run by the :class:`CGIHTTPRequestHandler` class cannot execute "
"redirects (HTTP code 302), because code 200 (script output follows) is sent "
"prior to execution of the CGI script.  This pre-empts the status code."
msgstr ""
"由 CGIHTTPRequestHandler 類運行的 CGI 腳本無法執行重定向（HTTP 程式碼 302），"
"因為程式碼 200（隨後是腳本輸出）是在執行 CGI "
"腳本之前發送的。這會搶占狀態程式碼。"

#: ../../library/http.server.rst:473
#, fuzzy
msgid ""
"The class will however, run the CGI script, instead of serving it as a file, "
"if it guesses it to be a CGI script.  Only directory-based CGI are used --- "
"the other common server configuration is to treat special extensions as "
"denoting CGI scripts."
msgstr ""
"但是，如果該類猜測它是 CGI 腳本，它將運行 CGI 腳本，而不是將其作為文件提供。"
"僅使用基於目錄的 CGI --- 其他常見的伺服器配置是將特殊擴充視為表示 CGI 腳本。"

#: ../../library/http.server.rst:478
#, fuzzy
msgid ""
"The :func:`do_GET` and :func:`do_HEAD` functions are modified to run CGI "
"scripts and serve the output, instead of serving files, if the request leads "
"to somewhere below the ``cgi_directories`` path."
msgstr ""
":func:`do_GET` 和 :func:`do_HEAD` 函式被修改為運行 CGI "
"腳本並提供輸出，而不是提供文件，如果請求指向 ``cgi_directories`` "
"路徑下方的某處。"

#: ../../library/http.server.rst:482
#, fuzzy
msgid "The :class:`CGIHTTPRequestHandler` defines the following data member:"
msgstr ":class:`CGIHTTPRequestHandler` 定義了以下資料成員："

#: ../../library/http.server.rst:486
#, fuzzy
msgid ""
"This defaults to ``['/cgi-bin', '/htbin']`` and describes directories to "
"treat as containing CGI scripts."
msgstr "這預設為 ``['/cgi-bin', '/htbin']`` 並描述要視為包含 CGI 腳本的目錄。"

#: ../../library/http.server.rst:489
#, fuzzy
msgid "The :class:`CGIHTTPRequestHandler` defines the following method:"
msgstr ":class:`CGIHTTPRequestHandler` 定義了以下方法："

#: ../../library/http.server.rst:493
#, fuzzy
msgid ""
"This method serves the ``'POST'`` request type, only allowed for CGI "
"scripts.  Error 501, \"Can only POST to CGI scripts\", is output when trying "
"to POST to a non-CGI url."
msgstr ""
"此方法服務於 ``'POST'`` 請求型別，僅允許用於 CGI 腳本。嘗試 POST 到非 CGI "
"url 時輸出錯誤 501，“Can only POST to CGI scripts”。"

#: ../../library/http.server.rst:497
#, fuzzy
msgid ""
"Note that CGI scripts will be run with UID of user nobody, for security "
"reasons.  Problems with the CGI script will be translated to error 403."
msgstr "請注意，出於安全原因，CGI 腳本將使用使用者 nobody 的 UID 運行。 CGI "
"腳本的問題將被轉換為錯誤 403。"

#: ../../library/http.server.rst:500
#, fuzzy
msgid ""
":class:`CGIHTTPRequestHandler` can be enabled in the command line by passing "
"the ``--cgi`` option::"
msgstr ":class:`CGIHTTPRequestHandler` 可以通過傳遞 ``--cgi`` 選項在命令列中啟用::"

#: ../../library/http.server.rst:508
#, fuzzy
msgid "Security Considerations"
msgstr "安全注意事項"

#: ../../library/http.server.rst:512
#, fuzzy
msgid ""
":class:`SimpleHTTPRequestHandler` will follow symbolic links when handling "
"requests, this makes it possible for files outside of the specified "
"directory to be served."
msgstr ":class:`SimpleHTTPRequestHandler` "
"在處理請求時將遵循符號鏈接，這使得指定目錄之外的文件可以被提供。"

#: ../../library/http.server.rst:516
#, fuzzy
msgid ""
"Earlier versions of Python did not scrub control characters from the log "
"messages emitted to stderr from ``python -m http.server`` or the default :"
"class:`BaseHTTPRequestHandler` ``.log_message`` implementation. This could "
"allow remote clients connecting to your server to send nefarious control "
"codes to your terminal."
msgstr ""
"早期版本的 Python 不會從 ``python -m http.server`` 或預設的 "
"BaseHTTPRequestHandler``.log_message`` 實作中清除發送到 stderr 的日誌消息中的"
"控制字元。這可能允許連接到您的伺服器的遠程客戶端向您的終端發送惡意控制程式碼"
"。"

#: ../../library/http.server.rst:522
#, fuzzy
msgid "Control characters are scrubbed in stderr logs."
msgstr "控制字元在 stderr 日誌中被清除。"
