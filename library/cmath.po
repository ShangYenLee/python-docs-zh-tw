# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-27 00:17+0000\n"
"PO-Revision-Date: 2018-05-23 14:40+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.2.2\n"

#: ../../library/cmath.rst:2
msgid ":mod:`cmath` --- Mathematical functions for complex numbers"
msgstr ":mod:`cmath` --- 複數的數學函式"

#: ../../library/cmath.rst:9
#, fuzzy
msgid ""
"This module provides access to mathematical functions for complex numbers.  "
"The functions in this module accept integers, floating-point numbers or "
"complex numbers as arguments. They will also accept any Python object that "
"has either a :meth:`__complex__` or a :meth:`__float__` method: these "
"methods are used to convert the object to a complex or floating-point "
"number, respectively, and the function is then applied to the result of the "
"conversion."
msgstr ""
"該模組提供對複數數學函式的訪問。該模組中的函式接受整數、浮點數或複數作為參"
"數。它們還將接受任何具有 :meth:`__complex__` 或 :meth:`__float__` 方法的 "
"Python 物件：這些方法分別用於將物件轉換為複數或浮點數，函式是然後應用於轉換的"
"結果。"

#: ../../library/cmath.rst:18
#, fuzzy
msgid ""
"For functions involving branch cuts, we have the problem of deciding how to "
"define those functions on the cut itself. Following Kahan's \"Branch cuts "
"for complex elementary functions\" paper, as well as Annex G of C99 and "
"later C standards, we use the sign of zero to distinguish one side of the "
"branch cut from the other: for a branch cut along (a portion of) the real "
"axis we look at the sign of the imaginary part, while for a branch cut along "
"the imaginary axis we look at the sign of the real part."
msgstr ""
"對於涉及分支切割的函式，我們面臨著決定如何在切割本身上定義這些函式的問題。遵"
"循 Kahan 的“複雜初等函式的分支切割”論文以及 C99 的附件 G 和後來的 C 標準，我"
"們使用零符號來區分分支切割的一側與另一側：對於沿著（一部分的）實軸我們看虛部"
"的符號，而對於沿虛軸的分支切割我們看實部的符號。"

#: ../../library/cmath.rst:26
#, fuzzy
msgid ""
"For example, the :func:`cmath.sqrt` function has a branch cut along the "
"negative real axis. An argument of ``complex(-2.0, -0.0)`` is treated as "
"though it lies *below* the branch cut, and so gives a result on the negative "
"imaginary axis::"
msgstr ""
"例如，:func:`cmath.sqrt` 函式有一個沿負實軸的分支切割。 ``complex(-2.0, "
"-0.0)`` 的參數被視為位於*下方*分支切割，因此在負虛軸上給出結果::"

#: ../../library/cmath.rst:34
#, fuzzy
msgid ""
"But an argument of ``complex(-2.0, 0.0)`` is treated as though it lies above "
"the branch cut::"
msgstr "但是 ``complex(-2.0, 0.0)`` 的參數被視為位於分支切割之上::"

#: ../../library/cmath.rst:42
msgid "Conversions to and from polar coordinates"
msgstr "與極坐標的轉換"

#: ../../library/cmath.rst:44
#, fuzzy
msgid ""
"A Python complex number ``z`` is stored internally using *rectangular* or "
"*Cartesian* coordinates.  It is completely determined by its *real part* ``z."
"real`` and its *imaginary part* ``z.imag``.  In other words::"
msgstr ""
"Python 複數 ``z`` 使用 *rectangular* 或 *Cartesian* 坐標在內部儲存。它完全由"
"它的*實部*``z.real`` 和它的*虛部*``z.imag`` 決定。換句話說：："

#: ../../library/cmath.rst:51
#, fuzzy
msgid ""
"*Polar coordinates* give an alternative way to represent a complex number.  "
"In polar coordinates, a complex number *z* is defined by the modulus *r* and "
"the phase angle *phi*. The modulus *r* is the distance from *z* to the "
"origin, while the phase *phi* is the counterclockwise angle, measured in "
"radians, from the positive x-axis to the line segment that joins the origin "
"to *z*."
msgstr ""
"*極坐標* 提供了另一種表示複數的方法。在極坐標中，複數 *z* 由模數 *r* 和相位"
"角 *phi* 定義。模數 *r* 是從 *z* 到原點的距離，而相位 *phi* 是以弧度為單位的"
"逆時針角度，從正 x 軸到連接原點和 *z* 的線段。"

#: ../../library/cmath.rst:58
#, fuzzy
msgid ""
"The following functions can be used to convert from the native rectangular "
"coordinates to polar coordinates and back."
msgstr "以下函式可用於從本機直角坐標轉換為極坐標並回傳。"

#: ../../library/cmath.rst:63
#, fuzzy
msgid ""
"Return the phase of *x* (also known as the *argument* of *x*), as a float. "
"``phase(x)`` is equivalent to ``math.atan2(x.imag, x.real)``.  The result "
"lies in the range [-\\ *π*, *π*], and the branch cut for this operation lies "
"along the negative real axis.  The sign of the result is the same as the "
"sign of ``x.imag``, even when ``x.imag`` is zero::"
msgstr ""
"將 *x* 的相位（也稱為 *x* 的 *argument*）作為浮點數回傳。 ``phase(x)`` 相當"
"於 ``math.atan2(x.imag, x.real)``。結果位於 [-\\ *π*, *π*] 範圍內，並且此操作"
"的分支切割位於負實軸上。結果的符號與 ``x.imag`` 的符號相同，即使 ``x.imag`` "
"為零："

#: ../../library/cmath.rst:77
#, fuzzy
msgid ""
"The modulus (absolute value) of a complex number *x* can be computed using "
"the built-in :func:`abs` function.  There is no separate :mod:`cmath` module "
"function for this operation."
msgstr ""
"可以使用內建的 :func:`abs` 函式計算複數 *x* 的模數（絕對值）。此操作沒有單獨"
"的 :mod:`cmath` 模組函式。"

#: ../../library/cmath.rst:84
#, fuzzy
msgid ""
"Return the representation of *x* in polar coordinates.  Returns a pair ``(r, "
"phi)`` where *r* is the modulus of *x* and phi is the phase of *x*.  "
"``polar(x)`` is equivalent to ``(abs(x), phase(x))``."
msgstr ""
"回傳極坐標中 *x* 的表示。回傳一對“(r, phi)”，其中 *r* 是 *x* 的模數，phi 是 "
"*x* 的相位。 ``polar(x)`` 等價於 ``(abs(x), phase(x))``。"

#: ../../library/cmath.rst:92
#, fuzzy
msgid ""
"Return the complex number *x* with polar coordinates *r* and *phi*. "
"Equivalent to ``r * (math.cos(phi) + math.sin(phi)*1j)``."
msgstr ""
"回傳具有極坐標 *r* 和 *phi* 的複數 *x*。相當於 ``r * (math.cos(phi) + math."
"sin(phi)*1j)``。"

#: ../../library/cmath.rst:97
#, fuzzy
msgid "Power and logarithmic functions"
msgstr "冪函式和對數函式"

#: ../../library/cmath.rst:101
#, fuzzy
msgid ""
"Return *e* raised to the power *x*, where *e* is the base of natural "
"logarithms."
msgstr "回傳 *e* 的 *x* 次方，其中 *e* 是自然對數的底。"

#: ../../library/cmath.rst:107
#, fuzzy
msgid ""
"Returns the logarithm of *x* to the given *base*. If the *base* is not "
"specified, returns the natural logarithm of *x*. There is one branch cut, "
"from 0 along the negative real axis to -∞."
msgstr ""
"回傳 *x* 到給定 *base* 的對數。如果未指定 *base*，則回傳 *x* 的自然對數。有一"
"個分支切割，從 0 沿負實軸到 -∞。"

#: ../../library/cmath.rst:114
#, fuzzy
msgid ""
"Return the base-10 logarithm of *x*. This has the same branch cut as :func:"
"`log`."
msgstr "回傳 *x* 的以 10 為底的對數。這與 :func:`log` 有相同的分支。"

#: ../../library/cmath.rst:120
#, fuzzy
msgid ""
"Return the square root of *x*. This has the same branch cut as :func:`log`."
msgstr "回傳 *x* 的平方根。這與 :func:`log` 有相同的分支。"

#: ../../library/cmath.rst:124
#, fuzzy
msgid "Trigonometric functions"
msgstr "三角函式"

#: ../../library/cmath.rst:128
#, fuzzy
msgid ""
"Return the arc cosine of *x*. There are two branch cuts: One extends right "
"from 1 along the real axis to ∞. The other extends left from -1 along the "
"real axis to -∞."
msgstr ""
"回傳 *x* 的反餘弦值。有兩種分支切割：一種是從 1 沿實軸向右延伸到 ∞。另一個沿"
"實軸從-1向左延伸到-∞。"

#: ../../library/cmath.rst:135
#, fuzzy
msgid ""
"Return the arc sine of *x*. This has the same branch cuts as :func:`acos`."
msgstr "回傳 *x* 的反正弦值。這與 :func:`acos` 有相同的分支。"

#: ../../library/cmath.rst:140
#, fuzzy
msgid ""
"Return the arc tangent of *x*. There are two branch cuts: One extends from "
"``1j`` along the imaginary axis to ``∞j``. The other extends from ``-1j`` "
"along the imaginary axis to ``-∞j``."
msgstr ""
"回傳 *x* 的反正切值。有兩個分支切割：一個從 ``1j`` 沿虛軸延伸到 ``∞j``。另一"
"個沿著虛軸從``-1j``延伸到``-∞j``。"

#: ../../library/cmath.rst:147
#, fuzzy
msgid "Return the cosine of *x*."
msgstr "回傳 *x* 的餘弦值。"

#: ../../library/cmath.rst:152
#, fuzzy
msgid "Return the sine of *x*."
msgstr "回傳 *x* 的正弦值。"

#: ../../library/cmath.rst:157
#, fuzzy
msgid "Return the tangent of *x*."
msgstr "回傳 *x* 的正切值。"

#: ../../library/cmath.rst:161
#, fuzzy
msgid "Hyperbolic functions"
msgstr "雙曲函式"

#: ../../library/cmath.rst:165
#, fuzzy
msgid ""
"Return the inverse hyperbolic cosine of *x*. There is one branch cut, "
"extending left from 1 along the real axis to -∞."
msgstr "回傳 *x* 的反雙曲餘弦值。有一個分支切割，從 1 沿實軸向左延伸到 -∞。"

#: ../../library/cmath.rst:171
#, fuzzy
msgid ""
"Return the inverse hyperbolic sine of *x*. There are two branch cuts: One "
"extends from ``1j`` along the imaginary axis to ``∞j``.  The other extends "
"from ``-1j`` along the imaginary axis to ``-∞j``."
msgstr ""
"回傳 *x* 的反雙曲正弦值。有兩個分支切割：一個從 ``1j`` 沿虛軸延伸到 ``∞j``。"
"另一個沿著虛軸從``-1j``延伸到``-∞j``。"

#: ../../library/cmath.rst:178
#, fuzzy
msgid ""
"Return the inverse hyperbolic tangent of *x*. There are two branch cuts: One "
"extends from ``1`` along the real axis to ``∞``. The other extends from "
"``-1`` along the real axis to ``-∞``."
msgstr ""
"回傳 *x* 的反雙曲正切值。有兩個分支切割：一個從 ``1`` 沿實軸延伸到 ``∞``。另"
"一個沿實軸從 ``-1``延伸到“-∞”。"

#: ../../library/cmath.rst:185
#, fuzzy
msgid "Return the hyperbolic cosine of *x*."
msgstr "回傳 *x* 的雙曲餘弦值。"

#: ../../library/cmath.rst:190
#, fuzzy
msgid "Return the hyperbolic sine of *x*."
msgstr "回傳 *x* 的雙曲正弦值。"

#: ../../library/cmath.rst:195
#, fuzzy
msgid "Return the hyperbolic tangent of *x*."
msgstr "回傳 *x* 的雙曲正切值。"

#: ../../library/cmath.rst:199
#, fuzzy
msgid "Classification functions"
msgstr "分類功能"

#: ../../library/cmath.rst:203
#, fuzzy
msgid ""
"Return ``True`` if both the real and imaginary parts of *x* are finite, and "
"``False`` otherwise."
msgstr "如果 *x* 的實部和虛部都是有限的，則回傳 ``True``，否則回傳 ``False``。"

#: ../../library/cmath.rst:211
#, fuzzy
msgid ""
"Return ``True`` if either the real or the imaginary part of *x* is an "
"infinity, and ``False`` otherwise."
msgstr "如果 *x* 的實部或虛部是無窮大，則回傳 ``True``，否則回傳 ``False``。"

#: ../../library/cmath.rst:217
#, fuzzy
msgid ""
"Return ``True`` if either the real or the imaginary part of *x* is a NaN, "
"and ``False`` otherwise."
msgstr "如果 *x* 的實部或虛部是 NaN，則回傳 ``True``，否則回傳 ``False``。"

#: ../../library/cmath.rst:223
#, fuzzy
msgid ""
"Return ``True`` if the values *a* and *b* are close to each other and "
"``False`` otherwise."
msgstr "如果值 *a* 和 *b* 彼此接近，則回傳 ``True``，否則回傳 ``False``。"

#: ../../library/cmath.rst:226
#, fuzzy
msgid ""
"Whether or not two values are considered close is determined according to "
"given absolute and relative tolerances."
msgstr "兩個值是否接近取決於給定的絕對和相對公差。"

#: ../../library/cmath.rst:229
#, fuzzy
msgid ""
"*rel_tol* is the relative tolerance -- it is the maximum allowed difference "
"between *a* and *b*, relative to the larger absolute value of *a* or *b*. "
"For example, to set a tolerance of 5%, pass ``rel_tol=0.05``.  The default "
"tolerance is ``1e-09``, which assures that the two values are the same "
"within about 9 decimal digits.  *rel_tol* must be greater than zero."
msgstr ""
"*rel_tol* 是相對公差——它是 *a* 和 *b* 之間的最大允許差異，相對於 *a* 或 *b* "
"的較大絕對值。例如，要設定 5% 的公差，請傳遞 ``rel_tol=0.05``。預設公差為 "
"``1e-09``，它確保兩個值在大約 9 個小數位內相同。 *rel_tol* 必須大於零。"

#: ../../library/cmath.rst:235
#, fuzzy
msgid ""
"*abs_tol* is the minimum absolute tolerance -- useful for comparisons near "
"zero. *abs_tol* must be at least zero."
msgstr ""
"*abs_tol* 是最小絕對公差——對接近零的比較很有用。 *abs_tol* 必須至少為零。"

#: ../../library/cmath.rst:238
#, fuzzy
msgid ""
"If no errors occur, the result will be: ``abs(a-b) <= max(rel_tol * "
"max(abs(a), abs(b)), abs_tol)``."
msgstr ""
"如果沒有錯誤發生，結果將是：``abs(a-b) <= max(rel_tol * max(abs(a), abs(b)), "
"abs_tol)``。"

#: ../../library/cmath.rst:241
#, fuzzy
msgid ""
"The IEEE 754 special values of ``NaN``, ``inf``, and ``-inf`` will be "
"handled according to IEEE rules.  Specifically, ``NaN`` is not considered "
"close to any other value, including ``NaN``.  ``inf`` and ``-inf`` are only "
"considered close to themselves."
msgstr ""
"``NaN``、``inf`` 和 ``-inf`` 的 IEEE 754 特殊值將根據 IEEE 規則進行處理。具體"
"來說，``NaN`` 不被認為接近任何其他值，包括 ``NaN``。 ``inf`` 和 ``-inf`` 只被"
"認為接近它們自己。"

#: ../../library/cmath.rst:250
#, fuzzy
msgid ":pep:`485` -- A function for testing approximate equality"
msgstr ":pep:`485` -- 測試近似相等的函式"

#: ../../library/cmath.rst:254
msgid "Constants"
msgstr "常數"

#: ../../library/cmath.rst:258
#, fuzzy
msgid "The mathematical constant *π*, as a float."
msgstr "數學常數 *π*，作為浮點數。"

#: ../../library/cmath.rst:263
#, fuzzy
msgid "The mathematical constant *e*, as a float."
msgstr "數學常數 *e*，作為浮點數。"

#: ../../library/cmath.rst:268
#, fuzzy
msgid "The mathematical constant *τ*, as a float."
msgstr "數學常數 *τ*，作為浮點數。"

#: ../../library/cmath.rst:275
#, fuzzy
msgid "Floating-point positive infinity. Equivalent to ``float('inf')``."
msgstr "浮點正無窮大。相當於``float('inf')``。"

#: ../../library/cmath.rst:282
#, fuzzy
msgid ""
"Complex number with zero real part and positive infinity imaginary part. "
"Equivalent to ``complex(0.0, float('inf'))``."
msgstr "具有零實部和正無窮大虛部的複數。相當於``複雜（0.0，浮動（'inf'））``。"

#: ../../library/cmath.rst:290
#, fuzzy
msgid ""
"A floating-point \"not a number\" (NaN) value.  Equivalent to "
"``float('nan')``."
msgstr "浮點“非數字”(NaN) 值。相當於``float('nan')``。"

#: ../../library/cmath.rst:298
#, fuzzy
msgid ""
"Complex number with zero real part and NaN imaginary part. Equivalent to "
"``complex(0.0, float('nan'))``."
msgstr "具有零實部和 NaN 虛部的複數。相當於``複雜（0.0，浮動（'nan'））``。"

#: ../../library/cmath.rst:306
#, fuzzy
msgid ""
"Note that the selection of functions is similar, but not identical, to that "
"in module :mod:`math`.  The reason for having two modules is that some users "
"aren't interested in complex numbers, and perhaps don't even know what they "
"are.  They would rather have ``math.sqrt(-1)`` raise an exception than "
"return a complex number. Also note that the functions defined in :mod:"
"`cmath` always return a complex number, even if the answer can be expressed "
"as a real number (in which case the complex number has an imaginary part of "
"zero)."
msgstr ""
"請注意，函式的選擇與模組 :mod:`math` 中的函式選擇類似，但不完全相同。有兩個模"
"組的原因是有些使用者對複數不感興趣，甚至可能不知道複數是什麼。他們寧願讓 "
"``math.sqrt(-1)`` 拋出一個例外，也不願回傳一個複數。另請注意，在 :mod:"
"`cmath` 中定義的函式總是回傳一個複數，即使答案可以表示為實數（在這種情況下，"
"複數的虛部為零）。"

#: ../../library/cmath.rst:314
#, fuzzy
msgid ""
"A note on branch cuts: They are curves along which the given function fails "
"to be continuous.  They are a necessary feature of many complex functions.  "
"It is assumed that if you need to compute with complex functions, you will "
"understand about branch cuts.  Consult almost any (not too elementary) book "
"on complex variables for enlightenment.  For information of the proper "
"choice of branch cuts for numerical purposes, a good reference should be the "
"following:"
msgstr ""
"關於分支切割的註釋：它們是給定函式無法連續的曲線。它們是許多複雜功能的必要特"
"徵。假定如果您需要使用複雜函式進行計算，您將了解分支切割。查閱幾乎所有（不太"
"初級的）關於復數變數的書籍以獲取啟發。有關為數值目的正確選擇分支切割的資訊，"
"一個很好的參考應該是以下內容："

#: ../../library/cmath.rst:324
#, fuzzy
msgid ""
"Kahan, W:  Branch cuts for complex elementary functions; or, Much ado about "
"nothing's sign bit.  In Iserles, A., and Powell, M. (eds.), The state of the "
"art in numerical analysis. Clarendon Press (1987) pp165--211."
msgstr ""
"Kahan, W：複雜初等函式的分支切割；或者，無事生非的符號位。在 Iserles, A. 和 "
"Powell, M.（編輯），數值分析的最新技術水平。克拉倫登出版社 (1987) "
"pp165--211。"
