# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-30 00:15+0000\n"
"PO-Revision-Date: 2015-12-09 17:51+0000\n"
"Last-Translator: Liang-Bo Wang <me@liang2.tw>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/pydoc.rst:2
msgid ":mod:`pydoc` --- Documentation generator and online help system"
msgstr ":mod:`pydoc` --- 說明文件產生器和線上幫助系統"

#: ../../library/pydoc.rst:10
msgid "**Source code:** :source:`Lib/pydoc.py`"
msgstr "**原始碼：**\\ :source:`Lib/pydoc.py`"

#: ../../library/pydoc.rst:19
#, fuzzy
msgid ""
"The :mod:`pydoc` module automatically generates documentation from Python "
"modules.  The documentation can be presented as pages of text on the "
"console, served to a web browser, or saved to HTML files."
msgstr ""
":mod:`pydoc` 模組自動從 Python "
"模組生成文檔。文檔可以在控制台上顯示為文本頁面，提供給 Web 瀏覽器，或保存為 "
"HTML 文件。"

#: ../../library/pydoc.rst:23
#, fuzzy
msgid ""
"For modules, classes, functions and methods, the displayed documentation is "
"derived from the docstring (i.e. the :attr:`__doc__` attribute) of the "
"object, and recursively of its documentable members.  If there is no "
"docstring, :mod:`pydoc` tries to obtain a description from the block of "
"comment lines just above the definition of the class, function or method in "
"the source file, or at the top of the module (see :func:`inspect."
"getcomments`)."
msgstr ""
"對於模組、類、函式和方法，顯示的文檔是從物件的文檔字串（即 :attr:`__doc__` "
"屬性）派生的，並遞迴地從其可記錄的成員中派生。如果沒有文檔字串，:mod:`pydoc` "
"會嘗試從源文件中類、函式或方法的定義上方或模組頂部的註釋行塊中獲取描述（參見 "
":func :`inspect.getcomments`)."

#: ../../library/pydoc.rst:30
#, fuzzy
msgid ""
"The built-in function :func:`help` invokes the online help system in the "
"interactive interpreter, which uses :mod:`pydoc` to generate its "
"documentation as text on the console.  The same text documentation can also "
"be viewed from outside the Python interpreter by running :program:`pydoc` as "
"a script at the operating system's command prompt. For example, running ::"
msgstr ""
"內建函式 :func:`help` 呼叫交互式直譯器中的在線幫助系統，它使用 :mod:`pydoc` "
"將其文檔生成為控制台上的文本。通過在操作系統的命令提示符下將 :program:`pydoc`"
" 作為腳本運行，也可以從 Python 直譯器外部查看相同的文本文檔。例如，運行 ::"

#: ../../library/pydoc.rst:38
#, fuzzy
msgid ""
"at a shell prompt will display documentation on the :mod:`sys` module, in a "
"style similar to the manual pages shown by the Unix :program:`man` command.  "
"The argument to :program:`pydoc` can be the name of a function, module, or "
"package, or a dotted reference to a class, method, or function within a "
"module or module in a package.  If the argument to :program:`pydoc` looks "
"like a path (that is, it contains the path separator for your operating "
"system, such as a slash in Unix), and refers to an existing Python source "
"file, then documentation is produced for that file."
msgstr ""
"在 shell 提示符下將顯示有關 :mod:`sys` 模組的文檔，其樣式類似於 Unix "
":program:`man` 命令顯示的手冊頁。 :program:`pydoc` 的參數可以是函式、模組或包"
"的名稱，或者是對模組或包中模組內的類、方法或函式的點引用。如果 "
":program:`pydoc` "
"的參數看起來像一個路徑（也就是說，它包含您的操作系統的路徑分隔符，例如 Unix "
"中的斜杠），並且引用現有的 Python 源文件，那麼會生成文檔那個文件。"

#: ../../library/pydoc.rst:49
#, fuzzy
msgid ""
"In order to find objects and their documentation, :mod:`pydoc` imports the "
"module(s) to be documented.  Therefore, any code on module level will be "
"executed on that occasion.  Use an ``if __name__ == '__main__':`` guard to "
"only execute code when a file is invoked as a script and not just imported."
msgstr ""
"為了查找物件及其文檔，:mod:`pydoc` "
"導入要記錄的模組。因此，模組級別的任何程式碼都將在那個時候執行。使用 ``if "
"__name__ == '__main__':`` "
"守衛只在文件作為腳本呼叫時才執行程式碼，而不僅僅是導入。"

#: ../../library/pydoc.rst:54
#, fuzzy
msgid ""
"When printing output to the console, :program:`pydoc` attempts to paginate "
"the output for easier reading.  If the :envvar:`PAGER` environment variable "
"is set, :program:`pydoc` will use its value as a pagination program."
msgstr ""
"將輸出印出到控制台時，:program:`pydoc` 嘗試對輸出進行分頁以便於閱讀。"
"如果設定了 :envvar:`PAGER` 環境變數，:program:`pydoc` "
"將使用它的值作為分頁程式。"

#: ../../library/pydoc.rst:58
#, fuzzy
msgid ""
"Specifying a ``-w`` flag before the argument will cause HTML documentation "
"to be written out to a file in the current directory, instead of displaying "
"text on the console."
msgstr "在參數前指定一個 ``-w``旗標將導致 HTML "
"文檔被寫到當前目錄中的一個文件中，而不是在控制台上顯示文本。"

#: ../../library/pydoc.rst:62
#, fuzzy
msgid ""
"Specifying a ``-k`` flag before the argument will search the synopsis lines "
"of all available modules for the keyword given as the argument, again in a "
"manner similar to the Unix :program:`man` command.  The synopsis line of a "
"module is the first line of its documentation string."
msgstr ""
"在參數前指定一個 ``-k`` "
"旗標將在所有可用模組的概要行中搜索作為參數給定的關鍵字，同樣以類似於 "
"Unix :program:`man` 命令的方式。模組的概要行是其文檔字串的第一行。"

#: ../../library/pydoc.rst:67
#, fuzzy
msgid ""
"You can also use :program:`pydoc` to start an HTTP server on the local "
"machine that will serve documentation to visiting web browsers.  :program:"
"`python -m pydoc -p 1234` will start a HTTP server on port 1234, allowing "
"you to browse the documentation at ``http://localhost:1234/`` in your "
"preferred web browser. Specifying ``0`` as the port number will select an "
"arbitrary unused port."
msgstr ""
"您還可以使用 :program:`pydoc` 在本地機器上啟動一個 HTTP 伺服器，"
"該伺服器將為訪問的 Web 瀏覽器提供文檔。 :program:`python -m pydoc -p 1234` "
"將在端口 1234 上啟動一個 HTTP 伺服器，允許您在首選的 Web 瀏覽器中瀏覽位於 "
"``http://localhost:1234/`` 的文檔。指定 ``0`` "
"作為端口號將選擇任意未使用的端口。"

#: ../../library/pydoc.rst:73
#, fuzzy
msgid ""
":program:`python -m pydoc -n <hostname>` will start the server listening at "
"the given hostname.  By default the hostname is 'localhost' but if you want "
"the server to be reached from other machines, you may want to change the "
"host name that the server responds to.  During development this is "
"especially useful if you want to run pydoc from within a container."
msgstr ""
":program:`python -m pydoc -n <hostname>` 將啟動伺服器監聽給定的主機名。預設情"
"況下，主機名是 ``localhost`` ，但如果您希望從其他機器訪問伺服器，您可能需要更改服"
"務器響應的主機名。在開發過程中，如果您想從容器中運行 pydoc，這將特別有用。"

#: ../../library/pydoc.rst:79
#, fuzzy
msgid ""
":program:`python -m pydoc -b` will start the server and additionally open a "
"web browser to a module index page.  Each served page has a navigation bar "
"at the top where you can *Get* help on an individual item, *Search* all "
"modules with a keyword in their synopsis line, and go to the *Module index*, "
"*Topics* and *Keywords* pages."
msgstr ""
":program:`python -m pydoc -b` 將啟動伺服器並另外打開網絡瀏覽器到模組索引頁面"
"。每個服務頁面的頂部都有一個導航欄，您可以在其中*獲取*單個項目的幫助，*搜索*"
"所有模組的概要行中的關鍵字，然後轉到*模組索引*、*主題*和*關鍵字* 頁。"

#: ../../library/pydoc.rst:85
#, fuzzy
msgid ""
"When :program:`pydoc` generates documentation, it uses the current "
"environment and path to locate modules.  Thus, invoking :program:`pydoc "
"spam` documents precisely the version of the module you would get if you "
"started the Python interpreter and typed ``import spam``."
msgstr ""
"當 :program:`pydoc` 生成文檔時，它使用當前環境和路徑來定位模組。因此，"
"如果您啟動 Python 直譯器並鍵入 ``import spam``，呼叫 :program:`pydoc spam` "
"會準確記錄您將獲得的模組版本。"

#: ../../library/pydoc.rst:90
#, fuzzy
msgid ""
"Module docs for core modules are assumed to reside in ``https://docs.python."
"org/X.Y/library/`` where ``X`` and ``Y`` are the major and minor version "
"numbers of the Python interpreter.  This can be overridden by setting the :"
"envvar:`PYTHONDOCS` environment variable to a different URL or to a local "
"directory containing the Library Reference Manual pages."
msgstr ""
"假定核心模組的模組文檔位於 ``https://docs.python.org/X.Y/library/``，其中 "
"``X`` 和 ``Y`` 是 Python 的主要和次要版本號口譯員。這可以通過將 PYTHONDOCS "
"環境變數設定為不同的 URL 或包含庫參考手冊頁面的本地目錄來覆蓋。"

#: ../../library/pydoc.rst:97
msgid "Added the ``-b`` option."
msgstr "新增 ``-b`` 選項。"

#: ../../library/pydoc.rst:100
#, fuzzy
msgid "The ``-g`` command line option was removed."
msgstr "``-g`` 命令列選項被刪除。"

#: ../../library/pydoc.rst:103
#, fuzzy
msgid ""
":mod:`pydoc` now uses :func:`inspect.signature` rather than :func:`inspect."
"getfullargspec` to extract signature information from callables."
msgstr ""
":mod:`pydoc` 現在使用 :func:`inspect.signature` 而不是 :func:`inspect."
"getfullargspec` 從可呼叫文件中提取簽名資訊。"

#: ../../library/pydoc.rst:108
msgid "Added the ``-n`` option."
msgstr "新增 ``-n`` 選項。"
