# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-24 00:16+0000\n"
"PO-Revision-Date: 2017-09-22 18:26+0000\n"
"Last-Translator: Liang-Bo Wang <me@liang2.tw>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/fcntl.rst:2
msgid ":mod:`fcntl` --- The ``fcntl`` and ``ioctl`` system calls"
msgstr ":mod:`fcntl` --- ``fcntl`` 和 ``ioctl`` 系統呼叫"

#: ../../library/fcntl.rst:16
#, fuzzy
msgid ""
"This module performs file control and I/O control on file descriptors. It is "
"an interface to the :c:func:`fcntl` and :c:func:`ioctl` Unix routines.  For "
"a complete description of these calls, see :manpage:`fcntl(2)` and :manpage:"
"`ioctl(2)` Unix manual pages."
msgstr ""
"該模組對文件描述器執行文件控制和 I/O 控制。它是 :c:func:`fcntl` 和 "
":c:func:`ioctl` Unix 例程的介面。有關這些呼叫的完整說明，請參閱 "
":manpage:`fcntl(2)` 和 :manpage:`ioctl(2)` Unix 手冊頁。"

#: ../../includes/wasm-notavail.rst:3
#, fuzzy
msgid ":ref:`Availability <availability>`: not Emscripten, not WASI."
msgstr ":ref:`Availability <availability>`：不是 Emscripten，不是 WASI。"

#: ../../includes/wasm-notavail.rst:5
#, fuzzy
msgid ""
"This module does not work or is not available on WebAssembly platforms "
"``wasm32-emscripten`` and ``wasm32-wasi``. See :ref:`wasm-availability` for "
"more information."
msgstr ""
"此模組在 WebAssembly 平台 ``wasm32-emscripten`` 和 ``wasm32-wasi`` 上不起作用或不可用"
"。有關更多資訊，請參閱 :ref:`wasm-availability`。"

#: ../../library/fcntl.rst:23
#, fuzzy
msgid ""
"All functions in this module take a file descriptor *fd* as their first "
"argument.  This can be an integer file descriptor, such as returned by ``sys."
"stdin.fileno()``, or an :class:`io.IOBase` object, such as ``sys.stdin`` "
"itself, which provides a :meth:`~io.IOBase.fileno` that returns a genuine "
"file descriptor."
msgstr ""
"該模組中的所有函式都將文件描述器 *fd* "
"作為它們的第一個參數。這可以是一個整數文件描述器，例如由 sys.stdin.fileno() "
"回傳，或者 io.IOBase 物件，例如 sys.stdin 本身，它提供了一個 :meth:`~io.IOBase"
".fileno` 回傳一個真正的文件描述器。"

#: ../../library/fcntl.rst:29
#, fuzzy
msgid ""
"Operations in this module used to raise an :exc:`IOError` where they now "
"raise an :exc:`OSError`."
msgstr "此模組中的操作過去常常引發 :exc:`IOError`，現在它們引發 :exc:`OSError`。"

#: ../../library/fcntl.rst:33
#, fuzzy
msgid ""
"The fcntl module now contains ``F_ADD_SEALS``, ``F_GET_SEALS``, and "
"``F_SEAL_*`` constants for sealing of :func:`os.memfd_create` file "
"descriptors."
msgstr ""
"fcntl 模組現在包含用於密封 os.memfd_create "
"文件描述器的“F_ADD_SEALS”、“F_GET_SEALS”和“F_SEAL_*”常數。"

#: ../../library/fcntl.rst:38
#, fuzzy
msgid ""
"On macOS, the fcntl module exposes the ``F_GETPATH`` constant, which obtains "
"the path of a file from a file descriptor. On Linux(>=3.15), the fcntl "
"module exposes the ``F_OFD_GETLK``, ``F_OFD_SETLK`` and ``F_OFD_SETLKW`` "
"constants, which are used when working with open file description locks."
msgstr ""
"在 macOS 上，fcntl "
"模組公開了“F_GETPATH”常數，它從文件描述器中獲取文件的路徑。在 Linux（>=3."
"15）上，fcntl 模組公開了``F_OFD_GETLK``、``F_OFD_SETLK`` 和``F_OFD_SETLKW`` "
"常數，這些常數在處理打開的文件描述鎖時使用。"

#: ../../library/fcntl.rst:45
#, fuzzy
msgid ""
"On Linux >= 2.6.11, the fcntl module exposes the ``F_GETPIPE_SZ`` and "
"``F_SETPIPE_SZ`` constants, which allow to check and modify a pipe's size "
"respectively."
msgstr ""
"在 Linux >= 2.6.11 上，fcntl 模組公開了``F_GETPIPE_SZ`` 和``F_SETPIPE_SZ`` "
"常數，它們允許分別檢查和修改管道的大小。"

#: ../../library/fcntl.rst:50
#, fuzzy
msgid ""
"On FreeBSD, the fcntl module exposes the ``F_DUP2FD`` and "
"``F_DUP2FD_CLOEXEC`` constants, which allow to duplicate a file descriptor, "
"the latter setting ``FD_CLOEXEC`` flag in addition."
msgstr ""
"在 FreeBSD 上，fcntl 模組公開了``F_DUP2FD`` 和``F_DUP2FD_CLOEXEC`` "
"常數，它們允許複製文件描述器，後者另外設定``FD_CLOEXEC`` 旗標。"

#: ../../library/fcntl.rst:55
#, fuzzy
msgid "The module defines the following functions:"
msgstr "該模組定義了以下功能："

#: ../../library/fcntl.rst:60
#, fuzzy
msgid ""
"Perform the operation *cmd* on file descriptor *fd* (file objects providing "
"a :meth:`~io.IOBase.fileno` method are accepted as well).  The values used "
"for *cmd* are operating system dependent, and are available as constants in "
"the :mod:`fcntl` module, using the same names as used in the relevant C "
"header files. The argument *arg* can either be an integer value, or a :class:"
"`bytes` object. With an integer value, the return value of this function is "
"the integer return value of the C :c:func:`fcntl` call.  When the argument "
"is bytes it represents a binary structure, e.g. created by :func:`struct."
"pack`. The binary data is copied to a buffer whose address is passed to the "
"C :c:func:`fcntl` call.  The return value after a successful call is the "
"contents of the buffer, converted to a :class:`bytes` object. The length of "
"the returned object will be the same as the length of the *arg* argument. "
"This is limited to 1024 bytes. If the information returned in the buffer by "
"the operating system is larger than 1024 bytes, this is most likely to "
"result in a segmentation violation or a more subtle data corruption."
msgstr ""
"對文件描述器 *fd* 執行操作 *cmd*（也接受提供 :meth:`~io.IOBase.fileno` "
"方法的文件物件）。用於 *cmd* 的值取決於操作系統，並且在 :mod:`fcntl` "
"模組中作為常數使用，使用與相關 C 標頭檔中使用的名稱相同的名稱。參數 *arg* "
"可以是整數值，也可以是 :class:`bytes` 物件。對於整數值，此函式的回傳值是 "
"C:c:func:`fcntl` 呼叫的整數回傳值。當參數是 bytes 時，它表示二進位結構，"
"例如由 :func:`struct.pack` 建立。二進位資料被複製到緩衝區，"
"緩衝區的地址傳遞給 C:c:func:`fcntl` 呼叫。成功呼叫後的回傳值是緩衝區的內容，"
"轉換為 :class:`bytes` 物件。回傳物件的長度將與 *arg* 參數的長度相同。"
"這限制為 1024 位元組。如果操作系統在緩衝區中回傳的資訊大於 1024 "
"位元組，這很可能會導致分段違規或更微妙的資料損壞。"

#: ../../library/fcntl.rst:77
#, fuzzy
msgid "If the :c:func:`fcntl` fails, an :exc:`OSError` is raised."
msgstr "如果 :c:func:`fcntl` 失敗，則會引發 :exc:`OSError`。"

#: ../../library/fcntl.rst:90
msgid ""
"Raises an :ref:`auditing event <auditing>` ``fcntl.fcntl`` with arguments "
"``fd``, ``cmd``, ``arg``."
msgstr ""
"引發一個附帶引數 ``fd``、``cmd``、``arg`` 的\\ :ref:`稽核事件 <auditing>` ``fcntl.fcntl``。"

#: ../../library/fcntl.rst:84
#, fuzzy
msgid ""
"This function is identical to the :func:`~fcntl.fcntl` function, except that "
"the argument handling is even more complicated."
msgstr "此函式與 :func:`~fcntl.fcntl` 函式相同，只是參數處理更為複雜。"

#: ../../library/fcntl.rst:87
#, fuzzy
msgid ""
"The *request* parameter is limited to values that can fit in 32-bits. "
"Additional constants of interest for use as the *request* argument can be "
"found in the :mod:`termios` module, under the same names as used in the "
"relevant C header files."
msgstr ""
"*request* 參數僅限於適合 32 位的值。可以在 termios 模組中找到用作 *request* "
"參數的其他感興趣的常數，其名稱與相關 C 標頭檔中使用的名稱相同。"

#: ../../library/fcntl.rst:92
#, fuzzy
msgid ""
"The parameter *arg* can be one of an integer, an object supporting the read-"
"only buffer interface (like :class:`bytes`) or an object supporting the read-"
"write buffer interface (like :class:`bytearray`)."
msgstr ""
"參數 *arg* 可以是整數、支援只讀緩衝區介面的物件（如 :class:`bytes`）"
"或支持讀寫緩衝區介面的物件（如 :class:`bytearray`）之一。"

#: ../../library/fcntl.rst:96
#, fuzzy
msgid ""
"In all but the last case, behaviour is as for the :func:`~fcntl.fcntl` "
"function."
msgstr "在除最後一種情況之外的所有情況下，行為與 :func:`~fcntl.fcntl` 函式一樣。"

#: ../../library/fcntl.rst:99
#, fuzzy
msgid ""
"If a mutable buffer is passed, then the behaviour is determined by the value "
"of the *mutate_flag* parameter."
msgstr "如果傳遞了可變緩衝區，則行為由 *mutate_flag* 參數的值決定。"

#: ../../library/fcntl.rst:102
#, fuzzy
msgid ""
"If it is false, the buffer's mutability is ignored and behaviour is as for a "
"read-only buffer, except that the 1024 byte limit mentioned above is avoided "
"-- so long as the buffer you pass is at least as long as what the operating "
"system wants to put there, things should work."
msgstr ""
"如果為 false，緩衝區的可變性將被忽略，行為與只讀緩衝區相同，除了避免上述 "
"1024 "
"位元組限制——只要您傳遞的緩衝區至少與操作系統一樣長想放在那裡，東西應該工作。"

#: ../../library/fcntl.rst:107
#, fuzzy
msgid ""
"If *mutate_flag* is true (the default), then the buffer is (in effect) "
"passed to the underlying :func:`ioctl` system call, the latter's return code "
"is passed back to the calling Python, and the buffer's new contents reflect "
"the action of the :func:`ioctl`.  This is a slight simplification, because "
"if the supplied buffer is less than 1024 bytes long it is first copied into "
"a static buffer 1024 bytes long which is then passed to :func:`ioctl` and "
"copied back into the supplied buffer."
msgstr ""
"如果 *mutate_flag* 為 true（預設值），則緩衝區（實際上）傳遞給底層 "
":func:`ioctl` 系統呼叫，後者的回傳程式碼傳遞回呼叫 "
"Python，並且緩衝區的新內容反映 :func:`ioctl` 的動作。這是一個輕微的簡化，"
"因為如果提供的緩衝區小於 1024 位元組長，它首先被複製到一個 1024 "
"位元組長的靜態緩衝區中，然後傳遞給 :func:`ioctl` 並複制回提供的緩衝區。"

#: ../../library/fcntl.rst:115
#, fuzzy
msgid "If the :c:func:`ioctl` fails, an :exc:`OSError` exception is raised."
msgstr "如果 :c:func:`ioctl` 失敗，則會引發 :exc:`OSError` 例外。"

#: ../../library/fcntl.rst:117
msgid "An example::"
msgstr ""
"範例：\n"
"\n"
"::"

#: ../../library/fcntl.rst:141
msgid ""
"Raises an :ref:`auditing event <auditing>` ``fcntl.ioctl`` with arguments "
"``fd``, ``request``, ``arg``."
msgstr ""
"引發一個附帶引數 ``fd``、``request``、``arg`` 的\\ :ref:`稽核事件 <auditing>` ``fcntl.ioctl``。"

#: ../../library/fcntl.rst:135
#, fuzzy
msgid ""
"Perform the lock operation *operation* on file descriptor *fd* (file objects "
"providing a :meth:`~io.IOBase.fileno` method are accepted as well). See the "
"Unix manual :manpage:`flock(2)` for details.  (On some systems, this "
"function is emulated using :c:func:`fcntl`.)"
msgstr ""
"對文件描述器 *fd* 執行鎖定操作 *operation*（也接受提供 :meth:`~io.IOBase."
"fileno` 方法的文件物件）。有關詳細資訊，請參閱 Unix "
"手冊 :manpage:`flock(2)`。 （在某些系統上，此功能是使用 :c:func:`fcntl` "
"模擬的。）"

#: ../../library/fcntl.rst:140
#, fuzzy
msgid "If the :c:func:`flock` fails, an :exc:`OSError` exception is raised."
msgstr "如果 :c:func:`flock` 失敗，則會引發 :exc:`OSError` 例外。"

#: ../../library/fcntl.rst:153
msgid ""
"Raises an :ref:`auditing event <auditing>` ``fcntl.flock`` with arguments "
"``fd``, ``operation``."
msgstr ""
"引發一個附帶引數 ``fd``、``operation`` 的\\ :ref:`稽核事件 <auditing>` ``fcntl.flock``。"

#: ../../library/fcntl.rst:147
#, fuzzy
msgid ""
"This is essentially a wrapper around the :func:`~fcntl.fcntl` locking calls. "
"*fd* is the file descriptor (file objects providing a :meth:`~io.IOBase."
"fileno` method are accepted as well) of the file to lock or unlock, and "
"*cmd* is one of the following values:"
msgstr ""
"這本質上是 :func:`~fcntl.fcntl` 鎖定呼叫的包裝器。 *fd* "
"是要鎖定或解鎖的文件的文件描述器（也接受提供 :meth:`~io.IOBase.fileno` "
"方法的文件物件），*cmd* 是以下值之一："

#: ../../library/fcntl.rst:152
#, fuzzy
msgid ":const:`LOCK_UN` -- unlock"
msgstr ":const:`LOCK_UN` -- 解鎖"

#: ../../library/fcntl.rst:153
#, fuzzy
msgid ":const:`LOCK_SH` -- acquire a shared lock"
msgstr ":const:`LOCK_SH` -- 獲取共享鎖"

#: ../../library/fcntl.rst:154
#, fuzzy
msgid ":const:`LOCK_EX` -- acquire an exclusive lock"
msgstr ":const:`LOCK_EX` -- 獲取獨占鎖"

#: ../../library/fcntl.rst:156
#, fuzzy
msgid ""
"When *cmd* is :const:`LOCK_SH` or :const:`LOCK_EX`, it can also be bitwise "
"ORed with :const:`LOCK_NB` to avoid blocking on lock acquisition. If :const:"
"`LOCK_NB` is used and the lock cannot be acquired, an :exc:`OSError` will be "
"raised and the exception will have an *errno* attribute set to :const:"
"`EACCES` or :const:`EAGAIN` (depending on the operating system; for "
"portability, check for both values).  On at least some systems, :const:"
"`LOCK_EX` can only be used if the file descriptor refers to a file opened "
"for writing."
msgstr ""
"當 *cmd* 是 :const:`LOCK_SH` 或 :const:`LOCK_EX` 時，它也可以與 "
":const:`LOCK_NB` 進行按位或運算以避免在獲取鎖時阻塞。如果使用 "
":const:`LOCK_NB` 並且無法獲取鎖，則會引發 :exc:`OSError` 並且例外會將 *errno*"
" 屬性設定為 :const:`EACCES` 或 :const:`EAGAIN `（取決於操作系統；為了可移植性"
"，檢查兩個值）。至少在某些系統上，只有當文件描述器指向一個為寫入而打開的文件"
"時，才能使用 :const:`LOCK_EX`。"

#: ../../library/fcntl.rst:165
#, fuzzy
msgid ""
"*len* is the number of bytes to lock, *start* is the byte offset at which "
"the lock starts, relative to *whence*, and *whence* is as with :func:`io."
"IOBase.seek`, specifically:"
msgstr ""
"*len* 是要鎖定的位元組數，*start* 是鎖定開始的位元組偏移量，相對於 "
"*whence*，*whence* 與 :func:`io.IOBase.seek` 一樣，具體來說："

#: ../../library/fcntl.rst:169
#, fuzzy
msgid ":const:`0` -- relative to the start of the file (:data:`os.SEEK_SET`)"
msgstr ":const:`0` -- 相對於文件的開頭 (:data:`os.SEEK_SET`)"

#: ../../library/fcntl.rst:170
#, fuzzy
msgid ""
":const:`1` -- relative to the current buffer position (:data:`os.SEEK_CUR`)"
msgstr ":const:`1` -- 相對於當前緩衝區位置 (:data:`os.SEEK_CUR`)"

#: ../../library/fcntl.rst:171
#, fuzzy
msgid ":const:`2` -- relative to the end of the file (:data:`os.SEEK_END`)"
msgstr ":const:`2` -- 相對於文件的末尾 (:data:`os.SEEK_END`)"

#: ../../library/fcntl.rst:173
#, fuzzy
msgid ""
"The default for *start* is 0, which means to start at the beginning of the "
"file. The default for *len* is 0 which means to lock to the end of the "
"file.  The default for *whence* is also 0."
msgstr ""
"*start* 的預設值為 0，這意味著從文件的開頭開始。 *len* 的預設值為 "
"0，這意味著鎖定到文件末尾。 *whence* 的預設值也是 0。"

#: ../../library/fcntl.rst:188
msgid ""
"Raises an :ref:`auditing event <auditing>` ``fcntl.lockf`` with arguments "
"``fd``, ``cmd``, ``len``, ``start``, ``whence``."
msgstr ""
"引發一個附帶引數 ``fd``、``cmd``、``len``、``start``、``whence`` 的\\ :ref:`稽核事件 <auditing>` ``fcntl.lockf``。"

#: ../../library/fcntl.rst:179
#, fuzzy
msgid "Examples (all on a SVR4 compliant system)::"
msgstr "示例（全部在 SVR4 相容系統上）："

#: ../../library/fcntl.rst:189
#, fuzzy
msgid ""
"Note that in the first example the return value variable *rv* will hold an "
"integer value; in the second example it will hold a :class:`bytes` object.  "
"The structure lay-out for the *lockdata* variable is system dependent --- "
"therefore using the :func:`flock` call may be better."
msgstr ""
"請注意，在第一個示例中，回傳值變數 *rv* "
"將保存一個整數值；在第二個例子中，它將包含一個 :class:`bytes` 物件。 "
"*lockdata* 變數的結構佈局是系統相關的——因此使用 :func:`flock` 呼叫可能更好。"

#: ../../library/fcntl.rst:200
msgid "Module :mod:`os`"
msgstr ":mod:`os` 模組"

#: ../../library/fcntl.rst:198
#, fuzzy
msgid ""
"If the locking flags :data:`~os.O_SHLOCK` and :data:`~os.O_EXLOCK` are "
"present in the :mod:`os` module (on BSD only), the :func:`os.open` function "
"provides an alternative to the :func:`lockf` and :func:`flock` functions."
msgstr ""
"如果鎖定旗標 :data:`~os.O_SHLOCK` 和 :data:`~os.O_EXLOCK` 存在於 :mod:`os` "
"模組中（僅在 BSD 上），則 :func:`os.open` 函式提供了 :func:`lockf` 和 "
":func:`flock` 函式的替代方法。"
