# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-15 20:43+0000\n"
"PO-Revision-Date: 2018-05-23 16:11+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/string.rst:2
msgid ":mod:`string` --- Common string operations"
msgstr ":mod:`string` --- 常用的字串操作"

#: ../../library/string.rst:7
msgid "**Source code:** :source:`Lib/string.py`"
msgstr "**原始碼：**\\ :source:`Lib/string.py`"

#: ../../library/string.rst:14
msgid ":ref:`textseq`"
msgstr ":ref:`textseq`"

#: ../../library/string.rst:16
msgid ":ref:`string-methods`"
msgstr ":ref:`string-methods`"

#: ../../library/string.rst:19
msgid "String constants"
msgstr "字串常數"

#: ../../library/string.rst:21
msgid "The constants defined in this module are:"
msgstr "該模組中定義的常數是："

#: ../../library/string.rst:26
#, fuzzy
msgid ""
"The concatenation of the :const:`ascii_lowercase` and :const:"
"`ascii_uppercase` constants described below.  This value is not locale-"
"dependent."
msgstr "const:`ascii_lowercase` 和 :const:`ascii_uppercase` "
"常數的連接如下所述。該值與語言環境無關。"

#: ../../library/string.rst:32
#, fuzzy
msgid ""
"The lowercase letters ``'abcdefghijklmnopqrstuvwxyz'``.  This value is not "
"locale-dependent and will not change."
msgstr "小寫字母 ``abcdefghijklmnopqrstuvwxyz``。該值與語言環境無關，不會更改。"

#: ../../library/string.rst:38
#, fuzzy
msgid ""
"The uppercase letters ``'ABCDEFGHIJKLMNOPQRSTUVWXYZ'``.  This value is not "
"locale-dependent and will not change."
msgstr "大寫字母 ``'ABCDEFGHIJKLMNOPQRSTUVWXYZ'``。該值與語言環境無關，不會更改。"

#: ../../library/string.rst:44
msgid "The string ``'0123456789'``."
msgstr "字串 ``'0123456789'``。"

#: ../../library/string.rst:49
msgid "The string ``'0123456789abcdefABCDEF'``."
msgstr "字串 ``0123456789abcdefABCDEF`` 。"

#: ../../library/string.rst:54
msgid "The string ``'01234567'``."
msgstr "字串 ``'01234567'``。"

#: ../../library/string.rst:59
#, fuzzy
msgid ""
"String of ASCII characters which are considered punctuation characters in "
"the ``C`` locale: ``!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~``."
msgstr ""
"在 ``C`` 語言環境中被視為標點符號的 ASCII 字元字串：``!\"#$%&\\"
"'()*+,-./:;<=>?@[\\]^_`{| }~``。"

#: ../../library/string.rst:64
#, fuzzy
msgid ""
"String of ASCII characters which are considered printable.  This is a "
"combination of :const:`digits`, :const:`ascii_letters`, :const:"
"`punctuation`, and :const:`whitespace`."
msgstr ""
"被認為是可印出的 ASCII 字元的字串。這是 "
":const:`digits`、:const:`ascii_letters`、:const:`punctuation` 和 "
":const:`whitespace` 的組合。"

#: ../../library/string.rst:71
#, fuzzy
msgid ""
"A string containing all ASCII characters that are considered whitespace. "
"This includes the characters space, tab, linefeed, return, formfeed, and "
"vertical tab."
msgstr "包含所有被視為空白的 ASCII "
"字元的字串。這包括字元空格、製表符、換行符、回車符、換頁符和垂直製表符。"

#: ../../library/string.rst:79
#, fuzzy
msgid "Custom String Formatting"
msgstr "自定義字串格式"

#: ../../library/string.rst:81
#, fuzzy
msgid ""
"The built-in string class provides the ability to do complex variable "
"substitutions and value formatting via the :meth:`~str.format` method "
"described in :pep:`3101`.  The :class:`Formatter` class in the :mod:`string` "
"module allows you to create and customize your own string formatting "
"behaviors using the same implementation as the built-in :meth:`~str.format` "
"method."
msgstr ""
"內建字串類提供了通過 :pep:`3101` 中描述的 :meth:`~str.format` "
"方法進行複雜變數替換和值格式化的能力。 :mod:`string` "
"模組中的 :class:`Formatter` 類允許您使用與內建 :meth:`~str.format` "
"方法相同的實作來建立和自定義您自己的字串格式化行為。"

#: ../../library/string.rst:90
#, fuzzy
msgid "The :class:`Formatter` class has the following public methods:"
msgstr ":class:`Formatter` 類具有以下公開方法："

#: ../../library/string.rst:94
#, fuzzy
msgid ""
"The primary API method.  It takes a format string and an arbitrary set of "
"positional and keyword arguments. It is just a wrapper that calls :meth:"
"`vformat`."
msgstr "主要的 API 方法。它採用格式字串和任意一組位置和關鍵字參數。它只是一個呼叫 "
":meth:`vformat` 的包裝器。"

#: ../../library/string.rst:98
#, fuzzy
msgid ""
"A format string argument is now :ref:`positional-only <positional-"
"only_parameter>`."
msgstr "格式字串參數現在是 :ref:`positional-only <positional-only_parameter>`。"

#: ../../library/string.rst:104
#, fuzzy
msgid ""
"This function does the actual work of formatting.  It is exposed as a "
"separate function for cases where you want to pass in a predefined "
"dictionary of arguments, rather than unpacking and repacking the dictionary "
"as individual arguments using the ``*args`` and ``**kwargs`` syntax.  :meth:"
"`vformat` does the work of breaking up the format string into character data "
"and replacement fields.  It calls the various methods described below."
msgstr ""
"此函式執行格式化的實際工作。對於您想要傳遞預定義參數字典的情況，它作為單獨的"
"函式公開，而不是使用“*args”和“**kwargs”語法將字典解包和重新打包為單獨的參數。"
" :meth:`vformat` "
"負責將格式字串分解為字元資料和替換欄位。它呼叫下面描述的各種方法。"

#: ../../library/string.rst:112
#, fuzzy
msgid ""
"In addition, the :class:`Formatter` defines a number of methods that are "
"intended to be replaced by subclasses:"
msgstr "此外，:class:`Formatter` 定義了一些旨在被子類別替換的方法："

#: ../../library/string.rst:117
#, fuzzy
msgid ""
"Loop over the format_string and return an iterable of tuples "
"(*literal_text*, *field_name*, *format_spec*, *conversion*).  This is used "
"by :meth:`vformat` to break the string into either literal text, or "
"replacement fields."
msgstr ""
"遍歷 format_string 並回傳可疊代的元組（*literal_text*、*field_name*、*format_"
"spec*、*conversion*）。 :meth:`vformat` "
"使用它來將字串分解為文字文本或替換欄位。"

#: ../../library/string.rst:122
#, fuzzy
msgid ""
"The values in the tuple conceptually represent a span of literal text "
"followed by a single replacement field.  If there is no literal text (which "
"can happen if two replacement fields occur consecutively), then "
"*literal_text* will be a zero-length string.  If there is no replacement "
"field, then the values of *field_name*, *format_spec* and *conversion* will "
"be ``None``."
msgstr ""
"元組中的值在概念上表示一段文字文本，後跟一個替換欄位。如果沒有文字文本（如果"
"兩個替換欄位連續出現就會發生這種情況），那麼 *literal_text* "
"將是一個零長度字串。如果沒有替換欄位，則 *field_name*、*format_spec* 和 "
"*conversion* 的值將為 ``None``。"

#: ../../library/string.rst:131
#, fuzzy
msgid ""
"Given *field_name* as returned by :meth:`parse` (see above), convert it to "
"an object to be formatted.  Returns a tuple (obj, used_key).  The default "
"version takes strings of the form defined in :pep:`3101`, such as "
"\"0[name]\" or \"label.title\".  *args* and *kwargs* are as passed in to :"
"meth:`vformat`.  The return value *used_key* has the same meaning as the "
"*key* parameter to :meth:`get_value`."
msgstr ""
"給定由 :meth:`parse` 回傳的 "
"*field_name*（見上文），將其轉換為要格式化的物件。回傳一個元組 (obj, "
"used_key)。預設版本採用 :pep:`3101` 中定義的形式的字串，例如“0[name]”或“label"
".title”。 *args* 和 *kwargs* 被傳遞給 :meth:`vformat`。回傳值 *used_key* 與 "
":meth:`get_value` 的 *key* 參數含義相同。"

#: ../../library/string.rst:140
#, fuzzy
msgid ""
"Retrieve a given field value.  The *key* argument will be either an integer "
"or a string.  If it is an integer, it represents the index of the positional "
"argument in *args*; if it is a string, then it represents a named argument "
"in *kwargs*."
msgstr ""
"檢索給定的欄位值。 *key* 參數可以是整數或字串。如果是整數，表示位置參數在*arg"
"s*中的索引；如果它是一個字串，那麼它代表 *kwargs* 中的一個命名參數。"

#: ../../library/string.rst:145
#, fuzzy
msgid ""
"The *args* parameter is set to the list of positional arguments to :meth:"
"`vformat`, and the *kwargs* parameter is set to the dictionary of keyword "
"arguments."
msgstr "*args* 參數設定為 :meth:`vformat` 的位置參數列表，*kwargs* "
"參數設定為關鍵字參數字典。"

#: ../../library/string.rst:149
#, fuzzy
msgid ""
"For compound field names, these functions are only called for the first "
"component of the field name; subsequent components are handled through "
"normal attribute and indexing operations."
msgstr "對於復合欄位名，僅針對欄位名的第一個組件呼叫這些函式；隨後的組件通過正常的屬"
"性和索引操作進行處理。"

#: ../../library/string.rst:153
#, fuzzy
msgid ""
"So for example, the field expression '0.name' would cause :meth:`get_value` "
"to be called with a *key* argument of 0.  The ``name`` attribute will be "
"looked up after :meth:`get_value` returns by calling the built-in :func:"
"`getattr` function."
msgstr ""
"因此，例如，欄位表達式“0.name”會導致 :meth:`get_value` 以 *key* 參數 0 "
"被呼叫。``name`` 屬性將在 :meth:`get_value` 之後被查找通過呼叫內建的 getattr "
"函式回傳。"

#: ../../library/string.rst:158
#, fuzzy
msgid ""
"If the index or keyword refers to an item that does not exist, then an :exc:"
"`IndexError` or :exc:`KeyError` should be raised."
msgstr "如果索引或關鍵字引用不存在的項目，則應引發 :exc:`IndexError` "
"或 :exc:`KeyError`。"

#: ../../library/string.rst:163
#, fuzzy
msgid ""
"Implement checking for unused arguments if desired.  The arguments to this "
"function is the set of all argument keys that were actually referred to in "
"the format string (integers for positional arguments, and strings for named "
"arguments), and a reference to the *args* and *kwargs* that was passed to "
"vformat.  The set of unused args can be calculated from these parameters.  :"
"meth:`check_unused_args` is assumed to raise an exception if the check fails."
msgstr ""
"如果需要，實施檢查未使用的參數。此函式的參數是格式字串中實際引用的所有參數鍵"
"的集合（位置參數為整數，命名參數為字串），以及對傳遞給的 *args* 和 *kwargs* "
"的引用格式。可以根據這些參數計算未使用的參數集。 :meth:`check_unused_args` "
"假定在檢查失敗時引發例外。"

#: ../../library/string.rst:173
#, fuzzy
msgid ""
":meth:`format_field` simply calls the global :func:`format` built-in.  The "
"method is provided so that subclasses can override it."
msgstr ":meth:`format_field` 只是呼叫全局的 :func:`format` "
"內建。提供該方法以便子類別可以覆蓋它。"

#: ../../library/string.rst:178
#, fuzzy
msgid ""
"Converts the value (returned by :meth:`get_field`) given a conversion type "
"(as in the tuple returned by the :meth:`parse` method).  The default version "
"understands 's' (str), 'r' (repr) and 'a' (ascii) conversion types."
msgstr ""
"轉換給定轉換型別的值（由 get_field 回傳）（如在 parse 方法回傳的元組中）。"
"預設版本理解 's' (str)、'r' (repr) 和 'a' (ascii) 轉換型別。"

#: ../../library/string.rst:187
#, fuzzy
msgid "Format String Syntax"
msgstr "格式化字串語法"

#: ../../library/string.rst:189
#, fuzzy
msgid ""
"The :meth:`str.format` method and the :class:`Formatter` class share the "
"same syntax for format strings (although in the case of :class:`Formatter`, "
"subclasses can define their own format string syntax).  The syntax is "
"related to that of :ref:`formatted string literals <f-strings>`, but it is "
"less sophisticated and, in particular, does not support arbitrary "
"expressions."
msgstr ""
":meth:`str.format` 方法和 :class:`Formatter` 類共享相同的格式字串語法（"
"儘管在 :class:`Formatter` 的情況下，子類別可以定義自己的格式字串語法）。"
"語法與 :ref:`格式化字串文字 <f-strings>` "
"的語法相關，但它不那麼複雜，特別是不支援任意表達式。"

#: ../../library/string.rst:202
#, fuzzy
msgid ""
"Format strings contain \"replacement fields\" surrounded by curly braces ``{}"
"``. Anything that is not contained in braces is considered literal text, "
"which is copied unchanged to the output.  If you need to include a brace "
"character in the literal text, it can be escaped by doubling: ``{{`` and ``}}"
"``."
msgstr ""
"格式字串包含由大括號“{}”包圍的“替換欄位”。大括號中未包含的任何內容都被視為文"
"字文本，將原封不動地複製到輸出中。如果您需要在文字文本中包含大括號字元，可以"
"通過加倍轉義：``{{`` 和 ``}}``。"

#: ../../library/string.rst:207
#, fuzzy
msgid "The grammar for a replacement field is as follows:"
msgstr "替換欄位的語法如下："

#: ../../library/string.rst:219
#, fuzzy
msgid ""
"In less formal terms, the replacement field can start with a *field_name* "
"that specifies the object whose value is to be formatted and inserted into "
"the output instead of the replacement field. The *field_name* is optionally "
"followed by a  *conversion* field, which is preceded by an exclamation point "
"``'!'``, and a *format_spec*, which is preceded by a colon ``':'``.  These "
"specify a non-default format for the replacement value."
msgstr ""
"用不太正式的術語來說，替換欄位可以以 *field_name* "
"開頭，它指定其值要被格式化並插入到輸出中的物件，而不是替換欄位。 *field_name*"
" 後面可選地跟一個 *conversion* 欄位，它前面有一個感嘆號 ``'!'`` 和一個 "
"*format_spec*，它前面有一個冒號 ``':'``。這些為替換值指定了非預設格式。"

#: ../../library/string.rst:226
msgid "See also the :ref:`formatspec` section."
msgstr "另請參閱 :ref:`formatspec` 部份。"

#: ../../library/string.rst:228
#, fuzzy
msgid ""
"The *field_name* itself begins with an *arg_name* that is either a number or "
"a keyword.  If it's a number, it refers to a positional argument, and if "
"it's a keyword, it refers to a named keyword argument.  If the numerical "
"arg_names in a format string are 0, 1, 2, ... in sequence, they can all be "
"omitted (not just some) and the numbers 0, 1, 2, ... will be automatically "
"inserted in that order. Because *arg_name* is not quote-delimited, it is not "
"possible to specify arbitrary dictionary keys (e.g., the strings ``'10'`` or "
"``':-]'``) within a format string. The *arg_name* can be followed by any "
"number of index or attribute expressions. An expression of the form ``'."
"name'`` selects the named attribute using :func:`getattr`, while an "
"expression of the form ``'[index]'`` does an index lookup using :func:"
"`__getitem__`."
msgstr ""
"*field_name* 本身以 *arg_name* 開頭，它可以是數字或關鍵字。如果它是一個數字，"
"它指的是一個位置參數，如果它是一個關鍵字，它指的是一個命名的關鍵字參數。"
"如果格式字串中的數字 arg_names 依次為 "
"0、1、2...，則可以將它們全部省略（不僅僅是一些）並且數字 0、1、2... "
"將按該順序自動插入.因為 *arg_name* "
"不是引號分隔的，所以不可能在格式字串中指定任意字典鍵（例如，字串 ``'10'`` 或 "
"``':-]'``）。 *arg_name* 後面可以跟任意數量的索引或屬性表達式。 ``'.name'`` "
"形式的表達式使用 :func:`getattr` 選擇命名屬性，而 ``'[index]'`` "
"形式的表達式使用 :func:`__getitem__ 進行索引查找`。"

#: ../../library/string.rst:240
#, fuzzy
msgid ""
"The positional argument specifiers can be omitted for :meth:`str.format`, so "
"``'{} {}'.format(a, b)`` is equivalent to ``'{0} {1}'.format(a, b)``."
msgstr ""
":meth:`str.format` 可以省略位置參數說明符，因此 ``'{} {}'.format(a, b)`` "
"等同於 ``'{0} {1}'.format (a, b)``。"

#: ../../library/string.rst:244
#, fuzzy
msgid ""
"The positional argument specifiers can be omitted for :class:`Formatter`."
msgstr "對於 :class:`Formatter` 可以省略位置參數說明符。"

#: ../../library/string.rst:247
#, fuzzy
msgid "Some simple format string examples::"
msgstr "一些簡單的格式字串示例::"

#: ../../library/string.rst:256
#, fuzzy
msgid ""
"The *conversion* field causes a type coercion before formatting.  Normally, "
"the job of formatting a value is done by the :meth:`__format__` method of "
"the value itself.  However, in some cases it is desirable to force a type to "
"be formatted as a string, overriding its own definition of formatting.  By "
"converting the value to a string before calling :meth:`__format__`, the "
"normal formatting logic is bypassed."
msgstr ""
"*conversion* 欄位會在格式化之前導致型別強制轉換。通常，"
"格式化值的工作是由值本身的 :meth:`__format__` 方法完成的。但是，在某些情況下"
"，希望強制將型別格式化為字串，從而覆蓋其自己的格式定義。通過在呼叫 "
":meth:`__format__` 之前將值轉換為字串，可以繞過正常的格式化邏輯。"

#: ../../library/string.rst:263
#, fuzzy
msgid ""
"Three conversion flags are currently supported: ``'!s'`` which calls :func:"
"`str` on the value, ``'!r'`` which calls :func:`repr` and ``'!a'`` which "
"calls :func:`ascii`."
msgstr ""
"目前支援三個轉換旗標：``'!s'`` 在值上呼叫 :func:`str`，``'!r'`` 呼叫 "
":func:`repr` 和 ``'!a' `` 呼叫 :func:`ascii`。"

#: ../../library/string.rst:267
msgid "Some examples::"
msgstr ""
"一些範例：\n"
"\n"
"::"

#: ../../library/string.rst:273
#, fuzzy
msgid ""
"The *format_spec* field contains a specification of how the value should be "
"presented, including such details as field width, alignment, padding, "
"decimal precision and so on.  Each value type can define its own "
"\"formatting mini-language\" or interpretation of the *format_spec*."
msgstr ""
"*format_spec* 欄位包含值應如何呈現的規範，包括欄位寬度、對齊方式、填充、小數"
"精度等詳細資訊。每個值型別都可以定義自己的“格式化迷你語言”或*format_spec* "
"的解釋。"

#: ../../library/string.rst:278
#, fuzzy
msgid ""
"Most built-in types support a common formatting mini-language, which is "
"described in the next section."
msgstr "大多數內建型別都支援通用的格式化迷你語言，這將在下一節中介紹。"

#: ../../library/string.rst:281
#, fuzzy
msgid ""
"A *format_spec* field can also include nested replacement fields within it. "
"These nested replacement fields may contain a field name, conversion flag "
"and format specification, but deeper nesting is not allowed.  The "
"replacement fields within the format_spec are substituted before the "
"*format_spec* string is interpreted. This allows the formatting of a value "
"to be dynamically specified."
msgstr ""
"*format_spec* 欄位還可以在其中包含嵌套的替換欄位。這些嵌套的替換欄位可以包含"
"欄位名、轉換旗標和格式規範，但不允許更深的嵌套。 format_spec 中的替換欄位在 "
"*format_spec* 字串被解釋之前被替換。這允許動態指定值的格式。"

#: ../../library/string.rst:288
msgid "See the :ref:`formatexamples` section for some examples."
msgstr "範例請見 :ref:`formatexamples`\\ 。"

#: ../../library/string.rst:294
#, fuzzy
msgid "Format Specification Mini-Language"
msgstr "格式規範迷你語言"

#: ../../library/string.rst:296
#, fuzzy
msgid ""
"\"Format specifications\" are used within replacement fields contained "
"within a format string to define how individual values are presented (see :"
"ref:`formatstrings` and :ref:`f-strings`). They can also be passed directly "
"to the built-in :func:`format` function.  Each formattable type may define "
"how the format specification is to be interpreted."
msgstr ""
"“格式規範”用於格式字串中包含的替換欄位中，以定義各個值的呈現方式（請參閱：ref"
"：`formatstrings` 和 :ref:`f-strings`）。它們也可以直接傳遞給內建的 "
":func:`format` 函式。每個格式表型別都可以定義格式規範的解釋方式。"

#: ../../library/string.rst:303
#, fuzzy
msgid ""
"Most built-in types implement the following options for format "
"specifications, although some of the formatting options are only supported "
"by the numeric types."
msgstr "大多數內建型別都實作了以下格式規範選項，儘管某些格式設定選項僅受數字型別支援"
"。"

#: ../../library/string.rst:306
#, fuzzy
msgid ""
"A general convention is that an empty format specification produces the same "
"result as if you had called :func:`str` on the value. A non-empty format "
"specification typically modifies the result."
msgstr "一般慣例是，空格式規範產生的結果與您對該值呼叫 :func:`str` "
"產生的結果相同。非空格式規範通常會修改結果。"

#: ../../library/string.rst:310
#, fuzzy
msgid "The general form of a *standard format specifier* is:"
msgstr "*標準格式說明符*的一般形式是："

#: ../../library/string.rst:322
#, fuzzy
msgid ""
"If a valid *align* value is specified, it can be preceded by a *fill* "
"character that can be any character and defaults to a space if omitted. It "
"is not possible to use a literal curly brace (\"``{``\" or \"``}``\") as the "
"*fill* character in a :ref:`formatted string literal <f-strings>` or when "
"using the :meth:`str.format` method.  However, it is possible to insert a "
"curly brace with a nested replacement field.  This limitation doesn't affect "
"the :func:`format` function."
msgstr ""
"如果指定了有效的 *align* 值，則可以在它前面加上一個 *fill* "
"字元，該字元可以是任何字元，如果省略則預設為空格。在 :ref:`formatted string "
"literal <f-strings>` 或者當使用 :meth:`str.format` "
"方法。但是，可以插入帶有嵌套替換欄位的大括號。此限制不影響 :func:`format` "
"函式。"

#: ../../library/string.rst:331
#, fuzzy
msgid "The meaning of the various alignment options is as follows:"
msgstr "各種對齊選項的含義如下："

#: ../../library/string.rst:340 ../../library/string.rst:371
#, fuzzy
msgid "Option"
msgstr "選項"

#: ../../library/string.rst:340 ../../library/string.rst:371
#: ../../library/string.rst:454 ../../library/string.rst:465
#: ../../library/string.rst:500
#, fuzzy
msgid "Meaning"
msgstr "意義"

#: ../../library/string.rst:342
msgid "``'<'``"
msgstr "``'<'``"

#: ../../library/string.rst:342
#, fuzzy
msgid ""
"Forces the field to be left-aligned within the available space (this is the "
"default for most objects)."
msgstr "強製欄位在可用空間內左對齊（這是大多數物件的預設設定）。"

#: ../../library/string.rst:345
msgid "``'>'``"
msgstr "``'>'``"

#: ../../library/string.rst:345
#, fuzzy
msgid ""
"Forces the field to be right-aligned within the available space (this is the "
"default for numbers)."
msgstr "強製欄位在可用空間內右對齊（這是數字的預設設定）。"

#: ../../library/string.rst:348
msgid "``'='``"
msgstr "``'='``"

#: ../../library/string.rst:348
#, fuzzy
msgid ""
"Forces the padding to be placed after the sign (if any) but before the "
"digits.  This is used for printing fields in the form '+000000120'. This "
"alignment option is only valid for numeric types.  It becomes the default "
"for numbers when '0' immediately precedes the field width."
msgstr ""
"強制將填充放在符號（如果有）之後但在數字之前。這用於以 ``+000000120``形式印出欄"
"位。此對齊選項僅對數字型別有效。當 ``0``緊接在欄位寬度之前時，它將成為數字的預設"
"值。"

#: ../../library/string.rst:354
msgid "``'^'``"
msgstr "``'^'``"

#: ../../library/string.rst:354
#, fuzzy
msgid "Forces the field to be centered within the available space."
msgstr "強製欄位在可用空間內居中。"

#: ../../library/string.rst:358
#, fuzzy
msgid ""
"Note that unless a minimum field width is defined, the field width will "
"always be the same size as the data to fill it, so that the alignment option "
"has no meaning in this case."
msgstr "請注意，除非定義了最小欄位寬度，否則欄位寬度將始終與填充它的資料大小相同，因"
"此對齊選項在這種情況下沒有意義。"

#: ../../library/string.rst:362
#, fuzzy
msgid ""
"The *sign* option is only valid for number types, and can be one of the "
"following:"
msgstr "*sign* 選項只對數字型別有效，可以是以下之一："

#: ../../library/string.rst:373
msgid "``'+'``"
msgstr "``'+'``"

#: ../../library/string.rst:373
#, fuzzy
msgid ""
"indicates that a sign should be used for both positive as well as negative "
"numbers."
msgstr "表示正數和負數都應使用一個符號。"

#: ../../library/string.rst:376
msgid "``'-'``"
msgstr "``'-'``"

#: ../../library/string.rst:376
#, fuzzy
msgid ""
"indicates that a sign should be used only for negative numbers (this is the "
"default behavior)."
msgstr "表示符號只能用於負數（這是預設行為）。"

#: ../../library/string.rst:379
#, fuzzy
msgid "space"
msgstr "空間"

#: ../../library/string.rst:379
#, fuzzy
msgid ""
"indicates that a leading space should be used on positive numbers, and a "
"minus sign on negative numbers."
msgstr "表示正數應使用前導空格，負數應使用減號。"

#: ../../library/string.rst:386
#, fuzzy
msgid ""
"The ``'z'`` option coerces negative zero floating-point values to positive "
"zero after rounding to the format precision.  This option is only valid for "
"floating-point presentation types."
msgstr "``'z'`` 選項在四捨五入到格式精度後將負零浮點值強制為正零。此選項僅對浮點表示"
"型別有效。"

#: ../../library/string.rst:390
msgid "Added the ``'z'`` option (see also :pep:`682`)."
msgstr "新增 ``'z'`` 選項（請見 :pep:`682`\\ ）。"

#: ../../library/string.rst:395
#, fuzzy
msgid ""
"The ``'#'`` option causes the \"alternate form\" to be used for the "
"conversion.  The alternate form is defined differently for different types.  "
"This option is only valid for integer, float and complex types. For "
"integers, when binary, octal, or hexadecimal output is used, this option "
"adds the respective prefix ``'0b'``, ``'0o'``, ``'0x'``, or ``'0X'`` to the "
"output value. For float and complex the alternate form causes the result of "
"the conversion to always contain a decimal-point character, even if no "
"digits follow it. Normally, a decimal-point character appears in the result "
"of these conversions only if a digit follows it. In addition, for ``'g'`` "
"and ``'G'`` conversions, trailing zeros are not removed from the result."
msgstr ""
"``'#'`` 選項導致使用“替代形式”進行轉換。不同型別的替代形式定義不同。此選項僅"
"對整數、浮點數和復雜型別有效。對於整數，當使用二進位、八進位或十六進位輸出時"
"，此選項新增相應的前綴 ``'0b'``、``'0o'``、``'0x'`` 或 ``'0X' `` 到輸出值。對"
"於浮點數和復數，替代形式導致轉換結果始終包含小數點字元，即使後面沒有數字。通"
"常，只有在小數點後面跟著數字時，小數點字元才會出現在這些轉換的結果中。此外，"
"對於 ``'g'`` 和 ``'G'`` 轉換，不會從結果中刪除尾隨零。"

#: ../../library/string.rst:409
#, fuzzy
msgid ""
"The ``','`` option signals the use of a comma for a thousands separator. For "
"a locale aware separator, use the ``'n'`` integer presentation type instead."
msgstr "``','`` 選項表示使用逗號作為千位分隔符。對於區域設定感知分隔符，請改用 ``n``整數"
"表示型別。"

#: ../../library/string.rst:413
msgid "Added the ``','`` option (see also :pep:`378`)."
msgstr "新增 ``','`` 選項（請見 :pep:`378`\\ ）。"

#: ../../library/string.rst:418
#, fuzzy
msgid ""
"The ``'_'`` option signals the use of an underscore for a thousands "
"separator for floating point presentation types and for integer presentation "
"type ``'d'``.  For integer presentation types ``'b'``, ``'o'``, ``'x'``, and "
"``'X'``, underscores will be inserted every 4 digits.  For other "
"presentation types, specifying this option is an error."
msgstr ""
"``'_'`` 選項表示使用底線作為浮點表示型別的千位分隔符和整數表示型別 "
"``'d'``。對於整數表示型別 ``'b'``、``'o'``、``'x'`` 和 ``'X'``，每 4 "
"位數字將插入底線。對於其他演示文稿型別，指定此選項是錯誤的。"

#: ../../library/string.rst:425
msgid "Added the ``'_'`` option (see also :pep:`515`)."
msgstr "新增 ``'_'`` 選項（請見 :pep:`515`\\ ）。"

#: ../../library/string.rst:428
#, fuzzy
msgid ""
"*width* is a decimal integer defining the minimum total field width, "
"including any prefixes, separators, and other formatting characters. If not "
"specified, then the field width will be determined by the content."
msgstr "*width* 是一個十進位整數，定義最小總欄位寬度，包括任何前綴、分隔符和其他格式"
"字元。如果未指定，則欄位寬度將由內容決定。"

#: ../../library/string.rst:432
#, fuzzy
msgid ""
"When no explicit alignment is given, preceding the *width* field by a zero "
"(``'0'``) character enables sign-aware zero-padding for numeric types.  This "
"is equivalent to a *fill* character of ``'0'`` with an *alignment* type of "
"``'='``."
msgstr ""
"當沒有給出顯式對齊方式時，在 *width* "
"欄位前加上一個零（``'0'``）字元可以為數字型別啟用符號感知零填充。這等效於 "
"*fill* 字元為 ``'0'`` 且 *alignment* 型別為 ``'='``。"

#: ../../library/string.rst:437
#, fuzzy
msgid ""
"Preceding the *width* field by ``'0'`` no longer affects the default "
"alignment for strings."
msgstr "在 *width* 欄位前加上 ``'0'`` 不再影響字串的預設對齊方式。"

#: ../../library/string.rst:441
#, fuzzy
msgid ""
"The *precision* is a decimal integer indicating how many digits should be "
"displayed after the decimal point for presentation types ``'f'`` and "
"``'F'``, or before and after the decimal point for presentation types "
"``'g'`` or ``'G'``.  For string presentation types the field indicates the "
"maximum field size - in other words, how many characters will be used from "
"the field content.  The *precision* is not allowed for integer presentation "
"types."
msgstr ""
"*precision* 是一個十進位整數，表示表示型別 ``f``和 ``F``的小數點後應顯示多少位，表"
"示型別 ``f``的小數點前後應顯示多少位數'g'`` 或 ``'G'``。對於字串表示型別，"
"該欄位指示最大欄位大小 - 換句話說，將使用欄位內容中的多少個字元。 *precision*"
" 不允許用於整數表示型別。"

#: ../../library/string.rst:449
#, fuzzy
msgid "Finally, the *type* determines how the data should be presented."
msgstr "最後，*type* 決定資料的呈現方式。"

#: ../../library/string.rst:451
#, fuzzy
msgid "The available string presentation types are:"
msgstr "可用的字串表示型別是："

#: ../../library/string.rst:454 ../../library/string.rst:465
#: ../../library/string.rst:500
#, fuzzy
msgid "Type"
msgstr "型別"

#: ../../library/string.rst:456
msgid "``'s'``"
msgstr "``'s'``"

#: ../../library/string.rst:456
#, fuzzy
msgid "String format. This is the default type for strings and may be omitted."
msgstr "字串格式。這是字串的預設型別，可以省略。"

#: ../../library/string.rst:459 ../../library/string.rst:488
#: ../../library/string.rst:575
msgid "None"
msgstr "None"

#: ../../library/string.rst:459
#, fuzzy
msgid "The same as ``'s'``."
msgstr "與``的'``相同。"

#: ../../library/string.rst:462
#, fuzzy
msgid "The available integer presentation types are:"
msgstr "可用的整數表示型別是："

#: ../../library/string.rst:467
msgid "``'b'``"
msgstr "``'b'``"

#: ../../library/string.rst:467
#, fuzzy
msgid "Binary format. Outputs the number in base 2."
msgstr "二進位格式。輸出基數為 2 的數字。"

#: ../../library/string.rst:469
msgid "``'c'``"
msgstr "``'c'``"

#: ../../library/string.rst:469
#, fuzzy
msgid ""
"Character. Converts the integer to the corresponding unicode character "
"before printing."
msgstr "特點。在印出之前將整數轉換為相應的 unicode 字元。"

#: ../../library/string.rst:472
msgid "``'d'``"
msgstr "``'d'``"

#: ../../library/string.rst:472
#, fuzzy
msgid "Decimal Integer. Outputs the number in base 10."
msgstr "十進位整數。輸出以 10 為基數的數字。"

#: ../../library/string.rst:474
msgid "``'o'``"
msgstr "``'o'``"

#: ../../library/string.rst:474
#, fuzzy
msgid "Octal format. Outputs the number in base 8."
msgstr "八進位格式。輸出以 8 為基數的數字。"

#: ../../library/string.rst:476
msgid "``'x'``"
msgstr "``'x'``"

#: ../../library/string.rst:476
#, fuzzy
msgid ""
"Hex format. Outputs the number in base 16, using lower-case letters for the "
"digits above 9."
msgstr "十六進位格式。輸出以 16 為基數的數字，9 以上的數字使用小寫字母。"

#: ../../library/string.rst:479
msgid "``'X'``"
msgstr "``'X'``"

#: ../../library/string.rst:479
#, fuzzy
msgid ""
"Hex format. Outputs the number in base 16, using upper-case letters for the "
"digits above 9. In case ``'#'`` is specified, the prefix ``'0x'`` will be "
"upper-cased to ``'0X'`` as well."
msgstr ""
"十六進位格式。輸出以 16 為基數的數字，9 以上的數字使用大寫字母。如果指定了 "
"``'#'``，則前綴 ``'0x'`` 將大寫為 ``'0X' ``還有。"

#: ../../library/string.rst:484 ../../library/string.rst:568
msgid "``'n'``"
msgstr "``'n'``"

#: ../../library/string.rst:484
#, fuzzy
msgid ""
"Number. This is the same as ``'d'``, except that it uses the current locale "
"setting to insert the appropriate number separator characters."
msgstr "數字。這與 ``'d'`` 相同，除了它使用當前區域設定來插入適當的數字分隔符。"

#: ../../library/string.rst:488
#, fuzzy
msgid "The same as ``'d'``."
msgstr "與 ``'d'`` 相同。"

#: ../../library/string.rst:491
#, fuzzy
msgid ""
"In addition to the above presentation types, integers can be formatted with "
"the floating point presentation types listed below (except ``'n'`` and "
"``None``). When doing so, :func:`float` is used to convert the integer to a "
"floating point number before formatting."
msgstr ""
"除了上述表示型別之外，整數還可以使用下面列出的浮點表示型別進行格式化（ ``'n'`` 和"
" ``None``除外）。這樣做時，:func:`float` 用於在格式化之前將整數轉換為浮點數。"

#: ../../library/string.rst:496
#, fuzzy
msgid ""
"The available presentation types for :class:`float` and :class:`~decimal."
"Decimal` values are:"
msgstr ":class:`float` 和 :class:`~decimal.Decimal` 值的可用表示型別是："

#: ../../library/string.rst:502
msgid "``'e'``"
msgstr "``'e'``"

#: ../../library/string.rst:502
#, fuzzy
msgid ""
"Scientific notation. For a given precision ``p``, formats the number in "
"scientific notation with the letter 'e' separating the coefficient from the "
"exponent. The coefficient has one digit before and ``p`` digits after the "
"decimal point, for a total of ``p + 1`` significant digits. With no "
"precision given, uses a precision of ``6`` digits after the decimal point "
"for :class:`float`, and shows all coefficient digits for :class:`~decimal."
"Decimal`. If no digits follow the decimal point, the decimal point is also "
"removed unless the ``#`` option is used."
msgstr ""
"科學計數法。對於給定的精度 ``p``，用字母 ``e``將係數和指數分開，以科學計數法格式化"
"數字。該係數在小數點前有一位，在小數點後有 ``p`` 位，總共有 ``p + 1`` "
"位有效數字。在沒有給出精度的情況下，使用小數點後 ``6`` 位的精度為 "
":class:`float`，並顯示 :class:`~decimal.Decimal` "
"的所有係數數字。如果小數點後沒有數字，小數點也會被刪除，除非使用 ``#``選項。"

#: ../../library/string.rst:514
msgid "``'E'``"
msgstr "``'E'``"

#: ../../library/string.rst:514
#, fuzzy
msgid ""
"Scientific notation. Same as ``'e'`` except it uses an upper case 'E' as the "
"separator character."
msgstr "科學計數法。與 ``'e'`` 相同，只是它使用大寫字母 'E' 作為分隔符。"

#: ../../library/string.rst:517
msgid "``'f'``"
msgstr "``'f'``"

#: ../../library/string.rst:517
#, fuzzy
msgid ""
"Fixed-point notation. For a given precision ``p``, formats the number as a "
"decimal number with exactly ``p`` digits following the decimal point. With "
"no precision given, uses a precision of ``6`` digits after the decimal point "
"for :class:`float`, and uses a precision large enough to show all "
"coefficient digits for :class:`~decimal.Decimal`. If no digits follow the "
"decimal point, the decimal point is also removed unless the ``#`` option is "
"used."
msgstr ""
"定點符號。對於給定的精度 ``p``，將數字格式化為小數點後正好有 ``p``位的十進位數。在"
"沒有給出精度的情況下，使用小數點後 ``6`` 位的精度為 :class:`float`，"
"並使用足夠大的精度來顯示 :class:`~decimal.Decimal` "
"的所有係數數字。如果小數點後沒有數字，小數點也會被刪除，除非使用 ``#``選項。"

#: ../../library/string.rst:527
msgid "``'F'``"
msgstr "``'F'``"

#: ../../library/string.rst:527
#, fuzzy
msgid ""
"Fixed-point notation. Same as ``'f'``, but converts ``nan`` to  ``NAN`` and "
"``inf`` to ``INF``."
msgstr "定點符號。與 ``'f'`` 相同，但將 ``nan`` 轉換為 ``NAN`` 並將 ``inf`` 轉換為 "
"``INF``。"

#: ../../library/string.rst:530
msgid "``'g'``"
msgstr "``'g'``"

#: ../../library/string.rst:530
#, fuzzy
msgid ""
"General format.  For a given precision ``p >= 1``, this rounds the number to "
"``p`` significant digits and then formats the result in either fixed-point "
"format or in scientific notation, depending on its magnitude. A precision of "
"``0`` is treated as equivalent to a precision of ``1``."
msgstr ""
"通用格式。對於給定的精度“p >= 1”，這會將數字四捨五入為 ``p``有效數字，然後根據其"
"大小將結果格式化為定點格式或科學記數法。精度 ``0``被視為等同於精度 ``1``。"

#: ../../library/string.rst:537
#, fuzzy
msgid ""
"The precise rules are as follows: suppose that the result formatted with "
"presentation type ``'e'`` and precision ``p-1`` would have exponent "
"``exp``.  Then, if ``m <= exp < p``, where ``m`` is -4 for floats and -6 "
"for :class:`Decimals <decimal.Decimal>`, the number is formatted with "
"presentation type ``'f'`` and precision ``p-1-exp``.  Otherwise, the number "
"is formatted with presentation type ``'e'`` and precision ``p-1``. In both "
"cases insignificant trailing zeros are removed from the significand, and the "
"decimal point is also removed if there are no remaining digits following it, "
"unless the ``'#'`` option is used."
msgstr ""
"精確的規則如下：假設以表示型別 ``e``和精度 ``p-1``格式化的結果將具有指數 ``exp``。然後"
"，如果 ``m <= exp < p``，其中 ``m`` 對於浮點數是 -4，對於 :class:`Decimals "
"<decimal.Decimal>` 是 -6，數字的格式為表示型別'f'`` 和精度 ``p-1-exp``。否則"
"，數字的格式為表示型別 ``e``和精度 ``p-1``。在這兩種情況下，微不足道的尾隨零都從尾"
"數中刪除，如果後面沒有剩餘數字，小數點也會被刪除，除非使用 ``#``選項。"

#: ../../library/string.rst:550
#, fuzzy
msgid ""
"With no precision given, uses a precision of ``6`` significant digits for :"
"class:`float`. For :class:`~decimal.Decimal`, the coefficient of the result "
"is formed from the coefficient digits of the value; scientific notation is "
"used for values smaller than ``1e-6`` in absolute value and values where the "
"place value of the least significant digit is larger than 1, and fixed-point "
"notation is used otherwise."
msgstr ""
"在沒有給出精度的情況下，使用 ``6`` 有效數字的精度作為 "
":class:`float`。對於 :class:`~decimal.Decimal`，結果的係數由值的係數位組成；絕"
"對值小於``1e-6``的值和最低有效位的位值大於1的值使用科學計數法，否則使用定點計"
"數法。"

#: ../../library/string.rst:559
#, fuzzy
msgid ""
"Positive and negative infinity, positive and negative zero, and nans, are "
"formatted as ``inf``, ``-inf``, ``0``, ``-0`` and ``nan`` respectively, "
"regardless of the precision."
msgstr ""
"正無窮大和負無窮大、正負零和 nans，分別格式化為 "
"``inf``、``-inf``、``0``、``-0`` 和 ``nan``，無論的精度。"

#: ../../library/string.rst:564
msgid "``'G'``"
msgstr "``'G'``"

#: ../../library/string.rst:564
#, fuzzy
msgid ""
"General format. Same as ``'g'`` except switches to ``'E'`` if the number "
"gets too large. The representations of infinity and NaN are uppercased, too."
msgstr "通用格式。與 ``'g'`` 相同，但如果數字太大則切換到 ``'E'``。無窮大和 NaN "
"的表示也是大寫的。"

#: ../../library/string.rst:568
#, fuzzy
msgid ""
"Number. This is the same as ``'g'``, except that it uses the current locale "
"setting to insert the appropriate number separator characters."
msgstr "數字。這與 ``'g'`` 相同，只是它使用當前區域設定來插入適當的數字分隔符。"

#: ../../library/string.rst:572
msgid "``'%'``"
msgstr "``'%'``"

#: ../../library/string.rst:572
#, fuzzy
msgid ""
"Percentage. Multiplies the number by 100 and displays in fixed (``'f'``) "
"format, followed by a percent sign."
msgstr "百分比。將數字乘以 100 並以固定 (``'f'``) 格式顯示，後跟百分號。"

#: ../../library/string.rst:575
#, fuzzy
msgid ""
"For :class:`float` this is the same as ``'g'``, except that when fixed-point "
"notation is used to format the result, it always includes at least one digit "
"past the decimal point. The precision used is as large as needed to "
"represent the given value faithfully."
msgstr ""
"對於 :class:`float` 這與 ``'g'`` 相同，除了當使用定點符號來格式化結果時，它總"
"是至少包括小數點後一位數字。使用的精度與忠實表示給定值所需的精度一樣大。"

#: ../../library/string.rst:581
#, fuzzy
msgid ""
"For :class:`~decimal.Decimal`, this is the same as either ``'g'`` or ``'G'`` "
"depending on the value of ``context.capitals`` for the current decimal "
"context."
msgstr ""
"對於 :class:`~decimal.Decimal`，這與 ``'g'`` 或 ``'G'`` 相同，"
"具體取決於當前十進位上下文的 ``context.capitals`` 的值。"

#: ../../library/string.rst:585
#, fuzzy
msgid ""
"The overall effect is to match the output of :func:`str` as altered by the "
"other format modifiers."
msgstr "整體效果是匹配由其他格式修飾符更改的 :func:`str` 的輸出。"

#: ../../library/string.rst:593
#, fuzzy
msgid "Format examples"
msgstr "格式示例"

#: ../../library/string.rst:595
#, fuzzy
msgid ""
"This section contains examples of the :meth:`str.format` syntax and "
"comparison with the old ``%``-formatting."
msgstr "本節包含 :meth:`str.format` 語法的示例以及與舊的 ``%`` 格式的比較。"

#: ../../library/string.rst:598
#, fuzzy
msgid ""
"In most of the cases the syntax is similar to the old ``%``-formatting, with "
"the addition of the ``{}`` and with ``:`` used instead of ``%``. For "
"example, ``'%03.2f'`` can be translated to ``'{:03.2f}'``."
msgstr ""
"在大多數情況下，語法類似於舊的 ``%`` 格式，新增了 ``{}`` 並使用 ``:`` 代替 "
"``%``。例如，``'%03.2f'`` 可以翻譯為 ``'{:03.2f}'``。"

#: ../../library/string.rst:602
#, fuzzy
msgid ""
"The new format syntax also supports new and different options, shown in the "
"following examples."
msgstr "新的格式語法還支援新的和不同的選項，如以下示例所示。"

#: ../../library/string.rst:605
#, fuzzy
msgid "Accessing arguments by position::"
msgstr "按位置訪問參數::"

#: ../../library/string.rst:618
#, fuzzy
msgid "Accessing arguments by name::"
msgstr "按名稱訪問參數::"

#: ../../library/string.rst:626
#, fuzzy
msgid "Accessing arguments' attributes::"
msgstr "訪問參數的屬性::"

#: ../../library/string.rst:641
#, fuzzy
msgid "Accessing arguments' items::"
msgstr "訪問參數的項目::"

#: ../../library/string.rst:647
#, fuzzy
msgid "Replacing ``%s`` and ``%r``::"
msgstr "替換 ``%s`` 和 ``%r``::"

#: ../../library/string.rst:652
#, fuzzy
msgid "Aligning the text and specifying a width::"
msgstr "對齊文本並指定寬度::"

#: ../../library/string.rst:663
#, fuzzy
msgid "Replacing ``%+f``, ``%-f``, and ``% f`` and specifying a sign::"
msgstr "替換“%+f”、“%-f”和“% f”並指定一個符號："

#: ../../library/string.rst:672
#, fuzzy
msgid ""
"Replacing ``%x`` and ``%o`` and converting the value to different bases::"
msgstr "替換 ``%x`` 和 ``%o`` 並將值轉換為不同的基數::"

#: ../../library/string.rst:681
#, fuzzy
msgid "Using the comma as a thousands separator::"
msgstr "使用逗號作為千位分隔符::"

#: ../../library/string.rst:686
#, fuzzy
msgid "Expressing a percentage::"
msgstr "表示百分比::"

#: ../../library/string.rst:693
#, fuzzy
msgid "Using type-specific formatting::"
msgstr "使用特定於型別的格式::"

#: ../../library/string.rst:700
#, fuzzy
msgid "Nesting arguments and more complex examples::"
msgstr "嵌套參數和更複雜的例子::"

#: ../../library/string.rst:734
#, fuzzy
msgid "Template strings"
msgstr "模板字串"

#: ../../library/string.rst:736
#, fuzzy
msgid ""
"Template strings provide simpler string substitutions as described in :pep:"
"`292`.  A primary use case for template strings is for internationalization "
"(i18n) since in that context, the simpler syntax and functionality makes it "
"easier to translate than other built-in string formatting facilities in "
"Python.  As an example of a library built on template strings for i18n, see "
"the `flufl.i18n <https://flufli18n.readthedocs.io/en/latest/>`_ package."
msgstr ""
"模板字串提供更簡單的字串替換，如 :pep:`292` 中所述。"
"模板字串的一個主要用例是國際化 (i18n)，因為在這種情況下，"
"更簡單的語法和功能使其比 Python 中的其他內建字串格式化工具更容易翻譯。"
"作為基於 i18n 模板字串構建的庫的示例，請參閱`flufl.i18n <https://flufli18n."
"readthedocs.io/en/latest/>`_ 包。"

#: ../../library/string.rst:746
#, fuzzy
msgid ""
"Template strings support ``$``-based substitutions, using the following "
"rules:"
msgstr "模板字串支援基於 ``$`` 的替換，使用以下規則："

#: ../../library/string.rst:748
#, fuzzy
msgid "``$$`` is an escape; it is replaced with a single ``$``."
msgstr "``$$`` 是一種逃避；它被替換為單個 ``$``。"

#: ../../library/string.rst:750
#, fuzzy
msgid ""
"``$identifier`` names a substitution placeholder matching a mapping key of ``"
"\"identifier\"``.  By default, ``\"identifier\"`` is restricted to any case-"
"insensitive ASCII alphanumeric string (including underscores) that starts "
"with an underscore or ASCII letter.  The first non-identifier character "
"after the ``$`` character terminates this placeholder specification."
msgstr ""
"``$identifier`` 命名一個替換佔位符匹配``\"identifier\"`` "
"的映射鍵。預設情況下，“標識符”僅限於任何以底線或 ASCII "
"字母開頭的不區分大小寫的 ASCII 字母數字字串（包括底線）。 ``$`` "
"字元後的第一個非標識符字元終止此佔位符規範。"

#: ../../library/string.rst:757
#, fuzzy
msgid ""
"``${identifier}`` is equivalent to ``$identifier``.  It is required when "
"valid identifier characters follow the placeholder but are not part of the "
"placeholder, such as ``\"${noun}ification\"``."
msgstr ""
"``${identifier}`` 等同於 ``$identifier``。當佔位符後面有有效的標識符字元但不"
"是佔位符的一部分時，它是必需的，例如``\"${noun}ification\"``。"

#: ../../library/string.rst:761
#, fuzzy
msgid ""
"Any other appearance of ``$`` in the string will result in a :exc:"
"`ValueError` being raised."
msgstr "字串中任何其他形式的 ``$`` 都將導致引發 :exc:`ValueError`。"

#: ../../library/string.rst:764
#, fuzzy
msgid ""
"The :mod:`string` module provides a :class:`Template` class that implements "
"these rules.  The methods of :class:`Template` are:"
msgstr ""
":mod:`string` 模組提供了一個 :class:`Template` 類來實作這些規則。 "
":class:`Template` 的方法是："

#: ../../library/string.rst:770
#, fuzzy
msgid "The constructor takes a single argument which is the template string."
msgstr "構造函式採用單個參數，即模板字串。"

#: ../../library/string.rst:775
#, fuzzy
msgid ""
"Performs the template substitution, returning a new string.  *mapping* is "
"any dictionary-like object with keys that match the placeholders in the "
"template.  Alternatively, you can provide keyword arguments, where the "
"keywords are the placeholders.  When both *mapping* and *kwds* are given and "
"there are duplicates, the placeholders from *kwds* take precedence."
msgstr ""
"執行模板替換，回傳一個新字串。 *mapping* 是任何類似字典的物件，其鍵與模板中的"
"佔位符匹配。或者，您可以提供關鍵字參數，其中關鍵字是佔位符。當同時給出 "
"*mapping* 和 *kwds* 並且存在重複時，來自 *kwds* 的佔位符優先。"

#: ../../library/string.rst:784
#, fuzzy
msgid ""
"Like :meth:`substitute`, except that if placeholders are missing from "
"*mapping* and *kwds*, instead of raising a :exc:`KeyError` exception, the "
"original placeholder will appear in the resulting string intact.  Also, "
"unlike with :meth:`substitute`, any other appearances of the ``$`` will "
"simply return ``$`` instead of raising :exc:`ValueError`."
msgstr ""
"類似於 :meth:`substitute`，除瞭如果 *mapping* 和 *kwds* "
"中缺少佔位符，原始佔位符將完整地出現在結果字串中，而不是引發 :exc:`KeyError` "
"例外。此外，與 :meth:`substitute` 不同，``$`` 的任何其他出現將簡單地回傳 "
"``$`` 而不是引發 :exc:`ValueError`。"

#: ../../library/string.rst:790
#, fuzzy
msgid ""
"While other exceptions may still occur, this method is called \"safe\" "
"because it always tries to return a usable string instead of raising an "
"exception.  In another sense, :meth:`safe_substitute` may be anything other "
"than safe, since it will silently ignore malformed templates containing "
"dangling delimiters, unmatched braces, or placeholders that are not valid "
"Python identifiers."
msgstr ""
"雖然其他例外仍可能發生，但此方法被稱為“安全”，因為它總是嘗試回傳可用的字串而"
"不是引發例外。從另一種意義上說，safe_substitute "
"可能不是安全的，因為它會默默地忽略包含懸空定界符、不匹配的大括號或不是有效 "
"Python 標識符的佔位符的格式錯誤的模板。"

#: ../../library/string.rst:800
#, fuzzy
msgid ""
"Returns false if the template has invalid placeholders that will cause :meth:"
"`substitute` to raise :exc:`ValueError`."
msgstr "如果模板有無效的佔位符會導致 substitute 引發 ValueError，則回傳 false。"

#: ../../library/string.rst:808
#, fuzzy
msgid ""
"Returns a list of the valid identifiers in the template, in the order they "
"first appear, ignoring any invalid identifiers."
msgstr "回傳模板中有效標識符的列表，按照它們首次出現的順序，忽略任何無效標識符。"

#: ../../library/string.rst:813
#, fuzzy
msgid ":class:`Template` instances also provide one public data attribute:"
msgstr ":class:`Template` 實例還提供一個公開資料屬性："

#: ../../library/string.rst:817
#, fuzzy
msgid ""
"This is the object passed to the constructor's *template* argument.  In "
"general, you shouldn't change it, but read-only access is not enforced."
msgstr "這是傳遞給構造函式的 *template* "
"參數的物件。通常，您不應更改它，但不強制執行只讀訪問權限。"

#: ../../library/string.rst:820
#, fuzzy
msgid "Here is an example of how to use a Template::"
msgstr "以下是如何使用模板的示例："

#: ../../library/string.rst:838
#, fuzzy
msgid ""
"Advanced usage: you can derive subclasses of :class:`Template` to customize "
"the placeholder syntax, delimiter character, or the entire regular "
"expression used to parse template strings.  To do this, you can override "
"these class attributes:"
msgstr ""
"高階用法：您可以派生 :class:`Template` 的子類別來自定義佔位符語法、分隔符或用"
"於剖析模板字串的整個正則表達式。為此，您可以覆蓋這些類屬性："

#: ../../library/string.rst:843
#, fuzzy
msgid ""
"*delimiter* -- This is the literal string describing a placeholder "
"introducing delimiter.  The default value is ``$``.  Note that this should "
"*not* be a regular expression, as the implementation will call :meth:`re."
"escape` on this string as needed.  Note further that you cannot change the "
"delimiter after class creation (i.e. a different delimiter must be set in "
"the subclass's class namespace)."
msgstr ""
"*delimiter* -- 這是描述引入定界符的佔位符的文字字串。預設值為``$``。請注意，"
"這*不*應該是正則表達式，因為實作將根據需要在此字串上呼叫 :meth:`re.escape`。進"
"一步注意，您不能在類建立後更改分隔符（即必須在子類別的類命名空間中設定不同的"
"分隔符）。"

#: ../../library/string.rst:850
#, fuzzy
msgid ""
"*idpattern* -- This is the regular expression describing the pattern for non-"
"braced placeholders.  The default value is the regular expression ``(?a:[_a-"
"z][_a-z0-9]*)``.  If this is given and *braceidpattern* is ``None`` this "
"pattern will also apply to braced placeholders."
msgstr ""
"*idpattern* -- 這是描述非大括號佔位符模式的正則表達式。預設值是正則表達式``(?"
"a:[_a-z][_a-z0-9]*)``。如果給出這個並且*braceidpattern* "
"是``None``這個模式也將適用於大括號佔位符。"

#: ../../library/string.rst:857
#, fuzzy
msgid ""
"Since default *flags* is ``re.IGNORECASE``, pattern ``[a-z]`` can match with "
"some non-ASCII characters. That's why we use the local ``a`` flag here."
msgstr ""
"由於預設的 *flags* 是 ``re.IGNORECASE``，所以模式 ``[a-z]`` 可以匹配一些非 "
"ASCII 字元。這就是我們在這裡使用本地 ``a`` 旗標的原因。"

#: ../../library/string.rst:861
#, fuzzy
msgid ""
"*braceidpattern* can be used to define separate patterns used inside and "
"outside the braces."
msgstr "*braceidpattern* 可用於定義大括號內部和外部使用的單獨模式。"

#: ../../library/string.rst:865
#, fuzzy
msgid ""
"*braceidpattern* -- This is like *idpattern* but describes the pattern for "
"braced placeholders.  Defaults to ``None`` which means to fall back to "
"*idpattern* (i.e. the same pattern is used both inside and outside braces). "
"If given, this allows you to define different patterns for braced and "
"unbraced placeholders."
msgstr ""
"*braceidpattern* -- 這類似於 *idpattern* 但描述了大括號佔位符的模式。預設為 "
"``None``，這意味著回退到 *idpattern*（即在大括號內外使用相同的模式）。如果給"
"定，這允許您為大括號和無大括號佔位符定義不同的模式。"

#: ../../library/string.rst:873
#, fuzzy
msgid ""
"*flags* -- The regular expression flags that will be applied when compiling "
"the regular expression used for recognizing substitutions.  The default "
"value is ``re.IGNORECASE``.  Note that ``re.VERBOSE`` will always be added "
"to the flags, so custom *idpattern*\\ s must follow conventions for verbose "
"regular expressions."
msgstr ""
"*flags* -- 編譯用於識別替換的正則表達式時將應用的正則表達式旗標。預設值為“re."
"IGNORECASE”。請注意，``re.VERBOSE`` 將始終新增到旗標中，因此自定義 "
"*idpattern*\\ s 必須遵循詳細正則表達式的約定。"

#: ../../library/string.rst:881
#, fuzzy
msgid ""
"Alternatively, you can provide the entire regular expression pattern by "
"overriding the class attribute *pattern*.  If you do this, the value must be "
"a regular expression object with four named capturing groups.  The capturing "
"groups correspond to the rules given above, along with the invalid "
"placeholder rule:"
msgstr ""
"或者，您可以通過覆蓋類屬性 *pattern* 來提供整個正則表達式模式。如果這樣做，該"
"值必須是具有四個命名捕獲組的正則表達式物件。捕獲組對應於上面給出的規則，以及"
"無效的佔位符規則："

#: ../../library/string.rst:887
#, fuzzy
msgid ""
"*escaped* -- This group matches the escape sequence, e.g. ``$$``, in the "
"default pattern."
msgstr "*escaped* -- 該組匹配轉義序列，例如``$$``，預設模式。"

#: ../../library/string.rst:890
#, fuzzy
msgid ""
"*named* -- This group matches the unbraced placeholder name; it should not "
"include the delimiter in capturing group."
msgstr "*named* -- 該組匹配無括號的佔位符名稱；它不應在捕獲組中包含定界符。"

#: ../../library/string.rst:893
#, fuzzy
msgid ""
"*braced* -- This group matches the brace enclosed placeholder name; it "
"should not include either the delimiter or braces in the capturing group."
msgstr "*braced* -- "
"該組匹配大括號括起來的佔位符名稱；它不應在捕獲組中包含定界符或大括號。"

#: ../../library/string.rst:896
#, fuzzy
msgid ""
"*invalid* -- This group matches any other delimiter pattern (usually a "
"single delimiter), and it should appear last in the regular expression."
msgstr "*無效*——這個組匹配任何其他定界符模式（通常是單個定界符），它應該出現在正則表"
"達式的最後。"

#: ../../library/string.rst:899
#, fuzzy
msgid ""
"The methods on this class will raise :exc:`ValueError` if the pattern "
"matches the template without one of these named groups matching."
msgstr "如果模式與模板匹配但這些命名組之一不匹配，則此類上的方法將引發 :exec:`ValueErr"
"or`。"

#: ../../library/string.rst:904
msgid "Helper functions"
msgstr "輔助函式"

#: ../../library/string.rst:908
#, fuzzy
msgid ""
"Split the argument into words using :meth:`str.split`, capitalize each word "
"using :meth:`str.capitalize`, and join the capitalized words using :meth:"
"`str.join`.  If the optional second argument *sep* is absent or ``None``, "
"runs of whitespace characters are replaced by a single space and leading and "
"trailing whitespace are removed, otherwise *sep* is used to split and join "
"the words."
msgstr ""
"使用 :meth:`str.split` 將參數拆分為單詞，使用 :meth:`str.capitalize` "
"將每個單詞大寫，然後使用 :meth:`str.join` 連接大寫單詞。如果可選的第二個參數 "
"*sep* "
"不存在或 ``None`` ，則空白字元的運行將替換為單個空格，並刪除前導和尾隨的空白，否則 "
"*sep* 用於拆分和連接單詞。"
