# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-24 00:16+0000\n"
"PO-Revision-Date: 2018-05-23 16:19+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../using/cmdline.rst:9
msgid "Command line and environment"
msgstr "命令列與環境"

#: ../../using/cmdline.rst:11
#, fuzzy
msgid ""
"The CPython interpreter scans the command line and the environment for "
"various settings."
msgstr "CPython 直譯器掃描命令列和環境以獲取各種設定。"

#: ../../using/cmdline.rst:16
#, fuzzy
msgid ""
"Other implementations' command line schemes may differ.  See :ref:"
"`implementations` for further resources."
msgstr "其他實作的命令列方案可能不同。有關更多資源，請參閱 :ref:`implementations`。"

#: ../../using/cmdline.rst:23
msgid "Command line"
msgstr "命令列"

#: ../../using/cmdline.rst:25
#, fuzzy
msgid "When invoking Python, you may specify any of these options::"
msgstr "呼叫 Python 時，您可以指定以下任何選項："

#: ../../using/cmdline.rst:29
#, fuzzy
msgid ""
"The most common use case is, of course, a simple invocation of a script::"
msgstr "最常見的用例當然是腳本的簡單呼叫::"

#: ../../using/cmdline.rst:37
msgid "Interface options"
msgstr "介面選項"

#: ../../using/cmdline.rst:39
#, fuzzy
msgid ""
"The interpreter interface resembles that of the UNIX shell, but provides "
"some additional methods of invocation:"
msgstr "直譯器介面類似於 UNIX shell，但提供了一些額外的呼叫方法："

#: ../../using/cmdline.rst:42
#, fuzzy
msgid ""
"When called with standard input connected to a tty device, it prompts for "
"commands and executes them until an EOF (an end-of-file character, you can "
"produce that with :kbd:`Ctrl-D` on UNIX or :kbd:`Ctrl-Z, Enter` on Windows) "
"is read."
msgstr ""
"當使用連接到 tty 設備的標準輸入呼叫時，它會提示輸入命令並執行它們直到出現 "
"EOF（一個文件結束符，您可以在 UNIX 上使用 :kbd:`Ctrl-D` 或 :kbd:` Ctrl-Z, "
"Enter` 在 Windows 上）被讀取。"

#: ../../using/cmdline.rst:45
#, fuzzy
msgid ""
"When called with a file name argument or with a file as standard input, it "
"reads and executes a script from that file."
msgstr "當使用文件名參數或將文件作為標準輸入呼叫時，它會從該文件讀取並執行腳本。"

#: ../../using/cmdline.rst:47
#, fuzzy
msgid ""
"When called with a directory name argument, it reads and executes an "
"appropriately named script from that directory."
msgstr "當使用目錄名稱參數呼叫時，它會從該目錄讀取並執行適當命名的腳本。"

#: ../../using/cmdline.rst:49
#, fuzzy
msgid ""
"When called with ``-c command``, it executes the Python statement(s) given "
"as *command*.  Here *command* may contain multiple statements separated by "
"newlines. Leading whitespace is significant in Python statements!"
msgstr ""
"當使用“-c command”呼叫時，它會執行作為 *command* 給出的 Python 語句。這裡 "
"*command* 可能包含多個由換行符分隔的語句。前導空格在 Python 語句中很重要！"

#: ../../using/cmdline.rst:52
#, fuzzy
msgid ""
"When called with ``-m module-name``, the given module is located on the "
"Python module path and executed as a script."
msgstr "當使用“-m 模組名稱”呼叫時，給定模組位於 Python 模組路徑上並作為腳本執行。"

#: ../../using/cmdline.rst:55
#, fuzzy
msgid ""
"In non-interactive mode, the entire input is parsed before it is executed."
msgstr "在非交互模式下，整個輸入在執行之前被解析。"

#: ../../using/cmdline.rst:57
#, fuzzy
msgid ""
"An interface option terminates the list of options consumed by the "
"interpreter, all consecutive arguments will end up in :data:`sys.argv` -- "
"note that the first element, subscript zero (``sys.argv[0]``), is a string "
"reflecting the program's source."
msgstr ""
"介面選項終止直譯器使用的選項列表，所有連續參數將以 :data:`sys.argv` "
"結尾——注意第一個元素，下標為零 (``sys.argv[0]``) , "
"是反映程式源的字串。"

#: ../../using/cmdline.rst:64
#, fuzzy
msgid ""
"Execute the Python code in *command*.  *command* can be one or more "
"statements separated by newlines, with significant leading whitespace as in "
"normal module code."
msgstr ""
"在 *command* 中執行 Python 程式碼。 *command* "
"可以是一個或多個由換行符分隔的語句，與普通模組程式碼一樣具有重要的前導空格。"

#: ../../using/cmdline.rst:68
#, fuzzy
msgid ""
"If this option is given, the first element of :data:`sys.argv` will be ``\"-"
"c\"`` and the current directory will be added to the start of :data:`sys."
"path` (allowing modules in that directory to be imported as top level "
"modules)."
msgstr ""
"如果給出此選項，則 :data:`sys.argv` 的第一個元素將為 ``\"-c\"`` "
"並且當前目錄將新增到 :data:`sys.path` "
"的開頭（允許模組在該目錄中作為頂級模組導入）。"

#: ../../using/cmdline.rst:73
msgid ""
"Raises an :ref:`auditing event <auditing>` ``cpython.run_command`` with "
"argument ``command``."
msgstr ""
"引發一個附帶引數 ``command`` 的\\ :ref:`稽核事件 <auditing>` ``cpython.run_command``。"

#: ../../using/cmdline.rst:77
#, fuzzy
msgid ""
"Search :data:`sys.path` for the named module and execute its contents as "
"the :mod:`__main__` module."
msgstr "在 :data:`sys.path` 中搜索命名模組，並將其內容作為 :mod:`__main__` 模組執行。"

#: ../../using/cmdline.rst:80
#, fuzzy
msgid ""
"Since the argument is a *module* name, you must not give a file extension "
"(``.py``).  The module name should be a valid absolute Python module name, "
"but the implementation may not always enforce this (e.g. it may allow you to "
"use a name that includes a hyphen)."
msgstr ""
"由於參數是 *module* 名稱，因此您不能提供文件擴充名 (``.py``)。"
"模組名稱應該是有效的絕對 Python 模組名稱，但實作可能並不總是強制執行這一點（"
"例如，它可能允許您使用包含連字元的名稱）。"

#: ../../using/cmdline.rst:85
#, fuzzy
msgid ""
"Package names (including namespace packages) are also permitted. When a "
"package name is supplied instead of a normal module, the interpreter will "
"execute ``<pkg>.__main__`` as the main module. This behaviour is "
"deliberately similar to the handling of directories and zipfiles that are "
"passed to the interpreter as the script argument."
msgstr ""
"包名稱（包括命名空間包）也是允許的。當提供包名而不是普通模組時，直譯器將執行 "
"``<pkg>.__main__`` "
"作為主模組。此行為故意類似於作為腳本參數傳遞給直譯器的目錄和壓縮文件的處理。"

#: ../../using/cmdline.rst:94
#, fuzzy
msgid ""
"This option cannot be used with built-in modules and extension modules "
"written in C, since they do not have Python module files. However, it can "
"still be used for precompiled modules, even if the original source file is "
"not available."
msgstr ""
"此選項不能與用 C 編寫的內建模組和擴充模組一起使用，因為它們沒有 Python "
"模組文件。但是，它仍然可以用於預編譯模組，即使原始源文件不可用。"

#: ../../using/cmdline.rst:99
#, fuzzy
msgid ""
"If this option is given, the first element of :data:`sys.argv` will be the "
"full path to the module file (while the module file is being located, the "
"first element will be set to ``\"-m\"``). As with the :option:`-c` option, "
"the current directory will be added to the start of :data:`sys.path`."
msgstr ""
"如果給出此選項，:data:`sys.argv` "
"的第一個元素將是模組文件的完整路徑（在定位模組文件時，第一個元素將設定為 ``\""
"-m\"` `）。與 :option:`-c` 選項一樣，當前目錄將新增到 :data:`sys.path` "
"的開頭。"

#: ../../using/cmdline.rst:104
#, fuzzy
msgid ""
":option:`-I` option can  be used to run the script in isolated mode where :"
"data:`sys.path` contains neither the current directory nor the user's site-"
"packages directory. All :envvar:`PYTHON*` environment variables are ignored, "
"too."
msgstr ""
":option:`-I` 選項可用於在隔離模式下運行腳本，其中 :data:`sys.path` "
"既不包含當前目錄也不包含使用者的站點包目錄。所有 :envvar:`PYTHON*` "
"環境變數也被忽略。"

#: ../../using/cmdline.rst:109
#, fuzzy
msgid ""
"Many standard library modules contain code that is invoked on their "
"execution as a script.  An example is the :mod:`timeit` module::"
msgstr "許多標準庫模組包含在作為腳本執行時呼叫的程式碼。一個例子是 :mod:`timeit` "
"模組::"

#: ../../using/cmdline.rst:115
msgid ""
"Raises an :ref:`auditing event <auditing>` ``cpython.run_module`` with "
"argument ``module-name``."
msgstr ""
"引發一個附帶引數 ``module-name`` 的\\ :ref:`稽核事件 <auditing>` ``cpython.run_module``。"

#: ../../using/cmdline.rst:119
msgid ":func:`runpy.run_module`"
msgstr ":func:`runpy.run_module`"

#: ../../using/cmdline.rst:119 ../../using/cmdline.rst:171
#, fuzzy
msgid "Equivalent functionality directly available to Python code"
msgstr "直接可用於 Python 程式碼的等效功能"

#: ../../using/cmdline.rst:121
#, fuzzy
msgid ":pep:`338` -- Executing modules as scripts"
msgstr ":pep:`338` -- 將模組作為腳本執行"

#: ../../using/cmdline.rst:123
#, fuzzy
msgid "Supply the package name to run a ``__main__`` submodule."
msgstr "提供包名稱以運行 ``__main__`` 子模組。"

#: ../../using/cmdline.rst:126
#, fuzzy
msgid "namespace packages are also supported"
msgstr "還支援命名空間包"

#: ../../using/cmdline.rst:133
#, fuzzy
msgid ""
"Read commands from standard input (:data:`sys.stdin`).  If standard input is "
"a terminal, :option:`-i` is implied."
msgstr "從標準輸入 (:data:`sys.stdin`) "
"讀取命令。如果標準輸入是終端，則隱含 :option:`-i`。"

#: ../../using/cmdline.rst:136
#, fuzzy
msgid ""
"If this option is given, the first element of :data:`sys.argv` will be ``\"-"
"\"`` and the current directory will be added to the start of :data:`sys."
"path`."
msgstr ""
"如果給出此選項，則 :data:`sys.argv` 的第一個元素將為 ``\"-\"`` "
"並且當前目錄將新增到 :data:`sys.path` 的開頭。"

#: ../../using/cmdline.rst:140
msgid ""
"Raises an :ref:`auditing event <auditing>` ``cpython.run_stdin`` with no "
"arguments."
msgstr ""
"引發一個不附帶引數的\\ :ref:`稽核事件 <auditing>` ``cpython.run_stdin``。"

#: ../../using/cmdline.rst:146
#, fuzzy
msgid ""
"Execute the Python code contained in *script*, which must be a filesystem "
"path (absolute or relative) referring to either a Python file, a directory "
"containing a ``__main__.py`` file, or a zipfile containing a ``__main__.py`` "
"file."
msgstr ""
"執行 *script* 中包含的 Python 程式碼，它必須是引用 Python 文件、包含 "
"``__main__.py`` 文件的目錄或包含 ``__main__.py 的 zip "
"文件的文件系統路徑（絕對或相對）。 py`` 文件。"

#: ../../using/cmdline.rst:151
#, fuzzy
msgid ""
"If this option is given, the first element of :data:`sys.argv` will be the "
"script name as given on the command line."
msgstr "如果給出此選項，則 :data:`sys.argv` 的第一個元素將是命令列中給出的腳本名稱。"

#: ../../using/cmdline.rst:154
#, fuzzy
msgid ""
"If the script name refers directly to a Python file, the directory "
"containing that file is added to the start of :data:`sys.path`, and the file "
"is executed as the :mod:`__main__` module."
msgstr ""
"如果腳本名稱直接引用 Python 文件，則包含該文件的目錄將新增到 :data:`sys.path`"
" 的開頭，並且該文件作為 :mod:`__main__` 模組執行。"

#: ../../using/cmdline.rst:158
#, fuzzy
msgid ""
"If the script name refers to a directory or zipfile, the script name is "
"added to the start of :data:`sys.path` and the ``__main__.py`` file in that "
"location is executed as the :mod:`__main__` module."
msgstr ""
"如果腳本名稱指的是目錄或 zip 文件，腳本名稱將新增到 :data:`sys.path` 的開頭，"
"並且該位置的 ``__main__.py`` 文件作為 :mod:`__main__ 執行`模組。"

#: ../../using/cmdline.rst:162
#, fuzzy
msgid ""
":option:`-I` option can  be used to run the script in isolated mode where :"
"data:`sys.path` contains neither the script's directory nor the user's site-"
"packages directory. All :envvar:`PYTHON*` environment variables are ignored, "
"too."
msgstr ""
":option:`-I` 選項可用於在隔離模式下運行腳本，其中 :data:`sys.path` "
"既不包含腳本的目錄，也不包含使用者的站點包目錄。所有 :envvar:`PYTHON*` "
"環境變數也被忽略。"

#: ../../using/cmdline.rst:167
#, fuzzy
msgid ""
"Raises an :ref:`auditing event <auditing>` ``cpython.run_file`` with "
"argument ``filename``."
msgstr ""
"使用參數 ``filename`` 引發 :ref:`auditing 事件 <auditing>` ``cpython."
"run_file``。"

#: ../../using/cmdline.rst:170
msgid ":func:`runpy.run_path`"
msgstr ":func:`runpy.run_path`"

#: ../../using/cmdline.rst:174
#, fuzzy
msgid ""
"If no interface option is given, :option:`-i` is implied, ``sys.argv[0]`` is "
"an empty string (``\"\"``) and the current directory will be added to the "
"start of :data:`sys.path`.  Also, tab-completion and history editing is "
"automatically enabled, if available on your platform (see :ref:`rlcompleter-"
"config`)."
msgstr ""
"如果沒有給出介面選項，則隱含 :option:`-i`，``sys.argv[0]`` 是一個空字串（``\""
"\"``），當前目錄將被新增到 :data:`sys.path`。此外，如果您的平台可用（請參閱 "
":ref:`rlcompleter-config`），也會自動啟用製表符補全和歷史記錄編輯。"

#: ../../using/cmdline.rst:180
msgid ":ref:`tut-invoking`"
msgstr ":ref:`tut-invoking`"

#: ../../using/cmdline.rst:182
#, fuzzy
msgid "Automatic enabling of tab-completion and history editing."
msgstr "自動啟用選項卡完成和歷史編輯。"

#: ../../using/cmdline.rst:189
#, fuzzy
msgid "Generic options"
msgstr "通用選項"

#: ../../using/cmdline.rst:195
#, fuzzy
msgid ""
"Print a short description of all command line options and corresponding "
"environment variables and exit."
msgstr "印出所有命令列選項和相應環境變數的簡短描述並退出。"

#: ../../using/cmdline.rst:200
#, fuzzy
msgid ""
"Print a short description of Python-specific environment variables and exit."
msgstr "印出 Python 特定環境變數的簡短描述並退出。"

#: ../../using/cmdline.rst:207
#, fuzzy
msgid ""
"Print a description of implementation-specific :option:`-X` options and exit."
msgstr "印出特定於實作的描述 :option:`-X` 選項並退出。"

#: ../../using/cmdline.rst:214
msgid "Print complete usage information and exit."
msgstr "印出完整使用資訊並離開。"

#: ../../using/cmdline.rst:221
#, fuzzy
msgid "Print the Python version number and exit.  Example output could be:"
msgstr "印出 Python 版本號並退出。示例輸出可能是："

#: ../../using/cmdline.rst:227
#, fuzzy
msgid "When given twice, print more information about the build, like:"
msgstr "給出兩次時，印出有關構建的更多資訊，例如："

#: ../../using/cmdline.rst:234
msgid "The ``-VV`` option."
msgstr "``-VV`` 選項"

#: ../../using/cmdline.rst:241
#, fuzzy
msgid "Miscellaneous options"
msgstr "雜項選項"

#: ../../using/cmdline.rst:245
#, fuzzy
msgid ""
"Issue a warning when comparing :class:`bytes` or :class:`bytearray` with :"
"class:`str` or :class:`bytes` with :class:`int`.  Issue an error when the "
"option is given twice (:option:`!-bb`)."
msgstr ""
"比較 :class:`bytes` 或 :class:`bytearray` 與 :class:`str` 或 :class:`bytes` "
"與 :class:`int` 時發出警告。當選項給出兩次時發出錯誤 (:option:`!-bb`)。"

#: ../../using/cmdline.rst:249
#, fuzzy
msgid "Affects comparisons of :class:`bytes` with :class:`int`."
msgstr "影響 :class:`bytes` 與 :class:`int` 的比較。"

#: ../../using/cmdline.rst:254
#, fuzzy
msgid ""
"If given, Python won't try to write ``.pyc`` files on the import of source "
"modules.  See also :envvar:`PYTHONDONTWRITEBYTECODE`."
msgstr ""
"如果給定，Python 將不會嘗試在導入源模組時編寫 ``.pyc`` "
"文件。另見 :envvar:`PYTHONDONTWRITEBYTECODE`。"

#: ../../using/cmdline.rst:260
#, fuzzy
msgid ""
"Control the validation behavior of hash-based ``.pyc`` files. See :ref:`pyc-"
"invalidation`. When set to ``default``, checked and unchecked hash-based "
"bytecode cache files are validated according to their default semantics. "
"When set to ``always``, all hash-based ``.pyc`` files, whether checked or "
"unchecked, are validated against their corresponding source file. When set "
"to ``never``, hash-based ``.pyc`` files are not validated against their "
"corresponding source files."
msgstr ""
"控制基於散列的 .pyc 文件的驗證行為。參見 :ref:`pyc-invalidation`。當設定為“預"
"設”時，選中和未選中的基於雜湊的位元組碼快取文件根據其預設語義進行驗證。當設定"
"為 ``always``時，所有基於散列的“.pyc”文件，無論是選中還是未選中，都會根據其相應"
"的源文件進行驗證。當設定為“從不”時，基於雜湊的“."
"pyc”文件不會針對其相應的源文件進行驗證。"

#: ../../using/cmdline.rst:268
#, fuzzy
msgid ""
"The semantics of timestamp-based ``.pyc`` files are unaffected by this "
"option."
msgstr "基於時間戳的“.pyc”文件的語義不受此選項的影響。"

#: ../../using/cmdline.rst:274
#, fuzzy
msgid ""
"Turn on parser debugging output (for expert only, depending on compilation "
"options).  See also :envvar:`PYTHONDEBUG`."
msgstr "打開解析器除錯輸出（僅供專家使用，具體取決於編譯選項）。另見 :envvar:`PYTHOND"
"EBUG`。"

#: ../../using/cmdline.rst:280
#, fuzzy
msgid ""
"Ignore all :envvar:`PYTHON*` environment variables, e.g. :envvar:"
"`PYTHONPATH` and :envvar:`PYTHONHOME`, that might be set."
msgstr ""
"忽略所有 :envvar:`PYTHON*` 環境變數，例如 :envvar:`PYTHONPATH` 和 "
":envvar:`PYTHONHOME`，可能會被設定。"

#: ../../using/cmdline.rst:283
#, fuzzy
msgid "See also the :option:`-P` and :option:`-I` (isolated) options."
msgstr "另請參閱 :option:`-P` 和 :option:`-I` （獨立）選項。"

#: ../../using/cmdline.rst:288
#, fuzzy
msgid ""
"When a script is passed as first argument or the :option:`-c` option is "
"used, enter interactive mode after executing the script or the command, even "
"when :data:`sys.stdin` does not appear to be a terminal.  The :envvar:"
"`PYTHONSTARTUP` file is not read."
msgstr ""
"當腳本作為第一個參數傳遞或使用 :option:`-c` "
"選項時，在執行腳本或命令後進入交互模式，即使 :data:`sys.stdin` "
"看起來不是終端。 :envvar:`PYTHONSTARTUP` 文件未被讀取。"

#: ../../using/cmdline.rst:293
#, fuzzy
msgid ""
"This can be useful to inspect global variables or a stack trace when a "
"script raises an exception.  See also :envvar:`PYTHONINSPECT`."
msgstr "當腳本引發例外時，這對於檢查全局變數或堆疊跟踪很有用。另見 :envvar:`PYTHONINS"
"PECT`。"

#: ../../using/cmdline.rst:299
#, fuzzy
msgid ""
"Run Python in isolated mode. This also implies :option:`-E`, :option:`-P` "
"and :option:`-s` options."
msgstr "以隔離模式運行 Python。這也意味著 :option:`-E`、:option:`-P` 和 :option:`-s` "
"選項。"

#: ../../using/cmdline.rst:302
#, fuzzy
msgid ""
"In isolated mode :data:`sys.path` contains neither the script's directory "
"nor the user's site-packages directory. All :envvar:`PYTHON*` environment "
"variables are ignored, too. Further restrictions may be imposed to prevent "
"the user from injecting malicious code."
msgstr ""
"在隔離模式下 :data:`sys.path` "
"既不包含腳本的目錄，也不包含使用者的站點包目錄。所有 :envvar:`PYTHON*` "
"環境變數也被忽略。可以施加進一步的限制以防止使用者注入惡意程式碼。"

#: ../../using/cmdline.rst:312
#, fuzzy
msgid ""
"Remove assert statements and any code conditional on the value of :const:"
"`__debug__`.  Augment the filename for compiled (:term:`bytecode`) files by "
"adding ``.opt-1`` before the ``.pyc`` extension (see :pep:`488`).  See also :"
"envvar:`PYTHONOPTIMIZE`."
msgstr ""
"刪除斷言語句和任何以 :const:`__debug__` 的值為條件的程式碼。通過在 `.pyc`` "
"擴充名之前新增 ``.opt-1`` 來增加已編譯（:term:`bytecode`）文件的文件名（參見 "
":pep:`488`）。另見 :envvar:`PYTHONOPTIMIZE`。"

#: ../../using/cmdline.rst:317 ../../using/cmdline.rst:327
#, fuzzy
msgid "Modify ``.pyc`` filenames according to :pep:`488`."
msgstr "根據 :pep:`488` 修改 ``.pyc`` 文件名。"

#: ../../using/cmdline.rst:323
#, fuzzy
msgid ""
"Do :option:`-O` and also discard docstrings.  Augment the filename for "
"compiled (:term:`bytecode`) files by adding ``.opt-2`` before the ``.pyc`` "
"extension (see :pep:`488`)."
msgstr ""
"執行 :option:`-O` 並丟棄文檔字串。通過在 `.pyc`` 擴充名之前新增 ``.opt-2`` "
"來增加已編譯（:term:`bytecode`）文件的文件名（參見 :pep:`488`）。"

#: ../../using/cmdline.rst:333
#, fuzzy
msgid "Don't prepend a potentially unsafe path to :data:`sys.path`:"
msgstr "不要將可能不安全的路徑新增到 :data:`sys.path`："

#: ../../using/cmdline.rst:335
#, fuzzy
msgid ""
"``python -m module`` command line: Don't prepend the current working "
"directory."
msgstr "``python -m module`` 命令列：不要新增當前工作目錄。"

#: ../../using/cmdline.rst:337
#, fuzzy
msgid ""
"``python script.py`` command line: Don't prepend the script's directory. If "
"it's a symbolic link, resolve symbolic links."
msgstr "``python script.py`` 命令列：不要新增腳本目錄。如果是符號鏈接，解析符號鏈接。"

#: ../../using/cmdline.rst:339
#, fuzzy
msgid ""
"``python -c code`` and ``python`` (REPL) command lines: Don't prepend an "
"empty string, which means the current working directory."
msgstr "``python -c code`` 和 ``python`` (REPL) "
"命令列：不要在前面加上空字串，這表示當前工作目錄。"

#: ../../using/cmdline.rst:342
#, fuzzy
msgid ""
"See also the :envvar:`PYTHONSAFEPATH` environment variable, and :option:`-E` "
"and :option:`-I` (isolated) options."
msgstr "另請參閱 :envvar:`PYTHONSAFEPATH` 環境變數，以及 :option:`-E` "
"和 :option:`-I`（獨立）選項。"

#: ../../using/cmdline.rst:350
#, fuzzy
msgid ""
"Don't display the copyright and version messages even in interactive mode."
msgstr "即使在交互模式下也不要顯示版權和版本消息。"

#: ../../using/cmdline.rst:357
#, fuzzy
msgid ""
"Turn on hash randomization. This option only has an effect if the :envvar:"
"`PYTHONHASHSEED` environment variable is set to ``0``, since hash "
"randomization is enabled by default."
msgstr "打開雜湊隨機化。此選項僅在 PYTHONHASHSEED 環境變數設定為 0 "
"時有效，因為預設情況下啟用雜湊隨機化。"

#: ../../using/cmdline.rst:361
#, fuzzy
msgid ""
"On previous versions of Python, this option turns on hash randomization, so "
"that the :meth:`__hash__` values of str and bytes objects are \"salted\" "
"with an unpredictable random value.  Although they remain constant within an "
"individual Python process, they are not predictable between repeated "
"invocations of Python."
msgstr ""
"在以前的 Python 版本中，此選項會啟用散列隨機化，因此 str 和 bytes 物件的 "
":meth:`__hash__` 值被“加鹽”為不可預測的隨機值。儘管它們在單個 Python "
"行程中保持不變，但它們在 Python 的重複呼叫之間不可預測。"

#: ../../using/cmdline.rst:367
#, fuzzy
msgid ""
"Hash randomization is intended to provide protection against a denial-of-"
"service caused by carefully chosen inputs that exploit the worst case "
"performance of a dict construction, O(n\\ :sup:`2`) complexity.  See http://"
"www.ocert.org/advisories/ocert-2011-003.html for details."
msgstr ""
"雜湊隨機化旨在提供保護，防止由精心選擇的輸入引起的拒絕服務，這些輸入利用了 "
"dict 構造的最壞情況性能，O(n\\ :sup:`2`) 複雜度。有關詳細資訊，請參閱 "
"http://www.ocert.org/advisories/ocert-2011-003.html。"

#: ../../using/cmdline.rst:372
#, fuzzy
msgid ""
":envvar:`PYTHONHASHSEED` allows you to set a fixed value for the hash seed "
"secret."
msgstr ":envvar:`PYTHONHASHSEED` 允許您為雜湊種子秘密設定一個固定值。"

#: ../../using/cmdline.rst:375
#, fuzzy
msgid "The option is no longer ignored."
msgstr "該選項不再被忽略。"

#: ../../using/cmdline.rst:383
#, fuzzy
msgid ""
"Don't add the :data:`user site-packages directory <site.USER_SITE>` to :data:"
"`sys.path`."
msgstr ""
"不要將 :data:`user site-packages 目錄 <site.USER_SITE>` 新增到 :data:`sys."
"path`。"

#: ../../using/cmdline.rst:388 ../../using/cmdline.rst:793
#: ../../using/cmdline.rst:805
#, fuzzy
msgid ":pep:`370` -- Per user site-packages directory"
msgstr ":pep:`370` -- 每個使用者站點包目錄"

#: ../../using/cmdline.rst:393
#, fuzzy
msgid ""
"Disable the import of the module :mod:`site` and the site-dependent "
"manipulations of :data:`sys.path` that it entails.  Also disable these "
"manipulations if :mod:`site` is explicitly imported later (call :func:`site."
"main` if you want them to be triggered)."
msgstr ""
"禁用模組 :mod:`site` 的導入和它需要的 :data:`sys.path` 的站點相關操作。"
"如果稍後顯式導入 :mod:`site`，也禁用這些操作（如果您希望觸發它們，請呼叫 "
":func:`site.main`）。"

#: ../../using/cmdline.rst:401
#, fuzzy
msgid ""
"Force the stdout and stderr streams to be unbuffered.  This option has no "
"effect on the stdin stream."
msgstr "強制不緩衝 stdout 和 stderr 流。此選項對標準輸入流沒有影響。"

#: ../../using/cmdline.rst:404
msgid "See also :envvar:`PYTHONUNBUFFERED`."
msgstr "另請參閱 :envvar:`PYTHONUNBUFFERED`\\ 。"

#: ../../using/cmdline.rst:406
#, fuzzy
msgid "The text layer of the stdout and stderr streams now is unbuffered."
msgstr "stdout 和 stderr 流的文本層現在是無緩衝的。"

#: ../../using/cmdline.rst:412
#, fuzzy
msgid ""
"Print a message each time a module is initialized, showing the place "
"(filename or built-in module) from which it is loaded.  When given twice (:"
"option:`!-vv`), print a message for each file that is checked for when "
"searching for a module.  Also provides information on module cleanup at exit."
msgstr ""
"每次初始化模組時印出一條消息，顯示加載它的位置（文件名或內建模組）。當給定兩"
"次（:option:`!-vv`）時，為搜索模組時檢查的每個文件印出一條消息。還提供有關退"
"出時模組清理的資訊。"

#: ../../using/cmdline.rst:417
#, fuzzy
msgid ""
"The :mod:`site` module reports the site-specific paths and :file:`.pth` "
"files being processed."
msgstr ":mod:`site` 模組報告特定於站點的路徑和正在處理的 :file:`.pth` 文件。"

#: ../../using/cmdline.rst:421
msgid "See also :envvar:`PYTHONVERBOSE`."
msgstr "另請參閱 :envvar:`PYTHONVERBOSE`\\ 。"

#: ../../using/cmdline.rst:427
#, fuzzy
msgid ""
"Warning control. Python's warning machinery by default prints warning "
"messages to :data:`sys.stderr`."
msgstr "警告控制。 Python 的警告機制預設將警告消息印出到 :data:`sys.stderr`。"

#: ../../using/cmdline.rst:430 ../../using/cmdline.rst:821
#, fuzzy
msgid ""
"The simplest settings apply a particular action unconditionally to all "
"warnings emitted by a process (even those that are otherwise ignored by "
"default)::"
msgstr "最簡單的設定無條件地將特定操作應用於行程發出的所有警告（即使是那些預設情況下"
"被忽略的警告）："

#: ../../using/cmdline.rst:441
#, fuzzy
msgid ""
"The action names can be abbreviated as desired and the interpreter will "
"resolve them to the appropriate action name. For example, ``-Wi`` is the "
"same as ``-Wignore``."
msgstr "動作名稱可以根據需要縮寫，直譯器會將它們解析為適當的動作名稱。例如，``-Wi`` "
"與``-Wignore`` 相同。"

#: ../../using/cmdline.rst:445
#, fuzzy
msgid "The full form of argument is::"
msgstr "論證的完整形式是："

#: ../../using/cmdline.rst:449
#, fuzzy
msgid ""
"Empty fields match all values; trailing empty fields may be omitted. For "
"example ``-W ignore::DeprecationWarning`` ignores all DeprecationWarning "
"warnings."
msgstr ""
"空欄位匹配所有值；可以省略尾隨的空欄位。例如 ``-W "
"ignore::DeprecationWarning`` 忽略所有 DeprecationWarning 警告。"

#: ../../using/cmdline.rst:453
#, fuzzy
msgid ""
"The *action* field is as explained above but only applies to warnings that "
"match the remaining fields."
msgstr "*action* 欄位如上所述，但僅適用於與其餘欄位匹配的警告。"

#: ../../using/cmdline.rst:456
#, fuzzy
msgid ""
"The *message* field must match the whole warning message; this match is case-"
"insensitive."
msgstr "*message* 欄位必須匹配整個警告消息；此匹配不區分大小寫。"

#: ../../using/cmdline.rst:459
#, fuzzy
msgid ""
"The *category* field matches the warning category (ex: "
"``DeprecationWarning``). This must be a class name; the match test whether "
"the actual warning category of the message is a subclass of the specified "
"warning category."
msgstr ""
"*category* "
"欄位匹配警告類別（例如：``DeprecationWarning``）。這必須是一個類名； match "
"測試消息的實際警告類別是否是指定警告類別的子類別。"

#: ../../using/cmdline.rst:464
#, fuzzy
msgid ""
"The *module* field matches the (fully qualified) module name; this match is "
"case-sensitive."
msgstr "*module* 欄位匹配（完全限定的）模組名稱；此匹配區分大小寫。"

#: ../../using/cmdline.rst:467
#, fuzzy
msgid ""
"The *lineno* field matches the line number, where zero matches all line "
"numbers and is thus equivalent to an omitted line number."
msgstr "*lineno* 欄位匹配行號，其中零匹配所有行號，因此相當於省略的行號。"

#: ../../using/cmdline.rst:470
#, fuzzy
msgid ""
"Multiple :option:`-W` options can be given; when a warning matches more than "
"one option, the action for the last matching option is performed. Invalid :"
"option:`-W` options are ignored (though, a warning message is printed about "
"invalid options when the first warning is issued)."
msgstr ""
"可以給出多個 :option:`-W` "
"選項；當警告匹配多個選項時，執行最後一個匹配選項的操作。無效的 :option:`-W` "
"選項將被忽略（儘管在發出第一個警告時會印出一條關於無效選項的警告消息）。"

#: ../../using/cmdline.rst:475
#, fuzzy
msgid ""
"Warnings can also be controlled using the :envvar:`PYTHONWARNINGS` "
"environment variable and from within a Python program using the :mod:"
"`warnings` module. For example, the :func:`warnings.filterwarnings` function "
"can be used to use a regular expression on the warning message."
msgstr ""
"也可以使用 PYTHONWARNINGS 環境變數和使用 :mod:`warnings` 模組在 Python "
"程式中控制警告。例如，:func:`warnings.filterwarnings` "
"函式可用於在警告消息上使用正則表達式。"

#: ../../using/cmdline.rst:480 ../../using/cmdline.rst:832
#, fuzzy
msgid ""
"See :ref:`warning-filter` and :ref:`describing-warning-filters` for more "
"details."
msgstr "有關詳細資訊，請參閱 :ref:`warning-filter` 和 :ref:`describing-warning-"
"filters`。"

#: ../../using/cmdline.rst:486
#, fuzzy
msgid ""
"Skip the first line of the source, allowing use of non-Unix forms of ``#!"
"cmd``.  This is intended for a DOS specific hack only."
msgstr "跳過源程式碼的第一行，允許使用非 Unix 形式的“#!cmd”。這僅適用於特定於 DOS 的 "
"hack。"

#: ../../using/cmdline.rst:492
#, fuzzy
msgid ""
"Reserved for various implementation-specific options.  CPython currently "
"defines the following possible values:"
msgstr "為各種特定於實作的選項保留。 CPython 目前定義了以下可能的值："

#: ../../using/cmdline.rst:495
#, fuzzy
msgid ""
"``-X faulthandler`` to enable :mod:`faulthandler`. See also :envvar:"
"`PYTHONFAULTHANDLER`."
msgstr ""
"``-X faulthandler`` 啟用 "
":mod:`faulthandler`。另見 :envvar:`PYTHONFAULTHANDLER`。"

#: ../../using/cmdline.rst:497
#, fuzzy
msgid ""
"``-X showrefcount`` to output the total reference count and number of used "
"memory blocks when the program finishes or after each statement in the "
"interactive interpreter. This only works on :ref:`debug builds <debug-"
"build>`."
msgstr ""
"``-X showrefcount`` "
"在程式結束時或在交互式直譯器中的每個語句之後輸出總引用計數和已用記憶體塊數。"
"這僅適用於 :ref:`debug builds <debug-build>`。"

#: ../../using/cmdline.rst:501
#, fuzzy
msgid ""
"``-X tracemalloc`` to start tracing Python memory allocations using the :mod:"
"`tracemalloc` module. By default, only the most recent frame is stored in a "
"traceback of a trace. Use ``-X tracemalloc=NFRAME`` to start tracing with a "
"traceback limit of *NFRAME* frames. See :func:`tracemalloc.start` and :"
"envvar:`PYTHONTRACEMALLOC` for more information."
msgstr ""
"``-X tracemalloc`` 使用 :mod:`tracemalloc` 模組開始跟踪 Python "
"記憶體分配。預設情況下，只有最近的幀儲存在跟踪的回溯中。使用 ``-X "
"tracemalloc=NFRAME`` 以 *NFRAME* "
"幀的回溯限制開始跟踪。有關詳細資訊，請參見 :func:`tracemalloc.start` "
"和 :envvar:`PYTHONTRACEMALLOC`。"

#: ../../using/cmdline.rst:507
#, fuzzy
msgid ""
"``-X int_max_str_digits`` configures the :ref:`integer string conversion "
"length limitation <int_max_str_digits>`.  See also :envvar:"
"`PYTHONINTMAXSTRDIGITS`."
msgstr ""
"``-X int_max_str_digits`` 配置 :ref:`整數字串轉換長度限制 "
"<int_max_str_digits>`。另見 :envvar:`PYTHONINTMAXSTRDIGITS`。"

#: ../../using/cmdline.rst:510
#, fuzzy
msgid ""
"``-X importtime`` to show how long each import takes. It shows module name, "
"cumulative time (including nested imports) and self time (excluding nested "
"imports).  Note that its output may be broken in multi-threaded "
"application.  Typical usage is ``python3 -X importtime -c 'import "
"asyncio'``.  See also :envvar:`PYTHONPROFILEIMPORTTIME`."
msgstr ""
"``-X importtime`` 顯示每次導入需要多長時間。它顯示模組名稱、累計時間（包括嵌"
"套導入）和自身時間（不包括嵌套導入）。請注意，它的輸出可能在多執行緒應用程式"
"中被破壞。典型用法是``python3 -X importtime -c 'import "
"asyncio'``。另見 :envvar:`PYTHONPROFILEIMPORTTIME`。"

#: ../../using/cmdline.rst:515
#, fuzzy
msgid ""
"``-X dev``: enable :ref:`Python Development Mode <devmode>`, introducing "
"additional runtime checks that are too expensive to be enabled by default."
msgstr ""
"``-X dev``: enable :ref:`Python Development Mode "
"<devmode>`，引入額外的運行時檢查，這些檢查太昂貴而無法預設啟用。"

#: ../../using/cmdline.rst:518
#, fuzzy
msgid ""
"``-X utf8`` enables the :ref:`Python UTF-8 Mode <utf8-mode>`. ``-X utf8=0`` "
"explicitly disables :ref:`Python UTF-8 Mode <utf8-mode>` (even when it would "
"otherwise activate automatically). See also :envvar:`PYTHONUTF8`."
msgstr ""
"``-X utf8`` 啟用 :ref:`Python UTF-8 模式 <utf8-mode>`。 ``-X utf8=0`` "
"顯式禁用 :ref:`Python UTF-8 模式 "
"<utf8-mode>`（即使它會自動激活）。另見 :envvar:`PYTHONUTF8`。"

#: ../../using/cmdline.rst:522
#, fuzzy
msgid ""
"``-X pycache_prefix=PATH`` enables writing ``.pyc`` files to a parallel tree "
"rooted at the given directory instead of to the code tree. See also :envvar:"
"`PYTHONPYCACHEPREFIX`."
msgstr ""
"``-X pycache_prefix=PATH`` 允許將 `.pyc`` 文件寫入以給定目錄為根的並行樹而不"
"是程式碼樹。另見 :envvar:`PYTHONPYCACHEPREFIX`。"

#: ../../using/cmdline.rst:525
#, fuzzy
msgid ""
"``-X warn_default_encoding`` issues a :class:`EncodingWarning` when the "
"locale-specific default encoding is used for opening files. See also :envvar:"
"`PYTHONWARNDEFAULTENCODING`."
msgstr ""
"當特定於語言環境的預設編碼用於打開文件時，``-X warn_default_encoding`` "
"會發出 EncodingWarning。另見 :envvar:`PYTHONWARNDEFAULTENCODING`。"

#: ../../using/cmdline.rst:528
#, fuzzy
msgid ""
"``-X no_debug_ranges`` disables the inclusion of the tables mapping extra "
"location information (end line, start column offset and end column offset) "
"to every instruction in code objects. This is useful when smaller code "
"objects and pyc files are desired as well as suppressing the extra visual "
"location indicators when the interpreter displays tracebacks. See also :"
"envvar:`PYTHONNODEBUGRANGES`."
msgstr ""
"``-X no_debug_ranges`` 禁用將額外位置資訊（結束行、開始列偏移量和結束列偏移量"
"）映射到程式碼對像中的每條指令的表。這在需要較小的程式碼物件和 pyc 文件以及在"
"直譯器顯示回溯時抑制額外的視覺位置指示器時很有用。另見 :envvar:`PYTHONNODEBUG"
"RANGES`。"

#: ../../using/cmdline.rst:534
#, fuzzy
msgid ""
"``-X frozen_modules`` determines whether or not frozen modules are ignored "
"by the import machinery.  A value of \"on\" means they get imported and "
"\"off\" means they are ignored.  The default is \"on\" if this is an "
"installed Python (the normal case).  If it's under development (running from "
"the source tree) then the default is \"off\". Note that the "
"\"importlib_bootstrap\" and \"importlib_bootstrap_external\" frozen modules "
"are always used, even if this flag is set to \"off\"."
msgstr ""
"``-X frozen_modules`` 確定凍結模組是否被導入機制忽略。 "
" ``on``值表示它們被導入， ``off``表示它們被忽略。如果這是已安裝的 Python（正常情況"
"），則預設值為 ``on``。如果它正在開發中（從源程式碼樹運行），則預設為“關閉”。請"
"注意，始終使用“importlib_bootstrap”和“importlib_bootstrap_external”凍結模組，"
"即使此旗標設定為 ``off``也是如此。"

#: ../../using/cmdline.rst:542
#, fuzzy
msgid ""
"It also allows passing arbitrary values and retrieving them through the :"
"data:`sys._xoptions` dictionary."
msgstr "它還允許傳遞任意值並通過 :data:`sys._xoptions` 字典檢索它們。"

#: ../../using/cmdline.rst:545
msgid "The :option:`-X` option was added."
msgstr "新增 :option:`-X` 選項。"

#: ../../using/cmdline.rst:548
msgid "The ``-X faulthandler`` option."
msgstr "``-X faulthandler`` 選項。"

#: ../../using/cmdline.rst:551
msgid "The ``-X showrefcount`` and ``-X tracemalloc`` options."
msgstr "``-X showrefcount`` 和 ``-X tracemalloc`` 選項。"

#: ../../using/cmdline.rst:554
msgid "The ``-X showalloccount`` option."
msgstr "``-X showalloccount`` 選項。"

#: ../../using/cmdline.rst:557
msgid "The ``-X importtime``, ``-X dev`` and ``-X utf8`` options."
msgstr "``-X importtime``、``-X dev`` 和 ``-X utf8`` 選項。"

#: ../../using/cmdline.rst:560
#, fuzzy
msgid ""
"The ``-X pycache_prefix`` option. The ``-X dev`` option now logs ``close()`` "
"exceptions in :class:`io.IOBase` destructor."
msgstr ""
"``-X pycache_prefix`` 選項。 ``-X dev`` 選項現在在 io.IOBase` 析構函式中記錄 "
"``close()`` 例外。"

#: ../../using/cmdline.rst:564
#, fuzzy
msgid ""
"Using ``-X dev`` option, check *encoding* and *errors* arguments on string "
"encoding and decoding operations."
msgstr "使用“-X dev”選項，檢查字串編碼和解碼操作的*encoding* 和*errors* 參數。"

#: ../../using/cmdline.rst:568
msgid "The ``-X showalloccount`` option has been removed."
msgstr "``-X showalloccount`` 選項已被移除。"

#: ../../using/cmdline.rst:570
msgid "The ``-X warn_default_encoding`` option."
msgstr "``-X warn_default_encoding`` 選項。"

#: ../../using/cmdline.rst:575
msgid "The ``-X oldparser`` option."
msgstr "``-X oldparser`` 選項。"

#: ../../using/cmdline.rst:576
msgid "The ``-X no_debug_ranges`` option."
msgstr "``-X no_debug_ranges`` 選項。"

#: ../../using/cmdline.rst:579
msgid "The ``-X frozen_modules`` option."
msgstr "``-X frozen_modules`` 選項。"

#: ../../using/cmdline.rst:582
msgid "The ``-X int_max_str_digits`` option."
msgstr "``-X int_max_str_digits`` 選項。"

#: ../../using/cmdline.rst:587
msgid "Options you shouldn't use"
msgstr "你不該使用的選項"

#: ../../using/cmdline.rst:591
#, fuzzy
msgid "Reserved for use by Jython_."
msgstr "保留供 Jython_ 使用。"

#: ../../using/cmdline.rst:599
msgid "Environment variables"
msgstr "環境變數"

#: ../../using/cmdline.rst:601
#, fuzzy
msgid ""
"These environment variables influence Python's behavior, they are processed "
"before the command-line switches other than -E or -I.  It is customary that "
"command-line switches override environmental variables where there is a "
"conflict."
msgstr "這些環境變數影響 Python 的行為，它們在除 -E 或 -I "
"之外的命令列開關之前處理。通常命令列開關會在有衝突的地方覆蓋環境變數。"

#: ../../using/cmdline.rst:608
#, fuzzy
msgid ""
"Change the location of the standard Python libraries.  By default, the "
"libraries are searched in :file:`{prefix}/lib/python{version}` and :file:"
"`{exec_prefix}/lib/python{version}`, where :file:`{prefix}` and :file:"
"`{exec_prefix}` are installation-dependent directories, both defaulting to :"
"file:`/usr/local`."
msgstr ""
"更改標準 Python 庫的位置。預設情況下，在 :file:`{prefix}/lib/python{version}`"
" 和 :file:`{exec_prefix}/lib/python{version}` 中搜索庫，其中 :file:`{prefix}`"
" 和 :file:`{exec_prefix}` 是依賴於安裝的目錄，都預設為 :file:`/usr/local`。"

#: ../../using/cmdline.rst:614
#, fuzzy
msgid ""
"When :envvar:`PYTHONHOME` is set to a single directory, its value replaces "
"both :file:`{prefix}` and :file:`{exec_prefix}`.  To specify different "
"values for these, set :envvar:`PYTHONHOME` to :file:`{prefix}:{exec_prefix}`."
msgstr ""
"當 :envvar:`PYTHONHOME` 設定為單個目錄時，它的值將同時替換 :file:`{prefix}` "
"和 :file:`{exec_prefix}`。要為它們指定不同的值，請將 :envvar:`PYTHONHOME` "
"設定為 :file:`{prefix}:{exec_prefix}`。"

#: ../../using/cmdline.rst:621
#, fuzzy
msgid ""
"Augment the default search path for module files.  The format is the same as "
"the shell's :envvar:`PATH`: one or more directory pathnames separated by :"
"data:`os.pathsep` (e.g. colons on Unix or semicolons on Windows). Non-"
"existent directories are silently ignored."
msgstr ""
"增加模組文件的預設搜索路徑。格式與 shell 的 :envvar:`PATH` 相同："
"一個或多個目錄路徑名由 :data:`os.pathsep` 分隔（例如，Unix 上的冒號或 "
"Windows 上的分號）。不存在的目錄將被忽略。"

#: ../../using/cmdline.rst:626
#, fuzzy
msgid ""
"In addition to normal directories, individual :envvar:`PYTHONPATH` entries "
"may refer to zipfiles containing pure Python modules (in either source or "
"compiled form). Extension modules cannot be imported from zipfiles."
msgstr ""
"除了普通目錄之外，各個 :envvar:`PYTHONPATH` 條目可能引用包含純 Python "
"模組（源程式碼或編譯形式）的 zip 文件。不能從 zip 文件導入擴充模組。"

#: ../../using/cmdline.rst:630
#, fuzzy
msgid ""
"The default search path is installation dependent, but generally begins "
"with :file:`{prefix}/lib/python{version}` (see :envvar:`PYTHONHOME` above).  "
"It is *always* appended to :envvar:`PYTHONPATH`."
msgstr ""
"預設搜索路徑取決於安裝，但通常以 :file:`{prefix}/lib/python{version}` 開頭（"
"參見上面的 :envvar:`PYTHONHOME`）。它*總是*附加到 :envvar:`PYTHONPATH`。"

#: ../../using/cmdline.rst:634
#, fuzzy
msgid ""
"An additional directory will be inserted in the search path in front of :"
"envvar:`PYTHONPATH` as described above under :ref:`using-on-interface-"
"options`. The search path can be manipulated from within a Python program as "
"the variable :data:`sys.path`."
msgstr ""
"將在 :envvar:`PYTHONPATH` 前面的搜索路徑中插入一個附加目錄，如上文 :ref"
":`using-on-interface-options` 中所述。搜索路徑可以在 Python 程式中作為變數 "
":data:`sys.path` 進行操作。"

#: ../../using/cmdline.rst:642
#, fuzzy
msgid ""
"If this is set to a non-empty string, don't prepend a potentially unsafe "
"path to :data:`sys.path`: see the :option:`-P` option for details."
msgstr ""
"如果將其設定為非空字串，請不要在 :data:`sys.path` "
"前新增一個可能不安全的路徑：有關詳細資訊，請參閱 :option:`-P` 選項。"

#: ../../using/cmdline.rst:650
#, fuzzy
msgid ""
"If this is set to a non-empty string, it overrides the :data:`sys."
"platlibdir` value."
msgstr "如果將其設定為非空字串，它將覆蓋 :data:`sys.platlibdir` 值。"

#: ../../using/cmdline.rst:658
#, fuzzy
msgid ""
"If this is the name of a readable file, the Python commands in that file are "
"executed before the first prompt is displayed in interactive mode.  The file "
"is executed in the same namespace where interactive commands are executed so "
"that objects defined or imported in it can be used without qualification in "
"the interactive session.  You can also change the prompts :data:`sys.ps1` "
"and :data:`sys.ps2` and the hook :data:`sys.__interactivehook__` in this "
"file."
msgstr ""
"如果這是可讀文件的名稱，則在以交互模式顯示第一個提示之前執行該文件中的 "
"Python 命令。該文件在執行交互式命令的相同名稱空間中執行，以便在交互式會話中可"
"以在沒有資格的情況下使用在其中定義或導入的物件。您還可以在此文件中更改提示 "
":data:`sys.ps1` 和 :data:`sys.ps2` 以及鉤子 :data:`sys.__interactivehook__`。"

#: ../../using/cmdline.rst:665
msgid ""
"Raises an :ref:`auditing event <auditing>` ``cpython.run_startup`` with "
"argument ``filename``."
msgstr ""
"引發一個附帶引數 ``filename`` 的\\ :ref:`稽核事件 <auditing>` ``cpython.run_startup``。"

#: ../../using/cmdline.rst:667
msgid ""
"Raises an :ref:`auditing event <auditing>` ``cpython.run_startup`` with the "
"filename as the argument when called on startup."
msgstr ""
"引發一個附帶呼叫啟動時的檔案名稱為引數的\\ :ref:`稽核事件 <auditing>` ``cpython.run_startup``。"

#: ../../using/cmdline.rst:673
#, fuzzy
msgid ""
"If this is set to a non-empty string it is equivalent to specifying the :"
"option:`-O` option.  If set to an integer, it is equivalent to specifying :"
"option:`-O` multiple times."
msgstr "如果將其設定為非空字串，則等效於指定 :option:`-O` "
"選項。如果設定為整數，則相當於多次指定 :option:`-O`。"

#: ../../using/cmdline.rst:680
#, fuzzy
msgid ""
"If this is set, it names a callable using dotted-path notation.  The module "
"containing the callable will be imported and then the callable will be run "
"by the default implementation of :func:`sys.breakpointhook` which itself is "
"called by built-in :func:`breakpoint`.  If not set, or set to the empty "
"string, it is equivalent to the value \"pdb.set_trace\".  Setting this to "
"the string \"0\" causes the default implementation of :func:`sys."
"breakpointhook` to do nothing but return immediately."
msgstr ""
"如果設定了此項，它將使用點路徑表示法命名一個可呼叫物件。包含可呼叫文件的模組"
"將被導入，然後可呼叫文件將由 :func:`sys.breakpointhook` 的預設實作運行，"
"它本身由內建的 :func:`breakpoint` "
"呼叫。如果不設定，或者設定為空字串，則相當於值“pdb."
"set_trace”。將其設定為字串 ``0``會導致 :func:`sys.breakpointhook` "
"的預設實作除了立即回傳外什麼都不做。"

#: ../../using/cmdline.rst:692
#, fuzzy
msgid ""
"If this is set to a non-empty string it is equivalent to specifying the :"
"option:`-d` option.  If set to an integer, it is equivalent to specifying :"
"option:`-d` multiple times."
msgstr "如果將其設定為非空字串，則等效於指定 :option:`-d` "
"選項。如果設定為整數，則相當於多次指定 :option:`-d`。"

#: ../../using/cmdline.rst:699
#, fuzzy
msgid ""
"If this is set to a non-empty string it is equivalent to specifying the :"
"option:`-i` option."
msgstr "如果將其設定為非空字串，則等效於指定 :option:`-i` 選項。"

#: ../../using/cmdline.rst:702
#, fuzzy
msgid ""
"This variable can also be modified by Python code using :data:`os.environ` "
"to force inspect mode on program termination."
msgstr "這個變數也可以通過 Python 程式碼使用 os.environ "
"來修改，以在程式終止時強制檢查模式。"

#: ../../using/cmdline.rst:708
#, fuzzy
msgid ""
"If this is set to a non-empty string it is equivalent to specifying the :"
"option:`-u` option."
msgstr "如果將其設定為非空字串，則等效於指定 :option:`-u` 選項。"

#: ../../using/cmdline.rst:714
#, fuzzy
msgid ""
"If this is set to a non-empty string it is equivalent to specifying the :"
"option:`-v` option.  If set to an integer, it is equivalent to specifying :"
"option:`-v` multiple times."
msgstr "如果將其設定為非空字串，則等效於指定 :option:`-v` "
"選項。如果設定為整數，則相當於多次指定 :option:`-v`。"

#: ../../using/cmdline.rst:721
#, fuzzy
msgid ""
"If this is set, Python ignores case in :keyword:`import` statements.  This "
"only works on Windows and macOS."
msgstr "如果設定了此項，Python 將忽略 :keyword:`import` 語句中的大小寫。這僅適用於 "
"Windows 和 macOS。"

#: ../../using/cmdline.rst:727
#, fuzzy
msgid ""
"If this is set to a non-empty string, Python won't try to write ``.pyc`` "
"files on the import of source modules.  This is equivalent to specifying "
"the :option:`-B` option."
msgstr "如果將其設定為非空字串，Python 將不會嘗試在導入源模組時寫入 ``.pyc`` 文件。"
"這等同於指定 :option:`-B` 選項。"

#: ../../using/cmdline.rst:734
#, fuzzy
msgid ""
"If this is set, Python will write ``.pyc`` files in a mirror directory tree "
"at this path, instead of in ``__pycache__`` directories within the source "
"tree. This is equivalent to specifying the :option:`-X` "
"``pycache_prefix=PATH`` option."
msgstr ""
"如果設定了此項，Python 將在此路徑的鏡像目錄樹中寫入 .pyc 文件，"
"而不是源程式碼樹中的 __pycache__ 目錄。這相當於指定 :option:`-X` "
"``pycache_prefix=PATH`` 選項。"

#: ../../using/cmdline.rst:744
#, fuzzy
msgid ""
"If this variable is not set or set to ``random``, a random value is used to "
"seed the hashes of str and bytes objects."
msgstr "如果此變數未設定或設定為 ``random``，則使用隨機值作為 str 和 bytes "
"物件的雜湊值的種子。"

#: ../../using/cmdline.rst:747
#, fuzzy
msgid ""
"If :envvar:`PYTHONHASHSEED` is set to an integer value, it is used as a "
"fixed seed for generating the hash() of the types covered by the hash "
"randomization."
msgstr "如果 :envvar:`PYTHONHASHSEED` 設定為一個整數值，"
"它被用作生成雜湊隨機化所涵蓋型別的 hash() 的固定種子。"

#: ../../using/cmdline.rst:751
#, fuzzy
msgid ""
"Its purpose is to allow repeatable hashing, such as for selftests for the "
"interpreter itself, or to allow a cluster of python processes to share hash "
"values."
msgstr "它的目的是允許可重複的散列，例如用於直譯器本身的自檢，或允許 python "
"行程集群共享散列值。"

#: ../../using/cmdline.rst:755
#, fuzzy
msgid ""
"The integer must be a decimal number in the range [0,4294967295].  "
"Specifying the value 0 will disable hash randomization."
msgstr "整數必須是 [0,4294967295] 範圍內的十進位數。指定值 0 將禁用散列隨機化。"

#: ../../using/cmdline.rst:762
#, fuzzy
msgid ""
"If this variable is set to an integer, it is used to configure the "
"interpreter's global :ref:`integer string conversion length limitation "
"<int_max_str_digits>`."
msgstr "如果此變數設定為整數，則用於配置直譯器的全局 :ref:`整數字串轉換長度限制 "
"<int_max_str_digits>`。"

#: ../../using/cmdline.rst:770
#, fuzzy
msgid ""
"If this is set before running the interpreter, it overrides the encoding "
"used for stdin/stdout/stderr, in the syntax ``encodingname:errorhandler``.  "
"Both the ``encodingname`` and the ``:errorhandler`` parts are optional and "
"have the same meaning as in :func:`str.encode`."
msgstr ""
"如果這是在運行直譯器之前設定的，它將覆蓋用於 stdin/stdout/stderr "
"的編碼，在語法“encodingname:errorhandler”中。 ``encodingname`` 和 "
"``:errorhandler`` 部分都是可選的，並且與 :func:`str.encode` 中的含義相同。"

#: ../../using/cmdline.rst:775
#, fuzzy
msgid ""
"For stderr, the ``:errorhandler`` part is ignored; the handler will always "
"be ``'backslashreplace'``."
msgstr "對於 stderr，``:errorhandler`` 部分被忽略；處理程式將始終是 "
"``'backslashreplace'``。"

#: ../../using/cmdline.rst:778
#, fuzzy
msgid "The ``encodingname`` part is now optional."
msgstr "``encodingname`` 部分現在是可選的。"

#: ../../using/cmdline.rst:781
#, fuzzy
msgid ""
"On Windows, the encoding specified by this variable is ignored for "
"interactive console buffers unless :envvar:`PYTHONLEGACYWINDOWSSTDIO` is "
"also specified. Files and pipes redirected through the standard streams are "
"not affected."
msgstr ""
"在 Windows 上，交互式控制台緩衝區將忽略此變數指定的編碼，除非還指定了:envvar:"
"`PYTHONLEGACYWINDOWSTDIO`。通過標準流重定向的文件和管道不受影響。"

#: ../../using/cmdline.rst:788
#, fuzzy
msgid ""
"If this is set, Python won't add the :data:`user site-packages directory "
"<site.USER_SITE>` to :data:`sys.path`."
msgstr ""
"如果設定了此項，Python 將不會新增 :data:`user site-packages 目錄 <site."
"USER_SITE>` 到 :data:`sys.path`。"

#: ../../using/cmdline.rst:798
#, fuzzy
msgid ""
"Defines the :data:`user base directory <site.USER_BASE>`, which is used to "
"compute the path of the :data:`user site-packages directory <site."
"USER_SITE>` and :ref:`Distutils installation paths <inst-alt-install-user>` "
"for ``python setup.py install --user``."
msgstr ""
"定義 :data:`user base directory <site.USER_BASE>`，用於計算 :data:`user "
"site-packages directory <site.USER_SITE>` 和 :ref:`Distutils installation "
"paths <inst -alt-install-user>` 用於``python setup.py install --user``。"

#: ../../using/cmdline.rst:810
#, fuzzy
msgid ""
"If this environment variable is set, ``sys.argv[0]`` will be set to its "
"value instead of the value got through the C runtime.  Only works on macOS."
msgstr "如果設定了這個環境變數，``sys.argv[0]`` 將被設定為其值，而不是通過 C "
"運行時獲得的值。僅適用於 macOS。"

#: ../../using/cmdline.rst:816
#, fuzzy
msgid ""
"This is equivalent to the :option:`-W` option. If set to a comma separated "
"string, it is equivalent to specifying :option:`-W` multiple times, with "
"filters later in the list taking precedence over those earlier in the list."
msgstr ""
"這相當於 :option:`-W` 選項。如果設定為逗號分隔的字串，則相當於多次指定 "
":option:`-W`，列表後面的過濾器優先於列表前面的過濾器。"

#: ../../using/cmdline.rst:838
#, fuzzy
msgid ""
"If this environment variable is set to a non-empty string, :func:"
"`faulthandler.enable` is called at startup: install a handler for :const:"
"`SIGSEGV`, :const:`SIGFPE`, :const:`SIGABRT`, :const:`SIGBUS` and :const:"
"`SIGILL` signals to dump the Python traceback.  This is equivalent to :"
"option:`-X` ``faulthandler`` option."
msgstr ""
"如果此環境變數設定為非空字串，則會在啟動時呼叫 :func:`faulthandler.enable`："
"為 :const:`SIGSEGV`、:const:`SIGFPE`、:const:`SIGABRT` 安裝處理程式, "
":const:`SIGBUS` 和 :const:`SIGILL` 發出轉儲 Python 回溯的信號。這相當於 "
":option:`-X` ``faulthandler`` 選項。"

#: ../../using/cmdline.rst:849
#, fuzzy
msgid ""
"If this environment variable is set to a non-empty string, start tracing "
"Python memory allocations using the :mod:`tracemalloc` module. The value of "
"the variable is the maximum number of frames stored in a traceback of a "
"trace. For example, ``PYTHONTRACEMALLOC=1`` stores only the most recent "
"frame. See the :func:`tracemalloc.start` function for more information. This "
"is equivalent to setting the :option:`-X` ``tracemalloc`` option."
msgstr ""
"如果此環境變數設定為非空字串，則使用 :mod:`tracemalloc` 模組開始跟踪 Python "
"記憶體分配。變數的值是跟踪的回溯中儲存的最大幀數。例如，``PYTHONTRACEMALLOC=1"
"`` 只儲存最近的幀。有關詳細資訊，請參閱 :func:`tracemalloc.start` 函式。"
"這相當於設定 :option:`-X` ``tracemalloc`` 選項。"

#: ../../using/cmdline.rst:862
#, fuzzy
msgid ""
"If this environment variable is set to a non-empty string, Python will show "
"how long each import takes. This is equivalent to setting the :option:`-X` "
"``importtime`` option."
msgstr ""
"如果此環境變數設定為非空字串，Python 將顯示每次導入需要多長時間。"
"這相當於設定 :option:`-X` ``importtime`` 選項。"

#: ../../using/cmdline.rst:871
#, fuzzy
msgid ""
"If this environment variable is set to a non-empty string, enable the :ref:"
"`debug mode <asyncio-debug-mode>` of the :mod:`asyncio` module."
msgstr "如果此環境變數設定為非空字串，請啟用 :ref:`asyncio` 模組的除錯模式 <asyncio-"
"debug-mode>`。"

#: ../../using/cmdline.rst:879
#, fuzzy
msgid "Set the Python memory allocators and/or install debug hooks."
msgstr "設定 Python 記憶體分配器和/或安裝除錯掛鉤。"

#: ../../using/cmdline.rst:881
#, fuzzy
msgid "Set the family of memory allocators used by Python:"
msgstr "設定 Python 使用的記憶體分配器系列："

#: ../../using/cmdline.rst:883
#, fuzzy
msgid ""
"``default``: use the :ref:`default memory allocators <default-memory-"
"allocators>`."
msgstr "``default``：使用 :ref:`預設記憶體分配器 <default-memory-allocators>`。"

#: ../../using/cmdline.rst:885
#, fuzzy
msgid ""
"``malloc``: use the :c:func:`malloc` function of the C library for all "
"domains (:c:data:`PYMEM_DOMAIN_RAW`, :c:data:`PYMEM_DOMAIN_MEM`, :c:data:"
"`PYMEM_DOMAIN_OBJ`)."
msgstr "``malloc``：對所有域使用 C 庫的 :c:func:`malloc` 函式`）。"

#: ../../using/cmdline.rst:888
#, fuzzy
msgid ""
"``pymalloc``: use the :ref:`pymalloc allocator <pymalloc>` for :c:data:"
"`PYMEM_DOMAIN_MEM` and :c:data:`PYMEM_DOMAIN_OBJ` domains and use the :c:"
"func:`malloc` function for the :c:data:`PYMEM_DOMAIN_RAW` domain."
msgstr ""
"``pymalloc``：使用 :ref:`pymalloc 分配器 <pymalloc>` 用於 "
":c:data:`PYMEM_DOMAIN_MEM` 和 :c:data:`PYMEM_DOMAIN_OBJ` 域，並使用 "
":c:func:`malloc` 函式:c:data:`PYMEM_DOMAIN_RAW` 域。"

#: ../../using/cmdline.rst:892
#, fuzzy
msgid "Install :ref:`debug hooks <pymem-debug-hooks>`:"
msgstr "安裝 :ref:`除錯鉤子 <pymem-debug-hooks>`:"

#: ../../using/cmdline.rst:894
#, fuzzy
msgid ""
"``debug``: install debug hooks on top of the :ref:`default memory allocators "
"<default-memory-allocators>`."
msgstr "``debug``：在預設記憶體分配器 <default-memory-allocators> 之上安裝除錯鉤子。"

#: ../../using/cmdline.rst:896
#, fuzzy
msgid "``malloc_debug``: same as ``malloc`` but also install debug hooks."
msgstr "``malloc_debug``：與``malloc`` 相同，但也安裝除錯掛鉤。"

#: ../../using/cmdline.rst:897
#, fuzzy
msgid "``pymalloc_debug``: same as ``pymalloc`` but also install debug hooks."
msgstr "``pymalloc_debug``：與``pymalloc`` 相同，但也安裝除錯掛鉤。"

#: ../../using/cmdline.rst:899
#, fuzzy
msgid "Added the ``\"default\"`` allocator."
msgstr "新增了``“預設”``分配器。"

#: ../../using/cmdline.rst:907
#, fuzzy
msgid ""
"If set to a non-empty string, Python will print statistics of the :ref:"
"`pymalloc memory allocator <pymalloc>` every time a new pymalloc object "
"arena is created, and on shutdown."
msgstr ""
"如果設定為非空字串，Python 將在每次建立新的 pymalloc "
"物件區域時以及關閉時印出 :ref:`pymalloc 記憶體分配器 <pymalloc>` 的統計資訊。"

#: ../../using/cmdline.rst:911
#, fuzzy
msgid ""
"This variable is ignored if the :envvar:`PYTHONMALLOC` environment variable "
"is used to force the :c:func:`malloc` allocator of the C library, or if "
"Python is configured without ``pymalloc`` support."
msgstr ""
"如果 :envvar:`PYTHONMALLOC` 環境變數用於強制 C 庫的 :c:func:`malloc` 分配器，"
"或者如果 Python 配置沒有 ``pymalloc`` 支援，則忽略此變數。"

#: ../../using/cmdline.rst:915
#, fuzzy
msgid ""
"This variable can now also be used on Python compiled in release mode. It "
"now has no effect if set to an empty string."
msgstr "這個變數現在也可以用在以發布模式編譯的 Python "
"上。如果設定為空字串，它現在無效。"

#: ../../using/cmdline.rst:922
#, fuzzy
msgid ""
"If set to a non-empty string, the default :term:`filesystem encoding and "
"error handler` mode will revert to their pre-3.6 values of 'mbcs' and "
"'replace', respectively.  Otherwise, the new defaults 'utf-8' and "
"'surrogatepass' are used."
msgstr ""
"如果設定為非空字串，預設的文件系統編碼和錯誤處理程式模式將分別恢復到 3.6 "
"之前的值 ``mbcs``和“替換”。否則，將使用新的預設值 ``utf-8``和 ``surrogatepass`` 。"

#: ../../using/cmdline.rst:927
#, fuzzy
msgid ""
"This may also be enabled at runtime with :func:`sys."
"_enablelegacywindowsfsencoding()`."
msgstr "這也可以在運行時使用 :func:`sys._enablelegacywindowsfsencoding()` 啟用。"

#: ../../using/cmdline.rst:930 ../../using/cmdline.rst:944
msgid ":ref:`Availability <availability>`: Windows."
msgstr ":ref:`適用 <availability>`：Windows。"

#: ../../using/cmdline.rst:932
msgid "See :pep:`529` for more details."
msgstr "更多細節請見 :pep:`529`\\ 。"

#: ../../using/cmdline.rst:937
#, fuzzy
msgid ""
"If set to a non-empty string, does not use the new console reader and "
"writer. This means that Unicode characters will be encoded according to the "
"active console code page, rather than using utf-8."
msgstr "如果設定為非空字串，則不使用新的控制台讀取器和寫入器。這意味著 Unicode "
"字元將根據活動控制台程式碼頁進行編碼，而不是使用 utf-8。"

#: ../../using/cmdline.rst:941
#, fuzzy
msgid ""
"This variable is ignored if the standard streams are redirected (to files or "
"pipes) rather than referring to console buffers."
msgstr "如果標準流被重定向（到文件或管道）而不是引用控制台緩衝區，則忽略此變數。"

#: ../../using/cmdline.rst:951
#, fuzzy
msgid ""
"If set to the value ``0``, causes the main Python command line application "
"to skip coercing the legacy ASCII-based C and POSIX locales to a more "
"capable UTF-8 based alternative."
msgstr ""
"如果設定為值 ``0``，則導致主 Python 命令列應用程式跳過將遺留的基於 ASCII 的 C "
"和 POSIX 區域設定強制轉換為功能更強大的基於 UTF-8 的替代方案。"

#: ../../using/cmdline.rst:955
#, fuzzy
msgid ""
"If this variable is *not* set (or is set to a value other than ``0``), the "
"``LC_ALL`` locale override environment variable is also not set, and the "
"current locale reported for the ``LC_CTYPE`` category is either the default "
"``C`` locale, or else the explicitly ASCII-based ``POSIX`` locale, then the "
"Python CLI will attempt to configure the following locales for the "
"``LC_CTYPE`` category in the order listed before loading the interpreter "
"runtime:"
msgstr ""
"如果此變數*未*設定（或設定為 ``0``以外的值），則“LC_ALL”區域設定覆蓋環境變數也未"
"設定，並且當前區域設定報告為“LC_CTYPE” ` category 是預設的 ``C`` 區域設定，"
"或者是顯式基於 ASCII 的 ``POSIX`` 區域設定，然後 Python CLI "
"將嘗試按照列出的順序為 ``LC_CTYPE`` "
"類別配置以下區域設定在加載直譯器運行時之前："

#: ../../using/cmdline.rst:963
msgid "``C.UTF-8``"
msgstr "``C.UTF-8``"

#: ../../using/cmdline.rst:964
msgid "``C.utf8``"
msgstr "``C.utf8``"

#: ../../using/cmdline.rst:965
msgid "``UTF-8``"
msgstr "``UTF-8``"

#: ../../using/cmdline.rst:967
#, fuzzy
msgid ""
"If setting one of these locale categories succeeds, then the ``LC_CTYPE`` "
"environment variable will also be set accordingly in the current process "
"environment before the Python runtime is initialized. This ensures that in "
"addition to being seen by both the interpreter itself and other locale-aware "
"components running in the same process (such as the GNU ``readline`` "
"library), the updated setting is also seen in subprocesses (regardless of "
"whether or not those processes are running a Python interpreter), as well as "
"in operations that query the environment rather than the current C locale "
"(such as Python's own :func:`locale.getdefaultlocale`)."
msgstr ""
"如果設定這些語言環境類別之一成功，則在初始化 Python 運行時之前，"
"也會在當前行程環境中相應地設定 ``LC_CTYPE`` "
"環境變數。這確保除了直譯器本身和在同一行程中運行的其他區域設定感知組件（例如 "
"GNU ``readline`` 庫）之外，更新的設定也可以在子行程中看到（"
"無論是否或不是那些正在運行 Python 直譯器的行程），以及查詢環境而不是當前 C "
"語言環境的操作（例如 Python 自己的 locale.getdefaultlocale ）。"

#: ../../using/cmdline.rst:977
#, fuzzy
msgid ""
"Configuring one of these locales (either explicitly or via the above "
"implicit locale coercion) automatically enables the ``surrogateescape`` :ref:"
"`error handler <error-handlers>` for :data:`sys.stdin` and :data:`sys."
"stdout` (:data:`sys.stderr` continues to use ``backslashreplace`` as it does "
"in any other locale). This stream handling behavior can be overridden using :"
"envvar:`PYTHONIOENCODING` as usual."
msgstr ""
"配置這些語言環境之一（顯式或通過上述隱式語言環境強制）會自動啟用 "
"``surrogateescape`` :ref:`error handler <error-handlers>` for :data:`sys."
"stdin` 和 :data:` sys.stdout（:data:`sys.stderr` 繼續使用 "
"``backslashreplace``，就像在任何其他語言環境中一樣）。可以像往常一樣使用 "
"PYTHONIOENCODING 覆蓋此流處理行為。"

#: ../../using/cmdline.rst:984
#, fuzzy
msgid ""
"For debugging purposes, setting ``PYTHONCOERCECLOCALE=warn`` will cause "
"Python to emit warning messages on ``stderr`` if either the locale coercion "
"activates, or else if a locale that *would* have triggered coercion is still "
"active when the Python runtime is initialized."
msgstr ""
"出於除錯目的，設定``PYTHONCOERCECLOCALE=warn`` 將導致 Python 在 ``stderr`` "
"上發出警告消息，如果區域設定強制激活，或者如果 *本* 觸發強制的區域設定在 "
"Python 時仍然處於活動狀態運行時被初始化。"

#: ../../using/cmdline.rst:989
#, fuzzy
msgid ""
"Also note that even when locale coercion is disabled, or when it fails to "
"find a suitable target locale, :envvar:`PYTHONUTF8` will still activate by "
"default in legacy ASCII-based locales. Both features must be disabled in "
"order to force the interpreter to use ``ASCII`` instead of ``UTF-8`` for "
"system interfaces."
msgstr ""
"另請注意，即使禁用了語言環境強制，或者當它找不到合適的目標語言環境時，:envvar"
":`PYTHONUTF8` 仍將在基於 ASCII 的傳統語言環境中預設激活。必須禁用這兩個功能，"
"以強制直譯器使用 ``ASCII``而不是 ``UTF-8``作為系統介面。"

#: ../../using/cmdline.rst:995
msgid ":ref:`Availability <availability>`: Unix."
msgstr ":ref:`適用 <availability>`：Unix。"

#: ../../using/cmdline.rst:997
msgid "See :pep:`538` for more details."
msgstr "更多細節請見 :pep:`538`\\ 。"

#: ../../using/cmdline.rst:1003
#, fuzzy
msgid ""
"If this environment variable is set to a non-empty string, enable :ref:"
"`Python Development Mode <devmode>`, introducing additional runtime checks "
"that are too expensive to be enabled by default. This is equivalent to "
"setting the :option:`-X` ``dev`` option."
msgstr ""
"如果此環境變數設定為非空字串，請啟用 :ref:`Python 開發模式 "
"<devmode>`，引入額外的運行時檢查，這些檢查過於昂貴而無法預設啟用。"
"這相當於設定 :option:`-X` ``dev`` 選項。"

#: ../../using/cmdline.rst:1012
msgid "If set to ``1``, enable the :ref:`Python UTF-8 Mode <utf8-mode>`."
msgstr "如果設為 ``1``，則啟用 :ref:`Python UTF-8 Mode <utf8-mode>`。"

#: ../../using/cmdline.rst:1014
msgid "If set to ``0``, disable the :ref:`Python UTF-8 Mode <utf8-mode>`."
msgstr "如果設為 ``0``，則停用 :ref:`Python UTF-8 Mode <utf8-mode>`。"

#: ../../using/cmdline.rst:1016
#, fuzzy
msgid ""
"Setting any other non-empty string causes an error during interpreter "
"initialisation."
msgstr "設定任何其他非空字串會導致直譯器初始化期間出錯。"

#: ../../using/cmdline.rst:1023
#, fuzzy
msgid ""
"If this environment variable is set to a non-empty string, issue a :class:"
"`EncodingWarning` when the locale-specific default encoding is used."
msgstr "如果此環境變數設定為非空字串，則在使用特定於語言環境的預設編碼時發出 "
":class:`EncodingWarning`。"

#: ../../using/cmdline.rst:1026
msgid "See :ref:`io-encoding-warning` for details."
msgstr "細節請見 :ref:`io-encoding-warning`\\ 。"

#: ../../using/cmdline.rst:1032
#, fuzzy
msgid ""
"If this variable is set, it disables the inclusion of the tables mapping "
"extra location information (end line, start column offset and end column "
"offset) to every instruction in code objects. This is useful when smaller "
"code objects and pyc files are desired as well as suppressing the extra "
"visual location indicators when the interpreter displays tracebacks."
msgstr ""
"如果設定了此變數，它會禁用將額外位置資訊（結束行、開始列偏移量和結束列偏移量"
"）映射到程式碼對像中的每條指令的表。這在需要較小的程式碼物件和 pyc "
"文件以及在直譯器顯示回溯時抑制額外的視覺位置指示器時很有用。"

#: ../../using/cmdline.rst:1043
msgid "Debug-mode variables"
msgstr "除錯模式變數"

#: ../../using/cmdline.rst:1047
#, fuzzy
msgid "If set, Python will print threading debug info into stdout."
msgstr "如果設定，Python 會將執行緒除錯資訊印出到標準輸出中。"

#: ../../using/cmdline.rst:1049
#, fuzzy
msgid "Need a :ref:`debug build of Python <debug-build>`."
msgstr "需要 :ref:`Python 的除錯構建 <debug-build>`。"

#: ../../using/cmdline.rst:1056
#, fuzzy
msgid ""
"If set, Python will dump objects and reference counts still alive after "
"shutting down the interpreter."
msgstr "如果設定，Python 將在關閉直譯器後轉儲仍然存在的物件和引用計數。"

#: ../../using/cmdline.rst:1059 ../../using/cmdline.rst:1066
#, fuzzy
msgid ""
"Need Python configured with the :option:`--with-trace-refs` build option."
msgstr "需要使用 :option:`--with-trace-refs` 構建選項配置 Python。"

#: ../../using/cmdline.rst:1063
#, fuzzy
msgid ""
"If set, Python will dump objects and reference counts still alive after "
"shutting down the interpreter into a file called *FILENAME*."
msgstr "如果設定，Python 將在關閉直譯器後將物件和引用計數轉儲到一個名為 *FILENAME* "
"的文件中。"
