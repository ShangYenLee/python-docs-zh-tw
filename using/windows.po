# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Ching-Lung Chuang, 2015
# Liang-Bo Wang <me@liang2.tw>, 2015
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-25 00:20+0000\n"
"PO-Revision-Date: 2018-05-23 16:19+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../using/windows.rst:7
msgid "Using Python on Windows"
msgstr "在 Windows 上使用 Python"

#: ../../using/windows.rst:12
#, fuzzy
msgid ""
"This document aims to give an overview of Windows-specific behaviour you "
"should know about when using Python on Microsoft Windows."
msgstr "本文檔旨在概述在 Microsoft Windows 上使用 Python 時您應該了解的特定於 "
"Windows 的行為。"

#: ../../using/windows.rst:15
#, fuzzy
msgid ""
"Unlike most Unix systems and services, Windows does not include a system "
"supported installation of Python. To make Python available, the CPython team "
"has compiled Windows installers (MSI packages) with every `release <https://"
"www.python.org/download/releases/>`_ for many years. These installers are "
"primarily intended to add a per-user installation of Python, with the core "
"interpreter and library being used by a single user. The installer is also "
"able to install for all users of a single machine, and a separate ZIP file "
"is available for application-local distributions."
msgstr ""
"與大多數 Unix 系統和服務不同，Windows 不包括系統支援的 Python 安裝。為了使 "
"Python 可用，CPython 團隊多年來一直在每次“發布 <https://www.python.org/"
"download/releases/>”時編譯 Windows 安裝程式（MSI 包）。"
"這些安裝程式主要用於新增 Python 的每使用者安裝，核心直譯器和庫由單個使用者使"
"用。安裝程式還能夠為單台機器的所有使用者安裝，並且單獨的 ZIP "
"文件可用於應用程式本地分發。"

#: ../../using/windows.rst:24
#, fuzzy
msgid ""
"As specified in :pep:`11`, a Python release only supports a Windows platform "
"while Microsoft considers the platform under extended support. This means "
"that Python |version| supports Windows 8.1 and newer. If you require Windows "
"7 support, please install Python 3.8."
msgstr ""
"正如 :pep:`11` 中所指定的，Python 版本僅支援 Windows 平台，而 Microsoft "
"認為該平台在擴充支援下。這意味著 Python |version|支援 Windows 8.1 "
"及更新版本。如果您需要 Windows 7 支援，請安裝 Python 3.8。"

#: ../../using/windows.rst:29
#, fuzzy
msgid ""
"There are a number of different installers available for Windows, each with "
"certain benefits and downsides."
msgstr "有許多適用於 Windows 的不同安裝程式，每種都有特定的優點和缺點。"

#: ../../using/windows.rst:32
#, fuzzy
msgid ""
":ref:`windows-full` contains all components and is the best option for "
"developers using Python for any kind of project."
msgstr ":ref:`windows-full` 包含所有組件，是使用 Python "
"進行任何型別項目的開發人員的最佳選擇。"

#: ../../using/windows.rst:35
#, fuzzy
msgid ""
":ref:`windows-store` is a simple installation of Python that is suitable for "
"running scripts and packages, and using IDLE or other development "
"environments. It requires Windows 10 and above, but can be safely installed "
"without corrupting other programs. It also provides many convenient commands "
"for launching Python and its tools."
msgstr ""
":ref:`windows-store` 是 Python 的簡單安裝，適用於運行腳本和包，以及使用 IDLE "
"或其他開發環境。它需要 Windows 10 "
"及更高版本，但可以安全安裝而不會破壞其他程式。它還提供了許多方便的命令來啟動 "
"Python 及其工具。"

#: ../../using/windows.rst:41
#, fuzzy
msgid ""
":ref:`windows-nuget` are lightweight installations intended for continuous "
"integration systems. It can be used to build Python packages or run scripts, "
"but is not updateable and has no user interface tools."
msgstr ""
":ref:`windows-nuget` 是用於持續集成系統的輕量級安裝。它可用於構建 Python "
"包或運行腳本，但不可更新且沒有使用者界面工具。"

#: ../../using/windows.rst:45
#, fuzzy
msgid ""
":ref:`windows-embeddable` is a minimal package of Python suitable for "
"embedding into a larger application."
msgstr ":ref:`windows-embeddable` 是一個最小的 Python "
"包，適合嵌入到更大的應用程式中。"

#: ../../using/windows.rst:52
#, fuzzy
msgid "The full installer"
msgstr "完整的安裝程式"

#: ../../using/windows.rst:55
msgid "Installation steps"
msgstr "安裝步驟"

#: ../../using/windows.rst:57
#, fuzzy
msgid ""
"Four Python |version| installers are available for download - two each for "
"the 32-bit and 64-bit versions of the interpreter. The *web installer* is a "
"small initial download, and it will automatically download the required "
"components as necessary. The *offline installer* includes the components "
"necessary for a default installation and only requires an internet "
"connection for optional features. See :ref:`install-layout-option` for other "
"ways to avoid downloading during installation."
msgstr ""
"四個 Python |版本|安裝程式可供下載 - 32 位和 64 位版本的直譯器各有兩個。 *"
"web 安裝程式* 是一個小的初始下載，它會根據需要自動下載所需的組件。 "
"*離線安裝程式*包括預設安裝所需的組件，並且僅需要網際網路連接即可使用可選功能。"
"請參閱 :ref:`install-layout-option` 以了解避免在安裝過程中下載的其他方法。"

#: ../../using/windows.rst:65
#, fuzzy
msgid "After starting the installer, one of two options may be selected:"
msgstr "啟動安裝程式後，可以選擇兩個選項之一："

#: ../../using/windows.rst:69
msgid "If you select \"Install Now\":"
msgstr "如果你選擇「馬上安裝」："

#: ../../using/windows.rst:71
#, fuzzy
msgid ""
"You will *not* need to be an administrator (unless a system update for the C "
"Runtime Library is required or you install the :ref:`launcher` for all users)"
msgstr "您*不需要*成為管理員（除非需要 C 運行時庫的系統更新或您為所有使用者安裝 "
":ref:`launcher`）"

#: ../../using/windows.rst:74
#, fuzzy
msgid "Python will be installed into your user directory"
msgstr "Python 將安裝到您的使用者目錄中"

#: ../../using/windows.rst:75
#, fuzzy
msgid ""
"The :ref:`launcher` will be installed according to the option at the bottom "
"of the first page"
msgstr ":ref:`launcher` 將根據第一頁底部的選項進行安裝"

#: ../../using/windows.rst:77
#, fuzzy
msgid "The standard library, test suite, launcher and pip will be installed"
msgstr "將安裝標準庫、測試套件、啟動器和 pip"

#: ../../using/windows.rst:78
msgid "If selected, the install directory will be added to your :envvar:`PATH`"
msgstr "如果選擇，安裝目錄將被加入到你的 :envvar:`PATH`"

#: ../../using/windows.rst:79
msgid "Shortcuts will only be visible for the current user"
msgstr "安裝捷徑將只能被目前使用者所看見"

#: ../../using/windows.rst:81
msgid ""
"Selecting \"Customize installation\" will allow you to select the features "
"to install, the installation location and other options or post-install "
"actions. To install debugging symbols or binaries, you will need to use this "
"option."
msgstr ""
"選擇「客製化安裝」將允許你選擇所需的項目進行安裝，安裝位置與其他選擇或安裝後"
"的所需進行的動作。你將需要使用此選項「除錯特徵」或「二進位方式」進行安裝。"

#: ../../using/windows.rst:85
#, fuzzy
msgid ""
"To perform an all-users installation, you should select \"Customize "
"installation\". In this case:"
msgstr "要執行所有使用者安裝，您應該選擇“自定義安裝”。在這種情況下："

#: ../../using/windows.rst:88
#, fuzzy
msgid "You may be required to provide administrative credentials or approval"
msgstr "您可能需要提供管理憑證或批准"

#: ../../using/windows.rst:89
#, fuzzy
msgid "Python will be installed into the Program Files directory"
msgstr "Python 將安裝到 Program Files 目錄中"

#: ../../using/windows.rst:90
#, fuzzy
msgid "The :ref:`launcher` will be installed into the Windows directory"
msgstr ":ref:`launcher` 將安裝到 Windows 目錄中"

#: ../../using/windows.rst:91
#, fuzzy
msgid "Optional features may be selected during installation"
msgstr "可以在安裝過程中選擇可選功能"

#: ../../using/windows.rst:92
#, fuzzy
msgid "The standard library can be pre-compiled to bytecode"
msgstr "標準庫可以預編譯為位元組碼"

#: ../../using/windows.rst:93
#, fuzzy
msgid ""
"If selected, the install directory will be added to the system :envvar:`PATH`"
msgstr "如果選擇，安裝目錄將被新增到系統 :envvar:`PATH`"

#: ../../using/windows.rst:94
msgid "Shortcuts are available for all users"
msgstr "捷徑將被所有使用者所見"

#: ../../using/windows.rst:99
#, fuzzy
msgid "Removing the MAX_PATH Limitation"
msgstr "刪除 MAX_PATH 限制"

#: ../../using/windows.rst:101
#, fuzzy
msgid ""
"Windows historically has limited path lengths to 260 characters. This meant "
"that paths longer than this would not resolve and errors would result."
msgstr "Windows 歷來將路徑長度限制為 260 "
"個字元。這意味著比這更長的路徑將無法解析並且會導致錯誤。"

#: ../../using/windows.rst:104
#, fuzzy
msgid ""
"In the latest versions of Windows, this limitation can be expanded to "
"approximately 32,000 characters. Your administrator will need to activate "
"the \"Enable Win32 long paths\" group policy, or set ``LongPathsEnabled`` to "
"``1`` in the registry key "
"``HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\FileSystem``."
msgstr ""
"在最新版本的 Windows 中，此限制可以擴充到大約 32,000 "
"個字元。您的管理員需要激活“啟用 Win32 長路徑”組策略，或在註冊表項“"
"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\FileSystem"
"”中將 ``LongPathsEnabled`` 設定為 ``1``。"

#: ../../using/windows.rst:110
#, fuzzy
msgid ""
"This allows the :func:`open` function, the :mod:`os` module and most other "
"path functionality to accept and return paths longer than 260 characters."
msgstr "這允許 :func:`open` 函式、:mod:`os` "
"模組和大多數其他路徑功能接受和回傳長度超過 260 個字元的路徑。"

#: ../../using/windows.rst:113
#, fuzzy
msgid "After changing the above option, no further configuration is required."
msgstr "更改上述選項後，無需進一步配置。"

#: ../../using/windows.rst:117
#, fuzzy
msgid "Support for long paths was enabled in Python."
msgstr "在 Python 中啟用了對長路徑的支援。"

#: ../../using/windows.rst:122
msgid "Installing Without UI"
msgstr "安裝排除使用者介面"

#: ../../using/windows.rst:124
#, fuzzy
msgid ""
"All of the options available in the installer UI can also be specified from "
"the command line, allowing scripted installers to replicate an installation "
"on many machines without user interaction.  These options may also be set "
"without suppressing the UI in order to change some of the defaults."
msgstr ""
"安裝程式 UI 中可用的所有選項也可以從命令列指定，允許腳本安裝程式在無需使用者"
"交互的情況下在多台計算機上複製安裝。也可以在不抑制 UI "
"的情況下設定這些選項以更改某些預設值。"

#: ../../using/windows.rst:129
#, fuzzy
msgid ""
"To completely hide the installer UI and install Python silently, pass the ``/"
"quiet`` option. To skip past the user interaction but still display progress "
"and errors, pass the ``/passive`` option. The ``/uninstall`` option may be "
"passed to immediately begin removing Python - no confirmation prompt will be "
"displayed."
msgstr ""
"要完全隱藏安裝程式 UI 並靜默安裝 Python，請傳遞“/quiet”選項。要跳過使用者交互"
"但仍顯示進度和錯誤，請傳遞“/passive”選項。可以傳遞 ``/uninstall`` "
"選項以立即開始刪除 Python——不會顯示確認提示。"

#: ../../using/windows.rst:135
#, fuzzy
msgid ""
"All other options are passed as ``name=value``, where the value is usually "
"``0`` to disable a feature, ``1`` to enable a feature, or a path. The full "
"list of available options is shown below."
msgstr ""
"所有其他選項都作為 ``name=value`` 傳遞，其中值通常為 ``0`` 以禁用功能，``1`` "
"以啟用功能或路徑。可用選項的完整列表如下所示。"

#: ../../using/windows.rst:140 ../../using/windows.rst:1069
#, fuzzy
msgid "Name"
msgstr "姓名"

#: ../../using/windows.rst:140 ../../using/windows.rst:1069
msgid "Description"
msgstr "描述"

#: ../../using/windows.rst:140
msgid "Default"
msgstr "預設"

#: ../../using/windows.rst:142
msgid "InstallAllUsers"
msgstr "InstallAllUsers"

#: ../../using/windows.rst:142
#, fuzzy
msgid "Perform a system-wide installation."
msgstr "執行系統範圍的安裝。"

#: ../../using/windows.rst:142 ../../using/windows.rst:168
#: ../../using/windows.rst:171 ../../using/windows.rst:175
#: ../../using/windows.rst:184 ../../using/windows.rst:206
#: ../../using/windows.rst:214 ../../using/windows.rst:217
msgid "0"
msgstr "0"

#: ../../using/windows.rst:144
msgid "TargetDir"
msgstr "TargetDir"

#: ../../using/windows.rst:144
msgid "The installation directory"
msgstr "安裝目錄"

#: ../../using/windows.rst:144
#, fuzzy
msgid "Selected based on InstallAllUsers"
msgstr "根據 InstallAllUsers 選擇"

#: ../../using/windows.rst:147
msgid "DefaultAllUsersTargetDir"
msgstr "DefaultAllUsersTargetDir"

#: ../../using/windows.rst:147
#, fuzzy
msgid "The default installation directory for all-user installs"
msgstr "所有使用者安裝的預設安裝目錄"

#: ../../using/windows.rst:147
#, fuzzy
msgid ""
":file:`%ProgramFiles%\\\\\\ Python X.Y` or :file:`\\ %ProgramFiles(x86)%\\\\"
"\\ Python X.Y`"
msgstr ""
":file:`%ProgramFiles%\\\\\\ Python X.Y` 或 :file:`\\ %ProgramFiles(x86)%\\\\"
"\\ Python X.Y`"

#: ../../using/windows.rst:152
msgid "DefaultJustForMeTargetDir"
msgstr "DefaultJustForMeTargetDir"

#: ../../using/windows.rst:152
msgid "The default install directory for just-for-me installs"
msgstr "預設安裝目錄給 只有給我  安裝方式"

#: ../../using/windows.rst:152
#, fuzzy
msgid ""
":file:`%LocalAppData%\\\\\\ Programs\\\\Python\\\\\\ PythonXY` or :file:"
"`%LocalAppData%\\\\\\ Programs\\\\Python\\\\\\ PythonXY-32` or :file:"
"`%LocalAppData%\\\\\\ Programs\\\\Python\\\\\\ PythonXY-64`"
msgstr ""
":file:`%LocalAppData%\\\\\\ Programs\\\\Python\\\\\\ PythonXY` 或 "
":file:`%LocalAppData%\\\\\\ Programs\\\\Python\\\\\\ PythonXY-32` 或 "
":file:`%LocalAppData%\\ \\\\程式\\\\Python\\\\\\PythonXY-64`"

#: ../../using/windows.rst:162
msgid "DefaultCustomTargetDir"
msgstr "DefaultCustomTargetDir"

#: ../../using/windows.rst:162
#, fuzzy
msgid "The default custom install directory displayed in the UI"
msgstr "UI 中顯示的預設自定義安裝目錄"

#: ../../using/windows.rst:162 ../../using/windows.rst:219
#, fuzzy
msgid "(empty)"
msgstr "（空的）"

#: ../../using/windows.rst:165
msgid "AssociateFiles"
msgstr "AssociateFiles"

#: ../../using/windows.rst:165
msgid "Create file associations if the launcher is also installed."
msgstr "當執行程式也被安裝時創造檔案關聯"

#: ../../using/windows.rst:165 ../../using/windows.rst:179
#: ../../using/windows.rst:182 ../../using/windows.rst:186
#: ../../using/windows.rst:190 ../../using/windows.rst:194
#: ../../using/windows.rst:196 ../../using/windows.rst:200
#: ../../using/windows.rst:204 ../../using/windows.rst:208
#: ../../using/windows.rst:210 ../../using/windows.rst:212
msgid "1"
msgstr "1"

#: ../../using/windows.rst:168
msgid "CompileAll"
msgstr "CompileAll"

#: ../../using/windows.rst:168
msgid "Compile all ``.py`` files to ``.pyc``."
msgstr "編譯所有 ``.py`` 檔案為 ``.pyc``\\ 。"

#: ../../using/windows.rst:171
msgid "PrependPath"
msgstr "PrependPath"

#: ../../using/windows.rst:171
#, fuzzy
msgid ""
"Prepend install and Scripts directories  to :envvar:`PATH` and add ``.PY`` "
"to :envvar:`PATHEXT`"
msgstr "將安裝和腳本目錄新增到 :envvar:`PATH` 並將 ``.PY`` 新增到 :envvar:`PATHEXT`"

#: ../../using/windows.rst:175
msgid "AppendPath"
msgstr "AppendPath"

#: ../../using/windows.rst:175
#, fuzzy
msgid ""
"Append install and Scripts directories  to :envvar:`PATH` and add ``.PY`` "
"to :envvar:`PATHEXT`"
msgstr "將安裝和腳本目錄附加到 :envvar:`PATH` 並將 ``.PY`` 新增到 :envvar:`PATHEXT`"

#: ../../using/windows.rst:179
msgid "Shortcuts"
msgstr "Shortcuts"

#: ../../using/windows.rst:179
#, fuzzy
msgid ""
"Create shortcuts for the interpreter, documentation and IDLE if installed."
msgstr "如果已安裝，則為直譯器、文檔和 IDLE 建立快捷方式。"

#: ../../using/windows.rst:182
msgid "Include_doc"
msgstr "Include_doc"

#: ../../using/windows.rst:182
msgid "Install Python manual"
msgstr "安裝Python文件"

#: ../../using/windows.rst:184
msgid "Include_debug"
msgstr "Include_debug"

#: ../../using/windows.rst:184
#, fuzzy
msgid "Install debug binaries"
msgstr "安裝除錯二進位文件"

#: ../../using/windows.rst:186
msgid "Include_dev"
msgstr "Include_dev"

#: ../../using/windows.rst:186
#, fuzzy
msgid ""
"Install developer headers and libraries. Omitting this may lead to an "
"unusable installation."
msgstr "安裝開發者標頭檔和庫。忽略它可能會導致無法使用安裝。"

#: ../../using/windows.rst:190
msgid "Include_exe"
msgstr "Include_exe"

#: ../../using/windows.rst:190
#, fuzzy
msgid ""
"Install :file:`python.exe` and related files. Omitting this may lead to an "
"unusable installation."
msgstr "安裝 :file:`python.exe` 和相關文件。忽略它可能會導致無法使用安裝。"

#: ../../using/windows.rst:194
msgid "Include_launcher"
msgstr "Include_launcher"

#: ../../using/windows.rst:194
msgid "Install :ref:`launcher`."
msgstr "安裝 :ref:`launcher`。"

#: ../../using/windows.rst:196
msgid "InstallLauncherAllUsers"
msgstr "InstallLauncherAllUsers"

#: ../../using/windows.rst:196
#, fuzzy
msgid ""
"Installs the launcher for all users. Also requires ``Include_launcher`` to "
"be set to 1"
msgstr "為所有使用者安裝啟動器。還需要將 ``Include_launcher`` 設定為 1"

#: ../../using/windows.rst:200
msgid "Include_lib"
msgstr "Include_lib"

#: ../../using/windows.rst:200
#, fuzzy
msgid ""
"Install standard library and extension modules. Omitting this may lead to an "
"unusable installation."
msgstr "安裝標準庫和擴充模組。忽略它可能會導致無法使用安裝。"

#: ../../using/windows.rst:204
msgid "Include_pip"
msgstr "Include_pip"

#: ../../using/windows.rst:204
#, fuzzy
msgid "Install bundled pip and setuptools"
msgstr "安裝捆綁的 pip 和 setuptools"

#: ../../using/windows.rst:206
msgid "Include_symbols"
msgstr "Include_symbols"

#: ../../using/windows.rst:206
#, fuzzy
msgid "Install debugging symbols (``*.pdb``)"
msgstr "安裝除錯符號（``*.pdb``）"

#: ../../using/windows.rst:208
msgid "Include_tcltk"
msgstr "Include_tcltk"

#: ../../using/windows.rst:208
#, fuzzy
msgid "Install Tcl/Tk support and IDLE"
msgstr "安裝 Tcl/Tk 支援和 IDLE"

#: ../../using/windows.rst:210
msgid "Include_test"
msgstr "Include_test"

#: ../../using/windows.rst:210
#, fuzzy
msgid "Install standard library test suite"
msgstr "安裝標準庫測試套件"

#: ../../using/windows.rst:212
msgid "Include_tools"
msgstr "Include_tools"

#: ../../using/windows.rst:212
#, fuzzy
msgid "Install utility scripts"
msgstr "安裝實用程式腳本"

#: ../../using/windows.rst:214
msgid "LauncherOnly"
msgstr "LauncherOnly"

#: ../../using/windows.rst:214
#, fuzzy
msgid "Only installs the launcher. This will override most other options."
msgstr "只安裝啟動器。這將覆蓋大多數其他選項。"

#: ../../using/windows.rst:217
msgid "SimpleInstall"
msgstr "SimpleInstall"

#: ../../using/windows.rst:217
#, fuzzy
msgid "Disable most install UI"
msgstr "禁用大多數安裝 UI"

#: ../../using/windows.rst:219
msgid "SimpleInstallDescription"
msgstr "SimpleInstallDescription"

#: ../../using/windows.rst:219
#, fuzzy
msgid "A custom message to display when the simplified install UI is used."
msgstr "使用簡化安裝 UI 時顯示的自定義消息。"

#: ../../using/windows.rst:223
#, fuzzy
msgid ""
"For example, to silently install a default, system-wide Python installation, "
"you could use the following command (from an elevated command prompt)::"
msgstr "例如，要靜默安裝系統範圍內的預設 Python "
"安裝，您可以使用以下命令（從提升的命令提示符）："

#: ../../using/windows.rst:228
#, fuzzy
msgid ""
"To allow users to easily install a personal copy of Python without the test "
"suite, you could provide a shortcut with the following command. This will "
"display a simplified initial page and disallow customization::"
msgstr ""
"為了允許使用者在沒有測試套件的情況下輕鬆安裝 Python 的個人副本，您可以使用以"
"下命令提供快捷方式。這將顯示一個簡化的初始頁面並禁止自定義::"

#: ../../using/windows.rst:235
#, fuzzy
msgid ""
"(Note that omitting the launcher also omits file associations, and is only "
"recommended for per-user installs when there is also a system-wide "
"installation that included the launcher.)"
msgstr "（請注意，省略啟動器也會省略文件關聯，並且僅在還存在包含啟動器的系統範圍安裝"
"時才推薦用於每個使用者安裝。）"

#: ../../using/windows.rst:239
#, fuzzy
msgid ""
"The options listed above can also be provided in a file named ``unattend."
"xml`` alongside the executable. This file specifies a list of options and "
"values. When a value is provided as an attribute, it will be converted to a "
"number if possible. Values provided as element text are always left as "
"strings. This example file sets the same options as the previous example:"
msgstr ""
"上面列出的選項也可以與可執行文件一起在名為“unattend.xml”的文件中提供。該文件"
"指定了選項和值的列表。當一個值作為屬性提供時，如果可能，它將被轉換為一個數字"
"。作為元素文本提供的值始終保留為字串。此示例文件設定與上一個示例相同的選項："

#: ../../using/windows.rst:258
msgid "Installing Without Downloading"
msgstr "當安裝時不下載"

#: ../../using/windows.rst:260
#, fuzzy
msgid ""
"As some features of Python are not included in the initial installer "
"download, selecting those features may require an internet connection.  To "
"avoid this need, all possible components may be downloaded on-demand to "
"create a complete *layout* that will no longer require an internet "
"connection regardless of the selected features. Note that this download may "
"be bigger than required, but where a large number of installations are going "
"to be performed it is very useful to have a locally cached copy."
msgstr ""
"由於 Python 的某些功能未包含在初始安裝程式下載中，因此選擇這些功能可能需要互"
"聯網連接。為了避免這種需要，所有可能的組件都可以按需下載以建立一個完整的*佈局"
"*，無論選擇的功能如何，都不再需要網際網路連接。請注意，此下載可能比所需的大，但"
"是在將要執行大量安裝的情況下，擁有本地快取副本非常有用。"

#: ../../using/windows.rst:268
#, fuzzy
msgid ""
"Execute the following command from Command Prompt to download all possible "
"required files.  Remember to substitute ``python-3.9.0.exe`` for the actual "
"name of your installer, and to create layouts in their own directories to "
"avoid collisions between files with the same name."
msgstr ""
"從命令提示符執行以下命令以下載所有可能需要的文件。請記住將“python-3.9.0.exe”"
"替換為安裝程式的實際名稱，並在它們自己的目錄中建立佈局以避免同名文件之間的衝"
"突。"

#: ../../using/windows.rst:277
#, fuzzy
msgid ""
"You may also specify the ``/quiet`` option to hide the progress display."
msgstr "您還可以指定 ``/quiet`` 選項來隱藏進度顯示。"

#: ../../using/windows.rst:280
#, fuzzy
msgid "Modifying an install"
msgstr "修改安裝"

#: ../../using/windows.rst:282
#, fuzzy
msgid ""
"Once Python has been installed, you can add or remove features through the "
"Programs and Features tool that is part of Windows. Select the Python entry "
"and choose \"Uninstall/Change\" to open the installer in maintenance mode."
msgstr ""
"安裝 Python 後，您可以通過 Windows 的程式和功能工具新增或刪除功能。選擇 "
"Python 條目並選擇“卸載/更改”以在維護模式下打開安裝程式。"

#: ../../using/windows.rst:286
#, fuzzy
msgid ""
"\"Modify\" allows you to add or remove features by modifying the checkboxes "
"- unchanged checkboxes will not install or remove anything. Some options "
"cannot be changed in this mode, such as the install directory; to modify "
"these, you will need to remove and then reinstall Python completely."
msgstr ""
"“修改”允許您通過修改複選框來新增或刪除功能 - 未更改的複選框不會安裝或刪除任何"
"內容。有些選項在此模式下無法更改，例如安裝目錄；要修改這些，"
"您需要完全刪除並重新安裝 Python。"

#: ../../using/windows.rst:291
#, fuzzy
msgid ""
"\"Repair\" will verify all the files that should be installed using the "
"current settings and replace any that have been removed or modified."
msgstr "“修復”將驗證所有應使用當前設定安裝的文件，並替換任何已刪除或修改的文件。"

#: ../../using/windows.rst:294
#, fuzzy
msgid ""
"\"Uninstall\" will remove Python entirely, with the exception of the :ref:"
"`launcher`, which has its own entry in Programs and Features."
msgstr "“卸載”將完全刪除 Python，但 :ref:`launcher` "
"除外，它在程式和功能中有自己的條目。"

#: ../../using/windows.rst:301
#, fuzzy
msgid "The Microsoft Store package"
msgstr "微軟商店包"

#: ../../using/windows.rst:305
#, fuzzy
msgid ""
"The Microsoft Store package is an easily installable Python interpreter that "
"is intended mainly for interactive use, for example, by students."
msgstr "Microsoft Store 包是一個易於安裝的 Python "
"直譯器，主要用於交互使用，例如供學生使用。"

#: ../../using/windows.rst:308
#, fuzzy
msgid ""
"To install the package, ensure you have the latest Windows 10 updates and "
"search the Microsoft Store app for \"Python |version|\". Ensure that the app "
"you select is published by the Python Software Foundation, and install it."
msgstr ""
"要安裝該程式包，請確保您擁有最新的 Windows 10 更新並在 Microsoft Store "
"應用中搜索“Python |version|”。確保您選擇的應用程式由 Python Software "
"Foundation 發布，然後安裝它。"

#: ../../using/windows.rst:313
#, fuzzy
msgid ""
"Python will always be available for free on the Microsoft Store. If you are "
"asked to pay for it, you have not selected the correct package."
msgstr "Python 將始終在 Microsoft Store "
"上免費提供。如果要求您付款，則說明您沒有選擇正確的套餐。"

#: ../../using/windows.rst:316
#, fuzzy
msgid ""
"After installation, Python may be launched by finding it in Start. "
"Alternatively, it will be available from any Command Prompt or PowerShell "
"session by typing ``python``. Further, pip and IDLE may be used by typing "
"``pip`` or ``idle``. IDLE can also be found in Start."
msgstr ""
"安裝完成後，可以在開始中找到Python來啟動它。或者，它可以通過鍵入 ``python``"
"從任何命令提示符或 PowerShell 會話中獲得。此外，可以通過鍵入 ``pip``或 ``idle``"
"來使用 pip 和 IDLE。 IDLE 也可以在開始中找到。"

#: ../../using/windows.rst:321
#, fuzzy
msgid ""
"All three commands are also available with version number suffixes, for "
"example, as ``python3.exe`` and ``python3.x.exe`` as well as ``python.exe`` "
"(where ``3.x`` is the specific version you want to launch, such as |"
"version|). Open \"Manage App Execution Aliases\" through Start to select "
"which version of Python is associated with each command. It is recommended "
"to make sure that ``pip`` and ``idle`` are consistent with whichever version "
"of ``python`` is selected."
msgstr ""
"所有這三個命令也可以使用版本號後綴，例如，作為 ``python3.exe`` 和 ``python3.x"
".exe`` 以及 ``python.exe``（其中 ``3.x` ` 是您要啟動的特定版本，例如 "
"|version|)。通過開始打開“管理應用程式執行別名”以選擇與每個命令關聯的 Python "
"版本。建議確保``pip``和``idle``與選擇的``python``版本一致。"

#: ../../using/windows.rst:329
#, fuzzy
msgid ""
"Virtual environments can be created with ``python -m venv`` and activated "
"and used as normal."
msgstr "可以使用 ``python -m venv`` 建立虛擬環境並激活和正常使用。"

#: ../../using/windows.rst:332
#, fuzzy
msgid ""
"If you have installed another version of Python and added it to your "
"``PATH`` variable, it will be available as ``python.exe`` rather than the "
"one from the Microsoft Store. To access the new installation, use ``python3."
"exe`` or ``python3.x.exe``."
msgstr ""
"如果您已經安裝了另一個版本的 Python "
"並將其新增到您的 ``PATH``變數中，它將以“python.exe”的形式提供，而不是來自 "
"Microsoft Store 的版本。要訪問新安裝，請使用 ``python3.exe`` 或 ``python3.x."
"exe``。"

#: ../../using/windows.rst:337
#, fuzzy
msgid ""
"The ``py.exe`` launcher will detect this Python installation, but will "
"prefer installations from the traditional installer."
msgstr "``py.exe`` 啟動器將檢測此 Python 安裝，但更喜歡來自傳統安裝程式的安裝。"

#: ../../using/windows.rst:340
#, fuzzy
msgid ""
"To remove Python, open Settings and use Apps and Features, or else find "
"Python in Start and right-click to select Uninstall. Uninstalling will "
"remove all packages you installed directly into this Python installation, "
"but will not remove any virtual environments"
msgstr ""
"要刪除 Python，請打開“設定”並使用“應用程式和功能”，或者在“開始”中找到 Python "
"並右鍵單擊以選擇“卸載”。卸載將刪除您直接安裝到此 Python "
"安裝中的所有包，但不會刪除任何虛擬環境"

#: ../../using/windows.rst:346
#, fuzzy
msgid "Known issues"
msgstr "已知的問題"

#: ../../using/windows.rst:349
#, fuzzy
msgid "Redirection of local data, registry, and temporary paths"
msgstr "本地資料、註冊表和臨時路徑的重定向"

#: ../../using/windows.rst:351
#, fuzzy
msgid ""
"Because of restrictions on Microsoft Store apps, Python scripts may not have "
"full write access to shared locations such as :envvar:`TEMP` and the "
"registry. Instead, it will write to a private copy. If your scripts must "
"modify the shared locations, you will need to install the full installer."
msgstr ""
"由於對 Microsoft Store 應用程式的限制，Python 腳本可能沒有對共享位置（如 "
":envvar:`TEMP` 和註冊表）的完全寫入權限。相反，它將寫入私有副本。如果您的腳本"
"必須修改共享位置，您將需要安裝完整的安裝程式。"

#: ../../using/windows.rst:356
#, fuzzy
msgid ""
"At runtime, Python will use a private copy of well-known Windows folders and "
"the registry. For example, if the environment variable :envvar:`%APPDATA%` "
"is :file:`c:\\\\Users\\\\<user>\\\\AppData\\\\`, then when writing to :file:"
"`C:\\\\Users\\\\<user>\\\\AppData\\\\Local` will write to :file:`C:\\"
"\\Users\\\\<user>\\\\AppData\\\\Local\\\\Packages\\"
"\\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0\\\\LocalCache\\\\Local\\"
"\\`."
msgstr ""
"在運行時，Python 將使用眾所周知的 Windows 文件夾和註冊表的私有副本。例如，"
"如果環境變數 :envvar:`%APPDATA%` 是 :file:`c:\\\\Users\\\\<user>\\\\AppData\\"
"\\`，那麼當寫到 :file:`C:\\\\Users \\\\<user>\\\\AppData\\\\Local` "
"將寫入 :file:`C:\\\\Users\\\\<user>\\\\AppData\\\\Local\\\\Packages\\"
"\\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0\\\\LocalCache\\ \\本地\\"
"\\`。"

#: ../../using/windows.rst:361
#, fuzzy
msgid ""
"When reading files, Windows will return the file from the private folder, or "
"if that does not exist, the real Windows directory. For example reading :"
"file:`C:\\\\Windows\\\\System32` returns the contents of :file:`C:\\"
"\\Windows\\\\System32` plus the contents of :file:`C:\\\\Program Files\\"
"\\WindowsApps\\\\package_name\\\\VFS\\\\SystemX86`."
msgstr ""
"讀取文件時，Windows 將從私有文件夾回傳文件，如果不存在，則回傳真正的 Windows "
"目錄。例如讀取 :file:`C:\\\\Windows\\\\System32` 回傳 :file:`C:\\\\Windows\\"
"\\System32` 的內容加上 :file:`C:\\\\Program Files\\\\WindowsApps 的內容\\"
"\\package_name\\\\VFS\\\\SystemX86`。"

#: ../../using/windows.rst:365
#, fuzzy
msgid ""
"You can find the real path of any existing file using :func:`os.path."
"realpath`:"
msgstr "您可以使用 os.path.realpath 找到任何現有文件的真實路徑："

#: ../../using/windows.rst:374
#, fuzzy
msgid "When writing to the Windows Registry, the following behaviors exist:"
msgstr "寫入 Windows 註冊表時，存在以下行為："

#: ../../using/windows.rst:376
#, fuzzy
msgid ""
"Reading from ``HKLM\\\\Software`` is allowed and results are merged with "
"the :file:`registry.dat` file in the package."
msgstr "允許從 ``HKLM\\\\Software`` 讀取並將結果與包中的 :file:`registry.dat` "
"文件合併。"

#: ../../using/windows.rst:377
#, fuzzy
msgid ""
"Writing to ``HKLM\\\\Software`` is not allowed if the corresponding key/"
"value exists, i.e. modifying existing keys."
msgstr "如果相應的鍵/值存在，則不允許寫入 ``HKLM\\\\Software``，即修改現有鍵。"

#: ../../using/windows.rst:378
#, fuzzy
msgid ""
"Writing to ``HKLM\\\\Software`` is allowed as long as a corresponding key/"
"value does not exist in the package and the user has the correct access "
"permissions."
msgstr "只要包中不存在相應的鍵/值並且使用者具有正確的訪問權限，就允許寫入“HKLM\\"
"\\Software”。"

#: ../../using/windows.rst:381
#, fuzzy
msgid ""
"For more detail on the technical basis for these limitations, please consult "
"Microsoft's documentation on packaged full-trust apps, currently available "
"at `docs.microsoft.com/en-us/windows/msix/desktop/desktop-to-uwp-behind-the-"
"scenes <https://docs.microsoft.com/en-us/windows/msix/desktop/desktop-to-uwp-"
"behind-the-scenes>`_"
msgstr ""
"有關這些限制的技術基礎的更多詳細資訊，請參閱 Microsoft "
"關於打包的完全信任應用程式的文檔，目前可在 `docs.microsoft.com/en-us/windows/"
"msix/desktop/desktop-to-uwp-behind-場景 <https://docs.microsoft.com/en-us/"
"windows/msix/desktop/desktop-to-uwp-behind-the-scenes>`_"

#: ../../using/windows.rst:390
msgid "The nuget.org packages"
msgstr "nuget.org 套件"

#: ../../using/windows.rst:394
#, fuzzy
msgid ""
"The nuget.org package is a reduced size Python environment intended for use "
"on continuous integration and build systems that do not have a system-wide "
"install of Python. While nuget is \"the package manager for .NET\", it also "
"works perfectly fine for packages containing build-time tools."
msgstr ""
"nuget.org 包是一個縮減大小的 Python 環境，旨在用於沒有在系統範圍內安裝 "
"Python 的持續集成和構建系統。雖然 nuget 是“.NET "
"的包管理器”，但它也非常適合包含構建時工具的包。"

#: ../../using/windows.rst:399
#, fuzzy
msgid ""
"Visit `nuget.org <https://www.nuget.org/>`_ for the most up-to-date "
"information on using nuget. What follows is a summary that is sufficient for "
"Python developers."
msgstr ""
"訪問 `nuget.org <https://www.nuget.org/>`_ 獲取有關使用 nuget 的最新資訊。"
"以下是對 Python 開發人員來說足夠的摘要。"

#: ../../using/windows.rst:403
#, fuzzy
msgid ""
"The ``nuget.exe`` command line tool may be downloaded directly from "
"``https://aka.ms/nugetclidl``, for example, using curl or PowerShell. With "
"the tool, the latest version of Python for 64-bit or 32-bit machines is "
"installed using::"
msgstr ""
"``nuget.exe`` 命令列工具可以直接從 ``https://aka.ms/nugetclidl`` 下載，例如，"
"使用 curl 或 PowerShell。使用該工具，可使用以下方式安裝適用於 64 位或 32 "
"位計算機的最新版本的 Python："

#: ../../using/windows.rst:411
#, fuzzy
msgid ""
"To select a particular version, add a ``-Version 3.x.y``. The output "
"directory may be changed from ``.``, and the package will be installed into "
"a subdirectory. By default, the subdirectory is named the same as the "
"package, and without the ``-ExcludeVersion`` option this name will include "
"the specific version installed. Inside the subdirectory is a ``tools`` "
"directory that contains the Python installation:"
msgstr ""
"要選擇特定版本，請新增“-Version 3.x.y”。輸出目錄可以從 ``.`` 更改，包將安裝到"
"子目錄中。預設情況下，子目錄的名稱與包的名稱相同，如果沒有 ``-ExcludeVersion`` 選"
"項，此名稱將包括安裝的特定版本。子目錄內是一個包含 Python 安裝的 ``tools`` "
"目錄："

#: ../../using/windows.rst:428
#, fuzzy
msgid ""
"In general, nuget packages are not upgradeable, and newer versions should be "
"installed side-by-side and referenced using the full path. Alternatively, "
"delete the package directory manually and install it again. Many CI systems "
"will do this automatically if they do not preserve files between builds."
msgstr ""
"通常，nuget 包是不可升級的，新版本應該並排安裝並使用完整路徑引用。或者，手動"
"刪除包目錄並重新安裝。如果許多 CI "
"系統不在構建之間保留文件，它們將自動執行此操作。"

#: ../../using/windows.rst:433
#, fuzzy
msgid ""
"Alongside the ``tools`` directory is a ``build\\native`` directory. This "
"contains a MSBuild properties file ``python.props`` that can be used in a C+"
"+ project to reference the Python install. Including the settings will "
"automatically use the headers and import libraries in your build."
msgstr ""
"在 ``tools``目錄旁邊是一個“build\\n"
"ative”目錄。這包含一個 MSBuild 屬性文件“python.props”，可用於 C++ 項目以引用 "
"Python 安裝。包括這些設定將自動在您的構建中使用標頭和導入庫。"

#: ../../using/windows.rst:438
#, fuzzy
msgid ""
"The package information pages on nuget.org are `www.nuget.org/packages/"
"python <https://www.nuget.org/packages/python>`_ for the 64-bit version and "
"`www.nuget.org/packages/pythonx86 <https://www.nuget.org/packages/"
"pythonx86>`_ for the 32-bit version."
msgstr ""
"nuget.org 上的包資訊頁面是 `www.nuget.org/packages/python <https://www.nuget."
"org/packages/python>`_ 對於 64 位版本和 `www.nuget.org/ packages/pythonx86 "
"<https://www.nuget.org/packages/pythonx86>`_ 對於 32 位版本。"

#: ../../using/windows.rst:447
#, fuzzy
msgid "The embeddable package"
msgstr "可嵌入包"

#: ../../using/windows.rst:451
#, fuzzy
msgid ""
"The embedded distribution is a ZIP file containing a minimal Python "
"environment. It is intended for acting as part of another application, "
"rather than being directly accessed by end-users."
msgstr "嵌入式分發是一個包含最小 Python 環境的 ZIP "
"文件。它旨在充當另一個應用程式的一部分，而不是由最終使用者直接訪問。"

#: ../../using/windows.rst:455
#, fuzzy
msgid ""
"When extracted, the embedded distribution is (almost) fully isolated from "
"the user's system, including environment variables, system registry "
"settings, and installed packages. The standard library is included as pre-"
"compiled and optimized ``.pyc`` files in a ZIP, and ``python3.dll``, "
"``python37.dll``, ``python.exe`` and ``pythonw.exe`` are all provided. Tcl/"
"tk (including all dependents, such as Idle), pip and the Python "
"documentation are not included."
msgstr ""
"提取後，嵌入式分發（幾乎）與使用者系統完全隔離，包括環境變數、系統註冊表設定"
"和已安裝的包。標準庫包含在 ZIP 中作為預編譯和最佳化的 ``.pyc`` 文件，以及 "
"``python3.dll``、``python37.dll``、``python.exe`` 和 ``pythonw .exe`` "
"都提供了。不包括 Tcl/tk（包括所有依賴項，例如 Idle）、pip 和 Python 文檔。"

#: ../../using/windows.rst:464
#, fuzzy
msgid ""
"The embedded distribution does not include the `Microsoft C Runtime <https://"
"docs.microsoft.com/en-US/cpp/windows/latest-supported-vc-redist#visual-"
"studio-2015-2017-2019-and-2022>`_ and it is the responsibility of the "
"application installer to provide this. The runtime may have already been "
"installed on a user's system previously or automatically via Windows Update, "
"and can be detected by finding ``ucrtbase.dll`` in the system directory."
msgstr ""
"嵌入式發行版不包括`Microsoft C Runtime <https://docs.microsoft.com/en-US/cpp/"
"windows/latest-supported-vc-redist#visual-studio-2015-2017-2019-and- 2022>`_ "
"應用程式安裝程式有責任提供此資訊。運行時可能之前已經安裝在使用者系統上或通過 "
"Windows 更新自動安裝，並且可以通過在系統目錄中查找 ucrtbase.dll 來檢測。"

#: ../../using/windows.rst:471
#, fuzzy
msgid ""
"Third-party packages should be installed by the application installer "
"alongside the embedded distribution. Using pip to manage dependencies as for "
"a regular Python installation is not supported with this distribution, "
"though with some care it may be possible to include and use pip for "
"automatic updates. In general, third-party packages should be treated as "
"part of the application (\"vendoring\") so that the developer can ensure "
"compatibility with newer versions before providing updates to users."
msgstr ""
"第三方軟件包應由應用程式安裝程式與嵌入式發行版一起安裝。此發行版不支援像常規 "
"Python 安裝一樣使用 pip 來管理依賴項，但如果小心的話，可能可以包含並使用 pip "
"進行自動更新。一般來說，第三方包應該被視為應用程式的一部分（ ``vendoring`` ），以"
"便開發人員可以在向使用者提供更新之前確保與較新版本的相容性。"

#: ../../using/windows.rst:479
#, fuzzy
msgid ""
"The two recommended use cases for this distribution are described below."
msgstr "下面描述了此發行版的兩個推薦用例。"

#: ../../using/windows.rst:482
#, fuzzy
msgid "Python Application"
msgstr "Python 應用程式"

#: ../../using/windows.rst:484
#, fuzzy
msgid ""
"An application written in Python does not necessarily require users to be "
"aware of that fact. The embedded distribution may be used in this case to "
"include a private version of Python in an install package. Depending on how "
"transparent it should be (or conversely, how professional it should appear), "
"there are two options."
msgstr ""
"用 Python 編寫的應用程式不一定要求使用者了解這一事實。在這種情況下，"
"嵌入式分發可以用於在安裝包中包含 Python 的私有版本。根據它應該有多透明（或者"
"相反，它應該看起來有多專業），有兩種選擇。"

#: ../../using/windows.rst:490
#, fuzzy
msgid ""
"Using a specialized executable as a launcher requires some coding, but "
"provides the most transparent experience for users. With a customized "
"launcher, there are no obvious indications that the program is running on "
"Python: icons can be customized, company and version information can be "
"specified, and file associations behave properly. In most cases, a custom "
"launcher should simply be able to call ``Py_Main`` with a hard-coded command "
"line."
msgstr ""
"使用專門的可執行文件作為啟動器需要一些編碼，但可以為使用者提供最透明的體驗。"
"使用定制的啟動器，沒有明顯的跡象表明該程式正在 Python 上運行：可以定製圖標，"
"可以指定公司和版本資訊，並且文件關聯行為正常。在大多數情況下，自定義啟動器應"
"該能夠簡單地使用硬編碼命令列呼叫“Py_Main”。"

#: ../../using/windows.rst:497
#, fuzzy
msgid ""
"The simpler approach is to provide a batch file or generated shortcut that "
"directly calls the ``python.exe`` or ``pythonw.exe`` with the required "
"command-line arguments. In this case, the application will appear to be "
"Python and not its actual name, and users may have trouble distinguishing it "
"from other running Python processes or file associations."
msgstr ""
"更簡單的方法是提供一個批處理文件或生成的快捷方式，"
"使用所需的命令列參數直接呼叫 ``python.exe`` 或 ``pythonw."
"exe``。在這種情況下，該應用程式將顯示為 Python 而不是其實際名稱，"
"使用者可能難以將其與其他正在運行的 Python 行程或文件關聯區分開來。"

#: ../../using/windows.rst:503
#, fuzzy
msgid ""
"With the latter approach, packages should be installed as directories "
"alongside the Python executable to ensure they are available on the path. "
"With the specialized launcher, packages can be located in other locations as "
"there is an opportunity to specify the search path before launching the "
"application."
msgstr ""
"使用後一種方法，包應作為目錄與 Python 可執行文件一起安裝，以確保它們在路徑上"
"可用。使用專門的啟動器，包可以位於其他位置，因為有機會在啟動應用程式之前指定"
"搜索路徑。"

#: ../../using/windows.rst:509
msgid "Embedding Python"
msgstr "嵌入 Python"

#: ../../using/windows.rst:511
#, fuzzy
msgid ""
"Applications written in native code often require some form of scripting "
"language, and the embedded Python distribution can be used for this purpose. "
"In general, the majority of the application is in native code, and some part "
"will either invoke ``python.exe`` or directly use ``python3.dll``. For "
"either case, extracting the embedded distribution to a subdirectory of the "
"application installation is sufficient to provide a loadable Python "
"interpreter."
msgstr ""
"用本機程式碼編寫的應用程式通常需要某種形式的腳本語言，嵌入式 Python "
"發行版可用於此目的。一般來說，大部分應用程式都是本地程式碼，有些部分會呼叫 "
"``python.exe`` 或直接使用 ``python3.dll``。對於任何一種情況，"
"將嵌入式分發提取到應用程式安裝的子目錄中都足以提供可加載的 Python 直譯器。"

#: ../../using/windows.rst:518
#, fuzzy
msgid ""
"As with the application use, packages can be installed to any location as "
"there is an opportunity to specify search paths before initializing the "
"interpreter. Otherwise, there is no fundamental differences between using "
"the embedded distribution and a regular installation."
msgstr "與應用程式使用一樣，包可以安裝到任何位置，因為有機會在初始化直譯器之前指定搜"
"索路徑。否則，使用嵌入式發行版和常規安裝之間沒有根本區別。"

#: ../../using/windows.rst:525
#, fuzzy
msgid "Alternative bundles"
msgstr "替代捆綁包"

#: ../../using/windows.rst:527
#, fuzzy
msgid ""
"Besides the standard CPython distribution, there are modified packages "
"including additional functionality.  The following is a list of popular "
"versions and their key features:"
msgstr "除了標準的 CPython "
"發行版外，還有包含附加功能的修改包。以下是流行版本及其主要功能的列表："

#: ../../using/windows.rst:532
msgid "`ActivePython <https://www.activestate.com/activepython/>`_"
msgstr "`ActivePython <https://www.activestate.com/activepython/>`_"

#: ../../using/windows.rst:532
#, fuzzy
msgid "Installer with multi-platform compatibility, documentation, PyWin32"
msgstr "具有多平台相容性的安裝程式、文檔、PyWin32"

#: ../../using/windows.rst:536
msgid "`Anaconda <https://www.anaconda.com/download/>`_"
msgstr "`Anaconda <https://www.anaconda.com/download/>`_"

#: ../../using/windows.rst:535
#, fuzzy
msgid ""
"Popular scientific modules (such as numpy, scipy and pandas) and the "
"``conda`` package manager."
msgstr "流行的科學模組（例如 numpy、scipy 和 pandas）和 ``conda`` 包管理器。"

#: ../../using/windows.rst:542
msgid "`Enthought Deployment Manager <https://www.enthought.com/edm/>`_"
msgstr "`Enthought Deployment Manager <https://www.enthought.com/edm/>`_"

#: ../../using/windows.rst:539
#, fuzzy
msgid "\"The Next Generation Python Environment and Package Manager\"."
msgstr "“下一代 Python 環境和包管理器”。"

#: ../../using/windows.rst:541
#, fuzzy
msgid ""
"Previously Enthought provided Canopy, but it `reached end of life in 2016 "
"<https://support.enthought.com/hc/en-us/articles/360038600051-Canopy-GUI-end-"
"of-life-transition-to-the-Enthought-Deployment-Manager-EDM-and-Visual-Studio-"
"Code>`_."
msgstr ""
"以前 Enthought 提供了 Canopy，但它在 2016 年結束了 <https://support.enthought"
".com/hc/en-us/articles/360038600051-Canopy-GUI-end-of-life-transition-to-the "
"-Enthought-Deployment-Manager-EDM-and-Visual-Studio-Code>`_。"

#: ../../using/windows.rst:546
msgid "`WinPython <https://winpython.github.io/>`_"
msgstr "`WinPython <https://winpython.github.io/>`_"

#: ../../using/windows.rst:545
#, fuzzy
msgid ""
"Windows-specific distribution with prebuilt scientific packages and tools "
"for building packages."
msgstr "特定於 Windows 的發行版，帶有預建的科學包和用於構建包的工具。"

#: ../../using/windows.rst:548
#, fuzzy
msgid ""
"Note that these packages may not include the latest versions of Python or "
"other libraries, and are not maintained or supported by the core Python team."
msgstr "請注意，這些包可能不包含最新版本的 Python 或其他庫，並且不受核心 Python "
"團隊的維護或支援。"

#: ../../using/windows.rst:554
msgid "Configuring Python"
msgstr "設定 Python"

#: ../../using/windows.rst:556
#, fuzzy
msgid ""
"To run Python conveniently from a command prompt, you might consider "
"changing some default environment variables in Windows.  While the installer "
"provides an option to configure the PATH and PATHEXT variables for you, this "
"is only reliable for a single, system-wide installation.  If you regularly "
"use multiple versions of Python, consider using the :ref:`launcher`."
msgstr ""
"要從命令提示符方便地運行 Python，您可以考慮更改 Windows "
"中的一些預設環境變數。雖然安裝程式提供了一個選項來為您配置 PATH 和 PATHEXT "
"變數，但這僅適用於單個系統範圍的安裝。如果您經常使用多個版本的 Python，"
"請考慮使用 :ref:`launcher`。"

#: ../../using/windows.rst:566
#, fuzzy
msgid "Excursus: Setting environment variables"
msgstr "附錄：設定環境變數"

#: ../../using/windows.rst:568
#, fuzzy
msgid ""
"Windows allows environment variables to be configured permanently at both "
"the User level and the System level, or temporarily in a command prompt."
msgstr "Windows "
"允許在使用者級別和系統級別永久配置環境變數，或在命令提示符下臨時配置。"

#: ../../using/windows.rst:571
#, fuzzy
msgid ""
"To temporarily set environment variables, open Command Prompt and use the :"
"command:`set` command:"
msgstr "要臨時設定環境變數，請打開命令提示符並使用 :command:`set` 命令："

#: ../../using/windows.rst:580
#, fuzzy
msgid ""
"These changes will apply to any further commands executed in that console, "
"and will be inherited by any applications started from the console."
msgstr "這些更改將應用於在該控制台中執行的任何進一步命令，並將由從控制台啟動的任何應"
"用程式繼承。"

#: ../../using/windows.rst:583
#, fuzzy
msgid ""
"Including the variable name within percent signs will expand to the existing "
"value, allowing you to add your new value at either the start or the end. "
"Modifying :envvar:`PATH` by adding the directory containing :program:`python."
"exe` to the start is a common way to ensure the correct version of Python is "
"launched."
msgstr ""
"在百分號內包含變數名稱將擴充為現有值，允許您在開頭或結尾新增新值。通過將包含 "
":program:`python.exe` 的目錄新增到開頭來修改 :envvar:`PATH` "
"是確保啟動正確版本的 Python 的常用方法。"

#: ../../using/windows.rst:589
#, fuzzy
msgid ""
"To permanently modify the default environment variables, click Start and "
"search for 'edit environment variables', or open System properties, :"
"guilabel:`Advanced system settings` and click the :guilabel:`Environment "
"Variables` button. In this dialog, you can add or modify User and System "
"variables. To change System variables, you need non-restricted access to "
"your machine (i.e. Administrator rights)."
msgstr ""
"要永久修改預設環境變數，請單擊開始並蒐索“編輯環境變數”，或打開系統屬性、高階"
"系統設定並單擊環境變數按鈕。在此對話框中，您可以新增或修改使用者和系統變數。"
"要更改系統變數，您需要不受限制地訪問您的機器（即管理員權限）。"

#: ../../using/windows.rst:598
#, fuzzy
msgid ""
"Windows will concatenate User variables *after* System variables, which may "
"cause unexpected results when modifying :envvar:`PATH`."
msgstr "Windows 將在*系統變數之後串聯使用者變數，這可能會在修改 :envvar:`PATH` "
"時導致意外結果。"

#: ../../using/windows.rst:601
#, fuzzy
msgid ""
"The :envvar:`PYTHONPATH` variable is used by all versions of Python, so you "
"should not permanently configure it unless the listed paths only include "
"code that is compatible with all of your installed Python versions."
msgstr ""
":envvar:`PYTHONPATH` 變數被所有版本的 Python 使用，所以你不應該永久配置它，"
"除非列出的路徑只包含與你安裝的所有 Python 版本相容的程式碼。"

#: ../../using/windows.rst:609
msgid ""
"https://docs.microsoft.com/en-us/windows/win32/procthread/environment-"
"variables"
msgstr ""
"https://docs.microsoft.com/en-us/windows/win32/procthread/environment-"
"variables"

#: ../../using/windows.rst:609
msgid "Overview of environment variables on Windows"
msgstr "Windows 上的環境變數概要"

#: ../../using/windows.rst:612
msgid ""
"https://docs.microsoft.com/en-us/windows-server/administration/windows-"
"commands/set_1"
msgstr ""
"https://docs.microsoft.com/en-us/windows-server/administration/windows-"
"commands/set_1"

#: ../../using/windows.rst:612
#, fuzzy
msgid "The ``set`` command, for temporarily modifying environment variables"
msgstr "``set`` 命令，用於臨時修改環境變數"

#: ../../using/windows.rst:614
msgid ""
"https://docs.microsoft.com/en-us/windows-server/administration/windows-"
"commands/setx"
msgstr ""
"https://docs.microsoft.com/en-us/windows-server/administration/windows-"
"commands/setx"

#: ../../using/windows.rst:615
#, fuzzy
msgid "The ``setx`` command, for permanently modifying environment variables"
msgstr "``setx`` 命令，用於永久修改環境變數"

#: ../../using/windows.rst:621
#, fuzzy
msgid "Finding the Python executable"
msgstr "查找 Python 可執行文件"

#: ../../using/windows.rst:625
#, fuzzy
msgid ""
"Besides using the automatically created start menu entry for the Python "
"interpreter, you might want to start Python in the command prompt. The "
"installer has an option to set that up for you."
msgstr "除了為 Python 直譯器使用自動建立的開始菜單條目外，"
"您可能還想在命令提示符中啟動 Python。安裝程式有一個選項可以為您進行設定。"

#: ../../using/windows.rst:629
#, fuzzy
msgid ""
"On the first page of the installer, an option labelled \"Add Python to "
"PATH\" may be selected to have the installer add the install location into "
"the :envvar:`PATH`.  The location of the :file:`Scripts\\\\` folder is also "
"added. This allows you to type :command:`python` to run the interpreter, "
"and :command:`pip` for the package installer. Thus, you can also execute "
"your scripts with command line options, see :ref:`using-on-cmdline` "
"documentation."
msgstr ""
"在安裝程式的第一頁上，可以選擇標記為“將 Python 新增到 PATH”的選項，"
"以使安裝程式將安裝位置新增到 :envvar:`PATH` 中。還新增了 :file:`Scripts\\\\` "
"文件夾的位置。這允許您鍵入 :command:`python` 來運行直譯器，並鍵入 "
":command:`pip` 來運行包安裝程式。因此，您還可以使用命令列選項執行腳本，"
"請參閱 :ref:`using-on-cmdline` 文檔。"

#: ../../using/windows.rst:636
#, fuzzy
msgid ""
"If you don't enable this option at install time, you can always re-run the "
"installer, select Modify, and enable it.  Alternatively, you can manually "
"modify the :envvar:`PATH` using the directions in :ref:`setting-envvars`.  "
"You need to set your :envvar:`PATH` environment variable to include the "
"directory of your Python installation, delimited by a semicolon from other "
"entries.  An example variable could look like this (assuming the first two "
"entries already existed)::"
msgstr ""
"如果您在安裝時未啟用此選項，您始終可以重新運行安裝程式，選擇“修改”並啟用它。"
"或者，您可以使用 :ref:`setting-envvars` 中的說明手動修改 :envvar:`PATH`。"
"您需要設定 :envvar:`PATH` 環境變數以包含 Python 安裝目錄，與其他條目用分號分"
"隔。示例變數可能如下所示（假設前兩個條目已經存在）："

#: ../../using/windows.rst:649
msgid "UTF-8 mode"
msgstr "UTF-8 模式"

#: ../../using/windows.rst:653
#, fuzzy
msgid ""
"Windows still uses legacy encodings for the system encoding (the ANSI Code "
"Page).  Python uses it for the default encoding of text files (e.g. :func:"
"`locale.getencoding`)."
msgstr ""
"Windows 仍然使用傳統編碼作為系統編碼（ANSI 程式碼頁）。 Python "
"使用它作為文本文件的預設編碼（例如 :func:`locale.getencoding`）。"

#: ../../using/windows.rst:657
#, fuzzy
msgid ""
"This may cause issues because UTF-8 is widely used on the internet and most "
"Unix systems, including WSL (Windows Subsystem for Linux)."
msgstr ""
"這可能會導致問題，因為 UTF-8 在 Internet 和大多數 Unix 系統上廣泛使用，包括 "
"WSL（Linux 的 Windows 子系統）。"

#: ../../using/windows.rst:660
#, fuzzy
msgid ""
"You can use the :ref:`Python UTF-8 Mode <utf8-mode>` to change the default "
"text encoding to UTF-8. You can enable the :ref:`Python UTF-8 Mode <utf8-"
"mode>` via the ``-X utf8`` command line option, or the ``PYTHONUTF8=1`` "
"environment variable.  See :envvar:`PYTHONUTF8` for enabling UTF-8 mode, "
"and :ref:`setting-envvars` for how to modify environment variables."
msgstr ""
"您可以使用 :ref:`Python UTF-8 模式 <utf8-mode>` 將預設文本編碼更改為 "
"UTF-8。您可以通過``-X utf8`` 命令列選項或``PYTHONUTF8=1`` 環境變數啟用 :ref:`"
"Python UTF-8 模式<utf8-mode>`。請參閱 :envvar:`PYTHONUTF8` 以了解啟用 UTF-8 "
"模式，以及 :ref:`setting-envvars` 了解如何修改環境變數。"

#: ../../using/windows.rst:666
#, fuzzy
msgid ""
"When the :ref:`Python UTF-8 Mode <utf8-mode>` is enabled, you can still use "
"the system encoding (the ANSI Code Page) via the \"mbcs\" codec."
msgstr ""
"當啟用 :ref:`Python UTF-8 模式 <utf8-mode>` "
"時，您仍然可以通過 ``mbcs``編解碼器使用系統編碼（ANSI 程式碼頁）。"

#: ../../using/windows.rst:669
#, fuzzy
msgid ""
"Note that adding ``PYTHONUTF8=1`` to the default environment variables will "
"affect all Python 3.7+ applications on your system. If you have any Python "
"3.7+ applications which rely on the legacy system encoding, it is "
"recommended to set the environment variable temporarily or use the ``-X "
"utf8`` command line option."
msgstr ""
"請注意，將“PYTHONUTF8=1”新增到預設環境變數將影響系統上的所有 Python 3.7+ "
"應用程式。如果您有任何依賴遺留系統編碼的 Python 3.7+ "
"應用程式，建議臨時設定環境變數或使用“-X utf8”命令列選項。"

#: ../../using/windows.rst:676
#, fuzzy
msgid ""
"Even when UTF-8 mode is disabled, Python uses UTF-8 by default on Windows "
"for:"
msgstr "即使禁用 UTF-8 模式，Python 在 Windows 上預設使用 UTF-8 用於："

#: ../../using/windows.rst:679
#, fuzzy
msgid "Console I/O including standard I/O (see :pep:`528` for details)."
msgstr "控制台 I/O，包括標準 I/O（有關詳細資訊，請參閱 :pep:`528`）。"

#: ../../using/windows.rst:680
#, fuzzy
msgid ""
"The :term:`filesystem encoding <filesystem encoding and error handler>` "
"(see :pep:`529` for details)."
msgstr ""
":term:`filesystem encoding <filesystem encoding and error "
"handler>`（詳見 :pep:`529`）。"

#: ../../using/windows.rst:687
#, fuzzy
msgid "Python Launcher for Windows"
msgstr "適用於 Windows 的 Python 啟動器"

#: ../../using/windows.rst:691
#, fuzzy
msgid ""
"The Python launcher for Windows is a utility which aids in locating and "
"executing of different Python versions.  It allows scripts (or the command-"
"line) to indicate a preference for a specific Python version, and will "
"locate and execute that version."
msgstr ""
"適用於 Windows 的 Python 啟動器是一個實用程式，可幫助定位和執行不同的 Python "
"版本。它允許腳本（或命令列）指示對特定 Python "
"版本的偏好，並將定位並執行該版本。"

#: ../../using/windows.rst:696
#, fuzzy
msgid ""
"Unlike the :envvar:`PATH` variable, the launcher will correctly select the "
"most appropriate version of Python. It will prefer per-user installations "
"over system-wide ones, and orders by language version rather than using the "
"most recently installed version."
msgstr ""
"與 :envvar:`PATH` 變數不同，啟動器將正確選擇最合適的 Python 版本。它將更喜歡"
"按使用者安裝而不是系統範圍的安裝，並且按語言版本排序而不是使用最近安裝的版本"
"。"

#: ../../using/windows.rst:701
#, fuzzy
msgid "The launcher was originally specified in :pep:`397`."
msgstr "啟動器最初在 :pep:`397` 中指定。"

#: ../../using/windows.rst:704
msgid "Getting started"
msgstr "開始"

#: ../../using/windows.rst:707
#, fuzzy
msgid "From the command-line"
msgstr "從命令列"

#: ../../using/windows.rst:711
#, fuzzy
msgid ""
"System-wide installations of Python 3.3 and later will put the launcher on "
"your :envvar:`PATH`. The launcher is compatible with all available versions "
"of Python, so it does not matter which version is installed. To check that "
"the launcher is available, execute the following command in Command Prompt::"
msgstr ""
"Python 3.3 及更高版本的系統範圍安裝會將啟動器放在您的 :envvar:`PATH` 上。"
"啟動器與所有可用版本的 Python 相容，因此安裝哪個版本都沒有關係。要檢查啟動器"
"是否可用，請在命令提示符中執行以下命令："

#: ../../using/windows.rst:718
#, fuzzy
msgid ""
"You should find that the latest version of Python you have installed is "
"started - it can be exited as normal, and any additional command-line "
"arguments specified will be sent directly to Python."
msgstr "您應該會發現已安裝的最新版本的 Python 已啟動 - 它可以正常退出，"
"並且指定的任何其他命令列參數都將直接發送到 Python。"

#: ../../using/windows.rst:722
#, fuzzy
msgid ""
"If you have multiple versions of Python installed (e.g., 3.7 and |version|) "
"you will have noticed that Python |version| was started - to launch Python "
"3.7, try the command::"
msgstr ""
"如果您安裝了多個版本的 Python（例如 3.7 和 |version|），您會注意到 Python "
"|version|已啟動 - 要啟動 Python 3.7，請嘗試以下命令："

#: ../../using/windows.rst:728
#, fuzzy
msgid ""
"If you want the latest version of Python 2 you have installed, try the "
"command::"
msgstr "如果您想要安裝的最新版本的 Python 2，請嘗試以下命令："

#: ../../using/windows.rst:733
#, fuzzy
msgid ""
"If you see the following error, you do not have the launcher installed::"
msgstr "如果您看到以下錯誤，則說明您沒有安裝啟動器::"

#: ../../using/windows.rst:738
msgid "The command::"
msgstr ""
"指令：\n"
"\n"
"::"

#: ../../using/windows.rst:742
#, fuzzy
msgid "displays the currently installed version(s) of Python."
msgstr "顯示當前安裝的 Python 版本。"

#: ../../using/windows.rst:744
#, fuzzy
msgid ""
"The ``-x.y`` argument is the short form of the ``-V:Company/Tag`` argument, "
"which allows selecting a specific Python runtime, including those that may "
"have come from somewhere other than python.org. Any runtime registered by "
"following :pep:`514` will be discoverable. The ``--list`` command lists all "
"available runtimes using the ``-V:`` format."
msgstr ""
"``-x.y`` 參數是``-V:Company/Tag`` 參數的縮寫形式，它允許選擇特定的 Python "
"運行時，包括那些可能來自 python.org 以外的地方的運行時。通過以下 :pep:`514` "
"註冊的任何運行時都將是可發現的。 ``--list`` 命令使用 ``-V:`` "
"格式列出所有可用的運行時。"

#: ../../using/windows.rst:750
#, fuzzy
msgid ""
"When using the ``-V:`` argument, specifying the Company will limit selection "
"to runtimes from that provider, while specifying only the Tag will select "
"from all providers. Note that omitting the slash implies a tag::"
msgstr "使用“-V:”參數時，指定公司將限制選擇來自該提供者的運行時，而僅指定標籤將從所有"
"提供者中選擇。請注意，省略斜杠意味著標記::"

#: ../../using/windows.rst:763
#, fuzzy
msgid ""
"The short form of the argument (``-3``) only ever selects from core Python "
"releases, and not other distributions. However, the longer form (``-V:3``) "
"will select from any."
msgstr ""
"參數的縮寫形式 (``-3``) 只從核心 Python 版本中選擇，而不是其他發行版。但是，"
"較長的形式 (``-V:3``) 將從任意一個中選擇。"

#: ../../using/windows.rst:767
#, fuzzy
msgid ""
"The Company is matched on the full string, case-insenitive. The Tag is "
"matched oneither the full string, or a prefix, provided the next character "
"is a dot or a hyphen. This allows ``-V:3.1`` to match ``3.1-32``, but not "
"``3.10``. Tags are sorted using numerical ordering (``3.10`` is newer than "
"``3.1``), but are compared using text (``-V:3.01`` does not match ``3.1``)."
msgstr ""
"公司匹配完整字串，不區分大小寫。如果下一個字元是點或連字元，則 Tag "
"與完整字串或前綴匹配。這允許“-V:3.1”匹配“3.1-32”，但不匹配“3."
"10”。標籤使用數字排序（``3.10`` 比``3.1`` 更新），但使用文本進行比較（``-V:3."
"01`` 與``3.1`` 不匹配）。"

#: ../../using/windows.rst:775
msgid "Virtual environments"
msgstr "虛擬環境（Virtual environment）"

#: ../../using/windows.rst:779
#, fuzzy
msgid ""
"If the launcher is run with no explicit Python version specification, and a "
"virtual environment (created with the standard library :mod:`venv` module or "
"the external ``virtualenv`` tool) active, the launcher will run the virtual "
"environment's interpreter rather than the global one.  To run the global "
"interpreter, either deactivate the virtual environment, or explicitly "
"specify the global Python version."
msgstr ""
"如果啟動器在沒有明確的 Python 版本規範的情況下運行，並且虛擬環境（使用標準庫 "
":mod:`venv` 模組或外部 ``virtualenv`` 工具建立）處於活動狀態，則啟動器將運行"
"虛擬環境的直譯器而不是比全球的。要運行全局直譯器，請停用虛擬環境，"
"或明確指定全局 Python 版本。"

#: ../../using/windows.rst:787
#, fuzzy
msgid "From a script"
msgstr "從腳本"

#: ../../using/windows.rst:789
#, fuzzy
msgid ""
"Let's create a test Python script - create a file called ``hello.py`` with "
"the following contents"
msgstr "讓我們建立一個測試 Python 腳本——建立一個名為“hello."
"py”的文件，其中包含以下內容"

#: ../../using/windows.rst:798
#, fuzzy
msgid "From the directory in which hello.py lives, execute the command::"
msgstr "在 hello.py 所在的目錄中，執行命令："

#: ../../using/windows.rst:802
#, fuzzy
msgid ""
"You should notice the version number of your latest Python 2.x installation "
"is printed.  Now try changing the first line to be:"
msgstr "您應該注意到印出了最新 Python 2.x 安裝的版本號。現在嘗試將第一行更改為："

#: ../../using/windows.rst:809
#, fuzzy
msgid ""
"Re-executing the command should now print the latest Python 3.x information. "
"As with the above command-line examples, you can specify a more explicit "
"version qualifier.  Assuming you have Python 3.7 installed, try changing the "
"first line to ``#! python3.7`` and you should find the 3.7 version "
"information printed."
msgstr ""
"重新執行命令現在應該會印出最新的 Python 3.x "
"資訊。與上述命令列示例一樣，您可以指定更明確的版本限定符。假設您安裝了 "
"Python 3.7，請嘗試將第一行更改為 ``#! python3.7`` 並且您應該找到印出的 3.7 "
"版本資訊。"

#: ../../using/windows.rst:815
#, fuzzy
msgid ""
"Note that unlike interactive use, a bare \"python\" will use the latest "
"version of Python 2.x that you have installed.  This is for backward "
"compatibility and for compatibility with Unix, where the command ``python`` "
"typically refers to Python 2."
msgstr ""
"請注意，與交互式使用不同，裸 ``python``將使用您已安裝的最新版本的 Python 2.x。"
"這是為了向後相容和與 Unix 相容，其中命令 ``python``通常指的是 Python 2。"

#: ../../using/windows.rst:821
msgid "From file associations"
msgstr "從檔案關聯"

#: ../../using/windows.rst:823
#, fuzzy
msgid ""
"The launcher should have been associated with Python files (i.e. ``.py``, ``."
"pyw``, ``.pyc`` files) when it was installed.  This means that when you "
"double-click on one of these files from Windows explorer the launcher will "
"be used, and therefore you can use the same facilities described above to "
"have the script specify the version which should be used."
msgstr ""
"啟動器在安裝時應該與 Python 文件（即 ``.py``、``.pyw``、``.pyc`` "
"文件）相關聯。這意味著當您從 Windows 資源管理器雙擊其中一個文件時，將使用啟動"
"器，因此您可以使用上述相同的工具讓腳本指定應使用的版本。"

#: ../../using/windows.rst:829
#, fuzzy
msgid ""
"The key benefit of this is that a single launcher can support multiple "
"Python versions at the same time depending on the contents of the first line."
msgstr "這樣做的主要好處是單個啟動器可以同時支援多個 Python "
"版本，具體取決於第一行的內容。"

#: ../../using/windows.rst:833
#, fuzzy
msgid "Shebang Lines"
msgstr "社邦線"

#: ../../using/windows.rst:835
#, fuzzy
msgid ""
"If the first line of a script file starts with ``#!``, it is known as a "
"\"shebang\" line.  Linux and other Unix like operating systems have native "
"support for such lines and they are commonly used on such systems to "
"indicate how a script should be executed.  This launcher allows the same "
"facilities to be used with Python scripts on Windows and the examples above "
"demonstrate their use."
msgstr ""
"如果腳本文件的第一行以“#!”開頭，則稱為 ``shebang`` 行。 Linux 和其他類似 Unix 的"
"操作系統具有對此類行的本機支援，並且它們通常在此類系統上用於指示應如何執行腳"
"本。此啟動器允許在 Windows 上將相同的工具與 Python "
"腳本一起使用，並且上面的示例演示了它們的用法。"

#: ../../using/windows.rst:842
#, fuzzy
msgid ""
"To allow shebang lines in Python scripts to be portable between Unix and "
"Windows, this launcher supports a number of 'virtual' commands to specify "
"which interpreter to use.  The supported virtual commands are:"
msgstr ""
"為了允許 Python 腳本中的 shebang 行在 Unix 和 Windows 之間可移植，此啟動器支"
"援許多“虛擬”命令來指定要使用的直譯器。支援的虛擬命令是："

#: ../../using/windows.rst:846
msgid "``/usr/bin/env``"
msgstr "``/usr/bin/env``"

#: ../../using/windows.rst:847
msgid "``/usr/bin/python``"
msgstr "``/usr/bin/python``"

#: ../../using/windows.rst:848
msgid "``/usr/local/bin/python``"
msgstr "``/usr/local/bin/python``"

#: ../../using/windows.rst:849
msgid "``python``"
msgstr "``python``"

#: ../../using/windows.rst:851
#, fuzzy
msgid "For example, if the first line of your script starts with"
msgstr "例如，如果腳本的第一行以"

#: ../../using/windows.rst:857
#, fuzzy
msgid ""
"The default Python will be located and used.  As many Python scripts written "
"to work on Unix will already have this line, you should find these scripts "
"can be used by the launcher without modification.  If you are writing a new "
"script on Windows which you hope will be useful on Unix, you should use one "
"of the shebang lines starting with ``/usr``."
msgstr ""
"將找到並使用預設的 Python。由於許多為在 Unix 上工作而編寫的 Python "
"腳本已經有這一行，您應該會發現啟動器無需修改即可使用這些腳本。如果你在 "
"Windows 上寫一個新的腳本，你希望它在 Unix 上有用，你應該使用以 ``/usr`` "
"開頭的 shebang 行之一。"

#: ../../using/windows.rst:863
#, fuzzy
msgid ""
"Any of the above virtual commands can be suffixed with an explicit version "
"(either just the major version, or the major and minor version). Furthermore "
"the 32-bit version can be requested by adding \"-32\" after the minor "
"version. I.e. ``/usr/bin/python3.7-32`` will request usage of the 32-bit "
"python 3.7."
msgstr ""
"上面的任何虛擬命令都可以使用顯式版本作為後綴（可以是主要版本，也可以是主要版"
"本和次要版本）。此外，可以通過在次要版本後新增 ``-32``來請求 32 位版本。 IE。 "
"``/usr/bin/python3.7-32`` 將請求使用 32 位 python 3.7。"

#: ../../using/windows.rst:871
#, fuzzy
msgid ""
"Beginning with python launcher 3.7 it is possible to request 64-bit version "
"by the \"-64\" suffix. Furthermore it is possible to specify a major and "
"architecture without minor (i.e. ``/usr/bin/python3-64``)."
msgstr ""
"從 python launcher 3.7 開始，可以通過 ``-64``後綴請求 64 "
"位版本。此外，可以指定一個主要的和沒有次要的體系結構（即``/usr/bin/"
"python3-64``）。"

#: ../../using/windows.rst:877
#, fuzzy
msgid ""
"The \"-64\" suffix is deprecated, and now implies \"any architecture that is "
"not provably i386/32-bit\". To request a specific environment, use the new "
"``-V:<TAG>`` argument with the complete tag."
msgstr " ``-64``後綴已棄用，現在表示“任何無法證明 i386/32 "
"位的體系結構”。要請求特定環境，請使用帶有完整標記的新“-V:<TAG>”參數。"

#: ../../using/windows.rst:881
#, fuzzy
msgid ""
"The ``/usr/bin/env`` form of shebang line has one further special property. "
"Before looking for installed Python interpreters, this form will search the "
"executable :envvar:`PATH` for a Python executable matching the name provided "
"as the first argument. This corresponds to the behaviour of the Unix ``env`` "
"program, which performs a :envvar:`PATH` search. If an executable matching "
"the first argument after the ``env`` command cannot be found, but the "
"argument starts with ``python``, it will be handled as described for the "
"other virtual commands. The environment variable :envvar:"
"`PYLAUNCHER_NO_SEARCH_PATH` may be set (to any value) to skip this search "
"of :envvar:`PATH`."
msgstr ""
"shebang 行的 ``/usr/bin/env`` 形式還有一個特殊屬性。在查找已安裝的 Python "
"直譯器之前，此表單將在可執行文件 :envvar:`PATH` "
"中搜索與作為第一個參數提供的名稱匹配的 Python 可執行文件。這對應於 Unix "
"``env`` 程式的行為，該程式執行 :envvar:`PATH` 搜索。如果找不到與 ``env`` "
"命令後的第一個參數匹配的可執行文件，但該參數以 ``python`` "
"開頭，它將按照其他虛擬命令的描述進行處理。環境變數 "
":envvar:`PYLAUNCHER_NO_SEARCH_PATH` 可以設定（任何值）以跳過 :envvar:`PATH` "
"的搜索。"

#: ../../using/windows.rst:892
#, fuzzy
msgid ""
"Shebang lines that do not match any of these patterns are looked up in the "
"``[commands]`` section of the launcher's :ref:`.INI file <launcher-ini>`. "
"This may be used to handle certain commands in a way that makes sense for "
"your system. The name of the command must be a single argument (no spaces in "
"the shebang executable), and the value substituted is the full path to the "
"executable (additional arguments specified in the .INI will be quoted as "
"part of the filename)."
msgstr ""
"在啟動器的 :ref:.INI 文件 <launcher-ini> 的 ``[commands]`` "
"部分中查找與這些模式不匹配的 Shebang "
"行。這可用於以對您的系統有意義的方式處理某些命令。命令的名稱必須是單個參數（"
"shebang 可執行文件中沒有空格），替換的值是可執行文件的完整路徑（.INI "
"中指定的其他參數將作為文件名的一部分引用）。"

#: ../../using/windows.rst:905
#, fuzzy
msgid ""
"Any commands not found in the .INI file are treated as **Windows** "
"executable paths that are absolute or relative to the directory containing "
"the script file. This is a convenience for Windows-only scripts, such as "
"those generated by an installer, since the behavior is not compatible with "
"Unix-style shells. These paths may be quoted, and may include multiple "
"arguments, after which the path to the script and any additional arguments "
"will be appended."
msgstr ""
"在 .INI 文件中找不到的任何命令都被視為 **Windows** "
"可執行路徑，這些路徑是絕對的或相對於包含腳本文件的目錄。這對於僅適用於 "
"Windows 的腳本（例如安裝程式生成的腳本）來說很方便，因為該行為與 Unix 樣式的 "
"shell 不相容。這些路徑可能會被引用，並且可能包含多個參數，之後將附加腳本的路"
"徑和任何其他參數。"

#: ../../using/windows.rst:914
#, fuzzy
msgid "Arguments in shebang lines"
msgstr "shebang 行中的參數"

#: ../../using/windows.rst:916
#, fuzzy
msgid ""
"The shebang lines can also specify additional options to be passed to the "
"Python interpreter.  For example, if you have a shebang line:"
msgstr "shebang 行還可以指定要傳遞給 Python 直譯器的其他選項。例如，如果您有一個 "
"shebang 行："

#: ../../using/windows.rst:923
#, fuzzy
msgid "Then Python will be started with the ``-v`` option"
msgstr "然後 Python 將以 ``-v`` 選項啟動"

#: ../../using/windows.rst:926
#, fuzzy
msgid "Customization"
msgstr "客制化"

#: ../../using/windows.rst:931
#, fuzzy
msgid "Customization via INI files"
msgstr "通過 INI 文件進行自定義"

#: ../../using/windows.rst:933
#, fuzzy
msgid ""
"Two .ini files will be searched by the launcher - ``py.ini`` in the current "
"user's application data directory (``%LOCALAPPDATA%`` or ``$env:"
"LocalAppData``) and ``py.ini`` in the same directory as the launcher. The "
"same .ini files are used for both the 'console' version of the launcher (i."
"e. py.exe) and for the 'windows' version (i.e. pyw.exe)."
msgstr ""
"啟動器將搜索兩個 .ini 文件 - 當前使用者應用程式資料目錄中的 ``py."
"ini``（``%LOCALAPPDATA%`` 或 ``$env:LocalAppData``）和 ``py.ini` ` "
"在與啟動器相同的目錄中。相同的 .ini 文件用於啟動器的“控制台”版本（即 py."
"exe）和 ``Windows`` 版本（即 pyw.exe）。"

#: ../../using/windows.rst:939
#, fuzzy
msgid ""
"Customization specified in the \"application directory\" will have "
"precedence over the one next to the executable, so a user, who may not have "
"write access to the .ini file next to the launcher, can override commands in "
"that global .ini file."
msgstr ""
"在“應用程式目錄”中指定的自定義將優先於可執行文件旁邊的自定義，"
"因此可能對啟動器旁邊的 .ini 文件沒有寫入權限的使用者可以覆蓋該全局 .ini "
"文件中的命令。"

#: ../../using/windows.rst:944
#, fuzzy
msgid "Customizing default Python versions"
msgstr "自定義預設 Python 版本"

#: ../../using/windows.rst:946
#, fuzzy
msgid ""
"In some cases, a version qualifier can be included in a command to dictate "
"which version of Python will be used by the command. A version qualifier "
"starts with a major version number and can optionally be followed by a "
"period ('.') and a minor version specifier. Furthermore it is possible to "
"specify if a 32 or 64 bit implementation shall be requested by adding "
"\"-32\" or \"-64\"."
msgstr ""
"在某些情況下，版本限定符可以包含在命令中以指示命令將使用哪個版本的 "
"Python。版本限定符以主版本號開頭，可以選擇後跟句點 ('.') "
"和次版本說明符。此外，可以通過新增 ``-32``或 ``-64``來指定是否應請求 32 位或 64 "
"位實作。"

#: ../../using/windows.rst:952
#, fuzzy
msgid ""
"For example, a shebang line of ``#!python`` has no version qualifier, while "
"``#!python3`` has a version qualifier which specifies only a major version."
msgstr "例如，``#!python`` 的 shebang 行沒有版本限定符，而 ``#!python3`` "
"有一個僅指定主要版本的版本限定符。"

#: ../../using/windows.rst:955
#, fuzzy
msgid ""
"If no version qualifiers are found in a command, the environment variable :"
"envvar:`PY_PYTHON` can be set to specify the default version qualifier. If "
"it is not set, the default is \"3\". The variable can specify any value that "
"may be passed on the command line, such as \"3\", \"3.7\", \"3.7-32\" or "
"\"3.7-64\". (Note that the \"-64\" option is only available with the "
"launcher included with Python 3.7 or newer.)"
msgstr ""
"如果在命令中沒有找到版本限定符，可以設定環境變數 PY_PYTHON 來指定預設版本限定"
"符。如果未設定，則預設為 ``3``。該變數可以指定可以在命令列上傳遞的任何值，例如“3"
"”、“3.7”、“3.7-32”或“3.7-64”。 （請注意， ``-64``選項僅適用於 Python 3.7 "
"或更新版本附帶的啟動器。）"

#: ../../using/windows.rst:962
#, fuzzy
msgid ""
"If no minor version qualifiers are found, the environment variable "
"``PY_PYTHON{major}`` (where ``{major}`` is the current major version "
"qualifier as determined above) can be set to specify the full version. If no "
"such option is found, the launcher will enumerate the installed Python "
"versions and use the latest minor release found for the major version, which "
"is likely, although not guaranteed, to be the most recently installed "
"version in that family."
msgstr ""
"如果沒有找到次要版本限定符，則可以設定環境變數``PY_PYTHON{major}``（其中``{ma"
"jor}`` "
"是上面確定的當前主要版本限定符）以指定完整版本。如果沒有找到這樣的選項，"
"啟動器將枚舉已安裝的 Python 版本並使用為主要版本找到的最新次要版本，儘管不能"
"保證，它很可能是該系列中最近安裝的版本。"

#: ../../using/windows.rst:970
#, fuzzy
msgid ""
"On 64-bit Windows with both 32-bit and 64-bit implementations of the same "
"(major.minor) Python version installed, the 64-bit version will always be "
"preferred. This will be true for both 32-bit and 64-bit implementations of "
"the launcher - a 32-bit launcher will prefer to execute a 64-bit Python "
"installation of the specified version if available. This is so the behavior "
"of the launcher can be predicted knowing only what versions are installed on "
"the PC and without regard to the order in which they were installed (i.e., "
"without knowing whether a 32 or 64-bit version of Python and corresponding "
"launcher was installed last). As noted above, an optional \"-32\" or \"-64\" "
"suffix can be used on a version specifier to change this behaviour."
msgstr ""
"在同時安裝了相同 (major.minor) Python 版本的 32 位和 64 位實作的 64 位 "
"Windows 上，64 位版本將始終是首選。對於啟動器的 32 位和 64 位實作都是如此 - "
"如果可用，32 位啟動器將更願意執行指定版本的 64 位 Python "
"安裝。這樣就可以預測啟動器的行為，只知道 PC "
"上安裝了哪些版本，而不考慮它們的安裝順序（即，不知道 Python 和相應啟動器是 "
"32 位還是 64 位版本）最後安裝）。如上所述，可以在版本說明符上使用可選的 ``-32``"
"或 ``-64``後綴來更改此行為。"

#: ../../using/windows.rst:981
msgid "Examples:"
msgstr "範例："

#: ../../using/windows.rst:983
#, fuzzy
msgid ""
"If no relevant options are set, the commands ``python`` and ``python2`` will "
"use the latest Python 2.x version installed and the command ``python3`` will "
"use the latest Python 3.x installed."
msgstr ""
"如果沒有設定相關選項，命令 ``python`` 和 ``python2`` 將使用安裝的最新 Python "
"2.x 版本，命令 ``python3`` 將使用安裝的最新 Python 3.x。"

#: ../../using/windows.rst:987
#, fuzzy
msgid ""
"The command ``python3.7`` will not consult any options at all as the "
"versions are fully specified."
msgstr "命令 ``python3.7`` 將不會查詢任何選項，因為版本已完全指定。"

#: ../../using/windows.rst:990
#, fuzzy
msgid ""
"If ``PY_PYTHON=3``, the commands ``python`` and ``python3`` will both use "
"the latest installed Python 3 version."
msgstr "如果“PY_PYTHON=3”，命令 ``python``和 ``python3`` 都將使用最新安裝的 Python 3 版本。"

#: ../../using/windows.rst:993
#, fuzzy
msgid ""
"If ``PY_PYTHON=3.7-32``, the command ``python`` will use the 32-bit "
"implementation of 3.7 whereas the command ``python3`` will use the latest "
"installed Python (PY_PYTHON was not considered at all as a major version was "
"specified.)"
msgstr ""
"如果“PY_PYTHON=3.7-32”，命令 ``python``將使用 3.7 的 32 位實作，而命令 ``python3`` "
"將使用最新安裝的 Python（PY_PYTHON 根本不被認為是一個指定了主要版本。）"

#: ../../using/windows.rst:998
#, fuzzy
msgid ""
"If ``PY_PYTHON=3`` and ``PY_PYTHON3=3.7``, the commands ``python`` and "
"``python3`` will both use specifically 3.7"
msgstr "如果“PY_PYTHON=3”和“PY_PYTHON3=3.7”，命令 ``python``和 ``python3`` 都將使用 3.7"

#: ../../using/windows.rst:1001
#, fuzzy
msgid ""
"In addition to environment variables, the same settings can be configured in "
"the .INI file used by the launcher.  The section in the INI file is called "
"``[defaults]`` and the key name will be the same as the environment "
"variables without the leading ``PY_`` prefix (and note that the key names in "
"the INI file are case insensitive.)  The contents of an environment variable "
"will override things specified in the INI file."
msgstr ""
"除了環境變數之外，還可以在啟動程式使用的 .INI 文件中配置相同的設定。 INI 文件"
"中的部分稱為“[defaults]”，鍵名將與沒有前導“PY_”前綴的環境變數相同（請注意，"
"INI 文件中的鍵名不區分大小寫.) 環境變數的內容將覆蓋 INI 文件中指定的內容。"

#: ../../using/windows.rst:1008
#, fuzzy
msgid "For example:"
msgstr "例如："

#: ../../using/windows.rst:1010
#, fuzzy
msgid "Setting ``PY_PYTHON=3.7`` is equivalent to the INI file containing:"
msgstr "設定“PY_PYTHON=3.7”相當於包含以下內容的 INI 文件："

#: ../../using/windows.rst:1017
#, fuzzy
msgid ""
"Setting ``PY_PYTHON=3`` and ``PY_PYTHON3=3.7`` is equivalent to the INI file "
"containing:"
msgstr "設定“PY_PYTHON=3”和“PY_PYTHON3=3.7”相當於包含以下內容的 INI 文件："

#: ../../using/windows.rst:1027
#, fuzzy
msgid "Diagnostics"
msgstr "診斷"

#: ../../using/windows.rst:1029
#, fuzzy
msgid ""
"If an environment variable :envvar:`PYLAUNCHER_DEBUG` is set (to any value), "
"the launcher will print diagnostic information to stderr (i.e. to the "
"console). While this information manages to be simultaneously verbose *and* "
"terse, it should allow you to see what versions of Python were located, why "
"a particular version was chosen and the exact command-line used to execute "
"the target Python. It is primarily intended for testing and debugging."
msgstr ""
"如果設定了環境變數 :envvar:`PYLAUNCHER_DEBUG`（任何值），"
"啟動器會將診斷資訊印出到 stderr（即控制台）。雖然此資訊設法既冗長*又*簡潔，"
"但它應該允許您查看找到的 Python 版本、選擇特定版本的原因以及用於執行目標 "
"Python 的確切命令列。它主要用於測試和除錯。"

#: ../../using/windows.rst:1037
#, fuzzy
msgid "Dry Run"
msgstr "空運行"

#: ../../using/windows.rst:1039
#, fuzzy
msgid ""
"If an environment variable :envvar:`PYLAUNCHER_DRYRUN` is set (to any "
"value), the launcher will output the command it would have run, but will not "
"actually launch Python. This may be useful for tools that want to use the "
"launcher to detect and then launch Python directly. Note that the command "
"written to standard output is always encoded using UTF-8, and may not render "
"correctly in the console."
msgstr ""
"如果設定了環境變數 :envvar:`PYLAUNCHER_DRYRUN`（任何值），啟動器將輸出它本應"
"運行的命令，但實際上不會啟動 Python。這對於想要使用啟動器檢測然後直接啟動 "
"Python 的工具可能很有用。請注意，寫入標準輸出的命令始終使用 UTF-8 "
"編碼，並且可能無法在控制台中正確呈現。"

#: ../../using/windows.rst:1047
msgid "Install on demand"
msgstr "安裝隨選"

#: ../../using/windows.rst:1049
#, fuzzy
msgid ""
"If an environment variable :envvar:`PYLAUNCHER_ALLOW_INSTALL` is set (to any "
"value), and the requested Python version is not installed but is available "
"on the Microsoft Store, the launcher will attempt to install it. This may "
"require user interaction to complete, and you may need to run the command "
"again."
msgstr ""
"如果設定了環境變數 :envvar:`PYLAUNCHER_ALLOW_INSTALL`（任何值），並且請求的 "
"Python 版本未安裝但在 Microsoft Store 上可用，則啟動器將嘗試安裝它。這可能需"
"要使用者交互才能完成，您可能需要再次運行該命令。"

#: ../../using/windows.rst:1054
#, fuzzy
msgid ""
"An additional :envvar:`PYLAUNCHER_ALWAYS_INSTALL` variable causes the "
"launcher to always try to install Python, even if it is detected. This is "
"mainly intended for testing (and should be used with :envvar:"
"`PYLAUNCHER_DRYRUN`)."
msgstr ""
"一個額外的 PYLAUNCHER_ALWAYS_INSTALL 變數會導致啟動器始終嘗試安裝 "
"Python，即使它被檢測到。這主要用於測試（並且應該與 PYLAUNCHER_DRYRUN "
"一起使用）。"

#: ../../using/windows.rst:1059
#, fuzzy
msgid "Return codes"
msgstr "回傳碼"

#: ../../using/windows.rst:1061
#, fuzzy
msgid ""
"The following exit codes may be returned by the Python launcher. "
"Unfortunately, there is no way to distinguish these from the exit code of "
"Python itself."
msgstr "Python 啟動器可能會回傳以下退出程式碼。不幸的是，無法將這些與 Python "
"本身的退出程式碼區分開來。"

#: ../../using/windows.rst:1064
#, fuzzy
msgid ""
"The names of codes are as used in the sources, and are only for reference. "
"There is no way to access or resolve them apart from reading this page. "
"Entries are listed in alphabetical order of names."
msgstr "程式碼名稱與來源中使用的相同，僅供參考。除了閱讀此頁面之外，無法訪問或解決它"
"們。條目按名稱的字母順序列出。"

#: ../../using/windows.rst:1069
#, fuzzy
msgid "Value"
msgstr "價值"

#: ../../using/windows.rst:1071
msgid "RC_BAD_VENV_CFG"
msgstr "RC_BAD_VENV_CFG"

#: ../../using/windows.rst:1071
msgid "107"
msgstr "107"

#: ../../using/windows.rst:1071
#, fuzzy
msgid "A :file:`pyvenv.cfg` was found but is corrupt."
msgstr "A :file:`pyvenv.cfg` 被發現但已損壞。"

#: ../../using/windows.rst:1073
msgid "RC_CREATE_PROCESS"
msgstr "RC_CREATE_PROCESS"

#: ../../using/windows.rst:1073
msgid "101"
msgstr "101"

#: ../../using/windows.rst:1073
#, fuzzy
msgid "Failed to launch Python."
msgstr "無法啟動 Python。"

#: ../../using/windows.rst:1075
msgid "RC_INSTALLING"
msgstr "RC_INSTALLING"

#: ../../using/windows.rst:1075
msgid "111"
msgstr "111"

#: ../../using/windows.rst:1075
#, fuzzy
msgid ""
"An install was started, but the command will need to be re-run after it "
"completes."
msgstr "安裝已啟動，但完成後需要重新運行該命令。"

#: ../../using/windows.rst:1078
msgid "RC_INTERNAL_ERROR"
msgstr "RC_INTERNAL_ERROR"

#: ../../using/windows.rst:1078
msgid "109"
msgstr "109"

#: ../../using/windows.rst:1078
#, fuzzy
msgid "Unexpected error. Please report a bug."
msgstr "意外的錯誤。請報告錯誤。"

#: ../../using/windows.rst:1080
msgid "RC_NO_COMMANDLINE"
msgstr "RC_NO_COMMANDLINE"

#: ../../using/windows.rst:1080
msgid "108"
msgstr "108"

#: ../../using/windows.rst:1080
#, fuzzy
msgid "Unable to obtain command line from the operating system."
msgstr "無法從操作系統獲取命令列。"

#: ../../using/windows.rst:1083
msgid "RC_NO_PYTHON"
msgstr "RC_NO_PYTHON"

#: ../../using/windows.rst:1083
msgid "103"
msgstr "103"

#: ../../using/windows.rst:1083
#, fuzzy
msgid "Unable to locate the requested version."
msgstr "找不到請求的版本。"

#: ../../using/windows.rst:1085
msgid "RC_NO_VENV_CFG"
msgstr "RC_NO_VENV_CFG"

#: ../../using/windows.rst:1085
msgid "106"
msgstr "106"

#: ../../using/windows.rst:1085
#, fuzzy
msgid "A :file:`pyvenv.cfg` was required but not found."
msgstr ":file:`pyvenv.cfg` 是必需的，但未找到。"

#: ../../using/windows.rst:1093
#, fuzzy
msgid "Finding modules"
msgstr "查找模組"

#: ../../using/windows.rst:1095
#, fuzzy
msgid ""
"These notes supplement the description at :ref:`sys-path-init` with detailed "
"Windows notes."
msgstr "這些註釋用詳細的 Windows 註釋補充了 :ref:`sys-path-init` 中的描述。"

#: ../../using/windows.rst:1098
#, fuzzy
msgid ""
"When no ``._pth`` file is found, this is how :data:`sys.path` is populated "
"on Windows:"
msgstr "當找不到 ``._pth`` 文件時，這就是 :data:`sys.path` 在 Windows 上的填充方式："

#: ../../using/windows.rst:1101
#, fuzzy
msgid ""
"An empty entry is added at the start, which corresponds to the current "
"directory."
msgstr "在開頭新增一個空條目，對應於當前目錄。"

#: ../../using/windows.rst:1104
#, fuzzy
msgid ""
"If the environment variable :envvar:`PYTHONPATH` exists, as described in :"
"ref:`using-on-envvars`, its entries are added next.  Note that on Windows, "
"paths in this variable must be separated by semicolons, to distinguish them "
"from the colon used in drive identifiers (``C:\\`` etc.)."
msgstr ""
"如果環境變數 :envvar:`PYTHONPATH` 存在，如 :ref:`using-on-envvars` "
"中所述，則接下來新增其條目。請注意，在 Windows "
"上，此變數中的路徑必須用分號分隔，以將它們與驅動器標識符（``C:\\`` "
"等）中使用的冒號區分開來。"

#: ../../using/windows.rst:1109
#, fuzzy
msgid ""
"Additional \"application paths\" can be added in the registry as subkeys of :"
"samp:`\\\\SOFTWARE\\\\Python\\\\PythonCore\\\\{version}\\\\PythonPath` under "
"both the ``HKEY_CURRENT_USER`` and ``HKEY_LOCAL_MACHINE`` hives.  Subkeys "
"which have semicolon-delimited path strings as their default value will "
"cause each path to be added to :data:`sys.path`.  (Note that all known "
"installers only use HKLM, so HKCU is typically empty.)"
msgstr ""
"可以在註冊表中新增其他“應用程式路徑”作為 HKEY_CURRENT_USER 和 "
"HKEY_LOCAL_MACHINE 下的 :samp:`\\\\SOFTWARE\\\\Python\\\\PythonCore\\\\"
"{version}\\\\PythonPath` 的子項麻疹。"
"以分號分隔的路徑字串作為預設值的子項將導致將每個路徑新增到 :data:`sys.path`。"
" （請注意，所有已知安裝程式僅使用 HKLM，因此 HKCU 通常為空。）"

#: ../../using/windows.rst:1116
#, fuzzy
msgid ""
"If the environment variable :envvar:`PYTHONHOME` is set, it is assumed as "
"\"Python Home\".  Otherwise, the path of the main Python executable is used "
"to locate a \"landmark file\" (either ``Lib\\os.py`` or ``pythonXY.zip``) to "
"deduce the \"Python Home\".  If a Python home is found, the relevant sub-"
"directories added to :data:`sys.path` (``Lib``, ``plat-win``, etc) are based "
"on that folder.  Otherwise, the core Python path is constructed from the "
"PythonPath stored in the registry."
msgstr ""
"如果設定了環境變數 :envvar:`PYTHONHOME`，則假定為“Python Home”。否則，主要 "
"Python 可執行文件的路徑用於定位“地標文件”（``Lib\\os.py`` 或 ``pythonXY."
"zip``）以推斷“Python Home”。如果找到 Python 主目錄，則新增到 :data:`sys.path`"
" 的相關子目錄（``Lib``、``plat-win`` 等）基於該文件夾。否則，核心 Python "
"路徑是從儲存在註冊表中的 PythonPath 構建的。"

#: ../../using/windows.rst:1124
#, fuzzy
msgid ""
"If the Python Home cannot be located, no :envvar:`PYTHONPATH` is specified "
"in the environment, and no registry entries can be found, a default path "
"with relative entries is used (e.g. ``.\\Lib;.\\plat-win``, etc)."
msgstr ""
"如果找不到 Python Home，在環境中沒有指定 :envvar:`PYTHONPATH`，並且找不到註冊"
"表條目，則使用具有相對條目的預設路徑（例如 ``.\\Lib;.\\plat-win `` 等）。"

#: ../../using/windows.rst:1128
#, fuzzy
msgid ""
"If a ``pyvenv.cfg`` file is found alongside the main executable or in the "
"directory one level above the executable, the following variations apply:"
msgstr "如果在主可執行文件旁邊或在可執行文件的上一級目錄中找到 ``pyvenv.cfg`` "
"文件，則適用以下變體："

#: ../../using/windows.rst:1131
#, fuzzy
msgid ""
"If ``home`` is an absolute path and :envvar:`PYTHONHOME` is not set, this "
"path is used instead of the path to the main executable when deducing the "
"home location."
msgstr "如果 ``home`` 是絕對路徑並且 :envvar:`PYTHONHOME` "
"未設定，則在推斷主位置時使用此路徑而不是主可執行文件的路徑。"

#: ../../using/windows.rst:1135
msgid "The end result of all this is:"
msgstr "最終這所有的結果為："

#: ../../using/windows.rst:1137
#, fuzzy
msgid ""
"When running :file:`python.exe`, or any other .exe in the main Python "
"directory (either an installed version, or directly from the PCbuild "
"directory), the core path is deduced, and the core paths in the registry are "
"ignored.  Other \"application paths\" in the registry are always read."
msgstr ""
"當運行 :file:`python.exe` 或主 Python 目錄中的任何其他 .exe（安裝版本，"
"或直接從 PCbuild 目錄）時，推導核心路徑，並忽略註冊表中的核心路徑."
"始終讀取註冊表中的其他“應用程式路徑”。"

#: ../../using/windows.rst:1142
#, fuzzy
msgid ""
"When Python is hosted in another .exe (different directory, embedded via "
"COM, etc), the \"Python Home\" will not be deduced, so the core path from "
"the registry is used.  Other \"application paths\" in the registry are "
"always read."
msgstr ""
"當 Python 託管在另一個 .exe（不同的目錄，通過 COM 嵌入等）時，將不會推導出“"
"Python "
"Home”，因此使用註冊表中的核心路徑。始終讀取註冊表中的其他“應用程式路徑”。"

#: ../../using/windows.rst:1146
#, fuzzy
msgid ""
"If Python can't find its home and there are no registry value (frozen .exe, "
"some very strange installation setup) you get a path with some default, but "
"relative, paths."
msgstr "如果 Python 找不到它的家並且沒有註冊表值（凍結的 ."
"exe，一些非常奇怪的安裝設定），您將獲得一個具有一些預設但相對路徑的路徑。"

#: ../../using/windows.rst:1150
#, fuzzy
msgid ""
"For those who want to bundle Python into their application or distribution, "
"the following advice will prevent conflicts with other installations:"
msgstr "對於那些想要將 Python "
"捆綁到他們的應用程式或發行版中的人，以下建議將防止與其他安裝發生衝突："

#: ../../using/windows.rst:1153
#, fuzzy
msgid ""
"Include a ``._pth`` file alongside your executable containing the "
"directories to include. This will ignore paths listed in the registry and "
"environment variables, and also ignore :mod:`site` unless ``import site`` is "
"listed."
msgstr ""
"在包含要包含的目錄的可執行文件旁邊包含一個 ``._pth`` "
"文件。這將忽略註冊表和環境變數中列出的路徑，並且還會忽略 :mod:`site` "
"除非列出了 ``import site``。"

#: ../../using/windows.rst:1158
#, fuzzy
msgid ""
"If you are loading :file:`python3.dll` or :file:`python37.dll` in your own "
"executable, explicitly call :c:func:`Py_SetPath` or (at least) :c:func:"
"`Py_SetProgramName` before :c:func:`Py_Initialize`."
msgstr ""
"如果您在自己的可執行文件中加載 :file:`python3.dll` 或 :file:`python37.dll`，"
"請在之前顯式呼叫 :c:func:`Py_SetPath` 或（至少） :c:func:`Py_SetProgramName` "
":c:func:`Py_Initialize`。"

#: ../../using/windows.rst:1162
#, fuzzy
msgid ""
"Clear and/or overwrite :envvar:`PYTHONPATH` and set :envvar:`PYTHONHOME` "
"before launching :file:`python.exe` from your application."
msgstr ""
"在從您的應用程式啟動 :file:`python.exe` 之前清除和/或覆蓋 "
":envvar:`PYTHONPATH` 並設定 :envvar:`PYTHONHOME`。"

#: ../../using/windows.rst:1165
#, fuzzy
msgid ""
"If you cannot use the previous suggestions (for example, you are a "
"distribution that allows people to run :file:`python.exe` directly), ensure "
"that the landmark file (:file:`Lib\\\\os.py`) exists in your install "
"directory. (Note that it will not be detected inside a ZIP file, but a "
"correctly named ZIP file will be detected instead.)"
msgstr ""
"如果你不能使用前面的建議（比如你是一個允許人們直接運行 :file:`python.exe` "
"的發行版），確保地標文件（:file:`Lib\\\\os.py`）存在在你的安裝目錄中。 "
"（請注意，它不會在 ZIP 文件中被檢測到，但會檢測到正確命名的 ZIP 文件。）"

#: ../../using/windows.rst:1171
#, fuzzy
msgid ""
"These will ensure that the files in a system-wide installation will not take "
"precedence over the copy of the standard library bundled with your "
"application. Otherwise, your users may experience problems using your "
"application. Note that the first suggestion is the best, as the others may "
"still be susceptible to non-standard paths in the registry and user site-"
"packages."
msgstr ""
"這些將確保系統範圍安裝中的文件不會優先於與應用程式捆綁在一起的標準庫副本。否"
"則，您的使用者可能會在使用您的應用程式時遇到問題。請注意，第一個建議是最好的"
"，因為其他建議可能仍然容易受到註冊表和使用者站點包中非標準路徑的影響。"

#: ../../using/windows.rst:1180
#, fuzzy
msgid ""
"Adds ``._pth`` file support and removes ``applocal`` option from ``pyvenv."
"cfg``."
msgstr "新增``._pth`` 文件支援並從``pyvenv.cfg`` 中刪除``applocal`` 選項。"

#: ../../using/windows.rst:1182
#, fuzzy
msgid ""
"Adds ``pythonXX.zip`` as a potential landmark when directly adjacent to the "
"executable."
msgstr "當直接與可執行文件相鄰時，新增 ``pythonXX.zip`` 作為潛在的地標。"

#: ../../using/windows.rst:1188
#, fuzzy
msgid ""
"Modules specified in the registry under ``Modules`` (not ``PythonPath``) may "
"be imported by :class:`importlib.machinery.WindowsRegistryFinder`. This "
"finder is enabled on Windows in 3.6.0 and earlier, but may need to be "
"explicitly added to :attr:`sys.meta_path` in the future."
msgstr ""
"在 ``Modules``（不是 ``PythonPath``）下的註冊表中指定的模組可以通過 "
"importlib.machinery.WindowsRegistryFinder 導入。此查找器在 3.6.0 "
"及更早版本的 Windows 上啟用，但將來可能需要明確新增到 :attr:`sys.meta_path`。"

#: ../../using/windows.rst:1194
#, fuzzy
msgid "Additional modules"
msgstr "附加模組"

#: ../../using/windows.rst:1196
#, fuzzy
msgid ""
"Even though Python aims to be portable among all platforms, there are "
"features that are unique to Windows.  A couple of modules, both in the "
"standard library and external, and snippets exist to use these features."
msgstr "儘管 Python 的目標是在所有平台之間可移植，但也有一些 Windows "
"獨有的功能。存在標準庫和外部的幾個模組和片段來使用這些功能。"

#: ../../using/windows.rst:1200
#, fuzzy
msgid ""
"The Windows-specific standard modules are documented in :ref:`mswin-specific-"
"services`."
msgstr "Windows 特定的標準模組記錄在 :ref:`mswin-specific-services` 中。"

#: ../../using/windows.rst:1204
msgid "PyWin32"
msgstr "PyWin32"

#: ../../using/windows.rst:1206
#, fuzzy
msgid ""
"The `PyWin32 <https://pypi.org/project/pywin32>`_ module by Mark Hammond is "
"a collection of modules for advanced Windows-specific support.  This "
"includes utilities for:"
msgstr ""
"Mark Hammond 的 `PyWin32 <https://pypi.org/project/pywin32>`_ "
"模組是一組用於高階 Windows 特定支援的模組。這包括以下實用程式："

#: ../../using/windows.rst:1210
#, fuzzy
msgid ""
"`Component Object Model <https://docs.microsoft.com/en-us/windows/win32/com/"
"component-object-model--com--portal>`_ (COM)"
msgstr ""
"`組件對像模型 <https://docs.microsoft.com/en-us/windows/win32/com/component-"
"object-model--com--portal>`_ (COM)"

#: ../../using/windows.rst:1213
msgid "Win32 API calls"
msgstr "Win32 API 呼叫"

#: ../../using/windows.rst:1214
msgid "Registry"
msgstr "登錄檔（Registry）"

#: ../../using/windows.rst:1215
msgid "Event log"
msgstr "事件日誌（Event log）"

#: ../../using/windows.rst:1216
#, fuzzy
msgid ""
"`Microsoft Foundation Classes <https://docs.microsoft.com/en-us/cpp/mfc/mfc-"
"desktop-applications>`_ (MFC) user interfaces"
msgstr ""
"`Microsoft 基礎類 <https://docs.microsoft.com/en-us/cpp/mfc/mfc-desktop-"
"applications>`_ (MFC) 使用者界面"

#: ../../using/windows.rst:1220
#, fuzzy
msgid ""
"`PythonWin <https://web.archive.org/web/20060524042422/ https://www.python."
"org/windows/pythonwin/>`_ is a sample MFC application shipped with PyWin32.  "
"It is an embeddable IDE with a built-in debugger."
msgstr ""
"`PythonWin <https://web.archive.org/web/20060524042422/ https://www.python."
"org/windows/pythonwin/>`_ 是 PyWin32 附帶的示例 MFC 應用程式。"
"它是一個帶有內建除錯器的可嵌入 IDE。"

#: ../../using/windows.rst:1227
msgid ""
"`Win32 How Do I...? <http://timgolden.me.uk/python/win32_how_do_i.html>`_"
msgstr ""
"`Win32 How Do I...? <http://timgolden.me.uk/python/win32_how_do_i.html>`_"

#: ../../using/windows.rst:1227
msgid "by Tim Golden"
msgstr "由 Tim Golden 所著"

#: ../../using/windows.rst:1229
msgid "`Python and COM <https://www.boddie.org.uk/python/COM.html>`_"
msgstr "`Python and COM <https://www.boddie.org.uk/python/COM.html>`_"

#: ../../using/windows.rst:1230
msgid "by David and Paul Boddie"
msgstr "由 David 與 Paul Boddie 所著"

#: ../../using/windows.rst:1234
msgid "cx_Freeze"
msgstr "cx_Freeze"

#: ../../using/windows.rst:1236
#, fuzzy
msgid ""
"`cx_Freeze <https://cx-freeze.readthedocs.io/en/latest/>`_ is a :mod:"
"`distutils` extension (see :ref:`extending-distutils`) which wraps Python "
"scripts into executable Windows programs (:file:`{*}.exe` files).  When you "
"have done this, you can distribute your application without requiring your "
"users to install Python."
msgstr ""
"`cx_Freeze <https://cx-freeze.readthedocs.io/en/latest/>`_ 是一個 "
":mod:`distutils` 擴充（參見 :ref:`extending-distutils`），它將 Python "
"腳本包裝到可執行的 Windows 程式中（:file:`{*}.exe` 文件）。完成此操作後，"
"您可以分發您的應用程式而無需您的使用者安裝 Python。"

#: ../../using/windows.rst:1244
msgid "Compiling Python on Windows"
msgstr "編譯 Python 在 Windows"

#: ../../using/windows.rst:1246
#, fuzzy
msgid ""
"If you want to compile CPython yourself, first thing you should do is get "
"the `source <https://www.python.org/downloads/source/>`_. You can download "
"either the latest release's source or just grab a fresh `checkout <https://"
"devguide.python.org/setup/#get-the-source-code>`_."
msgstr ""
"如果你想自己編譯 CPython，你應該做的第一件事就是獲取`source <https://www."
"python.org/downloads/source/>`_。您可以下載最新版本的源程式碼，"
"也可以獲取新的 `checkout <https://devguide.python.org/setup/#get-the-source-"
"code>`_。"

#: ../../using/windows.rst:1251
#, fuzzy
msgid ""
"The source tree contains a build solution and project files for Microsoft "
"Visual Studio, which is the compiler used to build the official Python "
"releases. These files are in the :file:`PCbuild` directory."
msgstr ""
"源程式碼樹包含 Microsoft Visual Studio 的構建解決方案和項目文件，Microsoft "
"Visual Studio 是用於構建官方 Python 版本的編譯器。這些文件位於 "
":file:`PCbuild` 目錄中。"

#: ../../using/windows.rst:1255
#, fuzzy
msgid ""
"Check :file:`PCbuild/readme.txt` for general information on the build "
"process."
msgstr "檢查 :file:`PCbuild/readme.txt` 以獲得關於構建過程的一般資訊。"

#: ../../using/windows.rst:1257
#, fuzzy
msgid "For extension modules, consult :ref:`building-on-windows`."
msgstr "對於擴充模組，請參考 :ref:`building-on-windows`。"

#: ../../using/windows.rst:1261
msgid "Other Platforms"
msgstr "其他平台"

#: ../../using/windows.rst:1263
#, fuzzy
msgid ""
"With ongoing development of Python, some platforms that used to be supported "
"earlier are no longer supported (due to the lack of users or developers). "
"Check :pep:`11` for details on all unsupported platforms."
msgstr ""
"隨著 Python "
"的不斷發展，一些以前支援的平台不再支援（由於缺少使用者或開發人員）。查看 "
":pep:`11` 了解所有不受支援的平台的詳細資訊。"

#: ../../using/windows.rst:1267
#, fuzzy
msgid ""
"`Windows CE <https://pythonce.sourceforge.net/>`_ is `no longer supported "
"<https://github.com/python/cpython/issues/71542>`__ since Python 3 (if it "
"ever was)."
msgstr ""
"`Windows CE <https://pythonce.sourceforge.net/>`_ 不再支援 <https://github."
"com/python/cpython/issues/71542>`__ 自 Python 3（如果曾經支援） ."

#: ../../using/windows.rst:1270
#, fuzzy
msgid ""
"The `Cygwin <https://cygwin.com/>`_ installer offers to install the `Python "
"interpreter <https://cygwin.com/packages/summary/python3.html>`__ as well"
msgstr ""
"`Cygwin <https://cygwin.com/>`_ 安裝程式也提供安裝 `Python 直譯器 "
"<https://cygwin.com/packages/summary/python3.html>`__"

#: ../../using/windows.rst:1274
#, fuzzy
msgid ""
"See `Python for Windows <https://www.python.org/downloads/windows/>`_ for "
"detailed information about platforms with pre-compiled installers."
msgstr ""
"有關帶有預編譯安裝程式的平台的詳細資訊，請參閱`Python for Windows "
"<https://www.python.org/downloads/windows/>`_。"
