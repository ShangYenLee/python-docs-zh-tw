# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# jerrychen <jerrychen.ee@gmail.com>, 2016
# Evan Gui <clown.gui@gmail.com>, 2016
# Liang-Bo Wang <me@liang2.tw>, 2016
# Adrian Liaw <adrianliaw2000@gmail.com>, 2018
# Phil Lin <linooohon@gmail.com>, 2022
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-25 00:20+0000\n"
"PO-Revision-Date: 2022-01-31 17:33+0800\n"
"Last-Translator: Phil Lin <linooohon@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.0.1\n"

#: ../../howto/argparse.rst:5
msgid "Argparse Tutorial"
msgstr "Argparse 教學"

#: ../../howto/argparse.rst:0
msgid "author"
msgstr "作者"

#: ../../howto/argparse.rst:7
msgid "Tshepang Lekhonkhobe"
msgstr "Tshepang Lekhonkhobe"

#: ../../howto/argparse.rst:11
msgid ""
"This tutorial is intended to be a gentle introduction to :mod:`argparse`, "
"the recommended command-line parsing module in the Python standard library."
msgstr ""
"這個教學傾向簡介 Python 官方標準含式庫中推薦的命令列剖析模組 :mod:"
"`argparse`。"

#: ../../howto/argparse.rst:16
#, fuzzy
msgid ""
"There are two other modules that fulfill the same task, namely :mod:`getopt` "
"(an equivalent for ``getopt()`` from the C language) and the deprecated :mod:"
"`optparse`. Note also that :mod:`argparse` is based on :mod:`optparse`, and "
"therefore very similar in terms of usage."
msgstr ""
"另外兩個具有同樣功能的模組 :mod:`getopt`\\ （一個相等於 C 語言中的 :c:func:"
"`getopt`\\ ）以及被棄用的 :mod:`optparse`\\ 。而 :mod:`argparse` 也是根據 :"
"mod:`optparse` 為基礎發展而來，因此有非常近似的使用方式。"

#: ../../howto/argparse.rst:24
msgid "Concepts"
msgstr "概念"

#: ../../howto/argparse.rst:26
msgid ""
"Let's show the sort of functionality that we are going to explore in this "
"introductory tutorial by making use of the :command:`ls` command:"
msgstr "藉由命令 :command:`ls` 的使用開始這些功能的介紹："

#: ../../howto/argparse.rst:48
msgid "A few concepts we can learn from the four commands:"
msgstr "我們可以從四個命令中可以學到的幾個概念："

#: ../../howto/argparse.rst:50
msgid ""
"The :command:`ls` command is useful when run without any options at all. It "
"defaults to displaying the contents of the current directory."
msgstr ""
"命令 :command:`ls` 在執行時不用其他參數就可以顯示出當前目錄底下的內容。"

#: ../../howto/argparse.rst:53
msgid ""
"If we want beyond what it provides by default, we tell it a bit more. In "
"this case, we want it to display a different directory, ``pypy``. What we "
"did is specify what is known as a positional argument. It's named so because "
"the program should know what to do with the value, solely based on where it "
"appears on the command line. This concept is more relevant to a command "
"like :command:`cp`, whose most basic usage is ``cp SRC DEST``. The first "
"position is *what you want copied,* and the second position is *where you "
"want it copied to*."
msgstr ""
"根據這樣的概念延伸後來舉個例子，如果我們想秀出一個不在目錄的資料夾 ``pypy`` "
"的內容。我們可以在命令後加上一個位置參數。會用位置參數這樣的名稱是因為程式會"
"知道輸入的參數該做的事情。這樣的概念很像另一個命令 :command:`cp`\\ ，基本的使"
"用方式是 ``cp SRC DEST``\\ 。第一個位置參數代表的是\\ *想要複製的目標*\\，第"
"二個位置的參數代表的則是\\ *想要複製到的地方*\\ 。"

#: ../../howto/argparse.rst:62
msgid ""
"Now, say we want to change behaviour of the program. In our example, we "
"display more info for each file instead of just showing the file names. The "
"``-l`` in that case is known as an optional argument."
msgstr ""
"現在我們想再增加一些，要顯示除了檔名之外更多的資訊。在這裡就可以選擇加上 ``-"
"l`` 這個參數。"

#: ../../howto/argparse.rst:66
msgid ""
"That's a snippet of the help text. It's very useful in that you can come "
"across a program you have never used before, and can figure out how it works "
"simply by reading its help text."
msgstr ""
"這是 help 文件的片段。對於以前從未使用過的程式來說非常有用，可以透過這些 "
"help 文件來了解這些該怎麼使用。"

#: ../../howto/argparse.rst:72
msgid "The basics"
msgstr "基本用法"

#: ../../howto/argparse.rst:74
msgid "Let us start with a very simple example which does (almost) nothing::"
msgstr ""
"我們以一個很簡單的例子開始下面的介紹：\n"
"\n"
"::"

#: ../../howto/argparse.rst:80 ../../howto/argparse.rst:188
#: ../../howto/argparse.rst:209
msgid "Following is a result of running the code:"
msgstr "下面是運行這些代碼的結果："

#: ../../howto/argparse.rst:97 ../../howto/argparse.rst:254
#: ../../howto/argparse.rst:298
msgid "Here is what is happening:"
msgstr "接者是發生的情況："

#: ../../howto/argparse.rst:99
msgid ""
"Running the script without any options results in nothing displayed to "
"stdout. Not so useful."
msgstr ""
"運行這個腳本而沒有給與任何參數時就不會顯示任何東西至標準輸出畫面上。這裡並不"
"是這麼的有用。"

#: ../../howto/argparse.rst:102
msgid ""
"The second one starts to display the usefulness of the :mod:`argparse` "
"module. We have done almost nothing, but already we get a nice help message."
msgstr ""
"第二個我們呈現出了 :mod:`argparse` 模組的用處。我們幾乎沒有做什麼事情，但已經"
"得到一個很好的幫助信息。"

#: ../../howto/argparse.rst:105
msgid ""
"The ``--help`` option, which can also be shortened to ``-h``, is the only "
"option we get for free (i.e. no need to specify it). Specifying anything "
"else results in an error. But even then, we do get a useful usage message, "
"also for free."
msgstr ""
"這個 ``--help`` 選項可以簡短的表示成 ``-h`` , 這是唯一一個選項我們不用去指明"
"的（意即，沒有必要在這個參數後加上任何數值）。如果指定其他參數給他會造成錯"
"誤。也因為這樣，我們得到了一個免費的信息。"

#: ../../howto/argparse.rst:112
msgid "Introducing Positional arguments"
msgstr "介紹位置參數"

#: ../../howto/argparse.rst:114
msgid "An example::"
msgstr ""
"例如：\n"
"\n"
"::"

#: ../../howto/argparse.rst:122
msgid "And running the code:"
msgstr "運行這段代碼："

#: ../../howto/argparse.rst:140
msgid "Here is what's happening:"
msgstr "接者是發生的情況："

#: ../../howto/argparse.rst:142
#, fuzzy
msgid ""
"We've added the :meth:`~ArgumentParser.add_argument` method, which is what "
"we use to specify which command-line options the program is willing to "
"accept. In this case, I've named it ``echo`` so that it's in line with its "
"function."
msgstr ""
"我們增加了 :meth:`add_argument` ，利用這個方法可以指名讓我們的程式接受哪些命"
"令列參數。"

#: ../../howto/argparse.rst:146
msgid "Calling our program now requires us to specify an option."
msgstr "現在呼叫我們的程式時需要指定一個參數選項。"

#: ../../howto/argparse.rst:148
#, fuzzy
msgid ""
"The :meth:`~ArgumentParser.parse_args` method actually returns some data "
"from the options specified, in this case, ``echo``."
msgstr ""
"在這個例子中， :meth:`parse_args` 這個方法確實根據了 ``echo`` 這個選項回傳了"
"資料。"

#: ../../howto/argparse.rst:151
#, fuzzy
msgid ""
"The variable is some form of 'magic' that :mod:`argparse` performs for free "
"(i.e. no need to specify which variable that value is stored in). You will "
"also notice that its name matches the string argument given to the method, "
"``echo``."
msgstr ""
"該變數是 :mod:`argparse` 免費執行的某種形式的“魔法”（即無需指定該值儲存在哪個"
"變數中）。您還會注意到它的名稱與提供給該方法的字串參數 ``echo``相匹配。"

#: ../../howto/argparse.rst:156
msgid ""
"Note however that, although the help display looks nice and all, it "
"currently is not as helpful as it can be. For example we see that we got "
"``echo`` as a positional argument, but we don't know what it does, other "
"than by guessing or by reading the source code. So, let's make it a bit more "
"useful::"
msgstr ""
"注意, 雖然 help 秀出了看起來不錯的信息, 但現在並沒有給予到實質幫助。像剛剛增"
"加的 ``echo`` 這個位置參數，除了猜測和讀原始碼之外，我們根本不曉得該怎麼使用"
"他。因此我們來做一點事讓他變得更有用：\n"
"\n"
"::"

#: ../../howto/argparse.rst:167
msgid "And we get:"
msgstr "然後我們得到："

#: ../../howto/argparse.rst:180
msgid "Now, how about doing something even more useful::"
msgstr ""
"現在來做一些更有用處的事情：\n"
"\n"
"::"

#: ../../howto/argparse.rst:198
msgid ""
"That didn't go so well. That's because :mod:`argparse` treats the options we "
"give it as strings, unless we tell it otherwise. So, let's tell :mod:"
"`argparse` to treat that input as an integer::"
msgstr ""
"那並沒有如預期這樣。這是因為 :mod:`argparse` 將我們給予選項的值當成字串，除然"
"我們告訴他要怎麼做。所以我們來告訴 :mod:`argparse` 將這個輸入值當成整數來使"
"用：\n"
"\n"
"::"

#: ../../howto/argparse.rst:219
msgid ""
"That went well. The program now even helpfully quits on bad illegal input "
"before proceeding."
msgstr ""
"這樣很順利。現在程式在開始之前會因為錯誤的輸入而回報有用的訊息並結束掉。"

#: ../../howto/argparse.rst:224
msgid "Introducing Optional arguments"
msgstr "介紹選項參數"

#: ../../howto/argparse.rst:226
#, fuzzy
msgid ""
"So far we have been playing with positional arguments. Let us have a look on "
"how to add optional ones::"
msgstr "到目前為止，我們一直在玩位置參數。讓我們看看如何新增可選的::"

#: ../../howto/argparse.rst:236 ../../howto/argparse.rst:282
#: ../../howto/argparse.rst:398 ../../howto/argparse.rst:432
msgid "And the output:"
msgstr "接者是結果："

#: ../../howto/argparse.rst:256
msgid ""
"The program is written so as to display something when ``--verbosity`` is "
"specified and display nothing when not."
msgstr ""
"這個程式是寫成如果有指名 ``--verbosity`` 這個參數選項那才顯示些資訊，反之亦"
"然。"

#: ../../howto/argparse.rst:259
#, fuzzy
msgid ""
"To show that the option is actually optional, there is no error when running "
"the program without it. Note that by default, if an optional argument isn't "
"used, the relevant variable, in this case ``args.verbosity``, is given "
"``None`` as a value, which is the reason it fails the truth test of the :"
"keyword:`if` statement."
msgstr ""
"為了表明該選項實際上是可選的，沒有它運行程式時不會出錯。請注意，預設情況下，"
"如果未使用可選參數，則相關變數（在本例中為“args."
"verbosity”）將被賦予 ``None``作為值，這就是它未能通過真值測試的原因 :keyword:`if`"
" 語句。"

#: ../../howto/argparse.rst:265
msgid "The help message is a bit different."
msgstr "Help 訊息稍微有些不一樣。"

#: ../../howto/argparse.rst:267
msgid ""
"When using the ``--verbosity`` option, one must also specify some value, any "
"value."
msgstr "當使用 ``--verbosity`` 參數選項時必須要指定一個數值。"

#: ../../howto/argparse.rst:270
msgid ""
"The above example accepts arbitrary integer values for ``--verbosity``, but "
"for our simple program, only two values are actually useful, ``True`` or "
"``False``. Let's modify the code accordingly::"
msgstr ""
"在上面的例子中 ``--verbosity``，接受任意的整數，但對我們的程式來說只接受兩個"
"輸入值， ``True`` 或 ``False``。所以我們來修改一下程式碼使其符合：\n"
"\n"
"::"

#: ../../howto/argparse.rst:300
#, fuzzy
msgid ""
"The option is now more of a flag than something that requires a value. We "
"even changed the name of the option to match that idea. Note that we now "
"specify a new keyword, ``action``, and give it the value ``\"store_true\"``. "
"This means that, if the option is specified, assign the value ``True`` to "
"``args.verbose``. Not specifying it implies ``False``."
msgstr ""
"該選項現在更像是一個旗標，而不是需要值的東西。我們甚至更改了選項的名稱以匹配"
"該想法。請注意，我們現在指定了一個新關鍵字 ``action``，並為其賦值“store_true”。"
"這意味著，如果指定了選項，則將值 ``True``分配給“args."
"verbose”。不指定它意味著 ``False``。"

#: ../../howto/argparse.rst:307
#, fuzzy
msgid ""
"It complains when you specify a value, in true spirit of what flags actually "
"are."
msgstr "當您指定一個值時，它會本著旗標實際是什麼的真正精神抱怨。"

#: ../../howto/argparse.rst:310
msgid "Notice the different help text."
msgstr "注意不同的 help 文件。"

#: ../../howto/argparse.rst:314
#, fuzzy
msgid "Short options"
msgstr "做空期權"

#: ../../howto/argparse.rst:316
msgid ""
"If you are familiar with command line usage, you will notice that I haven't "
"yet touched on the topic of short versions of the options. It's quite "
"simple::"
msgstr ""
"如果你很熟悉命令列的使用的話，你將會發現我還沒講到關於短參數。其實這很簡"
"單：\n"
"\n"
"::"

#: ../../howto/argparse.rst:328
#, fuzzy
msgid "And here goes:"
msgstr "這裡是："

#: ../../howto/argparse.rst:341
msgid "Note that the new ability is also reflected in the help text."
msgstr "注意新的表示對於幫助文件也是一樣的"

#: ../../howto/argparse.rst:345
msgid "Combining Positional and Optional arguments"
msgstr "現在結合位置與選項參數"

#: ../../howto/argparse.rst:347
msgid "Our program keeps growing in complexity::"
msgstr ""
"我們的程式成長的越來越複雜：\n"
"\n"
"::"

#: ../../howto/argparse.rst:362
msgid "And now the output:"
msgstr "然後現在的輸出結果："

#: ../../howto/argparse.rst:376
#, fuzzy
msgid "We've brought back a positional argument, hence the complaint."
msgstr "我們帶回了立場論據，因此投訴。"

#: ../../howto/argparse.rst:378
msgid "Note that the order does not matter."
msgstr "注意現在的順序對於程式來說已經不再重要了."

#: ../../howto/argparse.rst:380
#, fuzzy
msgid ""
"How about we give this program of ours back the ability to have multiple "
"verbosity values, and actually get to use them::"
msgstr "我們如何讓我們的這個程式恢復具有多個冗長值的能力，並實際開始使用它們::"

#: ../../howto/argparse.rst:414
#, fuzzy
msgid ""
"These all look good except the last one, which exposes a bug in our program. "
"Let's fix it by restricting the values the ``--verbosity`` option can "
"accept::"
msgstr "這些看起來都不錯，除了最後一個，它暴露了我們程式中的一個錯誤。讓我們通過限制 "
"``--verbosity`` 選項可以接受的值來修復它："

#: ../../howto/argparse.rst:450
#, fuzzy
msgid ""
"Note that the change also reflects both in the error message as well as the "
"help string."
msgstr "請注意，更改還會反映在錯誤消息和幫助字串中。"

#: ../../howto/argparse.rst:453
#, fuzzy
msgid ""
"Now, let's use a different approach of playing with verbosity, which is "
"pretty common. It also matches the way the CPython executable handles its "
"own verbosity argument (check the output of ``python --help``)::"
msgstr ""
"現在，讓我們使用一種不同的方法來玩弄冗長，這是很常見的。它還匹配 CPython "
"可執行文件處理其自身冗長參數的方式（檢查 ``python --help`` 的輸出）::"

#: ../../howto/argparse.rst:472
msgid ""
"We have introduced another action, \"count\", to count the number of "
"occurrences of specific options."
msgstr "我們已經介紹過另一個操作 \"count\" 用來計算指定的選項出現的次數。"

#: ../../howto/argparse.rst:501
#, fuzzy
msgid ""
"Yes, it's now more of a flag (similar to ``action=\"store_true\"``) in the "
"previous version of our script. That should explain the complaint."
msgstr "是的，在我們之前的腳本版本中，它現在更像是一個旗標（類似於 ``action="
"\"store_true\"``）。這應該可以解釋投訴。"

#: ../../howto/argparse.rst:504
#, fuzzy
msgid "It also behaves similar to \"store_true\" action."
msgstr "它的行為也類似於“store_true”操作。"

#: ../../howto/argparse.rst:506
msgid ""
"Now here's a demonstration of what the \"count\" action gives. You've "
"probably seen this sort of usage before."
msgstr ""
"現在來秀一下 \"count\" 這個動作會給予什麼。你可能之前就有見過這種用法。"

#: ../../howto/argparse.rst:509
#, fuzzy
msgid ""
"And if you don't specify the ``-v`` flag, that flag is considered to have "
"``None`` value."
msgstr "如果您不指定 ``-v``旗標，則該旗標被認為具有 ``None`` 值。"

#: ../../howto/argparse.rst:512
msgid ""
"As should be expected, specifying the long form of the flag, we should get "
"the same output."
msgstr "應該要如預期那樣，就算給予長選項我們也要獲得一樣的輸出結果。"

#: ../../howto/argparse.rst:515
#, fuzzy
msgid ""
"Sadly, our help output isn't very informative on the new ability our script "
"has acquired, but that can always be fixed by improving the documentation "
"for our script (e.g. via the ``help`` keyword argument)."
msgstr ""
"可悲的是，我們的幫助輸出並沒有提供很多關於我們的腳本獲得的新能力的資訊，但這"
"總是可以通過改進我們腳本的文檔來解決（例如，通過 ``help`` 關鍵字參數）。"

#: ../../howto/argparse.rst:519
#, fuzzy
msgid "That last output exposes a bug in our program."
msgstr "最後一個輸出暴露了我們程式中的一個錯誤。"

#: ../../howto/argparse.rst:522
msgid "Let's fix::"
msgstr "讓我們來解決問題"

#: ../../howto/argparse.rst:541
msgid "And this is what it gives:"
msgstr "而這也正是它給的："

#: ../../howto/argparse.rst:556
#, fuzzy
msgid ""
"First output went well, and fixes the bug we had before. That is, we want "
"any value >= 2 to be as verbose as possible."
msgstr "第一次輸出很順利，並修復了我們之前遇到的錯誤。也就是說，我們希望任何 >= 2 "
"的值都盡可能冗長。"

#: ../../howto/argparse.rst:559
msgid "Third output not so good."
msgstr "第三個輸出不是這麼的好。"

#: ../../howto/argparse.rst:561
msgid "Let's fix that bug::"
msgstr ""
"我們來修復這個錯誤：\n"
"\n"
"::"

#: ../../howto/argparse.rst:578
#, fuzzy
msgid ""
"We've just introduced yet another keyword, ``default``. We've set it to "
"``0`` in order to make it comparable to the other int values. Remember that "
"by default, if an optional argument isn't specified, it gets the ``None`` "
"value, and that cannot be compared to an int value (hence the :exc:"
"`TypeError` exception)."
msgstr ""
"我們剛剛引入了另一個關鍵字，``default``。我們將其設定為 ``0`` 以使其與其他 "
"int 值具有可比性。請記住，預設情況下，如果未指定可選參數，它會獲得 ``None``值，"
"並且無法與 int 值進行比較（因此會出現 TypeError 例外）。"

#: ../../howto/argparse.rst:585
msgid "And:"
msgstr "而且"

#: ../../howto/argparse.rst:592
#, fuzzy
msgid ""
"You can go quite far just with what we've learned so far, and we have only "
"scratched the surface. The :mod:`argparse` module is very powerful, and "
"we'll explore a bit more of it before we end this tutorial."
msgstr ""
"到目前為止，您可以了解我們所學的知識，而我們只是觸及了皮毛。 :mod:`argparse` "
"模組非常強大，我們將在結束本教程之前對其進行更多探索。"

#: ../../howto/argparse.rst:599
#, fuzzy
msgid "Getting a little more advanced"
msgstr "更高階一點"

#: ../../howto/argparse.rst:601
msgid ""
"What if we wanted to expand our tiny program to perform other powers, not "
"just squares::"
msgstr ""
"如果我們想要擴展我們的小程式做比範例更多的事：\n"
"\n"
"::"

#: ../../howto/argparse.rst:618 ../../howto/argparse.rst:656
msgid "Output:"
msgstr "結果："

#: ../../howto/argparse.rst:639
#, fuzzy
msgid ""
"Notice that so far we've been using verbosity level to *change* the text "
"that gets displayed. The following example instead uses verbosity level to "
"display *more* text instead::"
msgstr "請注意，到目前為止，我們一直在使用冗長級別來*更改*顯示的文本。"
"以下示例改為使用詳細級別來顯示 *更多* 文本："

#: ../../howto/argparse.rst:670
#, fuzzy
msgid "Conflicting options"
msgstr "衝突選項"

#: ../../howto/argparse.rst:672
#, fuzzy
msgid ""
"So far, we have been working with two methods of an :class:`argparse."
"ArgumentParser` instance. Let's introduce a third one, :meth:"
"`~ArgumentParser.add_mutually_exclusive_group`. It allows for us to specify "
"options that conflict with each other. Let's also change the rest of the "
"program so that the new functionality makes more sense: we'll introduce the "
"``--quiet`` option, which will be the opposite of the ``--verbose`` one::"
msgstr ""
"到目前為止，我們一直在使用 argparse.ArgumentParser "
"實例的兩種方法。讓我們介紹第三個，:meth:`~ArgumentParser.add_mutually_exclusi"
"ve_group`。它允許我們指定相互衝突的選項。我們還更改程式的其餘部分，以便新功能"
"更有意義：我們將引入 ``--quiet`` 選項，這將與 ``--verbose`` 選項相反："

#: ../../howto/argparse.rst:698
#, fuzzy
msgid ""
"Our program is now simpler, and we've lost some functionality for the sake "
"of demonstration. Anyways, here's the output:"
msgstr "我們的程式現在更簡單了，為了演示我們已經失去了一些功能。無論如何，這是輸出："

#: ../../howto/argparse.rst:716
#, fuzzy
msgid ""
"That should be easy to follow. I've added that last output so you can see "
"the sort of flexibility you get, i.e. mixing long form options with short "
"form ones."
msgstr "這應該很容易理解。我新增了最後一個輸出，這樣您就可以看到您獲得的靈活性，即將"
"長格式選項與短格式選項混合。"

#: ../../howto/argparse.rst:720
msgid ""
"Before we conclude, you probably want to tell your users the main purpose of "
"your program, just in case they don't know::"
msgstr ""
"在我們結論之前，你可能想告訴你的用戶這個程式的主要目的，以防萬一他們不知"
"道：\n"
"\n"
"::"

#: ../../howto/argparse.rst:741
#, fuzzy
msgid ""
"Note that slight difference in the usage text. Note the ``[-v | -q]``, which "
"tells us that we can either use ``-v`` or ``-q``, but not both at the same "
"time:"
msgstr "請注意，用法文本略有不同。注意``[-v | -q]``，它告訴我們可以使用 ``-v`` 或 "
"``-q``，但不能同時使用："

#: ../../howto/argparse.rst:763
msgid "Conclusion"
msgstr "結論"

#: ../../howto/argparse.rst:765
msgid ""
"The :mod:`argparse` module offers a lot more than shown here. Its docs are "
"quite detailed and thorough, and full of examples. Having gone through this "
"tutorial, you should easily digest them without feeling overwhelmed."
msgstr ""
":mod:`argparse` 模組提供了比這裡展示更多的功能。它的文件是非常全面詳細且充滿"
"了例子。通過本教學，你應該比較容易消化它們了。"
