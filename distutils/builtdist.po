# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-15 20:43+0000\n"
"PO-Revision-Date: 2023-05-02 18:02+0800\n"
"Last-Translator: Matt Wang <mattwang44@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.2.2\n"

#: ../../distutils/builtdist.rst:5
#, fuzzy
msgid "Creating Built Distributions"
msgstr "建立內建發佈版本"

#: ../../distutils/_setuptools_disclaimer.rst:3
#, fuzzy
msgid ""
"This document is being retained solely until the ``setuptools`` "
"documentation at https://setuptools.readthedocs.io/en/latest/setuptools.html "
"independently covers all of the relevant information currently included here."
msgstr ""
"本文檔僅保留到 https://setuptools.readthedocs.io/en/latest/setuptools.html 上"
"的 ``setuptools``文檔獨立涵蓋當前包含在此處的所有相關資訊。"

#: ../../distutils/builtdist.rst:9
#, fuzzy
msgid ""
"A \"built distribution\" is what you're probably used to thinking of either "
"as a \"binary package\" or an \"installer\" (depending on your background).  "
"It's not necessarily binary, though, because it might contain only Python "
"source code and/or byte-code; and we don't call it a package, because that "
"word is already spoken for in Python.  (And \"installer\" is a term specific "
"to the world of mainstream desktop systems.)"
msgstr ""
"“內建發行版”是您可能習慣於將其視為“二進位包”或“安裝程式”（取決於您的背景）的"
"東西。不過，它不一定是二進位的，因為它可能只包含 Python 源程式碼和/或位元組"
"碼；我們不稱它為包，因為這個詞已經在 Python 中被提及。 （“安裝程式”是主流桌面"
"系統領域特有的術語。）"

#: ../../distutils/builtdist.rst:16
#, fuzzy
msgid ""
"A built distribution is how you make life as easy as possible for installers "
"of your module distribution: for users of RPM-based Linux systems, it's a "
"binary RPM; for Windows users, it's an executable installer; for Debian-"
"based Linux users, it's a Debian package; and so forth.  Obviously, no one "
"person will be able to create built distributions for every platform under "
"the sun, so the Distutils are designed to enable module developers to "
"concentrate on their specialty---writing code and creating source "
"distributions---while an intermediary species called *packagers* springs up "
"to turn source distributions into built distributions for as many platforms "
"as there are packagers."
msgstr ""
"內建發行版是讓模組發行版的安裝人員盡可能輕鬆的方式：對於基於 RPM 的 Linux 系"
"統的使用者，它是二進位 RPM；對於 Windows 使用者，它是一個可執行的安裝程式；對"
"於基於 Debian 的 Linux 使用者，它是一個 Debian 軟件包；等等。顯然，沒有人能夠"
"為陽光下的每個平台建立內建發行版，因此 Distutils 旨在使模組開發人員能夠專注於"
"他們的專長——編寫程式碼和建立源程式碼發行版——而一種稱為*packagers* 應運而生，"
"將源程式碼分發版轉變為內建分發版，適用於與打包程式一樣多的平台。"

#: ../../distutils/builtdist.rst:26
#, fuzzy
msgid ""
"Of course, the module developer could be their own packager; or the packager "
"could be a volunteer \"out there\" somewhere who has access to a platform "
"which the original developer does not; or it could be software periodically "
"grabbing new source distributions and turning them into built distributions "
"for as many platforms as the software has access to.  Regardless of who they "
"are, a packager uses the setup script and the :command:`bdist` command "
"family to generate built distributions."
msgstr ""
"當然，模組開發者可以是他們自己的打包者；或者打包者可能是某處“那裡”的志願者，"
"他可以訪問原始開發人員無法訪問的平台；或者它可能是軟件定期獲取新的源分發並將"
"它們轉化為軟件可以訪問的盡可能多的平台的內建分發。無論他們是誰，打包者都使用"
"安裝腳本和 :command:`bdist` 命令系列來生成構建的發行版。"

#: ../../distutils/builtdist.rst:34
#, fuzzy
msgid ""
"As a simple example, if I run the following command in the Distutils source "
"tree::"
msgstr "作為一個簡單的例子，如果我在 Distutils 源程式碼樹中運行以下命令："

#: ../../distutils/builtdist.rst:39
#, fuzzy
msgid ""
"then the Distutils builds my module distribution (the Distutils itself in "
"this case), does a \"fake\" installation (also in the :file:`build` "
"directory), and creates the default type of built distribution for my "
"platform.  The default format for built distributions is a \"dumb\" tar file "
"on Unix, and a simple executable installer on Windows.  (That tar file is "
"considered \"dumb\" because it has to be unpacked in a specific location to "
"work.)"
msgstr ""
"然後 Distutils 構建我的模組分佈（在這種情況下是 Distutils 本身），進行「假」"
"安裝（也在 :file:`build` 目錄中），並為我的平台建立預設型別的構建分佈。構建發"
"行版的預設格式在 Unix 上是一個 \"dumb\" tar 文件，在 Windows 上是一個簡單的可"
"執行安裝程式。 （該 tar 文件被認為是 \"dumb\" 文件，因為它必須在特定位置解壓"
"縮才能工作。）"

#: ../../distutils/builtdist.rst:46
#, fuzzy
msgid ""
"Thus, the above command on a Unix system creates :file:`Distutils-1.0.{plat}."
"tar.gz`; unpacking this tarball from the right place installs the Distutils "
"just as though you had downloaded the source distribution and run ``python "
"setup.py install``.  (The \"right place\" is either the root of the "
"filesystem or  Python's :file:`{prefix}` directory, depending on the options "
"given to the :command:`bdist_dumb` command; the default is to make dumb "
"distributions relative to :file:`{prefix}`.)"
msgstr ""
"因此，以上命令在 Unix 系統上建立 :file:`Distutils-1.0.{plat}.tar.gz`；從正確"
"的位置解壓這個 tarball 安裝 Distutils 就像你已經下載了源程式碼分發並運行 "
"``python setup.py install`` 一樣。 （“正確的位置”是文件系統的根目錄或 Python "
"的 :file:`{prefix}` 目錄，取決於給 :command:`bdist_dumb` 命令的選項；預設是相"
"對於 :文件：`{前綴}`。）"

#: ../../distutils/builtdist.rst:54
#, fuzzy
msgid ""
"Obviously, for pure Python distributions, this isn't any simpler than just "
"running ``python setup.py install``\\ ---but for non-pure distributions, "
"which include extensions that would need to be compiled, it can mean the "
"difference between someone being able to use your extensions or not.  And "
"creating \"smart\" built distributions, such as an RPM package or an "
"executable installer for Windows, is far more convenient for users even if "
"your distribution doesn't include any extensions."
msgstr ""
"顯然，對於純 Python 發行版，這並不比運行 ``python setup.py install``\\ 更簡單"
"——但是對於包含需要編譯的擴充的非純發行版，這可能意味著某人是否能夠使用您的擴"
"充程式之間的區別。建立“智能”構建的發行版，例如 RPM 包或適用於 Windows 的可執"
"行安裝程式，對使用者來說要方便得多，即使您的發行版不包含任何擴充。"

#: ../../distutils/builtdist.rst:62
#, fuzzy
msgid ""
"The :command:`bdist` command has a :option:`!--formats` option, similar to "
"the :command:`sdist` command, which you can use to select the types of built "
"distribution to generate: for example, ::"
msgstr ""
":command:`bdist` 命令有一個:option:`!--formats` 選項，類似於 :command:"
"`sdist` 命令，您可以使用它來選擇要生成的構建分發的型別：例如，： :"

#: ../../distutils/builtdist.rst:68
#, fuzzy
msgid ""
"would, when run on a Unix system, create :file:`Distutils-1.0.{plat}.zip`\\ "
"---again, this archive would be unpacked from the root directory to install "
"the Distutils."
msgstr ""
"當在 Unix 系統上運行時，會建立 :file:`Distutils-1.0.{plat}.zip`\\ ---同樣，這"
"個存檔將從根目錄解壓以安裝 Distutils。"

#: ../../distutils/builtdist.rst:72
#, fuzzy
msgid "The available formats for built distributions are:"
msgstr "建置發行版的可用格式是："

#: ../../distutils/builtdist.rst:75
msgid "Format"
msgstr "格式"

#: ../../distutils/builtdist.rst:75
msgid "Description"
msgstr "描述"

#: ../../distutils/builtdist.rst:75
msgid "Notes"
msgstr "註解"

#: ../../distutils/builtdist.rst:77
msgid "``gztar``"
msgstr "``gztar``"

#: ../../distutils/builtdist.rst:77
#, fuzzy
msgid "gzipped tar file (:file:`.tar.gz`)"
msgstr "gzip 壓縮 tar 檔案 (:file:`.tar.gz`)"

#: ../../distutils/builtdist.rst:77
msgid "\\(1)"
msgstr "\\(1)"

#: ../../distutils/builtdist.rst:80
msgid "``bztar``"
msgstr "``bztar``"

#: ../../distutils/builtdist.rst:80
#, fuzzy
msgid "bzipped tar file (:file:`.tar.bz2`)"
msgstr "bzip 壓縮 tar 檔案 (:file:`.tar.bz2`)"

#: ../../distutils/builtdist.rst:83
msgid "``xztar``"
msgstr "``xztar``"

#: ../../distutils/builtdist.rst:83
#, fuzzy
msgid "xzipped tar file (:file:`.tar.xz`)"
msgstr "xzip 壓縮 tar 檔案 (:file:`.tar.xz`)"

#: ../../distutils/builtdist.rst:86
msgid "``ztar``"
msgstr "``ztar``"

#: ../../distutils/builtdist.rst:86
#, fuzzy
msgid "compressed tar file (:file:`.tar.Z`)"
msgstr "壓縮的 tar 檔案 (:file:`.tar.Z`)"

#: ../../distutils/builtdist.rst:86
msgid "\\(3)"
msgstr "\\(3)"

#: ../../distutils/builtdist.rst:89
msgid "``tar``"
msgstr "``tar``"

#: ../../distutils/builtdist.rst:89
msgid "tar file (:file:`.tar`)"
msgstr "tar 檔案 (:file:`.tar`)"

#: ../../distutils/builtdist.rst:91
msgid "``zip``"
msgstr "``zip``"

#: ../../distutils/builtdist.rst:91
msgid "zip file (:file:`.zip`)"
msgstr "zip 檔案 (:file:`.zip`)"

#: ../../distutils/builtdist.rst:91
msgid "(2),(4)"
msgstr "(2),(4)"

#: ../../distutils/builtdist.rst:93
msgid "``rpm``"
msgstr "``rpm``"

#: ../../distutils/builtdist.rst:93
msgid "RPM"
msgstr "RPM"

#: ../../distutils/builtdist.rst:93
msgid "\\(5)"
msgstr "\\(5)"

#: ../../distutils/builtdist.rst:95
msgid "``pkgtool``"
msgstr "``pkgtool``"

#: ../../distutils/builtdist.rst:95
msgid "Solaris :program:`pkgtool`"
msgstr "Solaris :program:`pkgtool`"

#: ../../distutils/builtdist.rst:97
msgid "``sdux``"
msgstr "``sdux``"

#: ../../distutils/builtdist.rst:97
msgid "HP-UX :program:`swinstall`"
msgstr "HP-UX :program:`swinstall`"

#: ../../distutils/builtdist.rst:99
msgid "``msi``"
msgstr "``msi``"

#: ../../distutils/builtdist.rst:99
msgid "Microsoft Installer."
msgstr "微軟安裝程式。"

#: ../../distutils/builtdist.rst:102
msgid "Added support for the ``xztar`` format."
msgstr "新增了對 ``xztar`` 格式的支援。"

#: ../../distutils/builtdist.rst:106
msgid "Notes:"
msgstr "註解："

#: ../../distutils/builtdist.rst:109
msgid "default on Unix"
msgstr "Unix 上的預設值"

#: ../../distutils/builtdist.rst:112
msgid "default on Windows"
msgstr "Windows 預設"

#: ../../distutils/builtdist.rst:115
msgid "requires external :program:`compress` utility."
msgstr "需要外部 :program:`compress` 工具程式。"

#: ../../distutils/builtdist.rst:118
#, fuzzy
msgid ""
"requires either external :program:`zip` utility or :mod:`zipfile` module "
"(part of the standard Python library since Python 1.6)"
msgstr ""
"需要外部 :program:`zip` 實用程式或 :mod:`zipfile` 模組（自 Python 1.6 以來標"
"準 Python 庫的一部分）"

#: ../../distutils/builtdist.rst:122
#, fuzzy
msgid ""
"requires external :program:`rpm` utility, version 3.0.4 or better (use ``rpm "
"--version`` to find out which version you have)"
msgstr ""
"需要外部 :program:`rpm` 實用程式，版本 3.0.4 或更高版本（使用 ``rpm --"
"version`` 找出您擁有的版本）"

#: ../../distutils/builtdist.rst:125
#, fuzzy
msgid ""
"You don't have to use the :command:`bdist` command with the :option:`!--"
"formats` option; you can also use the command that directly implements the "
"format you're interested in.  Some of these :command:`bdist` \"sub-"
"commands\" actually generate several similar formats; for instance, the :"
"command:`bdist_dumb` command generates all the \"dumb\" archive formats "
"(``tar``, ``gztar``, ``bztar``, ``xztar``, ``ztar``, and ``zip``), and :"
"command:`bdist_rpm` generates both binary and source RPMs.  The :command:"
"`bdist` sub-commands, and the formats generated by each, are:"
msgstr ""
"您不必將 :command:`bdist` 命令與 :option:`!--formats` 選項一起使用；您還可以"
"使用直接實作您感興趣的格式的命令。其中一些 :command:`bdist` “子命令”實際上生"
"成了幾種類似的格式；例如，:command:`bdist_dumb` 命令生成所有“啞”歸檔格式"
"（``tar``、``gztar``、``bztar``、``xztar``、``ztar``、和 ``zip``) 和 :"
"command:`bdist_rpm` 生成二進位和源 RPM。 :command:`bdist` 子命令以及每個子命"
"令生成的格式是："

#: ../../distutils/builtdist.rst:135
msgid "Command"
msgstr "命令"

#: ../../distutils/builtdist.rst:135
msgid "Formats"
msgstr "格式"

#: ../../distutils/builtdist.rst:137
msgid ":command:`bdist_dumb`"
msgstr ":command:`bdist_dumb`"

#: ../../distutils/builtdist.rst:137
msgid "tar, gztar, bztar, xztar, ztar, zip"
msgstr "tar, gztar, bztar, xztar, ztar, zip"

#: ../../distutils/builtdist.rst:139
msgid ":command:`bdist_rpm`"
msgstr ":command:`bdist_rpm`"

#: ../../distutils/builtdist.rst:139
msgid "rpm, srpm"
msgstr "rpm, srpm"

#: ../../distutils/builtdist.rst:142
#, fuzzy
msgid ""
"The following sections give details on the individual :command:`bdist_\\*` "
"commands."
msgstr "以下部分詳細介紹了各個 :command:`bdist_\\*` 命令。"

#: ../../distutils/builtdist.rst:158
#, fuzzy
msgid "Creating RPM packages"
msgstr "建立 RPM 套件"

#: ../../distutils/builtdist.rst:160
#, fuzzy
msgid ""
"The RPM format is used by many popular Linux distributions, including Red "
"Hat, SuSE, and Mandrake.  If one of these (or any of the other RPM-based "
"Linux distributions) is your usual environment, creating RPM packages for "
"other users of that same distribution is trivial. Depending on the "
"complexity of your module distribution and differences between Linux "
"distributions, you may also be able to create RPMs that work on different "
"RPM-based distributions."
msgstr ""
"RPM 格式被許多流行的 Linux 發行版使用，包括 Red Hat、SuSE 和 Mandrake。如果其"
"中之一（或任何其他基於 RPM 的 Linux 發行版）是您常用的環境，則為同一發行版的"
"其他使用者建立 RPM 包是微不足道的。根據模組分發的複雜性和 Linux 分發之間的差"
"異，您還可以建立適用於不同基於 RPM 的分發的 RPM。"

#: ../../distutils/builtdist.rst:167
#, fuzzy
msgid ""
"The usual way to create an RPM of your module distribution is to run the :"
"command:`bdist_rpm` command::"
msgstr "建立模組分發的 RPM 的常用方法是運行 :command:`bdist_rpm` 命令::"

#: ../../distutils/builtdist.rst:172
#, fuzzy
msgid "or the :command:`bdist` command with the :option:`!--format` option::"
msgstr "或帶有 :option:`!--format` 選項的 :command:`bdist` 命令："

#: ../../distutils/builtdist.rst:176
#, fuzzy
msgid ""
"The former allows you to specify RPM-specific options; the latter allows  "
"you to easily specify multiple formats in one run.  If you need to do both, "
"you can explicitly specify multiple :command:`bdist_\\*` commands and their "
"options::"
msgstr ""
"前者允許您指定特定於 RPM 的選項；後者允許您在一次運行中輕鬆指定多種格式。如果"
"你需要兩者都做，你可以顯式指定多個 :command:`bdist_\\*` 命令及其選項::"

#: ../../distutils/builtdist.rst:182
#, fuzzy
msgid ""
"Creating RPM packages is driven by a :file:`.spec` file, much as using the "
"Distutils is driven by the setup script.  To make your life easier, the :"
"command:`bdist_rpm` command normally creates a :file:`.spec` file based on "
"the information you supply in the setup script, on the command line, and in "
"any Distutils configuration files.  Various options and sections in the :"
"file:`.spec` file are derived from options in the setup script as follows:"
msgstr ""
"建立 RPM 包是由 :file:`.spec` 文件驅動的，就像使用 Distutils 是由安裝腳本驅動"
"一樣。為了讓您的生活更輕鬆，:command:`bdist_rpm` 命令通常會根據您在安裝腳本、"
"命令列和任何 Distutils 配置文件中提供的資訊建立一個 :file:`.spec` 文件。 :"
"file:`.spec` 文件中的各種選項和部分源自安裝腳本中的選項，如下所示："

#: ../../distutils/builtdist.rst:190 ../../distutils/builtdist.rst:214
#, fuzzy
msgid "RPM :file:`.spec` file option or section"
msgstr "RPM :file:`.spec` 檔案選項或部分"

#: ../../distutils/builtdist.rst:190
#, fuzzy
msgid "Distutils setup script option"
msgstr "Distutils 安裝腳本選項"

#: ../../distutils/builtdist.rst:192
#, fuzzy
msgid "Name"
msgstr "名稱"

#: ../../distutils/builtdist.rst:192
msgid "``name``"
msgstr "``name``"

#: ../../distutils/builtdist.rst:194
#, fuzzy
msgid "Summary (in preamble)"
msgstr "摘要（在序言中）"

#: ../../distutils/builtdist.rst:194
msgid "``description``"
msgstr "``description``"

#: ../../distutils/builtdist.rst:196
msgid "Version"
msgstr "版本"

#: ../../distutils/builtdist.rst:196
msgid "``version``"
msgstr "``version``"

#: ../../distutils/builtdist.rst:198 ../../distutils/builtdist.rst:221
#, fuzzy
msgid "Vendor"
msgstr "小販"

#: ../../distutils/builtdist.rst:198
#, fuzzy
msgid ""
"``author`` and ``author_email``, or  --- & ``maintainer`` and "
"``maintainer_email``"
msgstr ""
"``author`` 和 ``author_email``，或者 --- & ``maintainer`` 和 "
"``maintainer_email``"

#: ../../distutils/builtdist.rst:202
msgid "Copyright"
msgstr "版權宣告"

#: ../../distutils/builtdist.rst:202
msgid "``license``"
msgstr "``license``"

#: ../../distutils/builtdist.rst:204
msgid "Url"
msgstr "Url"

#: ../../distutils/builtdist.rst:204
msgid "``url``"
msgstr "``url``"

#: ../../distutils/builtdist.rst:206
#, fuzzy
msgid "%description (section)"
msgstr "%描述（部分）"

#: ../../distutils/builtdist.rst:206
msgid "``long_description``"
msgstr "``long_description``"

#: ../../distutils/builtdist.rst:209
#, fuzzy
msgid ""
"Additionally, there are many options in :file:`.spec` files that don't have "
"corresponding options in the setup script.  Most of these are handled "
"through options to the :command:`bdist_rpm` command as follows:"
msgstr ""
"此外，在 :file:`.spec` 文件中有許多選項在安裝腳本中沒有相應的選項。其中大部分"
"是通過 :command:`bdist_rpm` 命令的選項處理的，如下所示："

#: ../../distutils/builtdist.rst:214
#, fuzzy
msgid ":command:`bdist_rpm` option"
msgstr ":command:`bdist_rpm` 選項"

#: ../../distutils/builtdist.rst:214
#, fuzzy
msgid "default value"
msgstr "預設值"

#: ../../distutils/builtdist.rst:217
#, fuzzy
msgid "Release"
msgstr "發布"

#: ../../distutils/builtdist.rst:217
msgid "``release``"
msgstr "``release``"

#: ../../distutils/builtdist.rst:217
msgid "\"1\""
msgstr "\"1\""

#: ../../distutils/builtdist.rst:219
#, fuzzy
msgid "Group"
msgstr "團體"

#: ../../distutils/builtdist.rst:219
msgid "``group``"
msgstr "``group``"

#: ../../distutils/builtdist.rst:219
#, fuzzy
msgid "\"Development/Libraries\""
msgstr "“開發/圖書館”"

#: ../../distutils/builtdist.rst:221
msgid "``vendor``"
msgstr "``vendor``"

#: ../../distutils/builtdist.rst:221
#, fuzzy
msgid "(see above)"
msgstr "（往上看）"

#: ../../distutils/builtdist.rst:223
#, fuzzy
msgid "Packager"
msgstr "打包機"

#: ../../distutils/builtdist.rst:223
msgid "``packager``"
msgstr "``packager``"

#: ../../distutils/builtdist.rst:223 ../../distutils/builtdist.rst:225
#: ../../distutils/builtdist.rst:227 ../../distutils/builtdist.rst:229
#: ../../distutils/builtdist.rst:231 ../../distutils/builtdist.rst:233
#: ../../distutils/builtdist.rst:235 ../../distutils/builtdist.rst:237
#, fuzzy
msgid "(none)"
msgstr "（沒有任何）"

#: ../../distutils/builtdist.rst:225
#, fuzzy
msgid "Provides"
msgstr "提供"

#: ../../distutils/builtdist.rst:225
msgid "``provides``"
msgstr "``provides``"

#: ../../distutils/builtdist.rst:227
#, fuzzy
msgid "Requires"
msgstr "要求"

#: ../../distutils/builtdist.rst:227
msgid "``requires``"
msgstr "``requires``"

#: ../../distutils/builtdist.rst:229
#, fuzzy
msgid "Conflicts"
msgstr "衝突"

#: ../../distutils/builtdist.rst:229
msgid "``conflicts``"
msgstr "``conflicts``"

#: ../../distutils/builtdist.rst:231
#, fuzzy
msgid "Obsoletes"
msgstr "過時的"

#: ../../distutils/builtdist.rst:231
msgid "``obsoletes``"
msgstr "``obsoletes``"

#: ../../distutils/builtdist.rst:233
#, fuzzy
msgid "Distribution"
msgstr "分配"

#: ../../distutils/builtdist.rst:233
msgid "``distribution_name``"
msgstr "``distribution_name``"

#: ../../distutils/builtdist.rst:235
msgid "BuildRequires"
msgstr "BuildRequires"

#: ../../distutils/builtdist.rst:235
msgid "``build_requires``"
msgstr "``build_requires``"

#: ../../distutils/builtdist.rst:237
#, fuzzy
msgid "Icon"
msgstr "圖標"

#: ../../distutils/builtdist.rst:237
msgid "``icon``"
msgstr "``icon``"

#: ../../distutils/builtdist.rst:240
#, fuzzy
msgid ""
"Obviously, supplying even a few of these options on the command-line would "
"be tedious and error-prone, so it's usually best to put them in the setup "
"configuration file, :file:`setup.cfg`\\ ---see section :ref:`setup-config`.  "
"If you distribute or package many Python module distributions, you might "
"want to put options that apply to all of them in your personal Distutils "
"configuration file (:file:`~/.pydistutils.cfg`).  If you want to temporarily "
"disable this file, you can pass the :option:`!--no-user-cfg` option to :file:"
"`setup.py`."
msgstr ""
"顯然，即使在命令列上提供這些選項中的幾個也會很乏味且容易出錯，因此通常最好將"
"它們放在安裝配置文件中，:file:`setup.cfg`\\ ---請參閱部分 :ref:`設定配置`。如"
"果您分發或打包許多 Python 模組分發版，您可能希望將適用於所有這些分發版的選項"
"放入您的個人 Distutils 配置文件 (:file:`~/.pydistutils.cfg`)。如果你想暫時禁"
"用這個文件，你可以將:option:`!--no-user-cfg` 選項傳遞給 :file:`setup.py`。"

#: ../../distutils/builtdist.rst:248
#, fuzzy
msgid ""
"There are three steps to building a binary RPM package, all of which are "
"handled automatically by the Distutils:"
msgstr "構建二進位 RPM 包分為三個步驟，所有步驟均由 Distutils 自動處理："

#: ../../distutils/builtdist.rst:251
#, fuzzy
msgid ""
"create a :file:`.spec` file, which describes the package (analogous  to the "
"Distutils setup script; in fact, much of the information in the  setup "
"script winds up in the :file:`.spec` file)"
msgstr ""
"建立一個描述包的 :file:`.spec` 文件（類似於 Distutils 安裝腳本；事實上，安裝"
"腳本中的大部分資訊都在 :file:`.spec` 文件中）"

#: ../../distutils/builtdist.rst:255
#, fuzzy
msgid "create the source RPM"
msgstr "建立源 RPM"

#: ../../distutils/builtdist.rst:257
#, fuzzy
msgid ""
"create the \"binary\" RPM (which may or may not contain binary code, "
"depending on whether your module distribution contains Python extensions)"
msgstr ""
"建立“二進位”RPM（可能包含也可能不包含二進位程式碼，具體取決於您的模組分發版是"
"否包含 Python 擴充）"

#: ../../distutils/builtdist.rst:260
#, fuzzy
msgid ""
"Normally, RPM bundles the last two steps together; when you use the "
"Distutils, all three steps are typically bundled together."
msgstr ""
"通常，RPM 將最後兩個步驟捆綁在一起；當您使用 Distutils 時，所有三個步驟通常捆"
"綁在一起。"

#: ../../distutils/builtdist.rst:263
#, fuzzy
msgid ""
"If you wish, you can separate these three steps.  You can use the :option:"
"`!--spec-only` option to make :command:`bdist_rpm` just create the :file:`."
"spec` file and exit; in this case, the :file:`.spec` file will be written to "
"the \"distribution directory\"---normally :file:`dist/`, but customizable "
"with the :option:`!--dist-dir` option.  (Normally, the :file:`.spec` file "
"winds up deep in the \"build tree,\" in a temporary directory created by :"
"command:`bdist_rpm`.)"
msgstr ""
"如果您願意，可以將這三個步驟分開。您可以使用 :option:`!--spec-only` 選項讓 :"
"command:`bdist_rpm` 只建立 :file:`.spec` 文件並退出；在這種情況下，:file:`."
"spec` 文件將被寫入“分發目錄”---通常是 :file:`dist/`，但可以使用 :option:`!--"
"dist-dir` 選項自定義. （通常，:file:`.spec` 文件在“構建樹”的深處，位於由 :"
"command:`bdist_rpm` 建立的臨時目錄中。）"

#: ../../distutils/builtdist.rst:291
#, fuzzy
msgid "Cross-compiling on Windows"
msgstr "在 Windows 上交叉編譯"

#: ../../distutils/builtdist.rst:293
#, fuzzy
msgid ""
"Starting with Python 2.6, distutils is capable of cross-compiling between "
"Windows platforms.  In practice, this means that with the correct tools "
"installed, you can use a 32bit version of Windows to create 64bit extensions "
"and vice-versa."
msgstr ""
"從 Python 2.6 開始，distutils 能夠在 Windows 平台之間進行交叉編譯。實際上，這"
"意味著通過安裝正確的工具，您可以使用 32 位版本的 Windows 建立 64 位擴充，反之"
"亦然。"

#: ../../distutils/builtdist.rst:298
#, fuzzy
msgid ""
"To build for an alternate platform, specify the :option:`!--plat-name` "
"option to the build command.  Valid values are currently 'win32', and  'win-"
"amd64'. For example, on a 32bit version of Windows, you could execute::"
msgstr ""
"要為備用平台構建，請為構建命令指定 :option:`!--plat-name` 選項。當前有效值為 "
"``win32``和 ``win-amd64`` 。例如，在 32 位版本的 Windows 上，您可以執行："

#: ../../distutils/builtdist.rst:304
#, fuzzy
msgid "to build a 64bit version of your extension."
msgstr "構建 64 位版本的擴充。"

#: ../../distutils/builtdist.rst:306
#, fuzzy
msgid ""
"would create a 64bit installation executable on your 32bit version of "
"Windows."
msgstr "將在 32 位版本的 Windows 上建立 64 位安裝可執行文件。"

#: ../../distutils/builtdist.rst:308
#, fuzzy
msgid ""
"To cross-compile, you must download the Python source code and cross-compile "
"Python itself for the platform you are targeting - it is not possible from a "
"binary installation of Python (as the .lib etc file for other platforms are "
"not included.)  In practice, this means the user of a 32 bit operating "
"system will need to use Visual Studio 2008 to open the :file:`PCbuild/"
"PCbuild.sln` solution in the Python source tree and build the \"x64\" "
"configuration of the 'pythoncore' project before cross-compiling extensions "
"is possible."
msgstr ""
"要交叉編譯，您必須下載 Python 源程式碼並為您的目標平台交叉編譯 Python 本身——"
"這是不可能從 Python 的二進位安裝（因為不包括其他平台的 .lib 等文件）。實際"
"上，這意味著 32 位操作系統的使用者需要使用 Visual Studio 2008 打開 Python 源"
"程式碼樹中的 :file:`PCbuild/PCbuild.sln` 解決方案並構建 ``pythoncore``的 "
"``x64``配置' 交叉編譯擴充之前的項目是可能的。"

#: ../../distutils/builtdist.rst:317
#, fuzzy
msgid ""
"Note that by default, Visual Studio 2008 does not install 64bit compilers or "
"tools.  You may need to reexecute the Visual Studio setup process and select "
"these tools (using Control Panel->[Add/Remove] Programs is a convenient way "
"to check or modify your existing install.)"
msgstr ""
"請注意，預設情況下，Visual Studio 2008 不會安裝 64 位編譯器或工具。您可能需要"
"重新執行 Visual Studio 安裝過程並選擇這些工具（使用控制面板 -> [新增/刪除] 程"
"式是檢查或修改現有安裝的便捷方式。）"

#: ../../distutils/builtdist.rst:325
#, fuzzy
msgid "The Postinstallation script"
msgstr "安裝後腳本"

#: ../../distutils/builtdist.rst:327
#, fuzzy
msgid ""
"Starting with Python 2.3, a postinstallation script can be specified with "
"the :option:`!--install-script` option.  The basename of the script must be "
"specified, and the script filename must also be listed in the scripts "
"argument to the setup function."
msgstr ""
"從 Python 2.3 開始，可以使用 :option:`!--install-script` 選項指定安裝後腳本。"
"必須指定腳本的基本名稱，腳本文件名也必須列在設定函式的腳本參數中。"

#: ../../distutils/builtdist.rst:332
#, fuzzy
msgid ""
"This script will be run at installation time on the target system after all "
"the files have been copied, with ``argv[1]`` set to :option:`!-install`, and "
"again at uninstallation time before the files are removed with ``argv[1]`` "
"set to :option:`!-remove`."
msgstr ""
"此腳本將在所有文件都被複製後在目標系統上安裝時運行，並將 ``argv[1]`` 設定為 :"
"option:`!-install` ，並在文件被刪除之前的卸載時再次運行將 ``argv[1]`` 設定"
"為 :option:`!-remove`。"

#: ../../distutils/builtdist.rst:337
#, fuzzy
msgid ""
"The installation script runs embedded in the windows installer, every output "
"(``sys.stdout``, ``sys.stderr``) is redirected into a buffer and will be "
"displayed in the GUI after the script has finished."
msgstr ""
"安裝腳本嵌入在 Windows 安裝程式中運行，每個輸出（``sys.stdout``、``sys."
"stderr``）都被重定向到緩衝區中，並在腳本完成後顯示在 GUI 中。"

#: ../../distutils/builtdist.rst:341
#, fuzzy
msgid ""
"Some functions especially useful in this context are available as additional "
"built-in functions in the installation script."
msgstr "一些在此上下文中特別有用的函式可作為安裝腳本中的附加內建函式使用。"

#: ../../distutils/builtdist.rst:348
#, fuzzy
msgid ""
"These functions should be called when a directory or file is created by the "
"postinstall script at installation time.  It will register *path* with the "
"uninstaller, so that it will be removed when the distribution is "
"uninstalled. To be safe, directories are only removed if they are empty."
msgstr ""
"當安裝後腳本在安裝時建立目錄或文件時，應呼叫這些函式。它將向卸載程式註冊 "
"*path*，以便在卸載分發時將其刪除。為了安全起見，目錄只有在目錄為空時才會被刪"
"除。"

#: ../../distutils/builtdist.rst:356
#, fuzzy
msgid ""
"This function can be used to retrieve special folder locations on Windows "
"like the Start Menu or the Desktop.  It returns the full path to the folder. "
"*csidl_string* must be one of the following strings::"
msgstr ""
"此函式可用於檢索 Windows 上的特殊文件夾位置，如開始菜單或桌面。它回傳文件夾的"
"完整路徑。 *csidl_string* 必須是以下字串之一："

#: ../../distutils/builtdist.rst:376
#, fuzzy
msgid "If the folder cannot be retrieved, :exc:`OSError` is raised."
msgstr "如果無法檢索文件夾，則會引發 :exec:`OSError`。"

#: ../../distutils/builtdist.rst:378
#, fuzzy
msgid ""
"Which folders are available depends on the exact Windows version, and "
"probably also the configuration.  For details refer to Microsoft's "
"documentation of the :c:func:`SHGetSpecialFolderPath` function."
msgstr ""
"哪些文件夾可用取決於具體的 Windows 版本，可能還取決於配置。有關詳細資訊，請參"
"閱 Microsoft 的 :c:func:`SHGetSpecialFolderPath` 函式文檔。"

#: ../../distutils/builtdist.rst:385
#, fuzzy
msgid ""
"This function creates a shortcut. *target* is the path to the program to be "
"started by the shortcut. *description* is the description of the shortcut. "
"*filename* is the title of the shortcut that the user will see. *arguments* "
"specifies the command line arguments, if any. *workdir* is the working "
"directory for the program. *iconpath* is the file containing the icon for "
"the shortcut, and *iconindex* is the index of the icon in the file "
"*iconpath*.  Again, for details consult the Microsoft documentation for the :"
"class:`IShellLink` interface."
msgstr ""
"這個函式建立一個快捷方式。 *target* 是快捷方式要啟動的程式的路徑。 "
"*description* 是快捷方式的描述。 *filename* 是使用者將看到的快捷方式的標題。 "
"*arguments* 指定命令列參數，如果有的話。 *workdir* 是程式的工作目錄。 "
"*iconpath* 是包含快捷方式圖標的文件，*iconindex* 是文件 *iconpath* 中圖標的索"
"引。同樣，有關詳細資訊，請參閱有關 IShellLink 介面的 Microsoft 文檔。"
