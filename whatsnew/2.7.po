# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-24 00:16+0000\n"
"PO-Revision-Date: 2018-05-23 16:20+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../whatsnew/2.7.rst:3
msgid "What's New in Python 2.7"
msgstr "Python 2.7 有什麼新功能"

#: ../../whatsnew/2.7.rst:0
msgid "Author"
msgstr "作者"

#: ../../whatsnew/2.7.rst:5
msgid "A.M. Kuchling (amk at amk.ca)"
msgstr "A.M. Kuchling (amk at amk.ca)"

#: ../../whatsnew/2.7.rst:52
#, fuzzy
msgid ""
"This article explains the new features in Python 2.7.  Python 2.7 was "
"released on July 3, 2010."
msgstr "本文介紹了 Python 2.7 中的新功能。 Python 2.7 於 2010 年 7 月 3 日發布。"

#: ../../whatsnew/2.7.rst:55
#, fuzzy
msgid ""
"Numeric handling has been improved in many ways, for both floating-point "
"numbers and for the :class:`~decimal.Decimal` class. There are some useful "
"additions to the standard library, such as a greatly enhanced :mod:"
"`unittest` module, the :mod:`argparse` module for parsing command-line "
"options, convenient :class:`~collections.OrderedDict` and :class:"
"`~collections.Counter` classes in the :mod:`collections` module, and many "
"other improvements."
msgstr ""
"對於浮點數和 :class:`~decimal.Decimal` "
"類，數字處理在很多方面都得到了改進。標準庫有一些有用的補充，例如大大增強的 "
":mod:`unittest` 模組、用於解析命令列選項的 :mod:`argparse` 模組、方便的 "
":class:`~collections.OrderedDict` 和： :mod:`collections` 模組中的 "
"class:`~collections.Counter` 類，以及許多其他改進。"

#: ../../whatsnew/2.7.rst:63
#, fuzzy
msgid ""
"Python 2.7 is planned to be the last of the 2.x releases, so we worked on "
"making it a good release for the long term.  To help with porting to Python "
"3, several new features from the Python 3.x series have been included in 2.7."
msgstr ""
"Python 2.7 計劃成為 2.x "
"版本的最後一個版本，因此我們致力於使其成為一個長期良好的版本。為了幫助移植到 "
"Python 3，2.7 中包含了 Python 3.x 系列的幾個新特性。"

#: ../../whatsnew/2.7.rst:68
#, fuzzy
msgid ""
"This article doesn't attempt to provide a complete specification of the new "
"features, but instead provides a convenient overview.  For full details, you "
"should refer to the documentation for Python 2.7 at https://docs.python.org. "
"If you want to understand the rationale for the design and implementation, "
"refer to the PEP for a particular new feature or the issue on https://bugs."
"python.org in which a change was discussed.  Whenever possible, \"What's New "
"in Python\" links to the bug/patch item for each change."
msgstr ""
"本文並不試圖提供新功能的完整規範，而是提供一個方便的概述。有關完整詳細資訊，"
"您應該參閱 Python 2.7 的文檔，網址為 https://docs.python."
"org。如果您想了解設計和實作的基本原理，請參閱特定新功能的 PEP 或 https://"
"bugs.python.org 上討論更改的問題。只要有可能，“Python "
"的新增功能”鏈接到每個更改的錯誤/補丁項。"

#: ../../whatsnew/2.7.rst:80
msgid "The Future for Python 2.x"
msgstr "Python 2.x 的未來"

#: ../../whatsnew/2.7.rst:82
#, fuzzy
msgid ""
"Python 2.7 is the last major release in the 2.x series, as the Python "
"maintainers have shifted the focus of their new feature development efforts "
"to the Python 3.x series. This means that while Python 2 continues to "
"receive bug fixes, and to be updated to build correctly on new hardware and "
"versions of supported operated systems, there will be no new full feature "
"releases for the language or standard library."
msgstr ""
"Python 2.7 是 2.x 系列的最後一個主要版本，因為 Python "
"維護者已將他們的新功能開發工作的重點轉移到 Python 3.x 系列。這意味著雖然 "
"Python 2 繼續接收錯誤修復，並進行更新以在新硬件和支援的操作系統版本上正確構建"
"，但不會有針對該語言或標準庫的新的完整功能版本。"

#: ../../whatsnew/2.7.rst:89
#, fuzzy
msgid ""
"However, while there is a large common subset between Python 2.7 and Python "
"3, and many of the changes involved in migrating to that common subset, or "
"directly to Python 3, can be safely automated, some other changes (notably "
"those associated with Unicode handling) may require careful consideration, "
"and preferably robust automated regression test suites, to migrate "
"effectively."
msgstr ""
"然而，雖然 Python 2.7 和 Python 3 之間有一個很大的公開子集，"
"並且遷移到該公開子集或直接遷移到 Python 3 "
"所涉及的許多更改可以安全地自動化，但其他一些更改（特別是與 Unicode "
"處理相關的更改） ) "
"可能需要仔細考慮，最好是健壯的自動回歸測試套件，才能有效遷移。"

#: ../../whatsnew/2.7.rst:96
#, fuzzy
msgid ""
"This means that Python 2.7 will remain in place for a long time, providing a "
"stable and supported base platform for production systems that have not yet "
"been ported to Python 3. The full expected lifecycle of the Python 2.7 "
"series is detailed in :pep:`373`."
msgstr ""
"這意味著 Python 2.7 將長期保留，為尚未移植到 Python 3 "
"的生產系統提供穩定且受支援的基礎平台。Python 2.7 系列的完整預期生命週期詳見 "
":pep:` 373`。"

#: ../../whatsnew/2.7.rst:101
#, fuzzy
msgid "Some key consequences of the long-term significance of 2.7 are:"
msgstr "2.7 的長期意義的一些關鍵後果是："

#: ../../whatsnew/2.7.rst:103
#, fuzzy
msgid ""
"As noted above, the 2.7 release has a much longer period of maintenance when "
"compared to earlier 2.x versions. Python 2.7 is currently expected to remain "
"supported by the core development team (receiving security updates and other "
"bug fixes) until at least 2020 (10 years after its initial release, compared "
"to the more typical support period of 18--24 months)."
msgstr ""
"如上所述，與早期的 2.x 版本相比，2.7 版本的維護期要長得多。目前預計 Python "
"2.7 將繼續得到核心開發團隊的支援（接收安全更新和其他錯誤修復）至少到 2020 "
"年（首次發布後 10 年，相比之下更典型的支援期為 18--24 個月）。"

#: ../../whatsnew/2.7.rst:109
#, fuzzy
msgid ""
"As the Python 2.7 standard library ages, making effective use of the Python "
"Package Index (either directly or via a redistributor) becomes more "
"important for Python 2 users. In addition to a wide variety of third party "
"packages for various tasks, the available packages include backports of new "
"modules and features from the Python 3 standard library that are compatible "
"with Python 2, as well as various tools and libraries that can make it "
"easier to migrate to Python 3. The `Python Packaging User Guide <https://"
"packaging.python.org>`__ provides guidance on downloading and installing "
"software from the Python Package Index."
msgstr ""
"隨著 Python 2.7 標準庫的老化，有效使用 Python Package "
"Index（直接或通過再分發器）對於 Python 2 "
"使用者變得更加重要。除了用於各種任務的各種第三方包之外，可用的包還包括從 "
"Python 3 標準庫向後移植與 Python 2 相容的新模組和功能，以及各種工具和庫，"
"可以更輕鬆地遷移到 Python 3。`Python 打包使用者指南 <https://packaging.python"
".org>`__ 提供了有關從 Python 包索引下載和安裝軟件的指南。"

#: ../../whatsnew/2.7.rst:119
#, fuzzy
msgid ""
"While the preferred approach to enhancing Python 2 is now the publication of "
"new packages on the Python Package Index, this approach doesn't necessarily "
"work in all cases, especially those related to network security. In "
"exceptional cases that cannot be handled adequately by publishing new or "
"updated packages on PyPI, the Python Enhancement Proposal process may be "
"used to make the case for adding new features directly to the Python 2 "
"standard library. Any such additions, and the maintenance releases where "
"they were added, will be noted in the :ref:`py27-maintenance-enhancements` "
"section below."
msgstr ""
"雖然增強 Python 2 的首選方法現在是在 Python Package Index "
"上發布新包，但這種方法不一定適用於所有情況，尤其是那些與網絡安全相關的情況。"
"在無法通過在 PyPI 上發布新的或更新的包來充分處理的特殊情況下，可以使用 "
"Python 增強建議流程來證明直接向 Python 2 標準庫新增新功能。"
"任何此類新增以及新增它們的維護版本將在下面的 :ref:`py27-maintenance-"
"enhancements` 部分中註明。"

#: ../../whatsnew/2.7.rst:129
#, fuzzy
msgid ""
"For projects wishing to migrate from Python 2 to Python 3, or for library "
"and framework developers wishing to support users on both Python 2 and "
"Python 3, there are a variety of tools and guides available to help decide "
"on a suitable approach and manage some of the technical details involved. "
"The recommended starting point is the :ref:`pyporting-howto` HOWTO guide."
msgstr ""
"對於希望從 Python 2 遷移到 Python 3 的項目，或者對於希望同時支援 Python 2 和 "
"Python 3 使用者的庫和框架開發人員，有多種工具和指南可用於幫助決定合適的方法並"
"管理一些所涉及的技術細節。推薦的起點是 :ref:`pyporting-howto` HOWTO 指南。"

#: ../../whatsnew/2.7.rst:137
#, fuzzy
msgid "Changes to the Handling of Deprecation Warnings"
msgstr "處理棄用警告的更改"

#: ../../whatsnew/2.7.rst:139
#, fuzzy
msgid ""
"For Python 2.7, a policy decision was made to silence warnings only of "
"interest to developers by default.  :exc:`DeprecationWarning` and its "
"descendants are now ignored unless otherwise requested, preventing users "
"from seeing warnings triggered by an application.  This change was also made "
"in the branch that became Python 3.2. (Discussed on stdlib-sig and carried "
"out in :issue:`7319`.)"
msgstr ""
"對於 Python 2.7，預設情況下，策略決定只對開發人員感興趣的警告進行靜音。 "
":exc:`DeprecationWarning` "
"及其後代現在被忽略，除非另有要求，以防止使用者看到應用程式觸發的警告。在成為 "
"Python 3.2 的分支中也進行了此更改。 （在 stdlib-sig 上討論並在 :issue:`7319` "
"中執行。）"

#: ../../whatsnew/2.7.rst:146
#, fuzzy
msgid ""
"In previous releases, :exc:`DeprecationWarning` messages were enabled by "
"default, providing Python developers with a clear indication of where their "
"code may break in a future major version of Python."
msgstr ""
"在以前的版本中，預設情況下啟用 :exec:`DeprecationWarning` 消息，為 Python "
"開發人員提供明確的指示，表明他們的程式碼在未來的 Python "
"主要版本中可能會在哪里中斷。"

#: ../../whatsnew/2.7.rst:151
#, fuzzy
msgid ""
"However, there are increasingly many users of Python-based applications who "
"are not directly involved in the development of those applications.  :exc:"
"`DeprecationWarning` messages are irrelevant to such users, making them "
"worry about an application that's actually working correctly and burdening "
"application developers with responding to these concerns."
msgstr ""
"然而，越來越多的基於 Python 的應用程式使用者並未直接參與這些應用程式的開發。 "
":exc:`DeprecationWarning` 消息與此類使用者無關，這讓他們擔心應用程式實際上是"
"否正常工作，並給應用程式開發人員增加了應對這些問題的負擔。"

#: ../../whatsnew/2.7.rst:158
#, fuzzy
msgid ""
"You can re-enable display of :exc:`DeprecationWarning` messages by running "
"Python with the :option:`-Wdefault <-W>` (short form: :option:`-Wd <-W>`) "
"switch, or by setting the :envvar:`PYTHONWARNINGS` environment variable to "
"``\"default\"`` (or ``\"d\"``) before running Python.  Python code can also "
"re-enable them by calling ``warnings.simplefilter('default')``."
msgstr ""
"您可以通過運行帶有 :option:`-Wdefault <-W>`（縮寫：:option:`-Wd <-W>`）"
"開關的 Python，或通過在運行 Python 之前將 :envvar:`PYTHONWARNINGS` "
"環境變數設定為``\"default\"``（或``\"d\"``）。 Python 程式碼也可以通過呼叫 "
"``warnings.simplefilter(\\'default\\')`` 重新啟用它們。"

#: ../../whatsnew/2.7.rst:165
#, fuzzy
msgid ""
"The ``unittest`` module also automatically reenables deprecation warnings "
"when running tests."
msgstr "``unittest`` 模組還會在運行測試時自動重新啟用棄用警告。"

#: ../../whatsnew/2.7.rst:170
#, fuzzy
msgid "Python 3.1 Features"
msgstr "Python 3.1 特性"

#: ../../whatsnew/2.7.rst:172
#, fuzzy
msgid ""
"Much as Python 2.6 incorporated features from Python 3.0, version 2.7 "
"incorporates some of the new features in Python 3.1.  The 2.x series "
"continues to provide tools for migrating to the 3.x series."
msgstr ""
"與 Python 2.6 合併了 Python 3.0 的功能一樣，2.7 版合併了 Python 3.1 "
"中的一些新功能。 2.x 系列繼續提供遷移到 3.x 系列的工具。"

#: ../../whatsnew/2.7.rst:177
#, fuzzy
msgid "A partial list of 3.1 features that were backported to 2.7:"
msgstr "向後移植到 2.7 的 3.1 功能的部分列表："

#: ../../whatsnew/2.7.rst:179
#, fuzzy
msgid "The syntax for set literals (``{1,2,3}`` is a mutable set)."
msgstr "集合文字的語法（``{1,2,3}`` 是一個可變集合）。"

#: ../../whatsnew/2.7.rst:180
#, fuzzy
msgid "Dictionary and set comprehensions (``{i: i*2 for i in range(3)}``)."
msgstr "字典和集合理解（``{i: i*2 for i in range(3)}``）。"

#: ../../whatsnew/2.7.rst:181
#, fuzzy
msgid "Multiple context managers in a single :keyword:`with` statement."
msgstr "單個 :keyword:`with` 語句中的多個上下文管理器。"

#: ../../whatsnew/2.7.rst:182
#, fuzzy
msgid "A new version of the :mod:`io` library, rewritten in C for performance."
msgstr ":mod:`io` 庫的新版本，用 C 重寫以提高性能。"

#: ../../whatsnew/2.7.rst:183
#, fuzzy
msgid "The ordered-dictionary type described in :ref:`pep-0372`."
msgstr ":ref:`pep-0372` 中描述的有序字典型別。"

#: ../../whatsnew/2.7.rst:184
#, fuzzy
msgid "The new ``\",\"`` format specifier described in :ref:`pep-0378`."
msgstr "新的 ``\",\"`` 格式說明符在 :ref:`pep-0378` 中描述。"

#: ../../whatsnew/2.7.rst:185
#, fuzzy
msgid "The :class:`memoryview` object."
msgstr ":class:`memoryview` 物件。"

#: ../../whatsnew/2.7.rst:186
#, fuzzy
msgid ""
"A small subset of the :mod:`importlib` module, `described below <#importlib-"
"section>`__."
msgstr ":mod:`importlib` 模組的一個小子集，`如下所述 <#importlib-section>`__。"

#: ../../whatsnew/2.7.rst:188
#, fuzzy
msgid ""
"The :func:`repr` of a float ``x`` is shorter in many cases: it's now based "
"on the shortest decimal string that's guaranteed to round back to ``x``.  As "
"in previous versions of Python, it's guaranteed that ``float(repr(x))`` "
"recovers ``x``."
msgstr ""
"在許多情況下，浮點數 ``x`` 的 :func:`repr` 更短：它現在基於保證四捨五入為 "
"``x`` 的最短十進位字串。與以前版本的 Python 一樣，保證 ``float(repr(x))`` "
"恢復 ``x``。"

#: ../../whatsnew/2.7.rst:192
#, fuzzy
msgid ""
"Float-to-string and string-to-float conversions are correctly rounded. The :"
"func:`round` function is also now correctly rounded."
msgstr "浮點到字串和字串到浮點的轉換正確舍入。 :func:`round` 函式現在也正確舍入了。"

#: ../../whatsnew/2.7.rst:194
#, fuzzy
msgid ""
"The :c:type:`PyCapsule` type, used to provide a C API for extension modules."
msgstr ":c:type:`PyCapsule` 型別，用於為擴充模組提供 C API。"

#: ../../whatsnew/2.7.rst:195
#, fuzzy
msgid "The :c:func:`PyLong_AsLongAndOverflow` C API function."
msgstr ":c:func:`PyLong_AsLongAndOverflow` C API 函式。"

#: ../../whatsnew/2.7.rst:197
#, fuzzy
msgid "Other new Python3-mode warnings include:"
msgstr "其他新的 Python3 模式警告包括："

#: ../../whatsnew/2.7.rst:199
#, fuzzy
msgid ""
":func:`operator.isCallable` and :func:`operator.sequenceIncludes`, which are "
"not supported in 3.x, now trigger warnings."
msgstr ""
":func:`operator.isCallable` 和 :func:`operator.sequenceIncludes` 在 3.x "
"中不受支援，現在會觸發警告。"

#: ../../whatsnew/2.7.rst:201
#, fuzzy
msgid ""
"The :option:`!-3` switch now automatically enables the :option:`!-Qwarn` "
"switch that causes warnings about using classic division with integers and "
"long integers."
msgstr ":option:`!-3` 開關現在自動啟用 :option:`!-Qwarn` "
"開關，該開關會導致有關使用整數和長整數的經典除法的警告。"

#: ../../whatsnew/2.7.rst:214
#, fuzzy
msgid "PEP 372: Adding an Ordered Dictionary to collections"
msgstr "PEP 372：向集合中新增有序字典"

#: ../../whatsnew/2.7.rst:216
#, fuzzy
msgid ""
"Regular Python dictionaries iterate over key/value pairs in arbitrary order. "
"Over the years, a number of authors have written alternative implementations "
"that remember the order that the keys were originally inserted.  Based on "
"the experiences from those implementations, 2.7 introduces a new :class:"
"`~collections.OrderedDict` class in the :mod:`collections` module."
msgstr ""
"常規 Python 字典以任意順序疊代鍵/值對。多年來，許多作者編寫了替代實作來記住密"
"鑰最初插入的順序。基於這些實作的經驗，2.7 在 :mod:`collections` "
"模組中引入了一個新的 :class:`~collections.OrderedDict` 類。"

#: ../../whatsnew/2.7.rst:222
#, fuzzy
msgid ""
"The :class:`~collections.OrderedDict` API provides the same interface as "
"regular dictionaries but iterates over keys and values in a guaranteed order "
"depending on when a key was first inserted::"
msgstr ""
":class:`~collections.OrderedDict` API "
"提供與常規字典相同的介面，但根據首次插入鍵的時間以保證的順序遍歷鍵和值::"

#: ../../whatsnew/2.7.rst:233
#, fuzzy
msgid ""
"If a new entry overwrites an existing entry, the original insertion position "
"is left unchanged::"
msgstr "如果新的條目覆蓋了現有的條目，則原始插入位置保持不變::"

#: ../../whatsnew/2.7.rst:240
#, fuzzy
msgid "Deleting an entry and reinserting it will move it to the end::"
msgstr "刪除一個條目並重新插入它將把它移到最後::"

#: ../../whatsnew/2.7.rst:247
#, fuzzy
msgid ""
"The :meth:`~collections.OrderedDict.popitem` method has an optional *last* "
"argument that defaults to ``True``.  If *last* is true, the most recently "
"added key is returned and removed; if it's false, the oldest key is "
"selected::"
msgstr ""
":meth:`~collections.OrderedDict.popitem` 方法有一個可選的 *last* 參數，"
"預設為 ``True``。如果 *last* "
"為真，則回傳並刪除最近新增的鍵；如果為假，則選擇最舊的密鑰::"

#: ../../whatsnew/2.7.rst:262
#, fuzzy
msgid ""
"Comparing two ordered dictionaries checks both the keys and values, and "
"requires that the insertion order was the same::"
msgstr "比較兩個有序字典檢查鍵和值，並要求插入順序相同::"

#: ../../whatsnew/2.7.rst:278
#, fuzzy
msgid ""
"Comparing an :class:`~collections.OrderedDict` with a regular dictionary "
"ignores the insertion order and just compares the keys and values."
msgstr "將 :class:`~collections.OrderedDict` "
"與常規字典進行比較會忽略插入順序，而只會比較鍵和值。"

#: ../../whatsnew/2.7.rst:281
#, fuzzy
msgid ""
"How does the :class:`~collections.OrderedDict` work?  It maintains a doubly "
"linked list of keys, appending new keys to the list as they're inserted. A "
"secondary dictionary maps keys to their corresponding list node, so deletion "
"doesn't have to traverse the entire linked list and therefore remains O(1)."
msgstr ""
":class:`~collections.OrderedDict` 是如何工作的？它維護一個雙向鏈接的鍵列表，"
"在插入新鍵時將其附加到列表中。二級字典將鍵映射到它們對應的列表節點，因此刪除"
"不必遍歷整個鍊錶，因此仍然是 O(1)。"

#: ../../whatsnew/2.7.rst:287
#, fuzzy
msgid ""
"The standard library now supports use of ordered dictionaries in several "
"modules."
msgstr "標準庫現在支援在多個模組中使用有序字典。"

#: ../../whatsnew/2.7.rst:290
#, fuzzy
msgid ""
"The :mod:`ConfigParser` module uses them by default, meaning that "
"configuration files can now be read, modified, and then written back in "
"their original order."
msgstr ":mod:`ConfigParser` "
"模組預設使用它們，這意味著現在可以讀取、修改配置文件，然後按其原始順序寫回。"

#: ../../whatsnew/2.7.rst:294
#, fuzzy
msgid ""
"The :meth:`~collections.somenamedtuple._asdict()` method for :func:"
"`collections.namedtuple` now returns an ordered dictionary with the values "
"appearing in the same order as the underlying tuple indices."
msgstr ""
"collections.namedtuple 的 :meth:`~collections.somenamedtuple._asdict()` "
"方法現在回傳一個有序字典，其值的出現順序與底層元組索引相同。"

#: ../../whatsnew/2.7.rst:298
#, fuzzy
msgid ""
"The :mod:`json` module's :class:`~json.JSONDecoder` class constructor was "
"extended with an *object_pairs_hook* parameter to allow :class:`OrderedDict` "
"instances to be built by the decoder. Support was also added for third-party "
"tools like `PyYAML <https://pyyaml.org/>`_."
msgstr ""
":mod:`json` 模組的 :class:`~json.JSONDecoder` 類構造函式使用 "
"*object_pairs_hook* 參數進行了擴充，以允許解碼器構建 :class:`OrderedDict` "
"實例。還新增了對第三方工具的支援，例如`PyYAML <https://pyyaml.org/>`_。"

#: ../../whatsnew/2.7.rst:307
#, fuzzy
msgid ":pep:`372` - Adding an ordered dictionary to collections"
msgstr ":pep:`372` - 將有序字典新增到集合中"

#: ../../whatsnew/2.7.rst:307
#, fuzzy
msgid ""
"PEP written by Armin Ronacher and Raymond Hettinger; implemented by Raymond "
"Hettinger."
msgstr "PEP 由 Armin Ronacher 和 Raymond Hettinger 編寫；由 Raymond Hettinger 實施。"

#: ../../whatsnew/2.7.rst:313
#, fuzzy
msgid "PEP 378: Format Specifier for Thousands Separator"
msgstr "PEP 378：千位分隔符的格式說明符"

#: ../../whatsnew/2.7.rst:315
#, fuzzy
msgid ""
"To make program output more readable, it can be useful to add separators to "
"large numbers, rendering them as 18,446,744,073,709,551,616 instead of "
"18446744073709551616."
msgstr ""
"為了使程式輸出更具可讀性，為大數字新增分隔符可能很有用，將它們呈現為 "
"18,446,744,073,709,551,616 而不是 18446744073709551616。"

#: ../../whatsnew/2.7.rst:319
#, fuzzy
msgid ""
"The fully general solution for doing this is the :mod:`locale` module, which "
"can use different separators (\",\" in North America, \".\" in Europe) and "
"different grouping sizes, but :mod:`locale` is complicated to use and "
"unsuitable for multi-threaded applications where different threads are "
"producing output for different locales."
msgstr ""
"這樣做的完全通用的解決方案是 :mod:`locale` "
"模組，它可以使用不同的分隔符（北美為 ``,``，歐洲為 ``.``）和不同的分組大小，但是 "
":mod:`locale` 很複雜使用並且不適合多執行緒應用程式，其中不同的執行緒為不同的"
"語言環境生成輸出。"

#: ../../whatsnew/2.7.rst:325
#, fuzzy
msgid ""
"Therefore, a simple comma-grouping mechanism has been added to the mini-"
"language used by the :meth:`str.format` method.  When formatting a floating-"
"point number, simply include a comma between the width and the precision::"
msgstr ""
"因此，一個簡單的逗號分組機制已新增到 :meth:`str.format` "
"方法使用的迷你語言中。格式化浮點數時，只需在寬度和精度之間包含一個逗號："

#: ../../whatsnew/2.7.rst:333
#, fuzzy
msgid "When formatting an integer, include the comma after the width:"
msgstr "格式化整數時，在寬度後加上逗號："

#: ../../whatsnew/2.7.rst:338
#, fuzzy
msgid ""
"This mechanism is not adaptable at all; commas are always used as the "
"separator and the grouping is always into three-digit groups.  The comma-"
"formatting mechanism isn't as general as the :mod:`locale` module, but it's "
"easier to use."
msgstr "這種機制根本不適應；逗號始終用作分隔符，分組始終為三位數字組。"
"逗號格式機制不像 :mod:`locale` 模組那麼通用，但它更容易使用。"

#: ../../whatsnew/2.7.rst:345
#, fuzzy
msgid ":pep:`378` - Format Specifier for Thousands Separator"
msgstr ":pep:`378` - 千位分隔符的格式說明符"

#: ../../whatsnew/2.7.rst:346
msgid "PEP written by Raymond Hettinger; implemented by Eric Smith."
msgstr "由 Raymond Hettinger 撰寫 PEP；由 Eric Smith 實作。"

#: ../../whatsnew/2.7.rst:349
#, fuzzy
msgid "PEP 389: The argparse Module for Parsing Command Lines"
msgstr "PEP 389：用於解析命令列的 argparse 模組"

#: ../../whatsnew/2.7.rst:351
#, fuzzy
msgid ""
"The :mod:`argparse` module for parsing command-line arguments was added as a "
"more powerful replacement for the :mod:`optparse` module."
msgstr "新增了用於解析命令列參數的 :mod:`argparse` 模組，作為 :mod:`optparse` "
"模組的更強大的替代品。"

#: ../../whatsnew/2.7.rst:355
#, fuzzy
msgid ""
"This means Python now supports three different modules for parsing command-"
"line arguments: :mod:`getopt`, :mod:`optparse`, and :mod:`argparse`.  The :"
"mod:`getopt` module closely resembles the C library's :c:func:`getopt` "
"function, so it remains useful if you're writing a Python prototype that "
"will eventually be rewritten in C. :mod:`optparse` becomes redundant, but "
"there are no plans to remove it because there are many scripts still using "
"it, and there's no automated way to update these scripts.  (Making the :mod:"
"`argparse` API consistent with :mod:`optparse`'s interface was discussed but "
"rejected as too messy and difficult.)"
msgstr ""
"這意味著 Python "
"現在支援三種不同的模組來解析命令列參數：:mod:`getopt`、:mod:`optparse` "
"和 :mod:`argparse`。 :mod:`getopt` 模組與 C 庫的 :c:func:`getopt` "
"函式非常相似，因此如果您正在編寫最終將在 C 中重寫的 Python "
"原型，它仍然很有用。:mod:`optparse` 變為多餘的，但沒有計劃刪除它，因為許多腳"
"本仍在使用它，並且沒有自動更新這些腳本的方法。 （討論了使 :mod:`argparse` "
"API 與 :mod:`optparse` 的介面一致，但由於過於混亂和困難而被拒絕。）"

#: ../../whatsnew/2.7.rst:366
#, fuzzy
msgid ""
"In short, if you're writing a new script and don't need to worry about "
"compatibility with earlier versions of Python, use :mod:`argparse` instead "
"of :mod:`optparse`."
msgstr ""
"簡而言之，如果您正在編寫新腳本並且不需要擔心與早期版本的 Python 的相容性，"
"請使用 :mod:`argparse` 而不是 :mod:`optparse`。"

#: ../../whatsnew/2.7.rst:370
msgid "Here's an example::"
msgstr ""
"以下是個範例：\n"
"\n"
"::"

#: ../../whatsnew/2.7.rst:393
#, fuzzy
msgid ""
"Unless you override it, :option:`!-h` and :option:`!--help` switches are "
"automatically added, and produce neatly formatted output::"
msgstr "除非您覆蓋它，否則 :option:`!-h` 和 :option:`!--help` "
"開關會自動新增，並生成格式整齊的輸出::"

#: ../../whatsnew/2.7.rst:410
#, fuzzy
msgid ""
"As with :mod:`optparse`, the command-line switches and arguments are "
"returned as an object with attributes named by the *dest* parameters::"
msgstr "與 :mod:`optparse` 一樣，命令列開關和參數作為一個物件回傳，該物件具有由 "
"*dest* 參數命名的屬性::"

#: ../../whatsnew/2.7.rst:425
#, fuzzy
msgid ""
":mod:`argparse` has much fancier validation than :mod:`optparse`; you can "
"specify an exact number of arguments as an integer, 0 or more arguments by "
"passing ``'*'``, 1 or more by passing ``'+'``, or an optional argument with "
"``'?'``.  A top-level parser can contain sub-parsers to define subcommands "
"that have different sets of switches, as in ``svn commit``, ``svn "
"checkout``, etc.  You can specify an argument's type as :class:`~argparse."
"FileType`, which will automatically open files for you and understands that "
"``'-'`` means standard input or output."
msgstr ""
":mod:`argparse` 比 :mod:`optparse` "
"有更高階的驗證；您可以將參數的確切數量指定為整數，通過傳遞 ``'*'`` 指定 0 "
"個或多個參數，通過傳遞 ``'+'`` 指定 1 個或多個參數，或使用 ``'?'`` 指定一個可"
"選參數`。頂級解析器可以包含子解析器來定義具有不同開關集的子命令，如``svn "
"commit``，``svn checkout``等。您可以將參數的型別指定為 :class:`~ argparse."
"FileType，它將自動為您打開文件，並理解 ``'-'``表示標準輸入或輸出。"

#: ../../whatsnew/2.7.rst:438
msgid ":mod:`argparse` documentation"
msgstr ":mod:`argparse` 文件"

#: ../../whatsnew/2.7.rst:438
#, fuzzy
msgid "The documentation page of the argparse module."
msgstr "argparse 模組的文檔頁面。"

#: ../../whatsnew/2.7.rst:442
msgid ":ref:`upgrading-optparse-code`"
msgstr ":ref:`upgrading-optparse-code`"

#: ../../whatsnew/2.7.rst:441
#, fuzzy
msgid ""
"Part of the Python documentation, describing how to convert code that uses :"
"mod:`optparse`."
msgstr "Python 文檔的一部分，描述瞭如何轉換使用 :mod:`optparse` 的程式碼。"

#: ../../whatsnew/2.7.rst:444
#, fuzzy
msgid ":pep:`389` - argparse - New Command Line Parsing Module"
msgstr ":pep:`389` - argparse - 新的命令列解析模組"

#: ../../whatsnew/2.7.rst:445
msgid "PEP written and implemented by Steven Bethard."
msgstr "由 Steven Bethard 撰寫 PEP 與實作。"

#: ../../whatsnew/2.7.rst:448
#, fuzzy
msgid "PEP 391: Dictionary-Based Configuration For Logging"
msgstr "PEP 391：用於日誌記錄的基於字典的配置"

#: ../../whatsnew/2.7.rst:450
#, fuzzy
msgid ""
"The :mod:`logging` module is very flexible; applications can define a tree "
"of logging subsystems, and each logger in this tree can filter out certain "
"messages, format them differently, and direct messages to a varying number "
"of handlers."
msgstr ""
":mod:`logging` 模組非常靈活；應用程式可以定義一個日誌子系統樹，這個樹中的每個"
"記錄器都可以過濾出某些消息，以不同的方式格式化它們，並將消息定向到不同數量的"
"處理程式。"

#: ../../whatsnew/2.7.rst:455
#, fuzzy
msgid ""
"All this flexibility can require a lot of configuration.  You can write "
"Python statements to create objects and set their properties, but a complex "
"set-up requires verbose but boring code. :mod:`logging` also supports a :"
"func:`~logging.fileConfig` function that parses a file, but the file format "
"doesn't support configuring filters, and it's messier to generate "
"programmatically."
msgstr ""
"所有這些靈活性可能需要大量配置。您可以編寫 Python "
"語句來建立物件並設定它們的屬性，但是複雜的設定需要冗長而乏味的程式碼。 "
":mod:`logging` 還支援一個 :func:`~logging.fileConfig` "
"函式來解析文件，但是文件格式不支援配置過濾器，而且以編程方式生成比較麻煩。"

#: ../../whatsnew/2.7.rst:462
#, fuzzy
msgid ""
"Python 2.7 adds a :func:`~logging.dictConfig` function that uses a "
"dictionary to configure logging.  There are many ways to produce a "
"dictionary from different sources: construct one with code; parse a file "
"containing JSON; or use a YAML parsing library if one is installed.  For "
"more information see :ref:`logging-config-api`."
msgstr ""
"Python 2.7 新增了一個 :func:`~logging.dictConfig` 函式，它使用字典來配置日誌"
"記錄。從不同來源生成字典的方法有很多種：用程式碼構建一個；解析包含 JSON "
"的文件；或者使用 YAML 解析庫（如果已安裝）。有關詳細資訊，請參閱：ref"
"：`logging-config-api`。"

#: ../../whatsnew/2.7.rst:468
#, fuzzy
msgid ""
"The following example configures two loggers, the root logger and a logger "
"named \"network\".  Messages sent to the root logger will be sent to the "
"system log using the syslog protocol, and messages to the \"network\" logger "
"will be written to a :file:`network.log` file that will be rotated once the "
"log reaches 1MB."
msgstr ""
"以下示例配置兩個記錄器，根記錄器和名為 ``network`` 的記錄器。"
"發送到根記錄器的消息將使用 syslog 協定發送到系統日誌，而發送到“網絡”"
"記錄器的消息將寫入 :file:`network.log` 文件，一旦日誌達到 "
"1MB，該文件就會輪換。"

#: ../../whatsnew/2.7.rst:518
#, fuzzy
msgid ""
"Three smaller enhancements to the :mod:`logging` module, all implemented by "
"Vinay Sajip, are:"
msgstr ":mod:`logging` 模組的三個較小的增強功能，全部由 Vinay Sajip 實作，它們是："

#: ../../whatsnew/2.7.rst:523
#, fuzzy
msgid ""
"The :class:`~logging.handlers.SysLogHandler` class now supports syslogging "
"over TCP.  The constructor has a *socktype* parameter giving the type of "
"socket to use, either :const:`socket.SOCK_DGRAM` for UDP or :const:`socket."
"SOCK_STREAM` for TCP.  The default protocol remains UDP."
msgstr ""
":class:`~logging.handlers.SysLogHandler` 類現在支援通過 TCP "
"進行系統日誌記錄。構造函式有一個 *socktype* 參數，給出要使用的 socket 型別，"
"UDP 的 socket.SOCK_DGRAM 或 TCP 的 socket.SOCK_STREAM。預設協定仍然是 UDP。"

#: ../../whatsnew/2.7.rst:529
#, fuzzy
msgid ""
":class:`~logging.Logger` instances gained a :meth:`~logging.Logger.getChild` "
"method that retrieves a descendant logger using a relative path. For "
"example, once you retrieve a logger by doing ``log = getLogger('app')``, "
"calling ``log.getChild('network.listen')`` is equivalent to ``getLogger('app."
"network.listen')``."
msgstr ""
":class:`~logging.Logger` 實例獲得了 :meth:`~logging.Logger.getChild` "
"方法，該方法使用相對路徑檢索後代記錄器。例如，一旦您通過執行 ``log = "
"getLogger('app')`` 檢索記錄器，呼叫 ``log.getChild('network.listen')`` "
"等同於 ``getLogger('app.network.聽'）``。"

#: ../../whatsnew/2.7.rst:535
#, fuzzy
msgid ""
"The :class:`~logging.LoggerAdapter` class gained an :meth:`~logging."
"LoggerAdapter.isEnabledFor` method that takes a *level* and returns whether "
"the underlying logger would process a message of that level of importance."
msgstr ""
":class:`~logging.LoggerAdapter` 類獲得了一個 :meth:`~logging.LoggerAdapter."
"isEnabledFor` 方法，該方法採用 *level* "
"並回傳底層記錄器是否會處理該重要級別的消息。"

#: ../../whatsnew/2.7.rst:544
#, fuzzy
msgid ":pep:`391` - Dictionary-Based Configuration For Logging"
msgstr ":pep:`391` - 用於日誌記錄的基於字典的配置"

#: ../../whatsnew/2.7.rst:545
msgid "PEP written and implemented by Vinay Sajip."
msgstr "由 Vinay Sajip 撰寫 PEP 與實作。"

#: ../../whatsnew/2.7.rst:548
#, fuzzy
msgid "PEP 3106: Dictionary Views"
msgstr "PEP 3106：字典視圖"

#: ../../whatsnew/2.7.rst:550
#, fuzzy
msgid ""
"The dictionary methods :meth:`~dict.keys`, :meth:`~dict.values`, and :meth:"
"`~dict.items` are different in Python 3.x.  They return an object called a :"
"dfn:`view` instead of a fully materialized list."
msgstr ""
"字典方法 :meth:`~dict.keys`、:meth:`~dict.values` 和 :meth:`~dict.items` 在 "
"Python 3.x 中有所不同。它們回傳一個名為 :dfn:`view` "
"的物件，而不是一個完全物化的列表。"

#: ../../whatsnew/2.7.rst:554
#, fuzzy
msgid ""
"It's not possible to change the return values of :meth:`~dict.keys`, :meth:"
"`~dict.values`, and :meth:`~dict.items` in Python 2.7 because too much code "
"would break.  Instead the 3.x versions were added under the new names :meth:"
"`~dict.viewkeys`, :meth:`~dict.viewvalues`, and :meth:`~dict.viewitems`."
msgstr ""
"在 Python 2.7 中無法更改 :meth:`~dict.keys`、:meth:`~dict.values` 和 "
":meth:`~dict.items` 的回傳值，因為過多的程式碼會中斷。相反，3.x "
"版本是在新名稱下新增的 :meth:`~dict.viewkeys`、:meth:`~dict.viewvalues` 和 "
":meth:`~dict.viewitems`。"

#: ../../whatsnew/2.7.rst:568
#, fuzzy
msgid ""
"Views can be iterated over, but the key and item views also behave like "
"sets.  The ``&`` operator performs intersection, and ``|`` performs a union::"
msgstr "視圖可以疊代，但鍵視圖和項視圖的行為也像集合。 ``&`` 運算符執行交集，``|`` "
"執行聯合::"

#: ../../whatsnew/2.7.rst:579
#, fuzzy
msgid ""
"The view keeps track of the dictionary and its contents change as the "
"dictionary is modified::"
msgstr "視圖跟踪字典，其內容隨著字典的修改而變化::"

#: ../../whatsnew/2.7.rst:589
#, fuzzy
msgid ""
"However, note that you can't add or remove keys while you're iterating over "
"the view::"
msgstr "但是，請注意，在遍歷視圖時不能新增或刪除鍵："

#: ../../whatsnew/2.7.rst:599
#, fuzzy
msgid ""
"You can use the view methods in Python 2.x code, and the 2to3 converter will "
"change them to the standard :meth:`~dict.keys`, :meth:`~dict.values`, and :"
"meth:`~dict.items` methods."
msgstr ""
"您可以在 Python 2.x 程式碼中使用視圖方法，2to3 轉換器會將它們更改為標準的 "
":meth:`~dict.keys`、:meth:`~dict.values` 和 :meth:`~dict .items` 方法。"

#: ../../whatsnew/2.7.rst:606
#, fuzzy
msgid ":pep:`3106` - Revamping dict.keys(), .values() and .items()"
msgstr ":pep:`3106` - 改進 dict.keys()、.values() 和 .items()"

#: ../../whatsnew/2.7.rst:606
#, fuzzy
msgid ""
"PEP written by Guido van Rossum. Backported to 2.7 by Alexandre Vassalotti; :"
"issue:`1967`."
msgstr "PEP 由 Guido van Rossum 撰寫。由 Alexandre Vassalotti 向後移植到 2.7； "
" :issue:`1967`。"

#: ../../whatsnew/2.7.rst:611
#, fuzzy
msgid "PEP 3137: The memoryview Object"
msgstr "PEP 3137：記憶體視圖物件"

#: ../../whatsnew/2.7.rst:613
#, fuzzy
msgid ""
"The :class:`memoryview` object provides a view of another object's memory "
"content that matches the :class:`bytes` type's interface."
msgstr ":class:`memoryview` 物件提供了另一個物件的記憶體內容的視圖，該視圖與 "
":class:`bytes` 型別的介面相匹配。"

#: ../../whatsnew/2.7.rst:631
#, fuzzy
msgid ""
"The content of the view can be converted to a string of bytes or a list of "
"integers:"
msgstr "視圖的內容可以轉換為位元組串或整數列表："

#: ../../whatsnew/2.7.rst:643
#, fuzzy
msgid ""
":class:`memoryview` objects allow modifying the underlying object if it's a "
"mutable object."
msgstr ":class:`memoryview` 物件允許修改底層物件（如果它是可變物件）。"

#: ../../whatsnew/2.7.rst:666
#, fuzzy
msgid ":pep:`3137` - Immutable Bytes and Mutable Buffer"
msgstr ":pep:`3137` - 不可變位元組和可變緩衝區"

#: ../../whatsnew/2.7.rst:665
#, fuzzy
msgid ""
"PEP written by Guido van Rossum. Implemented by Travis Oliphant, Antoine "
"Pitrou and others. Backported to 2.7 by Antoine Pitrou; :issue:`2396`."
msgstr ""
"PEP 由 Guido van Rossum 撰寫。由 Travis Oliphant、Antoine Pitrou 等人實施。"
"由 Antoine Pitrou 反向移植到 2.7；  :issue:`2396`。"

#: ../../whatsnew/2.7.rst:672
#, fuzzy
msgid "Other Language Changes"
msgstr "其他語言變化"

#: ../../whatsnew/2.7.rst:674
#, fuzzy
msgid "Some smaller changes made to the core Python language are:"
msgstr "對核心 Python 語言所做的一些較小的更改是："

#: ../../whatsnew/2.7.rst:676
#, fuzzy
msgid ""
"The syntax for set literals has been backported from Python 3.x. Curly "
"brackets are used to surround the contents of the resulting mutable set; set "
"literals are distinguished from dictionaries by not containing colons and "
"values. ``{}`` continues to represent an empty dictionary; use ``set()`` for "
"an empty set."
msgstr ""
"集合文字的語法已從 Python 3.x 向後移植。大括號用於包圍結果可變集的內容； set "
"literals 與字典的區別在於不包含冒號和值。 ``{}`` 繼續表示空字典；對空集使用 "
"``set()``。"

#: ../../whatsnew/2.7.rst:693
#, fuzzy
msgid "Backported by Alexandre Vassalotti; :issue:`2335`."
msgstr "由 Alexandre Vassalotti 支援；  :issue:`2335`。"

#: ../../whatsnew/2.7.rst:695
#, fuzzy
msgid ""
"Dictionary and set comprehensions are another feature backported from 3.x, "
"generalizing list/generator comprehensions to use the literal syntax for "
"sets and dictionaries."
msgstr "字典和集合理解是從 3.x "
"向後移植的另一個功能，將列表/生成器理解概括為使用集合和字典的文字語法。"

#: ../../whatsnew/2.7.rst:707
#, fuzzy
msgid "Backported by Alexandre Vassalotti; :issue:`2333`."
msgstr "由 Alexandre Vassalotti 支援；  :issue:`2333`。"

#: ../../whatsnew/2.7.rst:709
#, fuzzy
msgid ""
"The :keyword:`with` statement can now use multiple context managers in one "
"statement.  Context managers are processed from left to right and each one "
"is treated as beginning a new :keyword:`!with` statement. This means that::"
msgstr ""
":keyword:`with` 語句現在可以在一條語句中使用多個上下文管理器。上下文管理器從"
"左到右處理，每個都被視為開始一個新的 :keyword:`!with` 語句。這意味著：："

#: ../../whatsnew/2.7.rst:717
#, fuzzy
msgid "is equivalent to::"
msgstr "相當於：："

#: ../../whatsnew/2.7.rst:723
#, fuzzy
msgid ""
"The :func:`contextlib.nested` function provides a very similar function, so "
"it's no longer necessary and has been deprecated."
msgstr ":func:`contextlib.nested` "
"函式提供了非常相似的功能，因此不再需要它並且已被棄用。"

#: ../../whatsnew/2.7.rst:726
#, fuzzy
msgid ""
"(Proposed in https://codereview.appspot.com/53094; implemented by Georg "
"Brandl.)"
msgstr "（在 https://codereview.appspot.com/53094 中提出；由 Georg Brandl 實施。）"

#: ../../whatsnew/2.7.rst:729
#, fuzzy
msgid ""
"Conversions between floating-point numbers and strings are now correctly "
"rounded on most platforms.  These conversions occur in many different "
"places: :func:`str` on floats and complex numbers; the :class:`float` and :"
"class:`complex` constructors; numeric formatting; serializing and "
"deserializing floats and complex numbers using the :mod:`marshal`, :mod:"
"`pickle` and :mod:`json` modules; parsing of float and imaginary literals in "
"Python code; and :class:`~decimal.Decimal`-to-float conversion."
msgstr ""
"浮點數和字串之間的轉換現在可以在大多數平台上正確舍入。這些轉換發生在許多不同"
"的地方：浮點數和復數上的 :func:`str`； :class:`float` 和 :class:`complex` "
"構造函式；數字格式；使用 :mod:`marshal`、:mod:`pickle` 和 :mod:`json` "
"模組序列化和反序列化浮點數和復數；解析 Python 程式碼中的浮點數和虛數；和 "
":class:`~decimal.Decimal`-to-float 轉換。"

#: ../../whatsnew/2.7.rst:741
#, fuzzy
msgid ""
"Related to this, the :func:`repr` of a floating-point number *x* now returns "
"a result based on the shortest decimal string that's guaranteed to round "
"back to *x* under correct rounding (with round-half-to-even rounding mode).  "
"Previously it gave a string based on rounding x to 17 decimal digits."
msgstr ""
"與此相關的是，浮點數 *x* 的 :func:`repr` "
"現在回傳一個基於最短十進位字串的結果，該字串保證在正確的捨入下舍入到 *x*（"
"使用 round-half-to-甚至舍入模式）。以前它給出了一個基於將 x 舍入為 17 "
"位十進位數字的字串。"

#: ../../whatsnew/2.7.rst:749
#, fuzzy
msgid ""
"The rounding library responsible for this improvement works on Windows and "
"on Unix platforms using the gcc, icc, or suncc compilers.  There may be a "
"small number of platforms where correct operation of this code cannot be "
"guaranteed, so the code is not used on such systems.  You can find out which "
"code is being used by checking :data:`sys.float_repr_style`,  which will be "
"``short`` if the new code is in use and ``legacy`` if it isn't."
msgstr ""
"負責此改進的捨入庫使用 gcc、icc 或 suncc 編譯器在 Windows 和 Unix 平台上工作"
"。可能有少數平台無法保證這段程式碼的正確運行，所以該程式碼沒有在此類系統上使"
"用。您可以通過檢查 :data:`sys.float_repr_style` "
"找出正在使用的程式碼，如果新程式碼正在使用，它將是 ``short`` ，如果不是，"
"則為 ``legacy`` 。"

#: ../../whatsnew/2.7.rst:757
#, fuzzy
msgid ""
"Implemented by Eric Smith and Mark Dickinson, using David Gay's :file:`dtoa."
"c` library; :issue:`7117`."
msgstr "由 Eric Smith 和 Mark Dickinson 使用 David Gay 的 dtoa.c 庫實作； "
" :issue:`7117`。"

#: ../../whatsnew/2.7.rst:760
#, fuzzy
msgid ""
"Conversions from long integers and regular integers to floating point now "
"round differently, returning the floating-point number closest to the "
"number.  This doesn't matter for small integers that can be converted "
"exactly, but for large numbers that will unavoidably lose precision, Python "
"2.7 now approximates more closely.  For example, Python 2.6 computed the "
"following::"
msgstr ""
"從長整數和常規整數到浮點數的轉換現在以不同的方式舍入，回傳最接近數字的浮點數"
"。這對於可以精確轉換的小整數無關緊要，但對於不可避免地會丟失精度的大數，"
"Python 2.7 現在更接近。例如，Python 2.6 計算了以下內容："

#: ../../whatsnew/2.7.rst:773
#, fuzzy
msgid ""
"Python 2.7's floating-point result is larger, but much closer to the true "
"value::"
msgstr "Python 2.7 的浮點結果更大，但更接近真實值::"

#: ../../whatsnew/2.7.rst:782
#, fuzzy
msgid "(Implemented by Mark Dickinson; :issue:`3166`.)"
msgstr "（由 Mark Dickinson 實施；:issue:`3166`。）"

#: ../../whatsnew/2.7.rst:784
#, fuzzy
msgid ""
"Integer division is also more accurate in its rounding behaviours.  (Also "
"implemented by Mark Dickinson; :issue:`1811`.)"
msgstr "整數除法的捨入行為也更準確。 （也由 Mark Dickinson 實作；:issue:`1811`。）"

#: ../../whatsnew/2.7.rst:787
#, fuzzy
msgid ""
"Implicit coercion for complex numbers has been removed; the interpreter will "
"no longer ever attempt to call a :meth:`__coerce__` method on complex "
"objects.  (Removed by Meador Inge and Mark Dickinson; :issue:`5211`.)"
msgstr ""
"已刪除對複數的隱式強制轉換；直譯器將不再嘗試在復雜對像上呼叫 "
":meth:`__coerce__` 方法。 （由 Meador Inge 和 Mark Dickinson "
"刪除；:issue:`5211`。）"

#: ../../whatsnew/2.7.rst:791
#, fuzzy
msgid ""
"The :meth:`str.format` method now supports automatic numbering of the "
"replacement fields.  This makes using :meth:`str.format` more closely "
"resemble using ``%s`` formatting::"
msgstr ""
":meth:`str.format` 方法現在支援替換欄位的自動編號。這使得使用 :meth:`str."
"format` 更類似於使用 ``%s`` 格式化::"

#: ../../whatsnew/2.7.rst:800
#, fuzzy
msgid ""
"The auto-numbering takes the fields from left to right, so the first ``{...}"
"`` specifier will use the first argument to :meth:`str.format`, the next "
"specifier will use the next argument, and so on.  You can't mix auto-"
"numbering and explicit numbering -- either number all of your specifier "
"fields or none of them -- but you can mix auto-numbering and named fields, "
"as in the second example above.  (Contributed by Eric Smith; :issue:`5237`.)"
msgstr ""
"自動編號採用從左到右的欄位，因此第一個 ``{...}`` 說明符將使用 :meth:`str."
"format` 的第一個參數，下一個說明符將使用下一個參數，並且很快。您不能混合使用"
"自動編號和顯式編號——要么對所有說明符欄位進行編號，要么都不對它們進行編號——但"
"您可以混合使用自動編號和命名欄位，如上面的第二個示例所示。 （由 Eric Smith "
"提供；:issue:`5237`。）"

#: ../../whatsnew/2.7.rst:807
#, fuzzy
msgid ""
"Complex numbers now correctly support usage with :func:`format`, and default "
"to being right-aligned. Specifying a precision or comma-separation applies "
"to both the real and imaginary parts of the number, but a specified field "
"width and alignment is applied to the whole of the resulting ``1.5+3j`` "
"output.  (Contributed by Eric Smith; :issue:`1588` and :issue:`7988`.)"
msgstr ""
"複數現在可以正確支援使用 :func:`format`，並且預設為右對齊。指定精度或逗號分隔"
"適用於數字的實部和虛部，但指定的欄位寬度和對齊方式適用於整個“1."
"5+3j”輸出結果。 （由 Eric Smith 提供；:issue:`1588` 和 :issue:`7988`。）"

#: ../../whatsnew/2.7.rst:814
#, fuzzy
msgid ""
"The 'F' format code now always formats its output using uppercase "
"characters, so it will now produce 'INF' and 'NAN'. (Contributed by Eric "
"Smith; :issue:`3382`.)"
msgstr ""
" ``F``格式程式碼現在始終使用大寫字元格式化其輸出，因此它現在將生成 ``INF``和 ``NAN``。"
" （由 Eric Smith 提供；:issue:`3382`。）"

#: ../../whatsnew/2.7.rst:818
#, fuzzy
msgid ""
"A low-level change: the :meth:`object.__format__` method now triggers a :exc:"
"`PendingDeprecationWarning` if it's passed a format string, because the :"
"meth:`__format__` method for :class:`object` converts the object to a string "
"representation and formats that.  Previously the method silently applied the "
"format string to the string representation, but that could hide mistakes in "
"Python code.  If you're supplying formatting information such as an "
"alignment or precision, presumably you're expecting the formatting to be "
"applied in some object-specific way.  (Fixed by Eric Smith; :issue:`7994`.)"
msgstr ""
"一個低階別的變化：:meth:`object.__format__` "
"方法現在觸發一個 :exc:`PendingDeprecationWarning` 如果它傳遞了一個格式字串，"
"因為 :meth:`__format__` 方法用於 :class:`object`物件為字串表示形式並對其進行"
"格式化。以前該方法會默默地將格式字串應用於字串表示形式，但這可能會隱藏 "
"Python 程式碼中的錯誤。如果您提供格式資訊，例如對齊方式或精度，您可能希望以某"
"種特定於物件的方式應用格式。 （由 Eric Smith 修復；:issue:`7994`。）"

#: ../../whatsnew/2.7.rst:828
#, fuzzy
msgid ""
"The :func:`int` and :func:`long` types gained a ``bit_length`` method that "
"returns the number of bits necessary to represent its argument in binary::"
msgstr ""
":func:`int` 和 :func:`long` 型別獲得了一個 ``bit_length`` "
"方法，該方法回傳以二進位表示其參數所需的位數："

#: ../../whatsnew/2.7.rst:843
#, fuzzy
msgid "(Contributed by Fredrik Johansson and Victor Stinner; :issue:`3439`.)"
msgstr "（由 Fredrik Johansson 和 Victor Stinner 提供；:issue:`3439`。）"

#: ../../whatsnew/2.7.rst:845
#, fuzzy
msgid ""
"The :keyword:`import` statement will no longer try an absolute import if a "
"relative import (e.g. ``from .os import sep``) fails.  This fixes a bug, but "
"could possibly break certain :keyword:`!import` statements that were only "
"working by accident.  (Fixed by Meador Inge; :issue:`7902`.)"
msgstr ""
"如果相對導入（例如 ``from .os import sep``）失敗，則 :keyword:`import` "
"語句將不再嘗試絕對導入。這修復了一個錯誤，但可能會破壞某些 :keyword:`!import`"
" 語句，這些語句只是偶然起作用的。 （由 Meador Inge 修復；:issue:`7902`。）"

#: ../../whatsnew/2.7.rst:851
#, fuzzy
msgid ""
"It's now possible for a subclass of the built-in :class:`unicode` type to "
"override the :meth:`__unicode__` method.  (Implemented by Victor Stinner; :"
"issue:`1583863`.)"
msgstr ""
"現在可以讓內建 :class:`unicode` 型別的子類別覆蓋 :meth:`__unicode__` 方法。 "
"（由 Victor Stinner 實施；:issue:`1583863`。）"

#: ../../whatsnew/2.7.rst:855
#, fuzzy
msgid ""
"The :class:`bytearray` type's :meth:`~bytearray.translate` method now "
"accepts ``None`` as its first argument.  (Fixed by Georg Brandl; :issue:"
"`4759`.)"
msgstr ""
":class:`bytearray` 型別的 :meth:`~bytearray.translate` 方法現在接受 ``None`` "
"作為它的第一個參數。 （由 Georg Brandl 修復；:issue:`4759`。）"

#: ../../whatsnew/2.7.rst:861
#, fuzzy
msgid ""
"When using ``@classmethod`` and ``@staticmethod`` to wrap methods as class "
"or static methods, the wrapper object now exposes the wrapped function as "
"their :attr:`__func__` attribute. (Contributed by Amaury Forgeot d'Arc, "
"after a suggestion by George Sakkis; :issue:`5982`.)"
msgstr ""
"當使用``@classmethod`` 和``@staticmethod`` 將方法包裝為類或靜態方法時，包裝器"
"物件現在將包裝函式公開為它們的 :attr:`__func__` 屬性。 （根據 George Sakkis "
"的建議，由 Amaury Forgeot d'Arc 提供；:issue:`5982`。）"

#: ../../whatsnew/2.7.rst:867 ../../whatsnew/2.7.rst:2462
#, fuzzy
msgid ""
"When a restricted set of attributes were set using ``__slots__``, deleting "
"an unset attribute would not raise :exc:`AttributeError` as you would "
"expect.  Fixed by Benjamin Peterson; :issue:`7604`.)"
msgstr ""
"當使用 ``__slots__`` 設定一組受限制的屬性時，"
"刪除未設定的屬性不會像您預期的那樣引發 "
":exc:`AttributeError`。由本傑明彼得森修復；  :issue:`7604`。）"

#: ../../whatsnew/2.7.rst:871
#, fuzzy
msgid ""
"Two new encodings are now supported: \"cp720\", used primarily for Arabic "
"text; and \"cp858\", a variant of CP 850 that adds the euro symbol.  (CP720 "
"contributed by Alexander Belchenko and Amaury Forgeot d'Arc in :issue:"
"`1616979`; CP858 contributed by Tim Hatch in :issue:`8016`.)"
msgstr ""
"現在支援兩種新編碼： ``cp720``，主要用於阿拉伯文本；和 ``cp858``，這是 CP 850 "
"的變體，新增了歐元符號。 （CP720 由 Alexander Belchenko 和 Amaury Forgeot "
"d'Arc 在 :issue:`1616979` 中貢獻；CP858 由 Tim Hatch 在 :issue:`8016` "
"中貢獻。）"

#: ../../whatsnew/2.7.rst:877
#, fuzzy
msgid ""
"The :class:`file` object will now set the :attr:`filename` attribute on the :"
"exc:`IOError` exception when trying to open a directory on POSIX platforms "
"(noted by Jan Kaliszewski; :issue:`4764`), and now explicitly checks for and "
"forbids writing to read-only file objects instead of trusting the C library "
"to catch and report the error (fixed by Stefan Krah; :issue:`5677`)."
msgstr ""
"當嘗試在 POSIX 平台上打開目錄時，:class:`file` 物件現在將在 :exc:`IOError` "
"例外上設定 :attr:`filename` 屬性（Jan Kaliszewski 指出；:issue:`4764`） "
"，現在明確檢查並禁止寫入只讀文件物件，而不是信任 C 庫來捕獲和報告錯誤（由 "
"Stefan Krah 修復；:issue:`5677`）。"

#: ../../whatsnew/2.7.rst:884
#, fuzzy
msgid ""
"The Python tokenizer now translates line endings itself, so the :func:"
"`compile` built-in function now accepts code using any line-ending "
"convention.  Additionally, it no longer requires that the code end in a "
"newline."
msgstr ""
"Python 分詞器現在自己翻譯行尾，所以 :func:`compile` 內建函式現在接受使用任何"
"行尾約定的程式碼。此外，它不再要求程式碼以換行符結尾。"

#: ../../whatsnew/2.7.rst:889
#, fuzzy
msgid ""
"Extra parentheses in function definitions are illegal in Python 3.x, meaning "
"that you get a syntax error from ``def f((x)): pass``.  In Python3-warning "
"mode, Python 2.7 will now warn about this odd usage. (Noted by James "
"Lingard; :issue:`7362`.)"
msgstr ""
"函式定義中的額外括號在 Python 3.x 中是非法的，這意味著您會從 ``def f((x)): "
"pass`` 得到語法錯誤。在 Python3 警告模式下，Python 2.7 "
"現在將警告這種奇怪的用法。 （由 James Lingard 指出；:issue:`7362`。）"

#: ../../whatsnew/2.7.rst:894
#, fuzzy
msgid ""
"It's now possible to create weak references to old-style class objects.  New-"
"style classes were always weak-referenceable.  (Fixed by Antoine Pitrou; :"
"issue:`8268`.)"
msgstr "現在可以建立對舊式類物件的弱引用。新型類總是弱引用的。 （由 Antoine Pitrou "
"修復；:issue:`8268`。）"

#: ../../whatsnew/2.7.rst:898
#, fuzzy
msgid ""
"When a module object is garbage-collected, the module's dictionary is now "
"only cleared if no one else is holding a reference to the dictionary (:issue:"
"`7140`)."
msgstr "當一個模組對像被垃圾收集時，"
"模組的字典現在只有在沒有其他人持有對字典的引用時才會被清除 (:issue:`7140`)。"

#: ../../whatsnew/2.7.rst:907
#, fuzzy
msgid "Interpreter Changes"
msgstr "直譯器更改"

#: ../../whatsnew/2.7.rst:909
#, fuzzy
msgid ""
"A new environment variable, :envvar:`PYTHONWARNINGS`, allows controlling "
"warnings.  It should be set to a string containing warning settings, "
"equivalent to those used with the :option:`-W` switch, separated by commas. "
"(Contributed by Brian Curtin; :issue:`7301`.)"
msgstr ""
"一個新的環境變數 :envvar:`PYTHONWARNINGS` "
"允許控制警告。它應該設定為一個包含警告設定的字串，等同於那些與 :option:`-W` "
"開關一起使用的設定，以逗號分隔。 （由 Brian Curtin 提供；:issue:`7301`。）"

#: ../../whatsnew/2.7.rst:915
#, fuzzy
msgid ""
"For example, the following setting will print warnings every time they "
"occur, but turn warnings from the :mod:`Cookie` module into an error.  (The "
"exact syntax for setting an environment variable varies across operating "
"systems and shells.)"
msgstr ""
"例如，以下設定將在每次出現警告時印出警告，但會將來自 :mod:`Cookie` "
"模組的警告變成錯誤。 （設定環境變數的確切語法因操作系統和 shell 而異。）"

#: ../../whatsnew/2.7.rst:928
#, fuzzy
msgid "Optimizations"
msgstr "最佳化"

#: ../../whatsnew/2.7.rst:930
#, fuzzy
msgid "Several performance enhancements have been added:"
msgstr "新增了多項性能增強功能："

#: ../../whatsnew/2.7.rst:932
#, fuzzy
msgid ""
"A new opcode was added to perform the initial setup for :keyword:`with` "
"statements, looking up the :meth:`__enter__` and :meth:`__exit__` methods.  "
"(Contributed by Benjamin Peterson.)"
msgstr ""
"新增了一個新的操作碼來執行 :keyword:`with` 語句的初始設定，查找 "
":meth:`__enter__` 和 :meth:`__exit__` 方法。 （由本傑明·彼得森提供。）"

#: ../../whatsnew/2.7.rst:936
#, fuzzy
msgid ""
"The garbage collector now performs better for one common usage pattern: when "
"many objects are being allocated without deallocating any of them.  This "
"would previously take quadratic time for garbage collection, but now the "
"number of full garbage collections is reduced as the number of objects on "
"the heap grows. The new logic only performs a full garbage collection pass "
"when the middle generation has been collected 10 times and when the number "
"of survivor objects from the middle generation exceeds 10% of the number of "
"objects in the oldest generation.  (Suggested by Martin von Löwis and "
"implemented by Antoine Pitrou; :issue:`4074`.)"
msgstr ""
"垃圾收集器現在對一種常見的使用模式表現更好：當分配許多物件而不釋放其中任何一"
"個時。這在以前需要二次方的垃圾回收時間，但現在隨著堆上對像數量的增加，完整垃"
"圾回收的次數會減少。當中間代已被收集 10 "
"次並且中間代的倖存對像數量超過最舊代對像數量的 10% "
"時，新邏輯僅執行完整的垃圾收集過程。 （由 Martin von Löwis 建議並由 Antoine "
"Pitrou 實施；:issue:`4074`。）"

#: ../../whatsnew/2.7.rst:947
#, fuzzy
msgid ""
"The garbage collector tries to avoid tracking simple containers which can't "
"be part of a cycle. In Python 2.7, this is now true for tuples and dicts "
"containing atomic types (such as ints, strings, etc.). Transitively, a dict "
"containing tuples of atomic types won't be tracked either. This helps reduce "
"the cost of each garbage collection by decreasing the number of objects to "
"be considered and traversed by the collector. (Contributed by Antoine "
"Pitrou; :issue:`4688`.)"
msgstr ""
"垃圾收集器試圖避免跟踪不能成為循環一部分的簡單容器。在 Python 2.7 中，現在對"
"於包含原子型別（例如整數、字串等）的元組和字典也是如此。傳遞性地，包含原子型"
"別元組的字典也不會被跟踪。這有助於通過減少收集器要考慮和遍歷的對像數量來降低"
"每次垃圾收集的成本。 （由 Antoine Pitrou 提供；:issue:`4688`。）"

#: ../../whatsnew/2.7.rst:956
#, fuzzy
msgid ""
"Long integers are now stored internally either in base ``2**15`` or in base "
"``2**30``, the base being determined at build time.  Previously, they were "
"always stored in base ``2**15``.  Using base ``2**30`` gives significant "
"performance improvements on 64-bit machines, but benchmark results on 32-bit "
"machines have been mixed.  Therefore, the default is to use base ``2**30`` "
"on 64-bit machines and base ``2**15`` on 32-bit machines; on Unix, there's a "
"new configure option :option:`!--enable-big-digits` that can be used to "
"override this default."
msgstr ""
"長整數現在在內部儲存在基數“2**15”或基數“2**30”中，基數在構建時確定。以前，"
"它們總是儲存在基數 ``2**15`` 中。使用基數 ``2**30`` 可以在 64 "
"位機器上顯著提高性能，但在 32 位機器上的基準測試結果好壞參半。因此，預設是在 "
"64 位機器上使用 base ``2**30``，在 32 位機器上使用 base ``2**15``；在 Unix "
"上，有一個新的配置選項 :option:`!--enable-big-digits` 可用於覆蓋此預設設定。"

#: ../../whatsnew/2.7.rst:965
#, fuzzy
msgid ""
"Apart from the performance improvements this change should be invisible to "
"end users, with one exception: for testing and debugging purposes there's a "
"new structseq :data:`sys.long_info` that provides information about the "
"internal format, giving the number of bits per digit and the size in bytes "
"of the C type used to store each digit::"
msgstr ""
"除了性能改進之外，最終使用者應該看不到這一變化，但有一個例外：為了測試和除錯"
"目的，有一個新的 structseq :data:`sys.long_info` 提供有關內部格式的資訊，"
"給出每個數字的位數以及用於儲存每個數字的 C 型別的位元組大小::"

#: ../../whatsnew/2.7.rst:976
#, fuzzy
msgid "(Contributed by Mark Dickinson; :issue:`4258`.)"
msgstr "（由 Mark Dickinson 提供；:issue:`4258`。）"

#: ../../whatsnew/2.7.rst:978
#, fuzzy
msgid ""
"Another set of changes made long objects a few bytes smaller: 2 bytes "
"smaller on 32-bit systems and 6 bytes on 64-bit. (Contributed by Mark "
"Dickinson; :issue:`5260`.)"
msgstr ""
"另一組更改使長對像變小了幾個位元組：在 32 位系統上變小了 2 個位元組，在 64 "
"位系統上變小了 6 個位元組。 （由 Mark Dickinson 提供；:issue:`5260`。）"

#: ../../whatsnew/2.7.rst:982
#, fuzzy
msgid ""
"The division algorithm for long integers has been made faster by tightening "
"the inner loop, doing shifts instead of multiplications, and fixing an "
"unnecessary extra iteration. Various benchmarks show speedups of between 50% "
"and 150% for long integer divisions and modulo operations. (Contributed by "
"Mark Dickinson; :issue:`5512`.) Bitwise operations are also significantly "
"faster (initial patch by Gregory Smith; :issue:`1087418`)."
msgstr ""
"通過收緊內部循環、進行移位而不是乘法以及修復不必要的額外疊代，長整數的除法演"
"算法變得更快。各種基準測試顯示長整數除法和模運算的加速在 50% 到 150% 之間。 "
"（由 Mark Dickinson 提供；:issue:`5512`。）按位運算也明顯更快（Gregory Smith "
"的初始補丁；:issue:`1087418`）。"

#: ../../whatsnew/2.7.rst:991
#, fuzzy
msgid ""
"The implementation of ``%`` checks for the left-side operand being a Python "
"string and special-cases it; this results in a 1--3% performance increase "
"for applications that frequently use ``%`` with strings, such as templating "
"libraries. (Implemented by Collin Winter; :issue:`5176`.)"
msgstr ""
"``%`` 的實作檢查左側操作數是否為 Python 字串並將其特殊化；對於經常使用 ``%`` "
"和字串的應用程式，例如模板庫，這會導致 1--3% 的性能提升。 （由 Collin Winter "
"實施；:issue:`5176`。）"

#: ../../whatsnew/2.7.rst:997
#, fuzzy
msgid ""
"List comprehensions with an ``if`` condition are compiled into faster "
"bytecode.  (Patch by Antoine Pitrou, back-ported to 2.7 by Jeffrey Yasskin; :"
"issue:`4715`.)"
msgstr ""
"帶有 ``if`` 條件的列表理解被編譯成更快的位元組碼。 （Antoine Pitrou 的補丁，"
"由 Jeffrey Yasskin 向後移植到 2.7；:issue:`4715`。）"

#: ../../whatsnew/2.7.rst:1001
#, fuzzy
msgid ""
"Converting an integer or long integer to a decimal string was made faster by "
"special-casing base 10 instead of using a generalized conversion function "
"that supports arbitrary bases. (Patch by Gawain Bolton; :issue:`6713`.)"
msgstr ""
"將整數或長整數轉換為十進位字串的速度通過特殊大小寫基數 10 "
"而不是使用支援任意基數的通用轉換函式變得更快。 （Gawain Bolton "
"的補丁；:issue:`6713`。）"

#: ../../whatsnew/2.7.rst:1006
#, fuzzy
msgid ""
"The :meth:`split`, :meth:`replace`, :meth:`rindex`, :meth:`rpartition`, and :"
"meth:`rsplit` methods of string-like types (strings, Unicode strings, and :"
"class:`bytearray` objects) now use a fast reverse-search algorithm instead "
"of a character-by-character scan.  This is sometimes faster by a factor of "
"10.  (Added by Florent Xicluna; :issue:`7462` and :issue:`7622`.)"
msgstr ""
"類字串型別（字串、Unicode 字串和： class:`bytearray` objects) "
"現在使用快速反向搜索演算法而不是逐字元掃描。這有時會快 10 倍。（由 Florent "
"Xicluna 新增；:issue:`7462` 和 :issue:`7622`。）"

#: ../../whatsnew/2.7.rst:1013
#, fuzzy
msgid ""
"The :mod:`pickle` and :mod:`cPickle` modules now automatically intern the "
"strings used for attribute names, reducing memory usage of the objects "
"resulting from unpickling.  (Contributed by Jake McGuire; :issue:`5084`.)"
msgstr ""
":mod:`pickle` 和 :mod:`cPickle` 模組現在會自動保留用於屬性名稱的字串，"
"從而減少因 unpickling 而產生的物件的記憶體使用量。 （由 Jake McGuire "
"提供；:issue:`5084`。）"

#: ../../whatsnew/2.7.rst:1018
#, fuzzy
msgid ""
"The :mod:`cPickle` module now special-cases dictionaries, nearly halving the "
"time required to pickle them. (Contributed by Collin Winter; :issue:`5670`.)"
msgstr ""
":mod:`cPickle` 模組現在是特殊情況字典，將它們醃製所需的時間幾乎減半。 （由 "
"Collin Winter 提供；:issue:`5670`。）"

#: ../../whatsnew/2.7.rst:1025
#, fuzzy
msgid "New and Improved Modules"
msgstr "新的和改進的模組"

#: ../../whatsnew/2.7.rst:1027
#, fuzzy
msgid ""
"As in every release, Python's standard library received a number of "
"enhancements and bug fixes.  Here's a partial list of the most notable "
"changes, sorted alphabetically by module name. Consult the :file:`Misc/NEWS` "
"file in the source tree for a more complete list of changes, or look through "
"the Subversion logs for all the details."
msgstr ""
"在每個版本中，Python 的標準庫都得到了一些增強和錯誤修復。這是最顯著更改的部分"
"列表，按模組名稱的字母順序排序。請查閱源程式碼樹中的 :file:`Misc/NEWS` "
"文件以獲得更完整的更改列表，或查看 Subversion 日誌以獲取所有詳細資訊。"

#: ../../whatsnew/2.7.rst:1033
#, fuzzy
msgid ""
"The :mod:`bdb` module's base debugging class :class:`~bdb.Bdb` gained a "
"feature for skipping modules.  The constructor now takes an iterable "
"containing glob-style patterns such as ``django.*``; the debugger will not "
"step into stack frames from a module that matches one of these patterns. "
"(Contributed by Maru Newby after a suggestion by Senthil Kumaran; :issue:"
"`5142`.)"
msgstr ""
":mod:`bdb` 模組的基礎除錯類 :class:`~bdb.Bdb` 獲得了跳過模組的功能。"
"構造函式現在採用包含 glob 樣式模式的可疊代物件，例如``django.*``；除錯器不會"
"從匹配這些模式之一的模組進入堆疊幀。 （根據 Senthil Kumaran 的建議由 Maru "
"Newby 貢獻；:issue:`5142`。）"

#: ../../whatsnew/2.7.rst:1041
#, fuzzy
msgid ""
"The :mod:`binascii` module now supports the buffer API, so it can be used "
"with :class:`memoryview` instances and other similar buffer objects. "
"(Backported from 3.x by Florent Xicluna; :issue:`7703`.)"
msgstr ""
":mod:`binascii` 模組現在支援緩衝區 API，因此它可以與 :class:`memoryview` "
"實例和其他類似的緩衝區對像一起使用。 （由 Florent Xicluna 從 3.x "
"向後移植；:issue:`7703`。）"

#: ../../whatsnew/2.7.rst:1045
#, fuzzy
msgid ""
"Updated module: the :mod:`bsddb` module has been updated from 4.7.2devel9 to "
"version 4.8.4 of `the pybsddb package <https://www.jcea.es/programacion/"
"pybsddb.htm>`__. The new version features better Python 3.x compatibility, "
"various bug fixes, and adds several new BerkeleyDB flags and methods. "
"(Updated by Jesús Cea Avión; :issue:`8156`.  The pybsddb changelog can be "
"read at https://hg.jcea.es/pybsddb/file/tip/ChangeLog.)"
msgstr ""
"更新模組：:mod:`bsddb` 模組已從 4.7.2devel9 更新到 `pybsddb 包 <https://www."
"jcea.es/programacion/pybsddb.htm>`__ 的 4.8.4 版。新版本具有更好的 Python "
"3.x 相容性、各種錯誤修復，並新增了幾個新的 BerkeleyDB 旗標和方法。 （由 "
"Jesús Cea Avión 更新；:issue:`8156`。可以在 https://hg.jcea.es/pybsddb/file/"
"tip/ChangeLog 閱讀 pybsddb 變更日誌。）"

#: ../../whatsnew/2.7.rst:1053
#, fuzzy
msgid ""
"The :mod:`bz2` module's :class:`~bz2.BZ2File` now supports the context "
"management protocol, so you can write ``with bz2.BZ2File(...) as f:``. "
"(Contributed by Hagen Fürstenau; :issue:`3860`.)"
msgstr ""
":mod:`bz2` 模組的 :class:`~bz2.BZ2File` 現在支援上下文管理協定，"
"因此您可以編寫 ``with bz2.BZ2File(...) as f:``。 （由 Hagen Fürstenau "
"提供；:issue:`3860`。）"

#: ../../whatsnew/2.7.rst:1057
#, fuzzy
msgid ""
"New class: the :class:`~collections.Counter` class in the :mod:`collections` "
"module is useful for tallying data.  :class:`~collections.Counter` instances "
"behave mostly like dictionaries but return zero for missing keys instead of "
"raising a :exc:`KeyError`:"
msgstr ""
"新類：:mod:`collections` 模組中的 :class:`~collections.Counter` "
"類可用於統計資料。 :class:`~collections.Counter` "
"實例的行為很像字典，但在缺少鍵時回傳零，而不是引發 :exc:`KeyError`："

#: ../../whatsnew/2.7.rst:1079
#, fuzzy
msgid ""
"There are three additional :class:`~collections.Counter` methods. :meth:"
"`~collections.Counter.most_common` returns the N most common elements and "
"their counts.  :meth:`~collections.Counter.elements` returns an iterator "
"over the contained elements, repeating each element as many times as its "
"count. :meth:`~collections.Counter.subtract` takes an iterable and subtracts "
"one for each element instead of adding; if the argument is a dictionary or "
"another :class:`Counter`, the counts are subtracted. ::"
msgstr ""
"還有另外三個 :class:`~collections.Counter` 方法。 :meth:`~collections.Counter"
".most_common` 回傳 N 個最常見的元素及其計數。 :meth:`~collections.Counter."
"elements` 回傳包含元素的疊代器，重複每個元素的次數與其計數相同。 "
":meth:`~collections.Counter.subtract` 接受一個可疊代物件並為每個元素減去一個"
"而不是新增；如果參數是字典或另一個 :class:`Counter`，則減去計數。 ::"

#: ../../whatsnew/2.7.rst:1102
#, fuzzy
msgid "Contributed by Raymond Hettinger; :issue:`1696199`."
msgstr "雷蒙德·海廷格供稿；  :issue:`1696199`。"

#: ../../whatsnew/2.7.rst:1106
#, fuzzy
msgid ""
"New class: :class:`~collections.OrderedDict` is described in the earlier "
"section :ref:`pep-0372`."
msgstr "新類：:class:`~collections.OrderedDict` 在前面的章節 :ref:`pep-0372` "
"中有描述。"

#: ../../whatsnew/2.7.rst:1109
#, fuzzy
msgid ""
"New method: The :class:`~collections.deque` data type now has a :meth:"
"`~collections.deque.count` method that returns the number of contained "
"elements equal to the supplied argument *x*, and a :meth:`~collections.deque."
"reverse` method that reverses the elements of the deque in-place.  :class:"
"`~collections.deque` also exposes its maximum length as the read-only :attr:"
"`~collections.deque.maxlen` attribute. (Both features added by Raymond "
"Hettinger.)"
msgstr ""
"新方法：:class:`~collections.deque` 資料型別現在有一個 :meth:`~collections."
"deque.count` 方法，它回傳等於提供的參數 *x* 的包含元素的數量，以及一個:meth "
":`~collections.deque.reverse` 方法就地反轉雙端隊列的元素。 "
":class:`~collections.deque` 還將其最大長度公開為只讀 :attr:`~collections."
"deque.maxlen` 屬性。 （這兩項功能均由 Raymond Hettinger 新增。）"

#: ../../whatsnew/2.7.rst:1117
#, fuzzy
msgid ""
"The :class:`~collections.namedtuple` class now has an optional *rename* "
"parameter. If *rename* is true, field names that are invalid because they've "
"been repeated or aren't legal Python identifiers will be renamed to legal "
"names that are derived from the field's position within the list of fields:"
msgstr ""
":class:`~collections.namedtuple` 類現在有一個可選的 *rename* 參數。如果 "
"*rename* 為真，因為重複或不合法的 Python 標識符而無效的欄位名稱將被重命名為合"
"法名稱，這些名稱源自欄位列表中的欄位位置："

#: ../../whatsnew/2.7.rst:1128
#, fuzzy
msgid "(Added by Raymond Hettinger; :issue:`1818`.)"
msgstr "（由 Raymond Hettinger 新增；:issue:`1818`。）"

#: ../../whatsnew/2.7.rst:1130
#, fuzzy
msgid ""
"Finally, the :class:`~collections.Mapping` abstract base class now returns :"
"const:`NotImplemented` if a mapping is compared to another type that isn't "
"a :class:`Mapping`. (Fixed by Daniel Stutzbach; :issue:`8729`.)"
msgstr ""
"最後，:class:`~collections.Mapping` "
"抽象基底類別現在回傳 :const:`NotImplemented` 如果將映射與另一種不是 "
":class:`Mapping` 的型別進行比較。 （由 Daniel Stutzbach "
"修復；:issue:`8729`。）"

#: ../../whatsnew/2.7.rst:1135
#, fuzzy
msgid ""
"Constructors for the parsing classes in the :mod:`ConfigParser` module now "
"take an *allow_no_value* parameter, defaulting to false; if true, options "
"without values will be allowed.  For example::"
msgstr ""
":mod:`ConfigParser` 模組中解析類的構造函式現在採用 *allow_no_value* 參數，"
"預設為 false；如果為真，則允許沒有值的選項。例如：："

#: ../../whatsnew/2.7.rst:1157
#, fuzzy
msgid "(Contributed by Mats Kindahl; :issue:`7005`.)"
msgstr "（由 Mats Kindahl 提供；:issue:`7005`。）"

#: ../../whatsnew/2.7.rst:1159
#, fuzzy
msgid ""
"Deprecated function: :func:`contextlib.nested`, which allows handling more "
"than one context manager with a single :keyword:`with` statement, has been "
"deprecated, because the :keyword:`!with` statement now supports multiple "
"context managers."
msgstr ""
"棄用函式：:func:`contextlib.nested`，它允許使用單個 :keyword:`with` "
"語句處理多個上下文管理器，已被棄用，因為 :keyword:`!with` "
"語句現在支援多個上下文管理器."

#: ../../whatsnew/2.7.rst:1164
#, fuzzy
msgid ""
"The :mod:`cookielib` module now ignores cookies that have an invalid version "
"field, one that doesn't contain an integer value.  (Fixed by John J. Lee; :"
"issue:`3924`.)"
msgstr ""
":mod:`cookielib` 模組現在忽略具有無效版本欄位的 cookie，即不包含整數值的 "
"cookie。 （由 John J. Lee 修復；:issue:`3924`。）"

#: ../../whatsnew/2.7.rst:1168
#, fuzzy
msgid ""
"The :mod:`copy` module's :func:`~copy.deepcopy` function will now correctly "
"copy bound instance methods.  (Implemented by Robert Collins; :issue:`1515`.)"
msgstr ""
":mod:`copy` 模組的 :func:`~copy.deepcopy` "
"函式現在可以正確複製綁定的實例方法。 （由 Robert Collins "
"實施；:issue:`1515`。）"

#: ../../whatsnew/2.7.rst:1172
#, fuzzy
msgid ""
"The :mod:`ctypes` module now always converts ``None`` to a C ``NULL`` "
"pointer for arguments declared as pointers.  (Changed by Thomas Heller; :"
"issue:`4606`.)  The underlying `libffi library <https://sourceware.org/"
"libffi/>`__ has been updated to version 3.0.9, containing various fixes for "
"different platforms.  (Updated by Matthias Klose; :issue:`8142`.)"
msgstr ""
":mod:`ctypes` 模組現在總是將 ``None`` 轉換為聲明為指標的參數的 C ``NULL`` "
"指標。 （由 Thomas Heller 更改；:issue:`4606`。）底層的 `libffi 庫 "
"<https://sourceware.org/libffi/>`__ 已更新到版本 3.0."
"9，包含針對不同平台的各種修復。 （由 Matthias Klose 更新；:issue:`8142`。）"

#: ../../whatsnew/2.7.rst:1179
#, fuzzy
msgid ""
"New method: the :mod:`datetime` module's :class:`~datetime.timedelta` class "
"gained a :meth:`~datetime.timedelta.total_seconds` method that returns the "
"number of seconds in the duration.  (Contributed by Brian Quinlan; :issue:"
"`5788`.)"
msgstr ""
"新方法：:mod:`datetime` 模組的 :class:`~datetime.timedelta` "
"類獲得了一個 :meth:`~datetime.timedelta.total_seconds` "
"方法，該方法回傳持續時間中的秒數。 （由 Brian Quinlan 提供；:issue:`5788`。）"

#: ../../whatsnew/2.7.rst:1183
#, fuzzy
msgid ""
"New method: the :class:`~decimal.Decimal` class gained a :meth:`~decimal."
"Decimal.from_float` class method that performs an exact conversion of a "
"floating-point number to a :class:`~decimal.Decimal`. This exact conversion "
"strives for the closest decimal approximation to the floating-point "
"representation's value; the resulting decimal value will therefore still "
"include the inaccuracy, if any. For example, ``Decimal.from_float(0.1)`` "
"returns "
"``Decimal('0.1000000000000000055511151231257827021181583404541015625')``. "
"(Implemented by Raymond Hettinger; :issue:`4796`.)"
msgstr ""
"新方法：:class:`~decimal.Decimal` 類獲得了一個 :meth:`~decimal.Decimal."
"from_float` 類方法，該方法執行浮點數到 :class:`~decimal.Decimal 的精確轉換`。"
"這種精確轉換力求最接近浮點表示值的十進位近似值；因此，生成的十進位值仍將包含"
"誤差（如果有）。例如，``Decimal.from_float(0.1)`` 回傳``Decimal('0."
"1000000000000000055511151231257827021181583404541015625')``。 （由 Raymond "
"Hettinger 實施；:issue:`4796`。）"

#: ../../whatsnew/2.7.rst:1194
#, fuzzy
msgid ""
"Comparing instances of :class:`~decimal.Decimal` with floating-point numbers "
"now produces sensible results based on the numeric values of the operands.  "
"Previously such comparisons would fall back to Python's default rules for "
"comparing objects, which produced arbitrary results based on their type.  "
"Note that you still cannot combine :class:`Decimal` and floating-point in "
"other operations such as addition, since you should be explicitly choosing "
"how to convert between float and :class:`~decimal.Decimal`.  (Fixed by Mark "
"Dickinson; :issue:`2531`.)"
msgstr ""
"將 :class:`~decimal.Decimal` "
"的實例與浮點數進行比較現在會根據操作數的數值產生合理的結果。以前，"
"此類比較會回退到 Python 用於比較物件的預設規則，這會根據物件的型別產生任意結"
"果。請注意，您仍然不能在其他操作（例如加法）中組合 Decimal 和浮點數，"
"因為您應該明確選擇如何在 float 和 :class:`~decimal.Decimal` 之間進行轉換。 （"
"由 Mark Dickinson 修復；:issue:`2531`。）"

#: ../../whatsnew/2.7.rst:1203
#, fuzzy
msgid ""
"The constructor for :class:`~decimal.Decimal` now accepts floating-point "
"numbers (added by Raymond Hettinger; :issue:`8257`) and non-European Unicode "
"characters such as Arabic-Indic digits (contributed by Mark Dickinson; :"
"issue:`6595`)."
msgstr ""
":class:`~decimal.Decimal` 的構造函式現在接受浮點數（由 Raymond Hettinger "
"新增；:issue:`8257`）和非歐洲 Unicode 字元，例如阿拉伯-印度數字（由 Mark "
"Dickinson 貢獻； :issue:`6595`)。"

#: ../../whatsnew/2.7.rst:1208
#, fuzzy
msgid ""
"Most of the methods of the :class:`~decimal.Context` class now accept "
"integers as well as :class:`~decimal.Decimal` instances; the only exceptions "
"are the :meth:`~decimal.Context.canonical` and :meth:`~decimal.Context."
"is_canonical` methods.  (Patch by Juan José Conti; :issue:`7633`.)"
msgstr ""
"大多數 :class:`~decimal.Context` 類的方法現在接受整數以及 :class:`~decimal."
"Decimal` 實例；唯一的例外是 :meth:`~decimal.Context.canonical` 和 "
":meth:`~decimal.Context.is_canonical` 方法。 （Juan José Conti "
"的補丁；:issue:`7633`。）"

#: ../../whatsnew/2.7.rst:1213
#, fuzzy
msgid ""
"When using :class:`~decimal.Decimal` instances with a string's :meth:`~str."
"format` method, the default alignment was previously left-alignment.  This "
"has been changed to right-alignment, which is more sensible for numeric "
"types.  (Changed by Mark Dickinson; :issue:`6857`.)"
msgstr ""
"當使用 :class:`~decimal.Decimal` 實例和字串的 :meth:`~str.format` "
"方法時，預設對齊方式以前是左對齊。這已更改為右對齊，這對數字型別更合理。 （"
"由 Mark Dickinson 更改；:issue:`6857`。）"

#: ../../whatsnew/2.7.rst:1218
#, fuzzy
msgid ""
"Comparisons involving a signaling NaN value (or ``sNAN``) now signal :const:"
"`InvalidOperation` instead of silently returning a true or false value "
"depending on the comparison operator.  Quiet NaN values (or ``NaN``) are now "
"hashable.  (Fixed by Mark Dickinson; :issue:`7279`.)"
msgstr ""
"涉及信號 NaN 值（或 ``sNAN``）的比較現在發出 :const:`InvalidOperation` 信號，"
"而不是根據比較運算符靜默回傳 true 或 false 值。 Quiet NaN 值（或 "
"``NaN``）現在可以散列。 （由 Mark Dickinson 修復；:issue:`7279`。）"

#: ../../whatsnew/2.7.rst:1224
#, fuzzy
msgid ""
"The :mod:`difflib` module now produces output that is more compatible with "
"modern :command:`diff`/:command:`patch` tools through one small change, "
"using a tab character instead of spaces as a separator in the header giving "
"the filename.  (Fixed by Anatoly Techtonik; :issue:`7585`.)"
msgstr ""
":mod:`difflib` "
"模組現在通過一個小的更改生成與現代 :command:`diff`/:command:`patch` "
"工具更相容的輸出，在標題中使用製表符而不是空格作為分隔符文件名。 （由 "
"Anatoly Techtonik 修復；:issue:`7585`。）"

#: ../../whatsnew/2.7.rst:1230
#, fuzzy
msgid ""
"The Distutils ``sdist`` command now always regenerates the :file:`MANIFEST` "
"file, since even if the :file:`MANIFEST.in` or :file:`setup.py` files "
"haven't been modified, the user might have created some new files that "
"should be included. (Fixed by Tarek Ziadé; :issue:`8688`.)"
msgstr ""
"Distutils ``sdist`` 命令現在總是重新生成 :file:`MANIFEST` 文件，因為即使 "
":file:`MANIFEST.in` 或 :file:`setup.py` "
"文件沒有被修改，使用者可能已經建立了一些應該包含的新文件。 （由 Tarek Ziadé "
"修復；:issue:`8688`。）"

#: ../../whatsnew/2.7.rst:1236
#, fuzzy
msgid ""
"The :mod:`doctest` module's :const:`IGNORE_EXCEPTION_DETAIL` flag will now "
"ignore the name of the module containing the exception being tested.  (Patch "
"by Lennart Regebro; :issue:`7490`.)"
msgstr ""
":mod:`doctest` 模組的 :const:`IGNORE_EXCEPTION_DETAIL` "
"旗標現在將忽略包含正在測試的例外的模組的名稱。 （Lennart Regebro "
"的補丁；:issue:`7490`。）"

#: ../../whatsnew/2.7.rst:1240
#, fuzzy
msgid ""
"The :mod:`email` module's :class:`~email.message.Message` class will now "
"accept a Unicode-valued payload, automatically converting the payload to the "
"encoding specified by :attr:`output_charset`. (Added by R. David Murray; :"
"issue:`1368247`.)"
msgstr ""
":mod:`email` 模組的 :class:`~email.message.Message` 類現在將接受 Unicode "
"值有效負載，自動將有效負載轉換為 :attr:`output_charset` 指定的編碼。 （由 R. "
"David Murray 新增；:issue:`1368247`。）"

#: ../../whatsnew/2.7.rst:1245
#, fuzzy
msgid ""
"The :class:`~fractions.Fraction` class now accepts a single float or :class:"
"`~decimal.Decimal` instance, or two rational numbers, as arguments to its "
"constructor.  (Implemented by Mark Dickinson; rationals added in :issue:"
"`5812`, and float/decimal in :issue:`8294`.)"
msgstr ""
":class:`~fractions.Fraction` 類現在接受單個浮點數或 :class:`~decimal.Decimal`"
" 實例，或兩個有理數作為其構造函式的參數。 （由 Mark Dickinson 實施；在 "
":issue:`5812` 中新增了有理數，在 :issue:`8294` 中新增了浮點數/小數。）"

#: ../../whatsnew/2.7.rst:1251
#, fuzzy
msgid ""
"Ordering comparisons (``<``, ``<=``, ``>``, ``>=``) between fractions and "
"complex numbers now raise a :exc:`TypeError`. This fixes an oversight, "
"making the :class:`~fractions.Fraction` match the other numeric types."
msgstr ""
"分數和復數之間的排序比較（``<``、``<=``、``>``、``>=``）現在引發 "
":exc:`TypeError`。這修復了一個疏忽，使 :class:`~fractions.Fraction` "
"匹配其他數字型別。"

#: ../../whatsnew/2.7.rst:1258
#, fuzzy
msgid ""
"New class: :class:`~ftplib.FTP_TLS` in the :mod:`ftplib` module provides "
"secure FTP connections using TLS encapsulation of authentication as well as "
"subsequent control and data transfers. (Contributed by Giampaolo Rodola; :"
"issue:`2054`.)"
msgstr ""
"新類：:mod:`ftplib` 模組中的新類：:class:`~ftplib.FTP_TLS` 使用 TLS "
"封裝身份驗證以及後續控制和資料傳輸來提供安全的 FTP 連接。 （由 Giampaolo "
"Rodola 提供；:issue:`2054`。）"

#: ../../whatsnew/2.7.rst:1264
#, fuzzy
msgid ""
"The :meth:`~ftplib.FTP.storbinary` method for binary uploads can now restart "
"uploads thanks to an added *rest* parameter (patch by Pablo Mouzo; :issue:"
"`6845`.)"
msgstr ""
"由於新增了 *rest* 參數，用於二進位上傳的 :meth:`~ftplib.FTP.storbinary` "
"方法現在可以重新開始上傳（Pablo Mouzo 的補丁；:issue:`6845`。）"

#: ../../whatsnew/2.7.rst:1268
#, fuzzy
msgid ""
"New class decorator: :func:`~functools.total_ordering` in the :mod:"
"`functools` module takes a class that defines an :meth:`__eq__` method and "
"one of :meth:`__lt__`, :meth:`__le__`, :meth:`__gt__`, or :meth:`__ge__`, "
"and generates the missing comparison methods.  Since the :meth:`__cmp__` "
"method is being deprecated in Python 3.x, this decorator makes it easier to "
"define ordered classes. (Added by Raymond Hettinger; :issue:`5479`.)"
msgstr ""
"新類裝飾器：:mod:`functools` 模組中的 :func:`~functools.total_ordering` "
"採用一個類，該類定義了一個 :meth:`__eq__` 方法和 :meth:`__lt__`、:meth:`__le__ "
"之一`、:meth:`__gt__` 或 :meth:`__ge__`，並生成缺少的比較方法。由於 "
":meth:`__cmp__` 方法在 Python 3.x "
"中被棄用，這個裝飾器使得定義有序類變得更容易。 （由 Raymond Hettinger "
"新增；:issue:`5479`。）"

#: ../../whatsnew/2.7.rst:1276
#, fuzzy
msgid ""
"New function: :func:`~functools.cmp_to_key` will take an old-style "
"comparison function that expects two arguments and return a new callable "
"that can be used as the *key* parameter to functions such as :func:"
"`sorted`, :func:`min` and :func:`max`, etc.  The primary intended use is to "
"help with making code compatible with Python 3.x. (Added by Raymond "
"Hettinger.)"
msgstr ""
"新函式：:func:`~functools.cmp_to_key` "
"將採用一個需要兩個參數的舊式比較函式，並回傳一個新的可呼叫函式，該函式可用作 "
":func:`sorted` 等函式的 *key* 參數， :func:`min` 和 :func:`max` 等。"
"主要用途是幫助使程式碼與 Python 3.x 相容。 （由 Raymond Hettinger 新增。）"

#: ../../whatsnew/2.7.rst:1283
#, fuzzy
msgid ""
"New function: the :mod:`gc` module's :func:`~gc.is_tracked` returns true if "
"a given instance is tracked by the garbage collector, false otherwise. "
"(Contributed by Antoine Pitrou; :issue:`4688`.)"
msgstr ""
"新函式：:mod:`gc` 模組的 :func:`~gc.is_tracked` "
"如果給定實例被垃圾收集器跟踪，則回傳 true，否則回傳 false。 （由 Antoine "
"Pitrou 提供；:issue:`4688`。）"

#: ../../whatsnew/2.7.rst:1287
#, fuzzy
msgid ""
"The :mod:`gzip` module's :class:`~gzip.GzipFile` now supports the context "
"management protocol, so you can write ``with gzip.GzipFile(...) as f:`` "
"(contributed by Hagen Fürstenau; :issue:`3860`), and it now implements the :"
"class:`io.BufferedIOBase` ABC, so you can wrap it with :class:`io."
"BufferedReader` for faster processing (contributed by Nir Aides; :issue:"
"`7471`). It's also now possible to override the modification time recorded "
"in a gzipped file by providing an optional timestamp to the constructor.  "
"(Contributed by Jacques Frechet; :issue:`4272`.)"
msgstr ""
":mod:`gzip` 模組的 :class:`~gzip.GzipFile` 現在支援上下文管理協定，"
"因此您可以編寫 ``with gzip.GzipFile(...) as f:``（由 Hagen Fürstenau 提供； "
":issue:`3860`)，它現在實作了 :class:`io.BufferedIOBase` "
"ABC，所以你可以用 :class:`io.BufferedReader` 包裝它以加快處理速度（由 Nir "
"Aides 提供；:issue:` 7471`）。"
"現在還可以通過向構造函式提供可選的時間戳來覆蓋 gzip 文件中記錄的修改時間。 （"
"由 Jacques Frechet 提供；:issue:`4272`。）"

#: ../../whatsnew/2.7.rst:1297
#, fuzzy
msgid ""
"Files in gzip format can be padded with trailing zero bytes; the :mod:`gzip` "
"module will now consume these trailing bytes.  (Fixed by Tadek Pietraszek "
"and Brian Curtin; :issue:`2846`.)"
msgstr ""
"gzip 格式的文件可以用尾隨零位元組填充； :mod:`gzip` "
"模組現在將使用這些尾隨位元組。 （由 Tadek Pietraszek 和 Brian Curtin "
"修復；:issue:`2846`。）"

#: ../../whatsnew/2.7.rst:1301
#, fuzzy
msgid ""
"New attribute: the :mod:`hashlib` module now has an :attr:`~hashlib.hashlib."
"algorithms` attribute containing a tuple naming the supported algorithms. In "
"Python 2.7, ``hashlib.algorithms`` contains ``('md5', 'sha1', 'sha224', "
"'sha256', 'sha384', 'sha512')``. (Contributed by Carl Chenet; :issue:`7418`.)"
msgstr ""
"新屬性：:mod:`hashlib` 模組現在有一個 :attr:`~hashlib.hashlib.algorithms` "
"屬性包含一個命名支援演算法的元組。在 Python 2.7 中，``hashlib.algorithms`` "
"包含``('md5', 'sha1', 'sha224', 'sha256', 'sha384', 'sha512')``。 （由 Carl "
"Chenet 提供；:issue:`7418`。）"

#: ../../whatsnew/2.7.rst:1307
#, fuzzy
msgid ""
"The default :class:`~httplib.HTTPResponse` class used by the :mod:`httplib` "
"module now supports buffering, resulting in much faster reading of HTTP "
"responses. (Contributed by Kristján Valur Jónsson; :issue:`4879`.)"
msgstr ""
":mod:`httplib` 模組使用的預設 :class:`~httplib.HTTPResponse` 類現在支援緩衝，"
"從而可以更快地讀取 HTTP 響應。 （由 Kristján Valur Jónsson "
"提供；:issue:`4879`。）"

#: ../../whatsnew/2.7.rst:1311
#, fuzzy
msgid ""
"The :class:`~httplib.HTTPConnection` and :class:`~httplib.HTTPSConnection` "
"classes now support a *source_address* parameter, a ``(host, port)`` 2-tuple "
"giving the source address that will be used for the connection. (Contributed "
"by Eldon Ziegler; :issue:`3972`.)"
msgstr ""
":class:`~httplib.HTTPConnection` 和 :class:`~httplib.HTTPSConnection` "
"類現在支援 *source_address* 參數，一個 ``(host, port)`` "
"二元組給出將要使用的源地址用於連接。 （由 Eldon Ziegler "
"提供；:issue:`3972`。）"

#: ../../whatsnew/2.7.rst:1316
#, fuzzy
msgid ""
"The :mod:`ihooks` module now supports relative imports.  Note that :mod:"
"`ihooks` is an older module for customizing imports, superseded by the :mod:"
"`imputil` module added in Python 2.0. (Relative import support added by Neil "
"Schemenauer.)"
msgstr ""
":mod:`ihooks` 模組現在支援相對導入。請注意 :mod:`ihooks` "
"是一個用於自定義導入的舊模組，已被 Python 2.0 中新增的 :mod:`imputil` "
"模組取代。 （Neil Schenmauer 新增的相對導入支援。）"

#: ../../whatsnew/2.7.rst:1323
#, fuzzy
msgid ""
"The :mod:`imaplib` module now supports IPv6 addresses. (Contributed by Derek "
"Morr; :issue:`1655`.)"
msgstr ":mod:`imaplib` 模組現在支援 IPv6 地址。 （由 Derek Morr "
"提供；:issue:`1655`。）"

#: ../../whatsnew/2.7.rst:1326
#, fuzzy
msgid ""
"New function: the :mod:`inspect` module's :func:`~inspect.getcallargs` takes "
"a callable and its positional and keyword arguments, and figures out which "
"of the callable's parameters will receive each argument, returning a "
"dictionary mapping argument names to their values.  For example::"
msgstr ""
"新函式：:mod:`inspect` 模組的 :func:`~inspect.getcallargs` 接受一個可呼叫物件"
"及其位置參數和關鍵字參數，並確定哪個可呼叫物件的參數將接收每個參數，回傳一個"
"字典映射參數名稱到他們的價值觀。例如：："

#: ../../whatsnew/2.7.rst:1343
#, fuzzy
msgid "Contributed by George Sakkis; :issue:`3135`."
msgstr "由喬治·薩基斯供稿；  :issue:`3135`。"

#: ../../whatsnew/2.7.rst:1345
#, fuzzy
msgid ""
"Updated module: The :mod:`io` library has been upgraded to the version "
"shipped with Python 3.1.  For 3.1, the I/O library was entirely rewritten in "
"C and is 2 to 20 times faster depending on the task being performed.  The "
"original Python version was renamed to the :mod:`_pyio` module."
msgstr ""
"更新模組：:mod:`io` 庫已升級到 Python 3.1 附帶的版本。對於 3.1，I/O 庫完全用 "
"C 語言重寫，速度提高了 2 到 20 倍，具體取決於正在執行的任務。原來的 Python "
"版本被重命名為 :mod:`_pyio` 模組。"

#: ../../whatsnew/2.7.rst:1350
#, fuzzy
msgid ""
"One minor resulting change: the :class:`io.TextIOBase` class now has an :"
"attr:`errors` attribute giving the error setting used for encoding and "
"decoding errors (one of ``'strict'``, ``'replace'``, ``'ignore'``)."
msgstr ""
"一個小的由此產生的變化：:class:`io.TextIOBase` 類現在有一個 :attr:`errors` "
"屬性給出了用於編碼和解碼錯誤的錯誤設定（``'strict'``、``'replace'``、``'ignore'``）。"

#: ../../whatsnew/2.7.rst:1355
#, fuzzy
msgid ""
"The :class:`io.FileIO` class now raises an :exc:`OSError` when passed an "
"invalid file descriptor.  (Implemented by Benjamin Peterson; :issue:"
"`4991`.)  The :meth:`~io.IOBase.truncate` method now preserves the file "
"position; previously it would change the file position to the end of the new "
"file.  (Fixed by Pascal Chambon; :issue:`6939`.)"
msgstr ""
":class:`io.FileIO` 類現在在傳遞無效文件描述器時引發 :exc:`OSError`。 （由 "
"Benjamin Peterson 實施；:issue:`4991`。） :meth:`~io.IOBase.truncate` "
"方法現在保留文件位置；以前它會將文件位置更改為新文件的末尾。 （由 Pascal "
"Chambon 修復；:issue:`6939`。）"

#: ../../whatsnew/2.7.rst:1361
#, fuzzy
msgid ""
"New function: ``itertools.compress(data, selectors)`` takes two iterators.  "
"Elements of *data* are returned if the corresponding value in *selectors* is "
"true::"
msgstr ""
"新功能：``itertools.compress(data, selectors)`` 採用兩個疊代器。如果 "
"*selectors* 中的對應值為真，則回傳 *data* 的元素::"

#: ../../whatsnew/2.7.rst:1370
#, fuzzy
msgid ""
"New function: ``itertools.combinations_with_replacement(iter, r)`` returns "
"all the possible *r*-length combinations of elements from the iterable "
"*iter*.  Unlike :func:`~itertools.combinations`, individual elements can be "
"repeated in the generated combinations::"
msgstr ""
"新功能：``itertools.combinations_with_replacement(iter, r)`` 回傳可疊代 "
"*iter* 中元素的所有可能的 *r* 長度組合。與 :func:`~itertools.combinations` "
"不同，單個元素可以在生成的組合中重複："

#: ../../whatsnew/2.7.rst:1379
#, fuzzy
msgid ""
"Note that elements are treated as unique depending on their position in the "
"input, not their actual values."
msgstr "請注意，元素被視為唯一取決於它們在輸入中的位置，而不是它們的實際值。"

#: ../../whatsnew/2.7.rst:1382
#, fuzzy
msgid ""
"The :func:`itertools.count` function now has a *step* argument that allows "
"incrementing by values other than 1.  :func:`~itertools.count` also now "
"allows keyword arguments, and using non-integer values such as floats or :"
"class:`~decimal.Decimal` instances.  (Implemented by Raymond Hettinger; :"
"issue:`5032`.)"
msgstr ""
":func:`itertools.count` 函式現在有一個 *step* 參數，允許按 1 "
"以外的值遞增。:func:`~itertools.count` 現在還允許關鍵字參數，並使用非整數值，"
"例如浮點數或 :class:`~decimal.Decimal` 實例。 （由 Raymond Hettinger "
"實施；:issue:`5032`。）"

#: ../../whatsnew/2.7.rst:1388
#, fuzzy
msgid ""
":func:`itertools.combinations` and :func:`itertools.product` previously "
"raised :exc:`ValueError` for values of *r* larger than the input iterable.  "
"This was deemed a specification error, so they now return an empty "
"iterator.  (Fixed by Raymond Hettinger; :issue:`4816`.)"
msgstr ""
":func:`itertools.combinations` 和 :func:`itertools.product` 之前針對 *r* "
"大於輸入可疊代值的值引發 "
":exc:`ValueError`。這被認為是規範錯誤，因此他們現在回傳一個空疊代器。 （由 "
"Raymond Hettinger 修復；:issue:`4816`。）"

#: ../../whatsnew/2.7.rst:1393
#, fuzzy
msgid ""
"Updated module: The :mod:`json` module was upgraded to version 2.0.9 of the "
"simplejson package, which includes a C extension that makes encoding and "
"decoding faster. (Contributed by Bob Ippolito; :issue:`4136`.)"
msgstr ""
"更新的模組：:mod:`json` 模組已升級到 simplejson 包的 2.0.9 版本，"
"其中包含一個 C 擴充，可以加快編碼和解碼速度。 （由 Bob Ippolito "
"提供；:issue:`4136`。）"

#: ../../whatsnew/2.7.rst:1398
#, fuzzy
msgid ""
"To support the new :class:`collections.OrderedDict` type, :func:`json.load` "
"now has an optional *object_pairs_hook* parameter that will be called with "
"any object literal that decodes to a list of pairs. (Contributed by Raymond "
"Hettinger; :issue:`5381`.)"
msgstr ""
"為了支援新的 :class:`collections.OrderedDict` 型別，:func:`json.load` "
"現在有一個可選的 *object_pairs_hook* "
"參數，該參數將與解碼為對列表的任何物件文字一起呼叫。 （由 Raymond Hettinger "
"提供；:issue:`5381`。）"

#: ../../whatsnew/2.7.rst:1403
#, fuzzy
msgid ""
"The :mod:`mailbox` module's :class:`~mailbox.Maildir` class now records the "
"timestamp on the directories it reads, and only re-reads them if the "
"modification time has subsequently changed.  This improves performance by "
"avoiding unneeded directory scans.  (Fixed by A.M. Kuchling and Antoine "
"Pitrou; :issue:`1607951`, :issue:`6896`.)"
msgstr ""
":mod:`mailbox` 模組的 :class:`~mailbox.Maildir` 類現在記錄它讀取的目錄的時間"
"戳，並且只有在修改時間隨後發生變化時才重新讀取它們。這通過避免不必要的目錄掃"
"描來提高性能。 （由 A.M. Kuchling 和 Antoine Pitrou 修復；:issue:`1607951`, "
":issue:`6896`。）"

#: ../../whatsnew/2.7.rst:1409
#, fuzzy
msgid ""
"New functions: the :mod:`math` module gained :func:`~math.erf` and :func:"
"`~math.erfc` for the error function and the complementary error function, :"
"func:`~math.expm1` which computes ``e**x - 1`` with more precision than "
"using :func:`~math.exp` and subtracting 1, :func:`~math.gamma` for the Gamma "
"function, and :func:`~math.lgamma` for the natural log of the Gamma "
"function. (Contributed by Mark Dickinson and nirinA raseliarison; :issue:"
"`3366`.)"
msgstr ""
"新函式：:mod:`math` 模組獲得了 :func:`~math.erf` 和 :func:`~math.erfc` "
"用於誤差函式和互補誤差函式 :func:`~math.expm1`它計算 ``e**x - 1`` 比使用 "
":func:`~math.exp` 和減去 1、Gamma 函式的 :func:`~math.gamma` 和 :func:`~ "
"更精確math.lgamma` 用於 Gamma 函式的自然對數。 （由 Mark Dickinson 和 nirinA "
"raseliarison 提供；:issue:`3366`。）"

#: ../../whatsnew/2.7.rst:1417
#, fuzzy
msgid ""
"The :mod:`multiprocessing` module's :class:`Manager*` classes can now be "
"passed a callable that will be called whenever a subprocess is started, "
"along with a set of arguments that will be passed to the callable. "
"(Contributed by lekma; :issue:`5585`.)"
msgstr ""
":mod:`multiprocessing` 模組的 :class:`Manager*` 類現在可以傳遞一個可呼叫物件"
"，每當子行程啟動時都會呼叫該可呼叫物件，以及一組將傳遞給可呼叫物件的參數。 （"
"由 lekma 提供；:issue:`5585`。）"

#: ../../whatsnew/2.7.rst:1423
#, fuzzy
msgid ""
"The :class:`~multiprocessing.Pool` class, which controls a pool of worker "
"processes, now has an optional *maxtasksperchild* parameter.  Worker "
"processes will perform the specified number of tasks and then exit, causing "
"the :class:`~multiprocessing.Pool` to start a new worker.  This is useful if "
"tasks may leak memory or other resources, or if some tasks will cause the "
"worker to become very large. (Contributed by Charles Cazabon; :issue:`6963`.)"
msgstr ""
"控制工作行程池的 :class:`~multiprocessing.Pool` 類現在有一個可選的 "
"*maxtasksperchild* "
"參數。工作行程將執行指定數量的任務，然後退出，導致 :class:`~multiprocessing."
"Pool` 啟動一個新的工作行程。如果任務可能會洩漏記憶體或其他資源，"
"或者如果某些任務會導致 worker 變得非常大，這將很有用。 （由 Charles Cazabon "
"提供；:issue:`6963`。）"

#: ../../whatsnew/2.7.rst:1431
#, fuzzy
msgid ""
"The :mod:`nntplib` module now supports IPv6 addresses. (Contributed by Derek "
"Morr; :issue:`1664`.)"
msgstr ":mod:`nntplib` 模組現在支援 IPv6 地址。 （由 Derek Morr "
"提供；:issue:`1664`。）"

#: ../../whatsnew/2.7.rst:1434
#, fuzzy
msgid ""
"New functions: the :mod:`os` module wraps the following POSIX system calls: :"
"func:`~os.getresgid` and :func:`~os.getresuid`, which return the real, "
"effective, and saved GIDs and UIDs; :func:`~os.setresgid` and :func:`~os."
"setresuid`, which set real, effective, and saved GIDs and UIDs to new "
"values; :func:`~os.initgroups`, which initialize the group access list for "
"the current process.  (GID/UID functions contributed by Travis H.; :issue:"
"`6508`.  Support for initgroups added by Jean-Paul Calderone; :issue:`7333`.)"
msgstr ""
"新功能：:mod:`os` 模組包裝了以下 POSIX 系統呼叫：:func:`~os.getresgid` 和 "
":func:`~os.getresuid`，它們回傳真實的、有效的和保存的 GID 和 UID ; :func:`~os"
".setresgid` 和 :func:`~os.setresuid`，將真實的、有效的和保存的 GID 和 UID "
"設定為新值； :func:`~os.initgroups`，為當前行程初始化組訪問列表。 （GID/UID "
"函式由 Travis H. 貢獻；:issue:`6508`。支援由 Jean-Paul Calderone "
"新增；:issue:`7333`。）"

#: ../../whatsnew/2.7.rst:1444
#, fuzzy
msgid ""
"The :func:`os.fork` function now re-initializes the import lock in the child "
"process; this fixes problems on Solaris when :func:`~os.fork` is called from "
"a thread.  (Fixed by Zsolt Cserna; :issue:`7242`.)"
msgstr ""
":func:`os.fork` 函式現在重新初始化子行程中的導入鎖；這修復了從執行緒呼叫 "
":func:`~os.fork` 時 Solaris 上的問題。 （由 Zsolt Cserna "
"修復；:issue:`7242`。）"

#: ../../whatsnew/2.7.rst:1448
#, fuzzy
msgid ""
"In the :mod:`os.path` module, the :func:`~os.path.normpath` and :func:`~os."
"path.abspath` functions now preserve Unicode; if their input path is a "
"Unicode string, the return value is also a Unicode string. (:meth:`~os.path."
"normpath` fixed by Matt Giuca in :issue:`5827`; :meth:`~os.path.abspath` "
"fixed by Ezio Melotti in :issue:`3426`.)"
msgstr ""
"在 :mod:`os.path` 模組中，:func:`~os.path.normpath` 和 :func:`~os.path."
"abspath` 函式現在保留 Unicode；如果它們的輸入路徑是 Unicode 字串，"
"則回傳值也是 Unicode 字串。 （:meth:`~os.path.normpath` 由 Matt Giuca 在 "
":issue:`5827` 中修復； :meth:`~os.path.abspath` 由 Ezio Melotti 在 "
":issue:`3426` 中修復。）"

#: ../../whatsnew/2.7.rst:1454
#, fuzzy
msgid ""
"The :mod:`pydoc` module now has help for the various symbols that Python "
"uses.  You can now do ``help('<<')`` or ``help('@')``, for example. "
"(Contributed by David Laban; :issue:`4739`.)"
msgstr ""
":mod:`pydoc` 模組現在對 Python 使用的各種符號提供幫助。例如，您現在可以執行 "
"``help('<<')`` 或 ``help('@')``。 （由 David Laban 提供；:issue:`4739`。）"

#: ../../whatsnew/2.7.rst:1458
#, fuzzy
msgid ""
"The :mod:`re` module's :func:`~re.split`, :func:`~re.sub`, and :func:`~re."
"subn` now accept an optional *flags* argument, for consistency with the "
"other functions in the module.  (Added by Gregory P. Smith.)"
msgstr ""
":mod:`re` 模組的 :func:`~re.split`、:func:`~re.sub` 和 :func:`~re.subn` "
"現在接受可選的 *flags* 參數，以與模組中的其他功能。 （由 Gregory P. Smith "
"新增。）"

#: ../../whatsnew/2.7.rst:1462
#, fuzzy
msgid ""
"New function: :func:`~runpy.run_path` in the :mod:`runpy` module will "
"execute the code at a provided *path* argument.  *path* can be the path of a "
"Python source file (:file:`example.py`), a compiled bytecode file (:file:"
"`example.pyc`), a directory (:file:`./package/`), or a zip archive (:file:"
"`example.zip`).  If a directory or zip path is provided, it will be added to "
"the front of ``sys.path`` and the module :mod:`__main__` will be imported.  "
"It's expected that the directory or zip contains a :file:`__main__.py`; if "
"it doesn't, some other :file:`__main__.py` might be imported from a location "
"later in ``sys.path``.  This makes more of the machinery of :mod:`runpy` "
"available to scripts that want to mimic the way Python's command line "
"processes an explicit path name. (Added by Nick Coghlan; :issue:`6816`.)"
msgstr ""
"新功能：:mod:`runpy` 模組中的 :func:`~runpy.run_path` 將在提供的 *path* "
"參數處執行程式碼。 *path* 可以是 Python 源文件（:file:`example."
"py`）、編譯後的位元組碼文件（:file:`example.pyc`）、目錄（:file:`./package/"
"`）的路徑)，或 zip 存檔 (:file:`example.zip`)。如果提供了目錄或 zip 路徑，"
"它將被新增到 ``sys.path`` 的前面，並且模組 :mod:`__main__` 將被導入。"
"預計該目錄或 zip 包含一個 :file:`__main__.py`；如果沒有，一些其他的 "
":file:`__main__.py` 可能會從稍後在 ``sys.path`` 中的某個位置導入。這使得 "
":mod:`runpy` 的更多機制可用於想要模仿 Python 命令列處理顯式路徑名方式的腳本。"
" （由 Nick Coghlan 新增；:issue:`6816`。）"

#: ../../whatsnew/2.7.rst:1476
#, fuzzy
msgid ""
"New function: in the :mod:`shutil` module, :func:`~shutil.make_archive` "
"takes a filename, archive type (zip or tar-format), and a directory path, "
"and creates an archive containing the directory's contents. (Added by Tarek "
"Ziadé.)"
msgstr ""
"新功能：在 :mod:`shutil` 模組中，:func:`~shutil.make_archive` "
"採用文件名、存檔型別（zip 或 tar 格式）和目錄路徑，並建立包含目錄內容的存檔。"
" （由 Tarek Ziadé 新增。）"

#: ../../whatsnew/2.7.rst:1481
#, fuzzy
msgid ""
":mod:`shutil`'s :func:`~shutil.copyfile` and :func:`~shutil.copytree` "
"functions now raise a :exc:`~shutil.SpecialFileError` exception when asked "
"to copy a named pipe.  Previously the code would treat named pipes like a "
"regular file by opening them for reading, and this would block "
"indefinitely.  (Fixed by Antoine Pitrou; :issue:`3002`.)"
msgstr ""
":mod:`shutil` 的 :func:`~shutil.copyfile` 和 :func:`~shutil.copytree` "
"函式現在在被要求復制命名管道時引發 :exc:`~shutil.SpecialFileError` 例外。以前"
"，程式碼會將命名管道視為常規文件，打開它們進行讀取，這會無限期地阻塞。 （由 "
"Antoine Pitrou 修復；:issue:`3002`。）"

#: ../../whatsnew/2.7.rst:1487
#, fuzzy
msgid ""
"The :mod:`signal` module no longer re-installs the signal handler unless "
"this is truly necessary, which fixes a bug that could make it impossible to "
"catch the EINTR signal robustly.  (Fixed by Charles-Francois Natali; :issue:"
"`8354`.)"
msgstr ""
":mod:`signal` 模組不再重新安裝信號處理程式，除非確實有必要，"
"這修復了一個可能導致無法可靠地捕獲 EINTR 信號的錯誤。 （由 Charles-Francois "
"Natali 修復；:issue:`8354`。）"

#: ../../whatsnew/2.7.rst:1492
#, fuzzy
msgid ""
"New functions: in the :mod:`site` module, three new functions return various "
"site- and user-specific paths. :func:`~site.getsitepackages` returns a list "
"containing all global site-packages directories, :func:`~site."
"getusersitepackages` returns the path of the user's site-packages directory, "
"and :func:`~site.getuserbase` returns the value of the :envvar:`USER_BASE` "
"environment variable, giving the path to a directory that can be used to "
"store data. (Contributed by Tarek Ziadé; :issue:`6693`.)"
msgstr ""
"新功能：在 :mod:`site` 模組中，三個新功能回傳各種特定於站點和使用者的路徑。 "
":func:`~site.getsitepackages` 回傳包含所有全局站點包目錄的列表，:func:`~site."
"getusersitepackages` 回傳使用者站點包目錄的路徑，以及 :func:`~site."
"getuserbase`回傳 USER_BASE 環境變數的值，給出可用於儲存資料的目錄的路徑。 （"
"由 Tarek Ziadé 提供；:issue:`6693`。）"

#: ../../whatsnew/2.7.rst:1503
#, fuzzy
msgid ""
"The :mod:`site` module now reports exceptions occurring when the :mod:"
"`sitecustomize` module is imported, and will no longer catch and swallow "
"the :exc:`KeyboardInterrupt` exception.  (Fixed by Victor Stinner; :issue:"
"`3137`.)"
msgstr ""
":mod:`site` 模組現在報告導入 :mod:`sitecustomize` 模組時發生的例外，"
"並且將不再捕獲併吞下 :exc:`KeyboardInterrupt` 例外。 （由 Victor Stinner "
"修復；:issue:`3137`。）"

#: ../../whatsnew/2.7.rst:1508
#, fuzzy
msgid ""
"The :func:`~socket.create_connection` function gained a *source_address* "
"parameter, a ``(host, port)`` 2-tuple giving the source address that will be "
"used for the connection. (Contributed by Eldon Ziegler; :issue:`3972`.)"
msgstr ""
":func:`~socket.create_connection` 函式獲得了一個 *source_address* 參數，一個 "
"``(host, port)`` 二元組給出了將用於連接的源地址。 （由 Eldon Ziegler "
"提供；:issue:`3972`。）"

#: ../../whatsnew/2.7.rst:1513
#, fuzzy
msgid ""
"The :meth:`~socket.socket.recv_into` and :meth:`~socket.socket."
"recvfrom_into` methods will now write into objects that support the buffer "
"API, most usefully the :class:`bytearray` and :class:`memoryview` objects.  "
"(Implemented by Antoine Pitrou; :issue:`8104`.)"
msgstr ""
":meth:`~socket.socket.recv_into` 和 :meth:`~socket.socket.recvfrom_into` "
"方法現在將寫入支援緩衝區 API 的物件，最有用的是 :class:`bytearray` 和 "
":class:`記憶體視圖物件。 （由 Antoine Pitrou 實施；:issue:`8104`。）"

#: ../../whatsnew/2.7.rst:1518
#, fuzzy
msgid ""
"The :mod:`SocketServer` module's :class:`~SocketServer.TCPServer` class now "
"supports socket timeouts and disabling the Nagle algorithm. The :attr:"
"`~SocketServer.TCPServer.disable_nagle_algorithm` class attribute defaults "
"to ``False``; if overridden to be true, new request connections will have "
"the TCP_NODELAY option set to prevent buffering many small sends into a "
"single TCP packet. The :attr:`~SocketServer.BaseServer.timeout` class "
"attribute can hold a timeout in seconds that will be applied to the request "
"socket; if no request is received within that time, :meth:`~SocketServer."
"BaseServer.handle_timeout` will be called and :meth:`~SocketServer."
"BaseServer.handle_request` will return. (Contributed by Kristján Valur "
"Jónsson; :issue:`6192` and :issue:`6267`.)"
msgstr ""
":mod:`SocketServer` 模組的 :class:`~SocketServer.TCPServer` "
"類現在支援 socket 超時和禁用 Nagle 演算法。 :attr:`~SocketServer.TCPServer."
"disable_nagle_algorithm` 類屬性預設為 ``False``；如果重寫為真，"
"新請求連接將設定 TCP_NODELAY 選項以防止將許多小發送緩衝到單個 TCP 資料包中。 "
":attr:`~SocketServer.BaseServer.timeout` 類屬性可以保存將應用於請求 socket 的超"
"時秒數；如果在這段時間內沒有收到請求，:meth:`~SocketServer.BaseServer."
"handle_timeout` 將被呼叫並且 :meth:`~SocketServer.BaseServer.handle_request` "
"將回傳。 （由 Kristján Valur Jónsson 提供；:issue:`6192` 和 :issue:`6267`。）"

#: ../../whatsnew/2.7.rst:1530
#, fuzzy
msgid ""
"Updated module: the :mod:`sqlite3` module has been updated to version 2.6.0 "
"of the `pysqlite package <https://github.com/ghaering/pysqlite>`__. Version "
"2.6.0 includes a number of bugfixes, and adds the ability to load SQLite "
"extensions from shared libraries. Call the ``enable_load_extension(True)`` "
"method to enable extensions, and then call :meth:`~sqlite3.Connection."
"load_extension` to load a particular shared library. (Updated by Gerhard "
"Häring.)"
msgstr ""
"更新模組：:mod:`sqlite3` 模組已更新為 `pysqlite 包 <https://github.com/"
"ghaering/pysqlite>`__ 的 2.6.0 版。 2.6.0 版包括一些錯誤修復，"
"並增加了從共享庫加載 SQLite 擴充的能力。呼叫 ``enable_load_extension(True)`` "
"方法啟用擴充，然後呼叫 :meth:`~sqlite3.Connection.load_extension` "
"加載特定的共享庫。 （由 Gerhard Häring 更新。）"

#: ../../whatsnew/2.7.rst:1537
#, fuzzy
msgid ""
"The :mod:`ssl` module's :class:`~ssl.SSLSocket` objects now support the "
"buffer API, which fixed a test suite failure (fix by Antoine Pitrou; :issue:"
"`7133`) and automatically set OpenSSL's :c:macro:`SSL_MODE_AUTO_RETRY`, "
"which will prevent an error code being returned from :meth:`recv` operations "
"that trigger an SSL renegotiation (fix by Antoine Pitrou; :issue:`8222`)."
msgstr ""
":mod:`ssl` 模組的 :class:`~ssl.SSLSocket` 物件現在支援緩衝區 "
"API，它修復了測試套件失敗（由 Antoine Pitrou 修復；:issue:`7133`）並自動設定 "
"OpenSSL 的:c: macro:`SSL_MODE_AUTO_RETRY`，這將防止從觸發 SSL 重新協商的 "
"recv 操作回傳錯誤程式碼（Antoine Pitrou 修復；問題：8222）。"

#: ../../whatsnew/2.7.rst:1544
#, fuzzy
msgid ""
"The :func:`ssl.wrap_socket` constructor function now takes a *ciphers* "
"argument that's a string listing the encryption algorithms to be allowed; "
"the format of the string is described `in the OpenSSL documentation <https://"
"www.openssl.org/docs/man1.0.2/man1/ciphers.html>`__. (Added by Antoine "
"Pitrou; :issue:`8322`.)"
msgstr ""
":func:`ssl.wrap_socket` 構造函式現在接受一個 *ciphers* "
"參數，該參數是一個字串，列出了允許的加密演算法；字串的格式在 `OpenSSL 文檔 "
"<https://www.openssl.org/docs/man1.0.2/man1/ciphers.html>`__ 中描述。 （由 "
"Antoine Pitrou 新增；:issue:`8322`。）"

#: ../../whatsnew/2.7.rst:1551
#, fuzzy
msgid ""
"Another change makes the extension load all of OpenSSL's ciphers and digest "
"algorithms so that they're all available.  Some SSL certificates couldn't be "
"verified, reporting an \"unknown algorithm\" error.  (Reported by Beda "
"Kosata, and fixed by Antoine Pitrou; :issue:`8484`.)"
msgstr ""
"另一個變化是使擴充加載所有 OpenSSL 的密碼和摘要演算法，以便它們都可用。"
"無法驗證某些 SSL 證書，報告“未知演算法”錯誤。 （由 Beda Kosata 報告，由 "
"Antoine Pitrou 修復；:issue:`8484`。）"

#: ../../whatsnew/2.7.rst:1557
#, fuzzy
msgid ""
"The version of OpenSSL being used is now available as the module attributes :"
"data:`ssl.OPENSSL_VERSION` (a string), :data:`ssl.OPENSSL_VERSION_INFO` (a 5-"
"tuple), and :data:`ssl.OPENSSL_VERSION_NUMBER` (an integer).  (Added by "
"Antoine Pitrou; :issue:`8321`.)"
msgstr ""
"正在使用的 OpenSSL 版本現在作為模組屬性可用 :data:`ssl."
"OPENSSL_VERSION`（一個字串）、:data:`ssl.OPENSSL_VERSION_INFO`（一個 5 元組）"
"和 :data:`ssl.OPENSSL_VERSION_NUMBER` （整數）。 （由 Antoine Pitrou "
"新增；:issue:`8321`。）"

#: ../../whatsnew/2.7.rst:1563
#, fuzzy
msgid ""
"The :mod:`struct` module will no longer silently ignore overflow errors when "
"a value is too large for a particular integer format code (one of "
"``bBhHiIlLqQ``); it now always raises a :exc:`struct.error` exception.  "
"(Changed by Mark Dickinson; :issue:`1523`.)  The :func:`~struct.pack` "
"function will also attempt to use :meth:`__index__` to convert and pack non-"
"integers before trying the :meth:`__int__` method or reporting an error. "
"(Changed by Mark Dickinson; :issue:`8300`.)"
msgstr ""
"當值對於特定整數格式程式碼（``bBhHiIlLqQ`` 之一）來說太大時，struct "
"模組將不再靜默忽略溢出錯誤；它現在總是引發 :exc:`struct.error` 例外。 （由 "
"Mark Dickinson 更改；:issue:`1523`。） :func:`~struct.pack` 函式還將嘗試使用 "
":meth:`__index__` 在嘗試 :meth:` 之前轉換和打包非整數__int__` 方法或報錯。 （"
"由 Mark Dickinson 更改；:issue:`8300`。）"

#: ../../whatsnew/2.7.rst:1572
#, fuzzy
msgid ""
"New function: the :mod:`subprocess` module's :func:`~subprocess."
"check_output` runs a command with a specified set of arguments and returns "
"the command's output as a string when the command runs without error, or "
"raises a :exc:`~subprocess.CalledProcessError` exception otherwise."
msgstr ""
"新功能：:mod:`subprocess` 模組的 :func:`~subprocess.check_output` "
"運行帶有指定參數集的命令，並在命令運行無誤時將命令的輸出作為字串回傳，"
"或者引發 :exc: `~subprocess.CalledProcessError` 否則例外。"

#: ../../whatsnew/2.7.rst:1587
#, fuzzy
msgid "(Contributed by Gregory P. Smith.)"
msgstr "（由 Gregory P. Smith 提供。）"

#: ../../whatsnew/2.7.rst:1589
#, fuzzy
msgid ""
"The :mod:`subprocess` module will now retry its internal system calls on "
"receiving an :const:`EINTR` signal.  (Reported by several people; final "
"patch by Gregory P. Smith in :issue:`1068268`.)"
msgstr ""
":mod:`subprocess` 模組現在將在接收到 :const:`EINTR` 信號時重試其內部系統呼叫。"
" （由幾個人報告；Gregory P. Smith 在 :issue:`1068268` 中的最終補丁。）"

#: ../../whatsnew/2.7.rst:1593
#, fuzzy
msgid ""
"New function: :func:`~symtable.Symbol.is_declared_global` in the :mod:"
"`symtable` module returns true for variables that are explicitly declared to "
"be global, false for ones that are implicitly global. (Contributed by Jeremy "
"Hylton.)"
msgstr ""
"新函式：:mod:`symtable` 模組中的 :func:`~symtable.Symbol.is_declared_global` "
"為顯式聲明為全局的變數回傳 true，為隱式全局的變數回傳 false。 "
"（由傑里米·希爾頓提供。）"

#: ../../whatsnew/2.7.rst:1598 ../../whatsnew/2.7.rst:2496
#, fuzzy
msgid ""
"The :mod:`syslog` module will now use the value of ``sys.argv[0]`` as the "
"identifier instead of the previous default value of ``'python'``. (Changed "
"by Sean Reifschneider; :issue:`8451`.)"
msgstr ""
":mod:`syslog` 模組現在將使用 ``sys.argv[0]`` 的值作為標識符，"
"而不是以前的預設值 ``'python'``。 （由 Sean Reifschneider "
"更改；:issue:`8451`。）"

#: ../../whatsnew/2.7.rst:1602
#, fuzzy
msgid ""
"The ``sys.version_info`` value is now a named tuple, with attributes named :"
"attr:`major`, :attr:`minor`, :attr:`micro`, :attr:`releaselevel`, and :attr:"
"`serial`.  (Contributed by Ross Light; :issue:`4285`.)"
msgstr ""
"``sys.version_info`` 值現在是一個命名元組，其屬性名為 :attr:`major`、:attr:`m"
"inor`、:attr:`micro`、:attr:`releaselevel` 和:attr: `串行`。 （"
"由 Ross Light 提供；:issue:`4285`。）"

#: ../../whatsnew/2.7.rst:1607
#, fuzzy
msgid ""
":func:`sys.getwindowsversion` also returns a named tuple, with attributes "
"named :attr:`major`, :attr:`minor`, :attr:`build`, :attr:`platform`, :attr:"
"`service_pack`, :attr:`service_pack_major`, :attr:`service_pack_minor`, :"
"attr:`suite_mask`, and :attr:`product_type`.  (Contributed by Brian Curtin; :"
"issue:`7766`.)"
msgstr ""
":func:`sys.getwindowsversion` 還回傳一個命名元組，其屬性名為 :attr:`major`、:"
"attr:`minor`、:attr:`build`、:attr:`platform`、:attr:`service_pack "
"`、:attr:`service_pack_major`、:attr:`service_pack_minor`、:attr:`suite_mask`"
" 和 :attr:`product_type`。 （由 Brian Curtin 提供；:issue:`7766`。）"

#: ../../whatsnew/2.7.rst:1613 ../../whatsnew/2.7.rst:2500
#, fuzzy
msgid ""
"The :mod:`tarfile` module's default error handling has changed, to no longer "
"suppress fatal errors.  The default error level was previously 0, which "
"meant that errors would only result in a message being written to the debug "
"log, but because the debug log is not activated by default, these errors go "
"unnoticed.  The default error level is now 1, which raises an exception if "
"there's an error. (Changed by Lars Gustäbel; :issue:`7357`.)"
msgstr ""
":mod:`tarfile` 模組的預設錯誤處理已更改，不再抑制致命錯誤。"
"預設錯誤級別以前是 0，這意味著錯誤只會導致將消息寫入除錯日誌，但由於預設情況"
"下未激活除錯日誌，因此這些錯誤不會被注意到。預設錯誤級別現在為 "
"1，如果出現錯誤，則會引發例外。 （由 Lars Gustäbel 更改；:issue:`7357`。）"

#: ../../whatsnew/2.7.rst:1621
#, fuzzy
msgid ""
":mod:`tarfile` now supports filtering the :class:`~tarfile.TarInfo` objects "
"being added to a tar file.  When you call :meth:`~tarfile.TarFile.add`, you "
"may supply an optional *filter* argument that's a callable.  The *filter* "
"callable will be passed the :class:`~tarfile.TarInfo` for every file being "
"added, and can modify and return it. If the callable returns ``None``, the "
"file will be excluded from the resulting archive.  This is more powerful "
"than the existing *exclude* argument, which has therefore been deprecated. "
"(Added by Lars Gustäbel; :issue:`6856`.) The :class:`~tarfile.TarFile` class "
"also now supports the context management protocol. (Added by Lars Gustäbel; :"
"issue:`7232`.)"
msgstr ""
":mod:`tarfile` 現在支援過濾新增到 tar 文件中的 :class:`~tarfile.TarInfo` "
"物件。當您呼叫 :meth:`~tarfile.TarFile.add` 時，您可以提供一個可呼叫的可選 "
"*filter* 參數。 *filter* "
"可呼叫函式將被傳遞給每個被新增的文件的 :class:`~tarfile.TarInfo`，並且可以修改"
"並回傳它。如果可呼叫函式回傳 ``None`` ，則該文件將從生成的存檔中排除。這比現有的 "
"*exclude* 參數更強大，因此已被棄用。 （由 Lars Gustäbel "
"新增；:issue:`6856`。） :class:`~tarfile.TarFile` 類現在也支援上下文管理協定。"
" （由 Lars Gustäbel 新增；:issue:`7232`。）"

#: ../../whatsnew/2.7.rst:1633
#, fuzzy
msgid ""
"The :meth:`~threading.Event.wait` method of the :class:`threading.Event` "
"class now returns the internal flag on exit.  This means the method will "
"usually return true because :meth:`~threading.Event.wait` is supposed to "
"block until the internal flag becomes true.  The return value will only be "
"false if a timeout was provided and the operation timed out. (Contributed by "
"Tim Lesher; :issue:`1674032`.)"
msgstr ""
":class:`threading.Event` 類的 :meth:`~threading.Event.wait` "
"方法現在在退出時回傳內部旗標。這意味著該方法通常會回傳 true，因為 "
":meth:`~threading.Event.wait` 應該阻塞，直到內部旗標變為 "
"true。僅當提供超時且操作超時時，回傳值才會為 false。 （由 Tim Lesher "
"提供；:issue:`1674032`。）"

#: ../../whatsnew/2.7.rst:1640
#, fuzzy
msgid ""
"The Unicode database provided by the :mod:`unicodedata` module is now used "
"internally to determine which characters are numeric, whitespace, or "
"represent line breaks.  The database also includes information from the :"
"file:`Unihan.txt` data file (patch by Anders Chrigström and Amaury Forgeot "
"d'Arc; :issue:`1571184`) and has been updated to version 5.2.0 (updated by "
"Florent Xicluna; :issue:`8024`)."
msgstr ""
":mod:`unicodedata` 模組提供的 Unicode "
"資料庫現在在內部用於確定哪些字元是數字、空格或代表換行符。該資料庫還包括來自 "
":file:`Unihan.txt` 資料文件的資訊（Anders Chrigström 和 Amaury Forgeot d'Arc "
"的補丁；:issue:`1571184`）並已更新到版本 5.2.0（由 Florent Xicluna 更新） ; "
" :issue:`8024`）。"

#: ../../whatsnew/2.7.rst:1648 ../../whatsnew/2.7.rst:2508
#, fuzzy
msgid ""
"The :mod:`urlparse` module's :func:`~urlparse.urlsplit` now handles unknown "
"URL schemes in a fashion compliant with :rfc:`3986`: if the URL is of the "
"form ``\"<something>://...\"``, the text before the ``://`` is treated as "
"the scheme, even if it's a made-up scheme that the module doesn't know "
"about.  This change may break code that worked around the old behaviour.  "
"For example, Python 2.6.4 or 2.5 will return the following:"
msgstr ""
":mod:`urlparse` 模組的 :func:`~urlparse.urlsplit` 現在以符合 :rfc:`3986` "
"的方式處理未知的 URL 方案：如果 URL 的形式為 ``\"<something>:// ...\""
"``，``://`` 之前的文本被視為方案，即使它是模組不知道的虛構方案。此更改可能會"
"破壞圍繞舊行為工作的程式碼。例如，Python 2.6.4 或 2.5 將回傳以下內容："

#: ../../whatsnew/2.7.rst:1663 ../../whatsnew/2.7.rst:2523
#, fuzzy
msgid "Python 2.7 (and Python 2.6.5) will return:"
msgstr "Python 2.7（和 Python 2.6.5）將回傳："

#: ../../whatsnew/2.7.rst:1672 ../../whatsnew/2.7.rst:2532
#, fuzzy
msgid ""
"(Python 2.7 actually produces slightly different output, since it returns a "
"named tuple instead of a standard tuple.)"
msgstr "（Python 2.7 "
"實際上產生略有不同的輸出，因為它回傳一個命名元組而不是標準元組。）"

#: ../../whatsnew/2.7.rst:1675
#, fuzzy
msgid ""
"The :mod:`urlparse` module also supports IPv6 literal addresses as defined "
"by :rfc:`2732` (contributed by Senthil Kumaran; :issue:`2987`)."
msgstr ""
":mod:`urlparse` 模組還支援 :rfc:`2732` 定義的 IPv6 文字地址（由 Senthil "
"Kumaran 提供；:issue:`2987`）。"

#: ../../whatsnew/2.7.rst:1685
#, fuzzy
msgid ""
"New class: the :class:`~weakref.WeakSet` class in the :mod:`weakref` module "
"is a set that only holds weak references to its elements; elements will be "
"removed once there are no references pointing to them. (Originally "
"implemented in Python 3.x by Raymond Hettinger, and backported to 2.7 by "
"Michael Foord.)"
msgstr ""
"新類：:mod:`weakref` 模組中的 :class:`~weakref.WeakSet` "
"類是一個僅包含對其元素的弱引用的集合；一旦沒有指向它們的引用，元素將被刪除。 "
"（最初由 Raymond Hettinger 在 Python 3.x 中實作，並由 Michael Foord "
"反向移植到 2.7。）"

#: ../../whatsnew/2.7.rst:1691 ../../whatsnew/2.7.rst:2486
#, fuzzy
msgid ""
"The ElementTree library, :mod:`xml.etree`, no longer escapes ampersands and "
"angle brackets when outputting an XML processing instruction (which looks "
"like ``<?xml-stylesheet href=\"#style1\"?>``) or comment (which looks like "
"``<!-- comment -->``). (Patch by Neil Muller; :issue:`2746`.)"
msgstr ""
"ElementTree 庫 :mod:`xml.etree` 在輸出 XML 處理指令（看起來像 ``<?xml-"
"stylesheet href=\"#style1\"?>``）或註釋時不再轉義和號和尖括號（看起來像``<!--"
"評論-->``）。 （Neil Muller 的補丁；:issue:`2746`。）"

#: ../../whatsnew/2.7.rst:1697
#, fuzzy
msgid ""
"The XML-RPC client and server, provided by the :mod:`xmlrpclib` and :mod:"
"`SimpleXMLRPCServer` modules, have improved performance by supporting "
"HTTP/1.1 keep-alive and by optionally using gzip encoding to compress the "
"XML being exchanged.  The gzip compression is controlled by the :attr:"
"`encode_threshold` attribute of :class:`SimpleXMLRPCRequestHandler`, which "
"contains a size in bytes; responses larger than this will be compressed. "
"(Contributed by Kristján Valur Jónsson; :issue:`6267`.)"
msgstr ""
"XML-RPC 客戶端和伺服器由 :mod:`xmlrpclib` 和 :mod:`SimpleXMLRPCServer` "
"模組提供，通過支援 HTTP/1.1 keep-alive 和可選地使用 gzip "
"編碼來壓縮正在交換的 XML，提高了性能。 gzip 壓縮由 "
":class:`SimpleXMLRPCRequestHandler` 的 :attr:`encode_threshold` "
"屬性控制，其中包含以位元組為單位的大小；大於此的響應將被壓縮。 （由 Kristján "
"Valur Jónsson 提供；:issue:`6267`。）"

#: ../../whatsnew/2.7.rst:1706
#, fuzzy
msgid ""
"The :mod:`zipfile` module's :class:`~zipfile.ZipFile` now supports the "
"context management protocol, so you can write ``with zipfile.ZipFile(...) as "
"f:``. (Contributed by Brian Curtin; :issue:`5511`.)"
msgstr ""
":mod:`zipfile` 模組的 :class:`~zipfile.ZipFile` 現在支援上下文管理協定，"
"因此您可以編寫 ``with zipfile.ZipFile(...) as f:``。 （由 Brian Curtin "
"提供；:issue:`5511`。）"

#: ../../whatsnew/2.7.rst:1710
#, fuzzy
msgid ""
":mod:`zipfile` now also supports archiving empty directories and extracts "
"them correctly.  (Fixed by Kuba Wieczorek; :issue:`4710`.) Reading files out "
"of an archive is faster, and interleaving :meth:`~zipfile.ZipFile.read` and :"
"meth:`~zipfile.ZipFile.readline` now works correctly. (Contributed by Nir "
"Aides; :issue:`7610`.)"
msgstr ""
":mod:`zipfile` 現在還支援歸檔空目錄並正確提取它們。 （由 Kuba Wieczorek "
"修復；:issue:`4710`。）從存檔中讀取文件速度更快，交錯 :meth:`~zipfile.ZipFile"
".read` 和 :meth:`~zipfile.ZipFile.readline` 現在可以工作正確。 （由 Nir "
"Aides 提供；:issue:`7610`。）"

#: ../../whatsnew/2.7.rst:1716
#, fuzzy
msgid ""
"The :func:`~zipfile.is_zipfile` function now accepts a file object, in "
"addition to the path names accepted in earlier versions.  (Contributed by "
"Gabriel Genellina; :issue:`4756`.)"
msgstr ""
":func:`~zipfile.is_zipfile` 函式現在接受文件物件，以及早期版本接受的路徑名。 "
"（由 Gabriel Genellina 提供；:issue:`4756`。）"

#: ../../whatsnew/2.7.rst:1720
#, fuzzy
msgid ""
"The :meth:`~zipfile.ZipFile.writestr` method now has an optional "
"*compress_type* parameter that lets you override the default compression "
"method specified in the :class:`~zipfile.ZipFile` constructor.  (Contributed "
"by Ronald Oussoren; :issue:`6003`.)"
msgstr ""
":meth:`~zipfile.ZipFile.writestr` 方法現在有一個可選的 *compress_type* "
"參數，可以讓您覆蓋在 :class:`~zipfile.ZipFile` 構造函式中指定的預設壓縮方法。 "
"（由 Ronald Oussoren 提供；:issue:`6003`。）"

#: ../../whatsnew/2.7.rst:1733
#, fuzzy
msgid "New module: importlib"
msgstr "新模組：importlib"

#: ../../whatsnew/2.7.rst:1735
#, fuzzy
msgid ""
"Python 3.1 includes the :mod:`importlib` package, a re-implementation of the "
"logic underlying Python's :keyword:`import` statement. :mod:`importlib` is "
"useful for implementors of Python interpreters and to users who wish to "
"write new importers that can participate in the import process.  Python 2.7 "
"doesn't contain the complete :mod:`importlib` package, but instead has a "
"tiny subset that contains a single function, :func:`~importlib."
"import_module`."
msgstr ""
"Python 3.1 包括 :mod:`importlib` 包，重新實作了 Python 的 :keyword:`import` "
"語句的邏輯基礎。 :mod:`importlib` 對於 Python "
"直譯器的實作者和希望編寫可以參與導入過程的新導入器的使用者很有用。 Python "
"2.7 不包含完整的 :mod:`importlib` "
"包，而是包含一個包含單個函式的小子集，:func:`~importlib.import_module`。"

#: ../../whatsnew/2.7.rst:1743
#, fuzzy
msgid ""
"``import_module(name, package=None)`` imports a module.  *name* is a string "
"containing the module or package's name.  It's possible to do relative "
"imports by providing a string that begins with a ``.`` character, such as "
"``..utils.errors``.  For relative imports, the *package* argument must be "
"provided and is the name of the package that will be used as the anchor for "
"the relative import.  :func:`~importlib.import_module` both inserts the "
"imported module into ``sys.modules`` and returns the module object."
msgstr ""
"``import_module(name, package=None)`` 導入一個模組。 *name* 是包含模組或包名"
"稱的字串。可以通過提供以 ``.``字元開頭的字串來進行相對導入，例如“..utils."
"errors”。對於相對導入，必須提供 *package* "
"參數，它是將用作相對導入錨點的包的名稱。 :func:`~importlib.import_module` "
"將導入的模組插入 ``sys.modules`` 並回傳模組物件。"

#: ../../whatsnew/2.7.rst:1752
msgid "Here are some examples::"
msgstr ""
"以下是一些範例：\n"
"\n"
"::"

#: ../../whatsnew/2.7.rst:1763
#, fuzzy
msgid ""
":mod:`importlib` was implemented by Brett Cannon and introduced in Python "
"3.1."
msgstr ":mod:`importlib` 由 Brett Cannon 實作並在 Python 3.1 中引入。"

#: ../../whatsnew/2.7.rst:1768
#, fuzzy
msgid "New module: sysconfig"
msgstr "新模組：系統配置"

#: ../../whatsnew/2.7.rst:1770
#, fuzzy
msgid ""
"The :mod:`sysconfig` module has been pulled out of the Distutils package, "
"becoming a new top-level module in its own right. :mod:`sysconfig` provides "
"functions for getting information about Python's build process: compiler "
"switches, installation paths, the platform name, and whether Python is "
"running from its source directory."
msgstr ""
":mod:`sysconfig` 模組已從 Distutils 包中拉出，成為一個新的頂級模組。 "
":mod:`sysconfig` 提供獲取有關 Python "
"構建過程的資訊的函式：編譯器開關、安裝路徑、平台名稱以及 Python "
"是否從其源目錄運行。"

#: ../../whatsnew/2.7.rst:1777
#, fuzzy
msgid "Some of the functions in the module are:"
msgstr "該模組中的一些功能是："

#: ../../whatsnew/2.7.rst:1779
#, fuzzy
msgid ""
":func:`~sysconfig.get_config_var` returns variables from Python's Makefile "
"and the :file:`pyconfig.h` file."
msgstr ""
":func:`~sysconfig.get_config_var` 從 Python 的 Makefile 和 :file:`pyconfig.h`"
" 文件回傳變數。"

#: ../../whatsnew/2.7.rst:1781
#, fuzzy
msgid ""
":func:`~sysconfig.get_config_vars` returns a dictionary containing all of "
"the configuration variables."
msgstr ":func:`~sysconfig.get_config_vars` 回傳一個包含所有配置變數的字典。"

#: ../../whatsnew/2.7.rst:1783
#, fuzzy
msgid ""
":func:`~sysconfig.get_path` returns the configured path for a particular "
"type of module: the standard library, site-specific modules, platform-"
"specific modules, etc."
msgstr ":func:`~sysconfig.get_path` "
"回傳特定型別模組的配置路徑：標準庫、站點特定模組、平台特定模組等。"

#: ../../whatsnew/2.7.rst:1786
#, fuzzy
msgid ""
":func:`~sysconfig.is_python_build` returns true if you're running a binary "
"from a Python source tree, and false otherwise."
msgstr ""
":func:`~sysconfig.is_python_build` 如果您從 Python 源程式碼樹運行二進位文件，"
"則回傳 true，否則回傳 false。"

#: ../../whatsnew/2.7.rst:1789
#, fuzzy
msgid ""
"Consult the :mod:`sysconfig` documentation for more details and for a "
"complete list of functions."
msgstr "有關更多詳細資訊和完整的功能列表，請參閱 :mod:`sysconfig` 文檔。"

#: ../../whatsnew/2.7.rst:1792
#, fuzzy
msgid ""
"The Distutils package and :mod:`sysconfig` are now maintained by Tarek "
"Ziadé, who has also started a Distutils2 package (source repository at "
"https://hg.python.org/distutils2/) for developing a next-generation version "
"of Distutils."
msgstr ""
"Distutils 包和 :mod:`sysconfig` 現在由 Tarek Ziadé 維護，他還啟動了 "
"Distutils2 包（源程式碼庫位於 https://hg.python.org/distutils2/）"
"用於開發下一代版本的 Distutils ."

#: ../../whatsnew/2.7.rst:1799
#, fuzzy
msgid "ttk: Themed Widgets for Tk"
msgstr "ttk：Tk 的主題小部件"

#: ../../whatsnew/2.7.rst:1801
#, fuzzy
msgid ""
"Tcl/Tk 8.5 includes a set of themed widgets that re-implement basic Tk "
"widgets but have a more customizable appearance and can therefore more "
"closely resemble the native platform's widgets.  This widget set was "
"originally called Tile, but was renamed to Ttk (for \"themed Tk\") on being "
"added to Tcl/Tck release 8.5."
msgstr ""
"Tcl/Tk 8.5 包括一組主題化的小部件，它們重新實作了基本的 Tk "
"小部件，但具有更可定制的外觀，因此可以更接近於本機平台的小部件。"
"這個小部件集最初稱為 Tile，但在新增到 Tcl/Tck 8.5 版後更名為 Ttk（“主題 "
"Tk”）。"

#: ../../whatsnew/2.7.rst:1807
#, fuzzy
msgid ""
"To learn more, read the :mod:`ttk` module documentation.  You may also wish "
"to read the Tcl/Tk manual page describing the Ttk theme engine, available at "
"https://www.tcl.tk/man/tcl8.5/TkCmd/ttk_intro.htm. Some screenshots of the "
"Python/Ttk code in use are at https://code.google.com/archive/p/python-ttk/"
"wikis/Screenshots.wiki."
msgstr ""
"要了解更多資訊，請閱讀 :mod:`ttk` 模組文檔。您可能還希望閱讀描述 Ttk "
"主題引擎的 Tcl/Tk 手冊頁，網址為 https://www.tcl.tk/man/tcl8.5/TkCmd/"
"ttk_intro.htm。使用中的 Python/Ttk 程式碼的一些屏幕截圖位於 https://code."
"google.com/archive/p/python-ttk/wikis/Screenshots.wiki。"

#: ../../whatsnew/2.7.rst:1814
#, fuzzy
msgid ""
"The :mod:`ttk` module was written by Guilherme Polo and added in :issue:"
"`2983`.  An alternate version called ``Tile.py``, written by Martin Franklin "
"and maintained by Kevin Walzer, was proposed for inclusion in :issue:`2618`, "
"but the authors argued that Guilherme Polo's work was more comprehensive."
msgstr ""
":mod:`ttk` 模組由 Guilherme Polo 編寫並新增到 :issue:`2983` "
"中。另一個名為“Tile.py”的替代版本由 Martin Franklin 編寫並由 Kevin Walzer "
"維護，提議包含在 :issue:`2618` 中，但作者認為 Guilherme Polo 的工作更全面。"

#: ../../whatsnew/2.7.rst:1824
#, fuzzy
msgid "Updated module: unittest"
msgstr "更新模組：unittest"

#: ../../whatsnew/2.7.rst:1826
#, fuzzy
msgid ""
"The :mod:`unittest` module was greatly enhanced; many new features were "
"added.  Most of these features were implemented by Michael Foord, unless "
"otherwise noted.  The enhanced version of the module is downloadable "
"separately for use with Python versions 2.4 to 2.6, packaged as the :mod:"
"`unittest2` package, from https://pypi.org/project/unittest2."
msgstr ""
":mod:`unittest` 模組得到了極大的增強；新增了許多新功能。除非另有說明，"
"否則這些功能中的大部分都是由 Michael Foord 實作的。該模組的增強版可單獨下載，"
"用於 Python 2.4 至 2.6 版，打包為 unittest2 包，來自 https://pypi.org/"
"project/unittest2。"

#: ../../whatsnew/2.7.rst:1833
#, fuzzy
msgid ""
"When used from the command line, the module can automatically discover "
"tests.  It's not as fancy as `py.test <https://pytest.org>`__ or `nose "
"<https://nose.readthedocs.io/>`__, but provides a simple way to run tests "
"kept within a set of package directories.  For example, the following "
"command will search the :file:`test/` subdirectory for any importable test "
"files named ``test*.py``::"
msgstr ""
"從命令列使用時，該模組可以自動發現測試。它不像 `py.test <https://pytest.org>`"
"__ 或 `nose <https://nose.readthedocs.io/>`__ "
"那樣花哨，但提供了一種簡單的方法來運行保存在集合中的測試包目錄。例如，"
"以下命令將在 :file:`test/` 子目錄中搜索任何名為 ``test*.py``:: "
"的可導入測試文件："

#: ../../whatsnew/2.7.rst:1842
#, fuzzy
msgid ""
"Consult the :mod:`unittest` module documentation for more details. "
"(Developed in :issue:`6001`.)"
msgstr "有關詳細資訊，請參閱 :mod:`unittest` 模組文檔。 （在 :issue:`6001` 中開發。）"

#: ../../whatsnew/2.7.rst:1845
#, fuzzy
msgid "The :func:`~unittest.main` function supports some other new options:"
msgstr ":func:`~unittest.main` 函式支援一些其他新選項："

#: ../../whatsnew/2.7.rst:1847
#, fuzzy
msgid ""
":option:`-b <unittest -b>` or :option:`!--buffer` will buffer the standard "
"output and standard error streams during each test.  If the test passes, any "
"resulting output will be discarded; on failure, the buffered output will be "
"displayed."
msgstr ""
":option:`-b <unittest -b>` 或 :option:`!--buffer` 將在每次測試期間緩衝標準輸"
"出和標準錯誤流。如果測試通過，任何結果輸出都將被丟棄；失敗時，將顯示緩衝的輸"
"出。"

#: ../../whatsnew/2.7.rst:1852
#, fuzzy
msgid ""
":option:`-c <unittest -c>` or :option:`!--catch` will cause the control-C "
"interrupt to be handled more gracefully.  Instead of interrupting the test "
"process immediately, the currently running test will be completed and then "
"the partial results up to the interruption will be reported. If you're "
"impatient, a second press of control-C will cause an immediate interruption."
msgstr ""
":option:`-c <unittest -c>` 或 :option:`!--catch` 將使 control-C 中斷得到更優"
"雅的處理。不是立即中斷測試過程，而是完成當前運行的測試，然後報告中斷前的部分"
"結果。如果你不耐煩，第二次按下 control-C 會立即中斷。"

#: ../../whatsnew/2.7.rst:1859
#, fuzzy
msgid ""
"This control-C handler tries to avoid causing problems when the code being "
"tested or the tests being run have defined a signal handler of their own, by "
"noticing that a signal handler was already set and calling it.  If this "
"doesn't work for you, there's a :func:`~unittest.removeHandler` decorator "
"that can be used to mark tests that should have the control-C handling "
"disabled."
msgstr ""
"當正在測試的程式碼或正在運行的測試定義了自己的信號處理程式時，此 control-C 處"
"理程式會注意到已經設定了信號處理程式並呼叫它，從而避免引起問題。如果這對您不"
"起作用，可以使用 :func:`~unittest.removeHandler` 裝飾器來標記應該禁用 "
"control-C 處理的測試。"

#: ../../whatsnew/2.7.rst:1866
#, fuzzy
msgid ""
":option:`-f <unittest -f>` or :option:`!--failfast` makes test execution "
"stop immediately when a test fails instead of continuing to execute further "
"tests.  (Suggested by Cliff Dyer and implemented by Michael Foord; :issue:"
"`8074`.)"
msgstr ""
":option:`-f <unittest -f>` 或 :option:`!--failfast` "
"使測試執行在測試失敗時立即停止，而不是繼續執行進一步的測試。 （由 Cliff Dyer "
"建議並由 Michael Foord 實施；:issue:`8074`。）"

#: ../../whatsnew/2.7.rst:1871
#, fuzzy
msgid ""
"The progress messages now show 'x' for expected failures and 'u' for "
"unexpected successes when run in verbose mode. (Contributed by Benjamin "
"Peterson.)"
msgstr "在詳細模式下運行時，進度消息現在顯示 ``x``表示預期失敗， ``u``表示意外成功。 "
"（由本傑明·彼得森提供。）"

#: ../../whatsnew/2.7.rst:1875
#, fuzzy
msgid ""
"Test cases can raise the :exc:`~unittest.SkipTest` exception to skip a test "
"(:issue:`1034053`)."
msgstr "測試用例可以引發 :exc:`~unittest.SkipTest` 例外以跳過測試 "
"(:issue:`1034053`)。"

#: ../../whatsnew/2.7.rst:1878
#, fuzzy
msgid ""
"The error messages for :meth:`~unittest.TestCase.assertEqual`, :meth:"
"`~unittest.TestCase.assertTrue`, and :meth:`~unittest.TestCase.assertFalse` "
"failures now provide more information.  If you set the :attr:`~unittest."
"TestCase.longMessage` attribute of your :class:`~unittest.TestCase` classes "
"to true, both the standard error message and any additional message you "
"provide will be printed for failures.  (Added by Michael Foord; :issue:"
"`5663`.)"
msgstr ""
":meth:`~unittest.TestCase.assertEqual`、:meth:`~unittest.TestCase.assertTrue`"
" 和 :meth:`~unittest.TestCase.assertFalse` 失敗的錯誤消息現在提供了更多資訊。"
"如果您將 :class:`~unittest.TestCase` 類的 :attr:`~unittest.TestCase."
"longMessage` 屬性設定為 "
"true，標準錯誤消息和您提供的任何附加消息都將印出失敗。 （由 Michael Foord "
"新增；:issue:`5663`。）"

#: ../../whatsnew/2.7.rst:1885
#, fuzzy
msgid ""
"The :meth:`~unittest.TestCase.assertRaises` method now returns a context "
"handler when called without providing a callable object to run.  For "
"example, you can write this::"
msgstr ""
":meth:`~unittest.TestCase.assertRaises` 方法現在在呼叫時回傳一個上下文處理程"
"序，而不提供要運行的可呼叫物件。例如，你可以這樣寫："

#: ../../whatsnew/2.7.rst:1892
#, fuzzy
msgid "(Implemented by Antoine Pitrou; :issue:`4444`.)"
msgstr "（由 Antoine Pitrou 實施；:issue:`4444`。）"

#: ../../whatsnew/2.7.rst:1896
#, fuzzy
msgid ""
"Module- and class-level setup and teardown fixtures are now supported. "
"Modules can contain :func:`~unittest.setUpModule` and :func:`~unittest."
"tearDownModule` functions.  Classes can have :meth:`~unittest.TestCase."
"setUpClass` and :meth:`~unittest.TestCase.tearDownClass` methods that must "
"be defined as class methods (using ``@classmethod`` or equivalent).  These "
"functions and methods are invoked when the test runner switches to a test "
"case in a different module or class."
msgstr ""
"現在支援模組級和類級設定和拆卸裝置。模組可以包含 :func:`~unittest.setUpModule`"
" 和 :func:`~unittest.tearDownModule` 函式。類可以有 :meth:`~unittest.TestCase."
"setUpClass` 和 :meth:`~unittest.TestCase.tearDownClass` "
"方法，這些方法必須定義為類方法（使用 ``@classmethod`` 或等效方法）。當測試運"
"行器切換到不同模組或類中的測試用例時，將呼叫這些函式和方法。"

#: ../../whatsnew/2.7.rst:1904
#, fuzzy
msgid ""
"The methods :meth:`~unittest.TestCase.addCleanup` and :meth:`~unittest."
"TestCase.doCleanups` were added. :meth:`~unittest.TestCase.addCleanup` lets "
"you add cleanup functions that will be called unconditionally (after :meth:"
"`~unittest.TestCase.setUp` if :meth:`~unittest.TestCase.setUp` fails, "
"otherwise after :meth:`~unittest.TestCase.tearDown`). This allows for much "
"simpler resource allocation and deallocation during tests (:issue:`5679`)."
msgstr ""
"新增了方法 :meth:`~unittest.TestCase.addCleanup` 和 :meth:`~unittest.TestCase"
".doCleanups`。 :meth:`~unittest.TestCase.addCleanup` "
"允許您新增將無條件呼叫的清理函式（在 :meth:`~unittest.TestCase.setUp` 之後，"
"如果 :meth:`~unittest.TestCase.setUp` 失敗，否則在 :meth:`~unittest.TestCase."
"tearDown`)。這允許在測試期間進行更簡單的資源分配和釋放 (:issue:`5679`)。"

#: ../../whatsnew/2.7.rst:1912
#, fuzzy
msgid ""
"A number of new methods were added that provide more specialized tests.  "
"Many of these methods were written by Google engineers for use in their test "
"suites; Gregory P. Smith, Michael Foord, and GvR worked on merging them into "
"Python's version of :mod:`unittest`."
msgstr ""
"新增了許多新方法以提供更專業的測試。其中許多方法都是由 Google "
"工程師編寫的，用於他們的測試套件； Gregory P. Smith、Michael Foord 和 GvR "
"致力於將它們合併到 Python 版本的 :mod:`unittest` 中。"

#: ../../whatsnew/2.7.rst:1917
#, fuzzy
msgid ""
":meth:`~unittest.TestCase.assertIsNone` and :meth:`~unittest.TestCase."
"assertIsNotNone` take one expression and verify that the result is or is not "
"``None``."
msgstr ""
":meth:`~unittest.TestCase.assertIsNone` 和 :meth:`~unittest.TestCase."
"assertIsNotNone` 採用一個表達式並驗證結果是或不是 ``None``。"

#: ../../whatsnew/2.7.rst:1920
#, fuzzy
msgid ""
":meth:`~unittest.TestCase.assertIs` and :meth:`~unittest.TestCase."
"assertIsNot` take two values and check whether the two values evaluate to "
"the same object or not. (Added by Michael Foord; :issue:`2578`.)"
msgstr ""
":meth:`~unittest.TestCase.assertIs` 和 :meth:`~unittest.TestCase.assertIsNot`"
" 取兩個值並檢查這兩個值是否計算為同一個物件。 （由 Michael Foord "
"新增；:issue:`2578`。）"

#: ../../whatsnew/2.7.rst:1924
#, fuzzy
msgid ""
":meth:`~unittest.TestCase.assertIsInstance` and :meth:`~unittest.TestCase."
"assertNotIsInstance` check whether the resulting object is an instance of a "
"particular class, or of one of a tuple of classes.  (Added by Georg Brandl; :"
"issue:`7031`.)"
msgstr ""
":meth:`~unittest.TestCase.assertIsInstance` 和 :meth:`~unittest.TestCase."
"assertNotIsInstance` 檢查生成的對像是特定類的實例，還是類元組之一的實例。 （"
"由 Georg Brandl 新增；:issue:`7031`。）"

#: ../../whatsnew/2.7.rst:1929
#, fuzzy
msgid ""
":meth:`~unittest.TestCase.assertGreater`, :meth:`~unittest.TestCase."
"assertGreaterEqual`, :meth:`~unittest.TestCase.assertLess`, and :meth:"
"`~unittest.TestCase.assertLessEqual` compare two quantities."
msgstr "比較兩個數量。"

#: ../../whatsnew/2.7.rst:1933
#, fuzzy
msgid ""
":meth:`~unittest.TestCase.assertMultiLineEqual` compares two strings, and if "
"they're not equal, displays a helpful comparison that highlights the "
"differences in the two strings.  This comparison is now used by default when "
"Unicode strings are compared with :meth:`~unittest.TestCase.assertEqual`."
msgstr ""
":meth:`~unittest.TestCase.assertMultiLineEqual` "
"比較兩個字串，如果它們不相等，則顯示一個有用的比較，突出顯示兩個字串的差異。"
"當 Unicode 字串與 :meth:`~unittest.TestCase.assertEqual` "
"進行比較時，現在預設使用此比較。"

#: ../../whatsnew/2.7.rst:1938
#, fuzzy
msgid ""
":meth:`~unittest.TestCase.assertRegexpMatches` and :meth:`~unittest.TestCase."
"assertNotRegexpMatches` checks whether the first argument is a string "
"matching or not matching the regular expression provided as the second "
"argument (:issue:`8038`)."
msgstr ""
":meth:`~unittest.TestCase.assertRegexpMatches` 和 :meth:`~unittest.TestCase."
"assertNotRegexpMatches` "
"檢查第一個參數是否是匹配或不匹配作為第二個參數提供的正則表達式的字串 "
"(:issue:`8038` )."

#: ../../whatsnew/2.7.rst:1943
#, fuzzy
msgid ""
":meth:`~unittest.TestCase.assertRaisesRegexp` checks whether a particular "
"exception is raised, and then also checks that the string representation of "
"the exception matches the provided regular expression."
msgstr ""
":meth:`~unittest.TestCase.assertRaisesRegexp` "
"檢查是否引發了特定例外，然後還檢查例外的字串表示是否與提供的正則表達式匹配。"

#: ../../whatsnew/2.7.rst:1947
#, fuzzy
msgid ""
":meth:`~unittest.TestCase.assertIn` and :meth:`~unittest.TestCase."
"assertNotIn` tests whether *first* is or is not in  *second*."
msgstr ""
":meth:`~unittest.TestCase.assertIn` 和 :meth:`~unittest.TestCase.assertNotIn`"
" 測試 *first* 是否在 *second* 中。"

#: ../../whatsnew/2.7.rst:1950
#, fuzzy
msgid ""
":meth:`~unittest.TestCase.assertItemsEqual` tests whether two provided "
"sequences contain the same elements."
msgstr ":meth:`~unittest.TestCase.assertItemsEqual` "
"測試兩個提供的序列是否包含相同的元素。"

#: ../../whatsnew/2.7.rst:1953
#, fuzzy
msgid ""
":meth:`~unittest.TestCase.assertSetEqual` compares whether two sets are "
"equal, and only reports the differences between the sets in case of error."
msgstr ""
":meth:`~unittest.TestCase.assertSetEqual` "
"比較兩個集合是否相等，只有在錯誤的情況下才報告集合之間的差異。"

#: ../../whatsnew/2.7.rst:1956
#, fuzzy
msgid ""
"Similarly, :meth:`~unittest.TestCase.assertListEqual` and :meth:`~unittest."
"TestCase.assertTupleEqual` compare the specified types and explain any "
"differences without necessarily printing their full values; these methods "
"are now used by default when comparing lists and tuples using :meth:"
"`~unittest.TestCase.assertEqual`. More generally, :meth:`~unittest.TestCase."
"assertSequenceEqual` compares two sequences and can optionally check whether "
"both sequences are of a particular type."
msgstr ""
"類似地，:meth:`~unittest.TestCase.assertListEqual` 和:meth"
":`~unittest.TestCase.assertTupleEqual` "
"比較指定的型別並解釋任何差異，而不必印出它們的完整值；在使用 :meth:`~unittest"
".TestCase.assertEqual` "
"比較列表和元組時，現在預設使用這些方法。更一般地說，:meth:`~unittest.TestCase"
".assertSequenceEqual` "
"比較兩個序列，並且可以選擇性地檢查兩個序列是否屬於特定型別。"

#: ../../whatsnew/2.7.rst:1964
#, fuzzy
msgid ""
":meth:`~unittest.TestCase.assertDictEqual` compares two dictionaries and "
"reports the differences; it's now used by default when you compare two "
"dictionaries using :meth:`~unittest.TestCase.assertEqual`.  :meth:`~unittest."
"TestCase.assertDictContainsSubset` checks whether all of the key/value pairs "
"in *first* are found in *second*."
msgstr ""
":meth:`~unittest.TestCase.assertDictEqual` 比較兩個字典並報告差異；當您使用 "
":meth:`~unittest.TestCase.assertEqual` 比較兩個字典時，現在預設使用它。 "
":meth:`~unittest.TestCase.assertDictContainsSubset` 檢查 *first* 中的所有鍵/"
"值對是否在 *second* 中找到。"

#: ../../whatsnew/2.7.rst:1969
#, fuzzy
msgid ""
":meth:`~unittest.TestCase.assertAlmostEqual` and :meth:`~unittest.TestCase."
"assertNotAlmostEqual` test whether *first* and *second* are approximately "
"equal.  This method can either round their difference to an optionally "
"specified number of *places* (the default is 7) and compare it to zero, or "
"require the difference to be smaller than a supplied *delta* value."
msgstr ""
":meth:`~unittest.TestCase.assertAlmostEqual` 和 :meth:`~unittest.TestCase."
"assertNotAlmostEqual` 測試 *first* 和 *second* 是否近似相等。"
"此方法可以將它們的差異四捨五入到可選指定的 *places* 數量（預設為 "
"7）並將其與零進行比較，或者要求差異小於提供的 *delta* 值。"

#: ../../whatsnew/2.7.rst:1975
#, fuzzy
msgid ""
":meth:`~unittest.TestLoader.loadTestsFromName` properly honors the :attr:"
"`~unittest.TestLoader.suiteClass` attribute of the :class:`~unittest."
"TestLoader`. (Fixed by Mark Roddy; :issue:`6866`.)"
msgstr ""
":meth:`~unittest.TestLoader.loadTestsFromName` 正確地遵循了 :class:`~unittest."
"TestLoader` 的 :attr:`~unittest.TestLoader.suiteClass` 屬性。 （由 Mark Roddy "
"修復；:issue:`6866`。）"

#: ../../whatsnew/2.7.rst:1979
#, fuzzy
msgid ""
"A new hook lets you extend the :meth:`~unittest.TestCase.assertEqual` method "
"to handle new data types.  The :meth:`~unittest.TestCase."
"addTypeEqualityFunc` method takes a type object and a function. The function "
"will be used when both of the objects being compared are of the specified "
"type.  This function should compare the two objects and raise an exception "
"if they don't match; it's a good idea for the function to provide additional "
"information about why the two objects aren't matching, much as the new "
"sequence comparison methods do."
msgstr ""
"一個新的掛鉤讓您可以擴充 :meth:`~unittest.TestCase.assertEqual` "
"方法來處理新的資料型別。 :meth:`~unittest.TestCase.addTypeEqualityFunc` 方法"
"接受一個型別物件和一個函式。當被比較的兩個對像都屬於指定型別時，將使用該函式"
"。這個函式應該比較兩個物件，如果不匹配則拋出例外；函式提供有關兩個物件為何不"
"匹配的附加資訊是個好主意，就像新的序列比較方法所做的那樣。"

#: ../../whatsnew/2.7.rst:1988
#, fuzzy
msgid ""
":func:`unittest.main` now takes an optional ``exit`` argument.  If false, :"
"func:`~unittest.main` doesn't call :func:`sys.exit`, allowing :func:"
"`~unittest.main` to be used from the interactive interpreter. (Contributed "
"by J. Pablo Fernández; :issue:`3379`.)"
msgstr ""
":func:`unittest.main` 現在有一個可選的 ``exit`` 參數。如果為 "
"false，:func:`~unittest.main` 不會呼叫 :func:`sys.exit`，"
"允許從交互式直譯器使用 :func:`~unittest.main`。 （由 J. Pablo Fernández "
"提供；:issue:`3379`。）"

#: ../../whatsnew/2.7.rst:1993
#, fuzzy
msgid ""
":class:`~unittest.TestResult` has new :meth:`~unittest.TestResult."
"startTestRun` and :meth:`~unittest.TestResult.stopTestRun` methods that are "
"called immediately before and after a test run.  (Contributed by Robert "
"Collins; :issue:`5728`.)"
msgstr ""
":class:`~unittest.TestResult` 有新的 :meth:`~unittest.TestResult."
"startTestRun` 和 :meth:`~unittest.TestResult.stopTestRun` "
"方法，可以在測試運行前後立即呼叫。 （由 Robert Collins "
"提供；:issue:`5728`。）"

#: ../../whatsnew/2.7.rst:1997
#, fuzzy
msgid ""
"With all these changes, the :file:`unittest.py` was becoming awkwardly "
"large, so the module was turned into a package and the code split into "
"several files (by Benjamin Peterson).  This doesn't affect how the module is "
"imported or used."
msgstr ""
"通過所有這些更改，:file:`unittest.py` "
"變得笨拙地大了，所以模組變成了一個包，程式碼分成了幾個文件（Benjamin "
"Peterson）。這不會影響模組的導入或使用方式。"

#: ../../whatsnew/2.7.rst:2005
msgid ""
"https://web.archive.org/web/20210619163128/http://www.voidspace.org.uk/"
"python/articles/unittest2.shtml"
msgstr ""
"https://web.archive.org/web/20210619163128/http://www.voidspace.org.uk/"
"python/articles/unittest2.shtml"

#: ../../whatsnew/2.7.rst:2005
#, fuzzy
msgid ""
"Describes the new features, how to use them, and the rationale for various "
"design decisions.  (By Michael Foord.)"
msgstr "描述新功能、如何使用它們以及各種設計決策的基本原理。 （邁克爾·福特著。）"

#: ../../whatsnew/2.7.rst:2011
#, fuzzy
msgid "Updated module: ElementTree 1.3"
msgstr "更新模組：ElementTree 1.3"

#: ../../whatsnew/2.7.rst:2013
#, fuzzy
msgid ""
"The version of the ElementTree library included with Python was updated to "
"version 1.3.  Some of the new features are:"
msgstr "Python 附帶的 ElementTree 庫的版本已更新為 1.3 版。一些新功能包括："

#: ../../whatsnew/2.7.rst:2016
#, fuzzy
msgid ""
"The various parsing functions now take a *parser* keyword argument giving "
"an :class:`~xml.etree.ElementTree.XMLParser` instance that will be used.  "
"This makes it possible to override the file's internal encoding::"
msgstr ""
"各種解析函式現在採用 *parser* 關鍵字參數，給出將使用的 :class:`~xml.etree."
"ElementTree.XMLParser` 實例。這使得覆蓋文件的內部編碼成為可能："

#: ../../whatsnew/2.7.rst:2023
#, fuzzy
msgid ""
"Errors in parsing XML now raise a :exc:`ParseError` exception, whose "
"instances have a :attr:`position` attribute containing a (*line*, *column*) "
"tuple giving the location of the problem."
msgstr ""
"解析 XML 時的錯誤現在會引發 :exc:`ParseError` 例外，其實例有一個 "
":attr:`position` 屬性，其中包含一個 (*line*, *column*) 元組，給出問題的位置。"

#: ../../whatsnew/2.7.rst:2027
#, fuzzy
msgid ""
"ElementTree's code for converting trees to a string has been significantly "
"reworked, making it roughly twice as fast in many cases.  The :meth:"
"`ElementTree.write() <xml.etree.ElementTree.ElementTree.write>` and :meth:"
"`Element.write` methods now have a *method* parameter that can be "
"\"xml\" (the default), \"html\", or \"text\".  HTML mode will output empty "
"elements as ``<empty></empty>`` instead of ``<empty/>``, and text mode will "
"skip over elements and only output the text chunks.  If you set the :attr:"
"`tag` attribute of an element to ``None`` but leave its children in place, "
"the element will be omitted when the tree is written out, so you don't need "
"to do more extensive rearrangement to remove a single element."
msgstr ""
"ElementTree "
"將樹轉換為字串的程式碼已經過重大修改，在許多情況下速度大約提高了一倍。 "
":meth:`ElementTree.write() <xml.etree.ElementTree.ElementTree.write>` 和 "
":meth:`Element.write` 方法現在有一個 *method* 參數，可以是 ``xml``（預設值）， "
" ``html``或“文本”。 HTML 模式會將空元素輸出為 ``<empty></empty>`` 而不是 ``<"
"empty/>``，而文本模式將跳過元素並僅輸出文本塊。如果您將元素的 :attr:`tag` "
"屬性設定為 ``None`` 但保留其子元素，則在寫出樹時該元素將被省略，因此您無需進"
"行更廣泛的重新排列刪除單個元素。"

#: ../../whatsnew/2.7.rst:2039
#, fuzzy
msgid ""
"Namespace handling has also been improved.  All ``xmlns:<whatever>`` "
"declarations are now output on the root element, not scattered throughout "
"the resulting XML.  You can set the default namespace for a tree by setting "
"the :attr:`default_namespace` attribute and can register new prefixes with :"
"meth:`~xml.etree.ElementTree.register_namespace`.  In XML mode, you can use "
"the true/false *xml_declaration* parameter to suppress the XML declaration."
msgstr ""
"命名空間處理也得到了改進。所有 ``xmlns:<whatever>`` "
"聲明現在都在根元素上輸出，而不是分散在生成的 XML 中。您可以通過設定 "
"default_namespace 屬性為樹設定預設命名空間，並可以使用 :meth:`~xml.etree."
"ElementTree.register_namespace` 註冊新前綴。在 XML 模式下，您可以使用 true/"
"false *xml_declaration* 參數來抑制 XML 聲明。"

#: ../../whatsnew/2.7.rst:2047
#, fuzzy
msgid ""
"New :class:`~xml.etree.ElementTree.Element` method: :meth:`~xml.etree."
"ElementTree.Element.extend` appends the items from a sequence to the "
"element's children.  Elements themselves behave like sequences, so it's easy "
"to move children from one element to another::"
msgstr ""
"新 :class:`~xml.etree.ElementTree.Element` 方法：:meth:`~xml.etree.ElementTree"
".Element.extend` 將序列中的項目附加到元素的子元素。元素本身的行為類似於序列，"
"因此很容易將子元素從一個元素移動到另一個元素::"

#: ../../whatsnew/2.7.rst:2064
#, fuzzy
msgid ""
"New :class:`Element` method: :meth:`~xml.etree.ElementTree.Element.iter` "
"yields the children of the element as a generator.  It's also possible to "
"write ``for child in elem:`` to loop over an element's children.  The "
"existing method :meth:`getiterator` is now deprecated, as is :meth:"
"`getchildren` which constructs and returns a list of children."
msgstr ""
"新 :class:`Element` 方法：:meth:`~xml.etree.ElementTree.Element.iter` "
"生成元素的子元素作為生成器。也可以寫 ``for child in elem:`` "
"來遍曆元素的子元素。現有方法 :meth:`getiterator` 現在已被棄用， "
":meth:`getchildren` 構造並回傳子列表。"

#: ../../whatsnew/2.7.rst:2071
#, fuzzy
msgid ""
"New :class:`Element` method: :meth:`~xml.etree.ElementTree.Element.itertext` "
"yields all chunks of text that are descendants of the element.  For example::"
msgstr ""
"新的 :class:`Element` 方法：:meth:`~xml.etree.ElementTree.Element.itertext` "
"產生作為元素後代的所有文本塊。例如：："

#: ../../whatsnew/2.7.rst:2082
#, fuzzy
msgid ""
"Deprecated: using an element as a Boolean (i.e., ``if elem:``) would return "
"true if the element had any children, or false if there were no children.  "
"This behaviour is confusing -- ``None`` is false, but so is a childless "
"element? -- so it will now trigger a :exc:`FutureWarning`.  In your code, "
"you should be explicit: write ``len(elem) != 0`` if you're interested in the "
"number of children, or ``elem is not None``."
msgstr ""
"棄用：如果元素有任何子元素，則將元素用作布爾值（即 ``if elem:``）將回傳 "
"true，如果沒有子元素則回傳 false。這種行為令人困惑——``None`` "
"是假的，但無子元素也是？ -- 所以它現在會觸發一個 :exc:`FutureWarning`。在你的"
"程式碼中，你應該是明確的：如果你對孩子的數量感興趣，請寫 ``len(elem) != 0``，"
"或者 ``elem 不是 None``。"

#: ../../whatsnew/2.7.rst:2090
#, fuzzy
msgid ""
"Fredrik Lundh develops ElementTree and produced the 1.3 version; you can "
"read his article describing 1.3 at https://web.archive.org/"
"web/20200703234532/http://effbot.org/zone/elementtree-13-intro.htm. Florent "
"Xicluna updated the version included with Python, after discussions on "
"python-dev and in :issue:`6472`.)"
msgstr ""
"Fredrik Lundh 開發了 ElementTree 並製作了 1.3 版本；您可以在 https://web."
"archive.org/web/20200703234532/http://effbot.org/zone/elementtree-13-"
"intro.htm 閱讀他描述 1.3 的文章。 Florent Xicluna 在討論 python-dev 和 "
":issue:`6472` 後更新了 Python 附帶的版本。）"

#: ../../whatsnew/2.7.rst:2100
#, fuzzy
msgid "Build and C API Changes"
msgstr "構建和 C API 更改"

#: ../../whatsnew/2.7.rst:2102
#, fuzzy
msgid "Changes to Python's build process and to the C API include:"
msgstr "Python 構建過程和 C API 的變化包括："

#: ../../whatsnew/2.7.rst:2104
#, fuzzy
msgid ""
"The latest release of the GNU Debugger, GDB 7, can be `scripted using Python "
"<https://web.archive.org/web/20110715084810/http://sourceware.org/gdb/"
"current/onlinedocs/gdb/Python.html>`__. When you begin debugging an "
"executable program P, GDB will look for a file named ``P-gdb.py`` and "
"automatically read it.  Dave Malcolm contributed a :file:`python-gdb.py` "
"that adds a number of commands useful when debugging Python itself.  For "
"example, ``py-up`` and ``py-down`` go up or down one Python stack frame, "
"which usually corresponds to several C stack frames.  ``py-print`` prints "
"the value of a Python variable, and ``py-bt`` prints the Python stack "
"trace.  (Added as a result of :issue:`8032`.)"
msgstr ""
"最新版本的 GNU 除錯器 GDB 7 可以使用 Python <https://web.archive.org/web/"
"20110715084810/http://sourceware.org/gdb/current/onlinedocs/gdb/Python "
"編寫腳本。 html>`__。當您開始除錯可執行程式 P 時，GDB 將查找名為“P-gdb."
"py”的文件並自動讀取它。 Dave Malcolm 貢獻了一個 :file:`python-gdb.py`，"
"它新增了許多在除錯 Python 本身時有用的命令。例如，``py-up`` 和 ``py-down`` "
"向上或向下移動一個 Python 堆疊幀，這通常對應於多個 C 堆疊幀。 ``py-print`` "
"印出 Python 變數的值，``py-bt`` 印出 Python 堆疊跟踪。 （作為 :issue:`8032` "
"的結果新增。）"

#: ../../whatsnew/2.7.rst:2116
#, fuzzy
msgid ""
"If you use the :file:`.gdbinit` file provided with Python, the \"pyo\" macro "
"in the 2.7 version now works correctly when the thread being debugged "
"doesn't hold the GIL; the macro now acquires it before printing. "
"(Contributed by Victor Stinner; :issue:`3632`.)"
msgstr ""
"如果您使用 Python 提供的 :file:`.gdbinit` 文件，當被除錯的執行緒不持有 GIL "
"時，2.7 版本中的 ``pyo``巨集現在可以正常工作；巨集現在在印出前獲取它。 （由 "
"Victor Stinner 提供；:issue:`3632`。）"

#: ../../whatsnew/2.7.rst:2121
#, fuzzy
msgid ""
":c:func:`Py_AddPendingCall` is now thread-safe, letting any worker thread "
"submit notifications to the main Python thread.  This is particularly useful "
"for asynchronous IO operations. (Contributed by Kristján Valur Jónsson; :"
"issue:`4293`.)"
msgstr ""
":c:func:`Py_AddPendingCall` 現在是執行緒安全的，允許任何工作執行緒向主 "
"Python 執行緒提交通知。這對於非同步 IO 操作特別有用。 （由 Kristján Valur "
"Jónsson 提供；:issue:`4293`。）"

#: ../../whatsnew/2.7.rst:2126
#, fuzzy
msgid ""
"New function: :c:func:`PyCode_NewEmpty` creates an empty code object; only "
"the filename, function name, and first line number are required. This is "
"useful for extension modules that are attempting to construct a more useful "
"traceback stack.  Previously such extensions needed to call :c:func:"
"`PyCode_New`, which had many more arguments.  (Added by Jeffrey Yasskin.)"
msgstr ""
"新功能：:c:func:`PyCode_NewEmpty` 建立一個空程式碼物件；只需要文件名、函式名"
"和第一行號。這對於試圖構建更有用的回溯堆疊的擴充模組很有用。"
"以前這樣的擴充需要呼叫 :c:func:`PyCode_New`，它有更多的參數。 "
"（由杰弗里亞斯金新增。）"

#: ../../whatsnew/2.7.rst:2133
#, fuzzy
msgid ""
"New function: :c:func:`PyErr_NewExceptionWithDoc` creates a new exception "
"class, just as the existing :c:func:`PyErr_NewException` does, but takes an "
"extra ``char *`` argument containing the docstring for the new exception "
"class.  (Added by 'lekma' on the Python bug tracker; :issue:`7033`.)"
msgstr ""
"新函式：:c:func:`PyErr_NewExceptionWithDoc` 建立一個新的例外類，就像現有的 "
":c:func:`PyErr_NewException` 所做的那樣，但需要一個額外的 ``char *`` 參數，"
"其中包含新例外類的文檔字串. （由 Python "
"錯誤跟踪器上的 ``lekma``新增；:issue:`7033`。）"

#: ../../whatsnew/2.7.rst:2139
#, fuzzy
msgid ""
"New function: :c:func:`PyFrame_GetLineNumber` takes a frame object and "
"returns the line number that the frame is currently executing. Previously "
"code would need to get the index of the bytecode instruction currently "
"executing, and then look up the line number corresponding to that address.  "
"(Added by Jeffrey Yasskin.)"
msgstr ""
"新函式：:c:func:`PyFrame_GetLineNumber` 獲取一個框架物件並回傳該框架當前正在"
"執行的行號。以前的程式碼需要獲取當前正在執行的位元組碼指令的索引，然後查找該"
"地址對應的行號。 （由杰弗里亞斯金新增。）"

#: ../../whatsnew/2.7.rst:2145
#, fuzzy
msgid ""
"New functions: :c:func:`PyLong_AsLongAndOverflow` and :c:func:"
"`PyLong_AsLongLongAndOverflow`  approximates a Python long integer as a C :c:"
"expr:`long` or :c:expr:`long long`. If the number is too large to fit into "
"the output type, an *overflow* flag is set and returned to the caller. "
"(Contributed by Case Van Horsen; :issue:`7528` and :issue:`7767`.)"
msgstr ""
"新函式：:c:func:`PyLong_AsLongAndOverflow` "
"和:c:func:`PyLong_AsLongLongAndOverflow` 將 Python 長整數近似為 "
"C:c:expr:`long` 或 :c:expr:`long long`。如果數字太大而不適合輸出型別，"
"則會設定一個 *overflow* 旗標並回傳給呼叫者。 （由 Case Van Horsen "
"提供；:issue:`7528` 和 :issue:`7767`。）"

#: ../../whatsnew/2.7.rst:2152
#, fuzzy
msgid ""
"New function: stemming from the rewrite of string-to-float conversion, a "
"new :c:func:`PyOS_string_to_double` function was added.  The old :c:func:"
"`PyOS_ascii_strtod` and :c:func:`PyOS_ascii_atof` functions are now "
"deprecated."
msgstr ""
"新功能：由於重寫了字串到浮點數的轉換，新增了一個新的 "
":c:func:`PyOS_string_to_double` 函式。舊的 :c:func:`PyOS_ascii_strtod` 和 "
":c:func:`PyOS_ascii_atof` 函式現已棄用。"

#: ../../whatsnew/2.7.rst:2157
#, fuzzy
msgid ""
"New function: :c:func:`PySys_SetArgvEx` sets the value of ``sys.argv`` and "
"can optionally update ``sys.path`` to include the directory containing the "
"script named by ``sys.argv[0]`` depending on the value of an *updatepath* "
"parameter."
msgstr ""
"新功能：:c:func:`PySys_SetArgvEx` 設定 ``sys.argv`` 的值，並且可以選擇更新 "
"``sys.path`` 以包含包含由 ``sys.argv[0] 命名的腳本的目錄`` 取決於 "
"*updatepath* 參數的值。"

#: ../../whatsnew/2.7.rst:2162
#, fuzzy
msgid ""
"This function was added to close a security hole for applications that embed "
"Python.  The old function, :c:func:`PySys_SetArgv`, would always update "
"``sys.path``, and sometimes it would add the current directory.  This meant "
"that, if you ran an application embedding Python in a directory controlled "
"by someone else, attackers could put a Trojan-horse module in the directory "
"(say, a file named :file:`os.py`) that your application would then import "
"and run."
msgstr ""
"新增此函式是為了關閉嵌入 Python 的應用程式的安全漏洞。舊函式 "
":c:func:`PySys_SetArgv` 總是會更新 ``sys."
"path``，有時它會新增當前目錄。這意味著，如果您在其他人控制的目錄中運行嵌入 "
"Python 的應用程式，攻擊者可以將特洛伊木馬模組放入該目錄（例如，名為 :file:`os"
".py` 的文件），然後您的應用程式將導入並運行。"

#: ../../whatsnew/2.7.rst:2170
#, fuzzy
msgid ""
"If you maintain a C/C++ application that embeds Python, check whether you're "
"calling :c:func:`PySys_SetArgv` and carefully consider whether the "
"application should be using :c:func:`PySys_SetArgvEx` with *updatepath* set "
"to false."
msgstr ""
"如果您維護嵌入 Python 的 C/C++ "
"應用程式，請檢查您是否正在呼叫 :c:func:`PySys_SetArgv` "
"並仔細考慮應用程式是否應該使用 :c:func:`PySys_SetArgvEx` 並將 *updatepath* "
"設定為 false ."

#: ../../whatsnew/2.7.rst:2175
#, fuzzy
msgid ""
"Security issue reported as `CVE-2008-5983 <https://cve.mitre.org/cgi-bin/"
"cvename.cgi?name=CVE-2008-5983>`_; discussed in :issue:`5753`, and fixed by "
"Antoine Pitrou."
msgstr ""
"安全問題報告為`CVE-2008-5983 <https://cve.mitre.org/cgi-bin/cvename."
"cgi?name=CVE-2008-5983>`_；在 :issue:`5753` 中討論，並由 Antoine Pitrou "
"修復。"

#: ../../whatsnew/2.7.rst:2179
#, fuzzy
msgid ""
"New macros: the Python header files now define the following macros: :c:"
"macro:`Py_ISALNUM`, :c:macro:`Py_ISALPHA`, :c:macro:`Py_ISDIGIT`, :c:macro:"
"`Py_ISLOWER`, :c:macro:`Py_ISSPACE`, :c:macro:`Py_ISUPPER`, :c:macro:"
"`Py_ISXDIGIT`, :c:macro:`Py_TOLOWER`, and :c:macro:`Py_TOUPPER`. All of "
"these functions are analogous to the C standard macros for classifying "
"characters, but ignore the current locale setting, because in several places "
"Python needs to analyze characters in a locale-independent way.  (Added by "
"Eric Smith; :issue:`5793`.)"
msgstr ""
"新巨集：Python 標頭檔現在定義了以下巨集：:c:macro:`Py_ISALNUM`, "
":c:macro:`Py_ISALPHA`, :c:macro:`Py_ISDIGIT`, :c:macro:`Py_ISLOWER`, : c:macr"
"o:`Py_ISSPACE`、:c:macro:`Py_ISUPPER`、:c:macro:`Py_ISXDIGIT`、:c:macro:`Py_T"
"OLOWER` 和:c:macro:`Py_TOUPPER`。所有這些函式都類似於用於對字元進行分類的 C "
"標準巨集，但忽略了當前的語言環境設定，因為在幾個地方 Python "
"需要以與語言環境無關的方式分析字元。 （由 Eric Smith 新增；:issue:`5793`。）"

#: ../../whatsnew/2.7.rst:2197
#, fuzzy
msgid ""
"Removed function: :c:macro:`PyEval_CallObject` is now only available as a "
"macro.  A function version was being kept around to preserve ABI linking "
"compatibility, but that was in 1997; it can certainly be deleted by now.  "
"(Removed by Antoine Pitrou; :issue:`8276`.)"
msgstr ""
"刪除的函式：:c:macro:`PyEval_CallObject` 現在只能作為巨集使用。"
"保留了一個函式版本以保持 ABI 鏈接相容性，但那是在 1997 "
"年；現在肯定可以刪除它。 （由 Antoine Pitrou 刪除；:issue:`8276`。）"

#: ../../whatsnew/2.7.rst:2202
#, fuzzy
msgid ""
"New format codes: the :c:func:`PyFormat_FromString`, :c:func:"
"`PyFormat_FromStringV`, and :c:func:`PyErr_Format` functions now accept "
"``%lld`` and ``%llu`` format codes for displaying C's :c:expr:`long long` "
"types. (Contributed by Mark Dickinson; :issue:`7228`.)"
msgstr ""
"新格式程式碼：:c:func:`PyFormat_FromString`、:c:func:`PyFormat_FromStringV` "
"和 :c:func:`PyErr_Format` 函式現在接受 ``%lld`` 和 ``%llu`` "
"格式程式碼用於顯示 C 的 :c:expr:`long long` 型別。 （由 Mark Dickinson "
"提供；:issue:`7228`。）"

#: ../../whatsnew/2.7.rst:2208
#, fuzzy
msgid ""
"The complicated interaction between threads and process forking has been "
"changed.  Previously, the child process created by :func:`os.fork` might "
"fail because the child is created with only a single thread running, the "
"thread performing the :func:`os.fork`. If other threads were holding a lock, "
"such as Python's import lock, when the fork was performed, the lock would "
"still be marked as \"held\" in the new process.  But in the child process "
"nothing would ever release the lock, since the other threads weren't "
"replicated, and the child process would no longer be able to perform imports."
msgstr ""
"執行緒和行程分叉之間複雜的交互已經改變。以前，由 :func:`os.fork` "
"建立的子行程可能會失敗，因為建立子行程時只有一個執行緒在運行，該執行緒執行 "
":func:`os.fork`。如果其他執行緒持有鎖，比如Python的import lock，那麼在執行for"
"k時，這個鎖在新行程中仍然會被標記為“持有”。但是在子行程中，沒有任何東西會釋放"
"鎖，因為沒有復制其他執行緒，並且子行程將不再能夠執行導入。"

#: ../../whatsnew/2.7.rst:2218
#, fuzzy
msgid ""
"Python 2.7 acquires the import lock before performing an :func:`os.fork`, "
"and will also clean up any locks created using the :mod:`threading` module.  "
"C extension modules that have internal locks, or that call :c:func:`fork()` "
"themselves, will not benefit from this clean-up."
msgstr ""
"Python 2.7 在執行 :func:`os.fork` 之前獲取導入鎖，並且還將清除使用 "
":mod:`threading` 模組建立的所有鎖。具有內部鎖或呼叫 :c:func:`fork()` 本身的 "
"C 擴充模組將不會受益於此清理。"

#: ../../whatsnew/2.7.rst:2224
#, fuzzy
msgid "(Fixed by Thomas Wouters; :issue:`1590864`.)"
msgstr "（由 Thomas Wouters 修復；:issue:`1590864`。）"

#: ../../whatsnew/2.7.rst:2226
#, fuzzy
msgid ""
"The :c:func:`Py_Finalize` function now calls the internal :func:`threading."
"_shutdown` function; this prevents some exceptions from being raised when an "
"interpreter shuts down. (Patch by Adam Olsen; :issue:`1722344`.)"
msgstr ""
":c:func:`Py_Finalize` 函式現在呼叫內部 :func:`threading._shutdown` "
"函式；這可以防止直譯器關閉時引發某些例外。 （Adam Olsen "
"的補丁；:issue:`1722344`。）"

#: ../../whatsnew/2.7.rst:2231
#, fuzzy
msgid ""
"When using the :c:type:`PyMemberDef` structure to define attributes of a "
"type, Python will no longer let you try to delete or set a :const:"
"`T_STRING_INPLACE` attribute."
msgstr "當使用 PyMemberDef 結構定義型別的屬性時，Python 將不再允許您嘗試刪除或設定 "
"T_STRING_INPLACE 屬性。"

#: ../../whatsnew/2.7.rst:2237
#, fuzzy
msgid ""
"Global symbols defined by the :mod:`ctypes` module are now prefixed with "
"``Py``, or with ``_ctypes``.  (Implemented by Thomas Heller; :issue:`3102`.)"
msgstr ""
":mod:`ctypes` 模組定義的全局符號現在以 ``Py`` 或 ``_ctypes`` 為前綴。 （由 "
"Thomas Heller 實施；:issue:`3102`。）"

#: ../../whatsnew/2.7.rst:2241
#, fuzzy
msgid ""
"New configure option: the :option:`!--with-system-expat` switch allows "
"building the :mod:`pyexpat` module to use the system Expat library. "
"(Contributed by Arfrever Frehtes Taifersar Arahesis; :issue:`7609`.)"
msgstr ""
"新配置選項：:option:`!--with-system-expat` 開關允許構建 :mod:`pyexpat` "
"模組以使用系統 Expat 庫。 （由 Arfrever Frehtes Taifersar Arahesis "
"提供；:issue:`7609`。）"

#: ../../whatsnew/2.7.rst:2245
#, fuzzy
msgid ""
"New configure option: the :option:`!--with-valgrind` option will now disable "
"the pymalloc allocator, which is difficult for the Valgrind memory-error "
"detector to analyze correctly. Valgrind will therefore be better at "
"detecting memory leaks and overruns. (Contributed by James Henstridge; :"
"issue:`2422`.)"
msgstr ""
"新的配置選項：:option:`!--with-valgrind` 選項現在將禁用 pymalloc 分配器，"
"Valgrind 記憶體錯誤檢測器很難正確分析它。因此，Valgrind "
"會更好地檢測記憶體洩漏和溢出。 （由 James Henstridge 提供；:issue:`2422`。）"

#: ../../whatsnew/2.7.rst:2252
#, fuzzy
msgid ""
"New configure option: you can now supply an empty string to :option:`!--with-"
"dbmliborder=` in order to disable all of the various DBM modules.  (Added by "
"Arfrever Frehtes Taifersar Arahesis; :issue:`6491`.)"
msgstr ""
"新的配置選項：您現在可以向 :option:`!--with-dbmliborder=` 提供一個空字串，"
"以禁用所有各種 DBM 模組。 （由 Arfrever Frehtes Taifersar Arahesis "
"新增；:issue:`6491`。）"

#: ../../whatsnew/2.7.rst:2257
#, fuzzy
msgid ""
"The :program:`configure` script now checks for floating-point rounding bugs "
"on certain 32-bit Intel chips and defines a :c:macro:`X87_DOUBLE_ROUNDING` "
"preprocessor definition.  No code currently uses this definition, but it's "
"available if anyone wishes to use it. (Added by Mark Dickinson; :issue:"
"`2937`.)"
msgstr ""
":program:`configure` 腳本現在檢查某些 32 位 Intel "
"芯片上的浮點舍入錯誤，並定義一個:c:macro:`X87_DOUBLE_ROUNDING` "
"預處理器定義。目前沒有程式碼使用這個定義，但如果有人想使用它，它是可用的。 （"
"由 Mark Dickinson 新增；:issue:`2937`。）"

#: ../../whatsnew/2.7.rst:2263
#, fuzzy
msgid ""
":program:`configure` also now sets a :envvar:`LDCXXSHARED` Makefile variable "
"for supporting C++ linking.  (Contributed by Arfrever Frehtes Taifersar "
"Arahesis; :issue:`1222585`.)"
msgstr ""
":program:`configure` 現在還設定了一個 :envvar:`LDCXXSHARED` Makefile "
"變數以支援 C++ 鏈接。 （由 Arfrever Frehtes Taifersar Arahesis "
"提供；:issue:`1222585`。）"

#: ../../whatsnew/2.7.rst:2267
#, fuzzy
msgid ""
"The build process now creates the necessary files for pkg-config support.  "
"(Contributed by Clinton Roy; :issue:`3585`.)"
msgstr "構建過程現在為 pkg-config 支援建立必要的文件。 （由 Clinton Roy "
"提供；:issue:`3585`。）"

#: ../../whatsnew/2.7.rst:2270
#, fuzzy
msgid ""
"The build process now supports Subversion 1.7.  (Contributed by Arfrever "
"Frehtes Taifersar Arahesis; :issue:`6094`.)"
msgstr ""
"構建過程現在支援 Subversion 1.7。 （由 Arfrever Frehtes Taifersar Arahesis "
"提供；:issue:`6094`。）"

#: ../../whatsnew/2.7.rst:2277
#, fuzzy
msgid "Capsules"
msgstr "膠囊"

#: ../../whatsnew/2.7.rst:2279
#, fuzzy
msgid ""
"Python 3.1 adds a new C datatype, :c:type:`PyCapsule`, for providing a C API "
"to an extension module.  A capsule is essentially the holder of a C ``void "
"*`` pointer, and is made available as a module attribute; for example, the :"
"mod:`socket` module's API is exposed as ``socket.CAPI``, and :mod:"
"`unicodedata` exposes ``ucnhash_CAPI``.  Other extensions can import the "
"module, access its dictionary to get the capsule object, and then get the "
"``void *`` pointer, which will usually point to an array of pointers to the "
"module's various API functions."
msgstr ""
"Python 3.1 新增了一個新的 C 資料型別 :c:type:`PyCapsule`，用於為擴充模組提供 "
"C API。膠囊本質上是 C ``void *`` "
"指標的持有者，並作為模組屬性提供；例如，:mod:`socket` 模組的 API 公開為 "
"``socket.CAPI``，而 :mod:`unicodedata` 公開了 "
"``ucnhash_CAPI``。其他擴充可以導入模組，訪問其字典以獲取膠囊物件，然後獲取``"
"void *`` 指標，該指標通常指向指向模組各種API 函式的指標數組。"

#: ../../whatsnew/2.7.rst:2288
#, fuzzy
msgid ""
"There is an existing data type already used for this, :c:type:`PyCObject`, "
"but it doesn't provide type safety.  Evil code written in pure Python could "
"cause a segmentation fault by taking a :c:type:`PyCObject` from module A and "
"somehow substituting it for the :c:type:`PyCObject` in module B.   Capsules "
"know their own name, and getting the pointer requires providing the name:"
msgstr ""
"現有資料型別已用於此，:c:type:`PyCObject`，但它不提供型別安全。用純 Python "
"編寫的惡意程式碼可能會導致分段錯誤，方法是從模組 A 中獲取一個 PyCObject "
"並以某種方式將其替換為模組 B 中的 "
"PyCObject。膠囊知道自己的名字，並且獲取指標需要提供名稱："

#: ../../whatsnew/2.7.rst:2306
#, fuzzy
msgid ""
"You are assured that ``vtable`` points to whatever you're expecting. If a "
"different capsule was passed in, :c:func:`PyCapsule_IsValid` would detect "
"the mismatched name and return false.  Refer to :ref:`using-capsules` for "
"more information on using these objects."
msgstr ""
"您確信 ``vtable`` "
"指向您期望的任何內容。如果傳入不同的膠囊，:c:func:`PyCapsule_IsValid` "
"將檢測到不匹配的名稱並回傳 false。有關使用這些物件的更多資訊，請參閱 :ref"
":`using-capsules`。"

#: ../../whatsnew/2.7.rst:2311
#, fuzzy
msgid ""
"Python 2.7 now uses capsules internally to provide various extension-module "
"APIs, but the :c:func:`PyCObject_AsVoidPtr` was modified to handle capsules, "
"preserving compile-time compatibility with the :c:type:`CObject` interface.  "
"Use of :c:func:`PyCObject_AsVoidPtr` will signal a :exc:"
"`PendingDeprecationWarning`, which is silent by default."
msgstr ""
"Python 2.7 現在在內部使用膠囊來提供各種擴充模組 API，但是 "
"PyCObject_AsVoidPtr 被修改為處理膠囊，保留與 CObject 介面的編譯時相容性。"
"使用 :c:func:`PyCObject_AsVoidPtr` 將發出 :exc:`PendingDeprecationWarning` "
"信號，預設情況下是靜默的。"

#: ../../whatsnew/2.7.rst:2318
#, fuzzy
msgid ""
"Implemented in Python 3.1 and backported to 2.7 by Larry Hastings; discussed "
"in :issue:`5630`."
msgstr "在 Python 3.1 中實作並由 Larry Hastings 向後移植到 2.7；在 :issue:`5630` "
"中討論。"

#: ../../whatsnew/2.7.rst:2325
#, fuzzy
msgid "Port-Specific Changes: Windows"
msgstr "特定於端口的更改：Windows"

#: ../../whatsnew/2.7.rst:2327
#, fuzzy
msgid ""
"The :mod:`msvcrt` module now contains some constants from the :file:"
"`crtassem.h` header file: :data:`CRT_ASSEMBLY_VERSION`, :data:"
"`VC_ASSEMBLY_PUBLICKEYTOKEN`, and :data:`LIBRARIES_ASSEMBLY_NAME_PREFIX`. "
"(Contributed by David Cournapeau; :issue:`4365`.)"
msgstr ""
":mod:`msvcrt` 模組現在包含來自 :file:`crtassem.h` 標頭檔的一些常數：:data:`CRT"
"_ASSEMBLY_VERSION`、:data:`VC_ASSEMBLY_PUBLICKEYTOKEN` "
"和 :data:`LIBRARIES_ASSEMBLY_NAME_PREFIX`。 （由 David Cournapeau "
"提供；:issue:`4365`。）"

#: ../../whatsnew/2.7.rst:2334
#, fuzzy
msgid ""
"The :mod:`_winreg` module for accessing the registry now implements the :"
"func:`~_winreg.CreateKeyEx` and :func:`~_winreg.DeleteKeyEx` functions, "
"extended versions of previously supported functions that take several extra "
"arguments.  The :func:`~_winreg.DisableReflectionKey`, :func:`~_winreg."
"EnableReflectionKey`, and :func:`~_winreg.QueryReflectionKey` were also "
"tested and documented. (Implemented by Brian Curtin: :issue:`7347`.)"
msgstr ""
"用於訪問註冊表的 :mod:`_winreg` 模組現在實作了 :func:`~_winreg.CreateKeyEx` "
"和 :func:`~_winreg.DeleteKeyEx` "
"函式，這是以前支援的函式的擴充版本，需要幾個額外的參數。 :func:`~_winreg."
"DisableReflectionKey`、:func:`~_winreg.EnableReflectionKey` 和 "
":func:`~_winreg.QueryReflectionKey` 也經過測試和記錄。 （由 Brian Curtin "
"實施：:issue:`7347`。）"

#: ../../whatsnew/2.7.rst:2342
#, fuzzy
msgid ""
"The new :c:func:`_beginthreadex` API is used to start threads, and the "
"native thread-local storage functions are now used. (Contributed by Kristján "
"Valur Jónsson; :issue:`3582`.)"
msgstr ""
"新的 :c:func:`_beginthreadex` API "
"用於啟動執行緒，現在使用本地執行緒本地儲存函式。 （由 Kristján Valur Jónsson "
"提供；:issue:`3582`。）"

#: ../../whatsnew/2.7.rst:2346
#, fuzzy
msgid ""
"The :func:`os.kill` function now works on Windows.  The signal value can be "
"the constants :const:`CTRL_C_EVENT`, :const:`CTRL_BREAK_EVENT`, or any "
"integer.  The first two constants will send :kbd:`Control-C` and :kbd:"
"`Control-Break` keystroke events to subprocesses; any other value will use "
"the :c:func:`TerminateProcess` API.  (Contributed by Miki Tebeka; :issue:"
"`1220212`.)"
msgstr ""
":func:`os.kill` 函式現在可以在 Windows 上運行。信號值可以是常數 "
":const:`CTRL_C_EVENT`、:const:`CTRL_BREAK_EVENT` 或任何整數。"
"前兩個常數將發送 :kbd:`Control-C` 和 :kbd:`Control-Break` "
"擊鍵事件到子行程；任何其他值將使用:c:func:`TerminateProcess` API。 （由 Miki "
"Tebeka 提供；:issue:`1220212`。）"

#: ../../whatsnew/2.7.rst:2353
#, fuzzy
msgid ""
"The :func:`os.listdir` function now correctly fails for an empty path.  "
"(Fixed by Hirokazu Yamamoto; :issue:`5913`.)"
msgstr ""
":func:`os.listdir` 函式現在可以正確地針對空路徑失敗。 （由 Hirokazu Yamamoto "
"修復；:issue:`5913`。）"

#: ../../whatsnew/2.7.rst:2356
#, fuzzy
msgid ""
"The :mod:`mimelib` module will now read the MIME database from the Windows "
"registry when initializing. (Patch by Gabriel Genellina; :issue:`4969`.)"
msgstr ""
":mod:`mimelib` 模組現在會在初始化時從 Windows 註冊表中讀取 MIME 資料庫。 （"
"Gabriel Genellina 的補丁；:issue:`4969`。）"

#: ../../whatsnew/2.7.rst:2363
#, fuzzy
msgid "Port-Specific Changes: Mac OS X"
msgstr "特定於端口的更改：Mac OS X"

#: ../../whatsnew/2.7.rst:2365
#, fuzzy
msgid ""
"The path ``/Library/Python/2.7/site-packages`` is now appended to ``sys."
"path``, in order to share added packages between the system installation and "
"a user-installed copy of the same version. (Changed by Ronald Oussoren; :"
"issue:`4865`.)"
msgstr ""
"路徑“/Library/Python/2.7/site-packages”現在附加到“sys."
"path”，以便在系統安裝和使用者安裝的同一版本副本之間共享新增的包。 （由 "
"Ronald Oussoren 更改；:issue:`4865`。）"

#: ../../whatsnew/2.7.rst:2372
#, fuzzy
msgid ""
"As of 2.7.13, this change was removed. ``/Library/Python/2.7/site-"
"packages``, the site-packages directory used by the Apple-supplied system "
"Python 2.7 is no longer appended to ``sys.path`` for user-installed Pythons "
"such as from the python.org installers.  As of macOS 10.12, Apple changed "
"how the system site-packages directory is configured, which could cause "
"installation of pip components, like setuptools, to fail.  Packages "
"installed for the system Python will no longer be shared with user-installed "
"Pythons. (:issue:`28440`)"
msgstr ""
"從 2.7.13 開始，此更改已刪除。 ``/Library/Python/2.7/site-packages``，Apple "
"提供的系統 Python 2.7 使用的 site-packages 目錄不再附加到使用者安裝的 Python "
"的 ``sys.path``，例如來自python.org 安裝程式。從 macOS 10.12 開始，Apple "
"更改了系統站點包目錄的配置方式，這可能會導致 pip 組件（如 "
"setuptools）的安裝失敗。為系統 Python 安裝的包將不再與使用者安裝的 Python "
"共享。 （ :issue:`28440`）"

#: ../../whatsnew/2.7.rst:2383
#, fuzzy
msgid "Port-Specific Changes: FreeBSD"
msgstr "特定於端口的更改：FreeBSD"

#: ../../whatsnew/2.7.rst:2385
#, fuzzy
msgid ""
"FreeBSD 7.1's :const:`SO_SETFIB` constant, used with :func:`~socket."
"getsockopt`/:func:`~socket.setsockopt` to select an alternate routing table, "
"is now available in the :mod:`socket` module.  (Added by Kyle VanderBeek; :"
"issue:`8235`.)"
msgstr ""
"FreeBSD 7.1 的 :const:`SO_SETFIB` 常數，與 :func:`~socket."
"getsockopt`/:func:`~socket.setsockopt` 一起使用來選擇備用路由表，現在在 "
":mod:`socket 中可用`模組。 （由 Kyle VanderBeek 新增；:issue:`8235`。）"

#: ../../whatsnew/2.7.rst:2391
#, fuzzy
msgid "Other Changes and Fixes"
msgstr "其他更改和修復"

#: ../../whatsnew/2.7.rst:2393
#, fuzzy
msgid ""
"Two benchmark scripts, :file:`iobench` and :file:`ccbench`, were added to "
"the :file:`Tools` directory.  :file:`iobench` measures the speed of the "
"built-in file I/O objects returned by :func:`open` while performing various "
"operations, and :file:`ccbench` is a concurrency benchmark that tries to "
"measure computing throughput, thread switching latency, and IO processing "
"bandwidth when performing several tasks using a varying number of threads."
msgstr ""
"兩個基準測試腳本，:file:`iobench` 和 :file:`ccbench`，被新增到 :file:`Tools` "
"目錄。 :file:`iobench` 測量 :func:`open` 在執行各種操作時回傳的內建文件 I/O "
"物件的速度，而 :file:`ccbench` "
"是一個試圖測量計算吞吐量的並發基準，使用不同數量的執行緒執行多個任務時，"
"執行緒切換延遲和 IO 處理帶寬。"

#: ../../whatsnew/2.7.rst:2401
#, fuzzy
msgid ""
"The :file:`Tools/i18n/msgfmt.py` script now understands plural forms in :"
"file:`.po` files.  (Fixed by Martin von Löwis; :issue:`5464`.)"
msgstr ""
":file:`Tools/i18n/msgfmt.py` 腳本現在可以理解 :file:`.po` 文件中的複數形式。 "
"（由 Martin von Löwis 修復；:issue:`5464`。）"

#: ../../whatsnew/2.7.rst:2405
#, fuzzy
msgid ""
"When importing a module from a :file:`.pyc` or :file:`.pyo` file with an "
"existing :file:`.py` counterpart, the :attr:`co_filename` attributes of the "
"resulting code objects are overwritten when the original filename is "
"obsolete.  This can happen if the file has been renamed, moved, or is "
"accessed through different paths.  (Patch by Ziga Seilnacht and Jean-Paul "
"Calderone; :issue:`1180193`.)"
msgstr ""
"從 :file:`.pyc` 或 :file:`.pyo` 文件導入模組時，現有的 :file:`.py` 對應物，"
"結果程式碼物件的 :attr:`co_filename` 屬性將被覆蓋原始文件名已過時。如果文件已"
"重命名、移動或通過不同路徑訪問，則可能會發生這種情況。 （Ziga Seilnacht 和 "
"Jean-Paul Calderone 的補丁；:issue:`1180193`。）"

#: ../../whatsnew/2.7.rst:2412
#, fuzzy
msgid ""
"The :file:`regrtest.py` script now takes a :option:`!--randseed=` switch "
"that takes an integer that will be used as the random seed for the :option:"
"`!-r` option that executes tests in random order. The :option:`!-r` option "
"also reports the seed that was used (Added by Collin Winter.)"
msgstr ""
":file:`regrtest.py` 腳本現在採用一個 :option:`!--randseed=` "
"開關，該開關採用一個整數，該整數將用作執行測試的 :option:`!-r` "
"選項的隨機種子以隨機順序。 :option:`!-r` 選項還報告使用的種子（由 Collin "
"Winter 新增。）"

#: ../../whatsnew/2.7.rst:2418
#, fuzzy
msgid ""
"Another :file:`regrtest.py` switch is :option:`!-j`, which takes an integer "
"specifying how many tests run in parallel. This allows reducing the total "
"runtime on multi-core machines. This option is compatible with several other "
"options, including the :option:`!-R` switch which is known to produce long "
"runtimes. (Added by Antoine Pitrou, :issue:`6152`.)  This can also be used "
"with a new :option:`!-F` switch that runs selected tests in a loop until "
"they fail.  (Added by Antoine Pitrou; :issue:`7312`.)"
msgstr ""
"另一個 :file:`regrtest.py` 開關是 :option:`!-j`，它採用一個整數來指定並行運行"
"的測試數量。這允許減少多核機器上的總運行時間。此選項與其他幾個選項相容，"
"包括眾所周知會產生較長運行時間的 :option:`!-R` 開關。 （由 Antoine Pitrou "
"新增，:issue:`6152`。）這也可以與新的 :option:`!-F` "
"開關一起使用，該開關循環運行選定的測試，直到它們失敗。 （由 Antoine Pitrou "
"新增；:issue:`7312`。）"

#: ../../whatsnew/2.7.rst:2427
#, fuzzy
msgid ""
"When executed as a script, the :file:`py_compile.py` module now accepts "
"``'-'`` as an argument, which will read standard input for the list of "
"filenames to be compiled.  (Contributed by Piotr Ożarowski; :issue:`8233`.)"
msgstr ""
"當作為腳本執行時，:file:`py_compile.py` 模組現在接受 ``'-'`` "
"作為參數，它將讀取要編譯的文件名列表的標準輸入。 （由 Piotr Ożarowski "
"提供；:issue:`8233`。）"

#: ../../whatsnew/2.7.rst:2435
#, fuzzy
msgid "Porting to Python 2.7"
msgstr "移植到 Python 2.7"

#: ../../whatsnew/2.7.rst:2437
#, fuzzy
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code:"
msgstr "本節列出了之前描述的更改和其他可能需要更改程式碼的錯誤修復："

#: ../../whatsnew/2.7.rst:2440
#, fuzzy
msgid ""
"The :func:`range` function processes its arguments more consistently; it "
"will now call :meth:`__int__` on non-float, non-integer arguments that are "
"supplied to it.  (Fixed by Alexander Belopolsky; :issue:`1533`.)"
msgstr ""
":func:`range` 函式更一致地處理其參數；它現在將在提供給它的非浮點數、"
"非整數參數上呼叫 :meth:`__int__`。 （由 Alexander Belopolsky "
"修復；:issue:`1533`。）"

#: ../../whatsnew/2.7.rst:2445
#, fuzzy
msgid ""
"The string :meth:`format` method changed the default precision used for "
"floating-point and complex numbers from 6 decimal places to 12, which "
"matches the precision used by :func:`str`. (Changed by Eric Smith; :issue:"
"`5920`.)"
msgstr ""
"string :meth:`format` 方法將用於浮點數和復數的預設精度從 6 位小數更改為 12 "
"位，這與 :func:`str` 使用的精度相匹配。 （由 Eric Smith "
"更改；:issue:`5920`。）"

#: ../../whatsnew/2.7.rst:2450
#, fuzzy
msgid ""
"Because of an optimization for the :keyword:`with` statement, the special "
"methods :meth:`__enter__` and :meth:`__exit__` must belong to the object's "
"type, and cannot be directly attached to the object's instance.  This "
"affects new-style classes (derived from :class:`object`) and C extension "
"types.  (:issue:`6101`.)"
msgstr ""
"由於對 :keyword:`with` 語句的最佳化，特殊方法 :meth:`__enter__` 和 "
":meth:`__exit__` "
"必須屬於物件的型別，不能直接附加到物件的實例。這會影響新式類（派生自 "
":class:`object`）和 C 擴充型別。 （ :issue:`6101`。）"

#: ../../whatsnew/2.7.rst:2456
#, fuzzy
msgid ""
"Due to a bug in Python 2.6, the *exc_value* parameter to :meth:`__exit__` "
"methods was often the string representation of the exception, not an "
"instance.  This was fixed in 2.7, so *exc_value* will be an instance as "
"expected.  (Fixed by Florent Xicluna; :issue:`7853`.)"
msgstr ""
"由於 Python 2.6 中的錯誤，:meth:`__exit__` 方法的 *exc_value* "
"參數通常是例外的字串表示形式，而不是實例。這在 2.7 中已修復，因此 *exc_value*"
" 將是預期的實例。 （由 Florent Xicluna 修復；:issue:`7853`。）"

#: ../../whatsnew/2.7.rst:2466
#, fuzzy
msgid "In the standard library:"
msgstr "在標準庫中："

#: ../../whatsnew/2.7.rst:2468
#, fuzzy
msgid ""
"Operations with :class:`~datetime.datetime` instances that resulted in a "
"year falling outside the supported range didn't always raise :exc:"
"`OverflowError`.  Such errors are now checked more carefully and will now "
"raise the exception. (Reported by Mark Leander, patch by Anand B. Pillai and "
"Alexander Belopolsky; :issue:`7150`.)"
msgstr ""
"導致年份超出支援範圍的 :class:`~datetime.datetime` 實例的操作並不總是引發 "
":exc:`OverflowError`。現在會更仔細地檢查此類錯誤，現在會引發例外。 （Mark "
"Leander 報導，Anand B. Pillai 和 Alexander Belopolsky "
"的補丁；:issue:`7150`。）"

#: ../../whatsnew/2.7.rst:2474
#, fuzzy
msgid ""
"When using :class:`~decimal.Decimal` instances with a string's :meth:"
"`format` method, the default alignment was previously left-alignment.  This "
"has been changed to right-alignment, which might change the output of your "
"programs. (Changed by Mark Dickinson; :issue:`6857`.)"
msgstr ""
"將 :class:`~decimal.Decimal` 實例與字串的 :meth:`format` 方法一起使用時，預設"
"對齊方式以前是左對齊。這已更改為右對齊，這可能會更改程式的輸出。 （由 Mark "
"Dickinson 更改；:issue:`6857`。）"

#: ../../whatsnew/2.7.rst:2480
#, fuzzy
msgid ""
"Comparisons involving a signaling NaN value (or ``sNAN``) now signal :const:"
"`~decimal.InvalidOperation` instead of silently returning a true or false "
"value depending on the comparison operator.  Quiet NaN values (or ``NaN``) "
"are now hashable.  (Fixed by Mark Dickinson; :issue:`7279`.)"
msgstr ""
"涉及信號 NaN 值（或 ``sNAN``）的比較現在發出信號 :const:`~decimal."
"InvalidOperation` 而不是根據比較運算符靜默回傳 true 或 false 值。 Quiet NaN "
"值（或 ``NaN``）現在可以散列。 （由 Mark Dickinson 修復；:issue:`7279`。）"

#: ../../whatsnew/2.7.rst:2492
#, fuzzy
msgid ""
"The :meth:`~StringIO.StringIO.readline` method of :class:`~StringIO."
"StringIO` objects now does nothing when a negative length is requested, as "
"other file-like objects do.  (:issue:`7348`)."
msgstr ""
":meth:`~StringIO.StringIO.readline` "
"物件的方法現在在請求負長度時不執行任何操作，就像其他類似文件的對像一樣。 "
"（ :issue:`7348`）。"

#: ../../whatsnew/2.7.rst:2535
#, fuzzy
msgid "For C extensions:"
msgstr "對於 C 擴充："

#: ../../whatsnew/2.7.rst:2537
#, fuzzy
msgid ""
"C extensions that use integer format codes with the ``PyArg_Parse*`` family "
"of functions will now raise a :exc:`TypeError` exception instead of "
"triggering a :exc:`DeprecationWarning` (:issue:`5080`)."
msgstr ""
"使用具有 ``PyArg_Parse*`` 函式係列的整數格式程式碼的 C 擴充現在將引發 "
":exc:`TypeError` 例外，而不是觸發 :exc:`DeprecationWarning` (:issue:`5080`)。"

#: ../../whatsnew/2.7.rst:2541
#, fuzzy
msgid ""
"Use the new :c:func:`PyOS_string_to_double` function instead of the old :c:"
"func:`PyOS_ascii_strtod` and :c:func:`PyOS_ascii_atof` functions, which are "
"now deprecated."
msgstr ""
"使用新的 :c:func:`PyOS_string_to_double` 函式代替舊的 "
":c:func:`PyOS_ascii_strtod` 和 :c:func:`PyOS_ascii_atof` "
"函式，這些函式現已棄用。"

#: ../../whatsnew/2.7.rst:2545
#, fuzzy
msgid "For applications that embed Python:"
msgstr "對於嵌入 Python 的應用程式："

#: ../../whatsnew/2.7.rst:2547
#, fuzzy
msgid ""
"The :c:func:`PySys_SetArgvEx` function was added, letting applications close "
"a security hole when the existing :c:func:`PySys_SetArgv` function was "
"used.  Check whether you're calling :c:func:`PySys_SetArgv` and carefully "
"consider whether the application should be using :c:func:`PySys_SetArgvEx` "
"with *updatepath* set to false."
msgstr ""
"新增了:c:func:`PySys_SetArgvEx` "
"函式，讓應用程式在使用現有的:c:func:`PySys_SetArgv` 函式時關閉安全漏洞。"
"檢查您是否正在呼叫 PySys_SetArgv 並仔細考慮應用程式是否應使用 *updatepath* "
"設定為 false 的 PySys_SetArgvEx。"

#: ../../whatsnew/2.7.rst:2560
#, fuzzy
msgid "New Features Added to Python 2.7 Maintenance Releases"
msgstr "新增到 Python 2.7 維護版本的新功能"

#: ../../whatsnew/2.7.rst:2562
#, fuzzy
msgid ""
"New features may be added to Python 2.7 maintenance releases when the "
"situation genuinely calls for it. Any such additions must go through the "
"Python Enhancement Proposal process, and make a compelling case for why they "
"can't be adequately addressed by either adding the new feature solely to "
"Python 3, or else by publishing it on the Python Package Index."
msgstr ""
"當情況真正需要時，新功能可能會新增到 Python 2.7 維護版本中。"
"任何此類新增都必須通過 Python 增強提案流程，並通過將新功能單獨新增到 Python "
"3 或將其發佈在 Python Package Index "
"上來提供令人信服的理由來說明為什麼不能充分解決這些問題。"

#: ../../whatsnew/2.7.rst:2568
#, fuzzy
msgid ""
"In addition to the specific proposals listed below, there is a general "
"exemption allowing new ``-3`` warnings to be added in any Python 2.7 "
"maintenance release."
msgstr "除了下面列出的具體建議之外，還有一項通用豁免，允許在任何 Python 2.7 "
"維護版本中新增新的 ``-3``警告。"

#: ../../whatsnew/2.7.rst:2574
#, fuzzy
msgid "Two new environment variables for debug mode"
msgstr "除錯模式的兩個新環境變數"

#: ../../whatsnew/2.7.rst:2576
#, fuzzy
msgid ""
"In debug mode, the ``[xxx refs]`` statistic is not written by default, the :"
"envvar:`PYTHONSHOWREFCOUNT` environment variable now must also be set. "
"(Contributed by Victor Stinner; :issue:`31733`.)"
msgstr ""
"在除錯模式下，預設情況下不寫入 ``[xxx refs]`` 統計資訊，現在還必須設定 "
":envvar:`PYTHONSHOWREFCOUNT` 環境變數。 （由 Victor Stinner "
"提供；:issue:`31733`。）"

#: ../../whatsnew/2.7.rst:2580
#, fuzzy
msgid ""
"When Python is compiled with ``COUNT_ALLOC`` defined, allocation counts are "
"no longer dumped by default anymore: the :envvar:`PYTHONSHOWALLOCCOUNT` "
"environment variable must now also be set. Moreover, allocation counts are "
"now dumped into stderr, rather than stdout. (Contributed by Victor Stinner; :"
"issue:`31692`.)"
msgstr ""
"當 Python 編譯時定義了 ``COUNT_ALLOC``，預設情況下不再轉儲分配計數："
"現在還必須設定 PYTHONSHOWALLOCCOUNT 環境變數。此外，分配計數現在轉儲到 "
"stderr，而不是 stdout。 （由 Victor Stinner 提供；:issue:`31692`。）"

#: ../../whatsnew/2.7.rst:2589
#, fuzzy
msgid "PEP 434: IDLE Enhancement Exception for All Branches"
msgstr "PEP 434：所有分支的 IDLE 增強例外"

#: ../../whatsnew/2.7.rst:2591
#, fuzzy
msgid ""
":pep:`434` describes a general exemption for changes made to the IDLE "
"development environment shipped along with Python. This exemption makes it "
"possible for the IDLE developers to provide a more consistent user "
"experience across all supported versions of Python 2 and 3."
msgstr ""
":pep:`434` 描述了對與 Python 一起提供的 IDLE 開發環境所做更改的一般豁免。"
"此豁免使 IDLE 開發人員可以在所有受支援的 Python 2 和 3 "
"版本中提供更一致的使用者體驗。"

#: ../../whatsnew/2.7.rst:2596
#, fuzzy
msgid ""
"For details of any IDLE changes, refer to the NEWS file for the specific "
"release."
msgstr "有關任何 IDLE 更改的詳細資訊，請參閱特定版本的 NEWS 文件。"

#: ../../whatsnew/2.7.rst:2601
#, fuzzy
msgid "PEP 466: Network Security Enhancements for Python 2.7"
msgstr "PEP 466：Python 2.7 的網絡安全增強"

#: ../../whatsnew/2.7.rst:2603
#, fuzzy
msgid ""
":pep:`466` describes a number of network security enhancement proposals that "
"have been approved for inclusion in Python 2.7 maintenance releases, with "
"the first of those changes appearing in the Python 2.7.7 release."
msgstr ""
":pep:`466` 描述了一些已被批准包含在 Python 2.7 維護版本中的網絡安全增強建議，"
"其中第一個更改出現在 Python 2.7.7 版本中。"

#: ../../whatsnew/2.7.rst:2607
#, fuzzy
msgid ":pep:`466` related features added in Python 2.7.7:"
msgstr ":pep:`466` 相關功能在 Python 2.7.7 中新增："

#: ../../whatsnew/2.7.rst:2609
#, fuzzy
msgid ""
":func:`hmac.compare_digest` was backported from Python 3 to make a timing "
"attack resistant comparison operation available to Python 2 applications. "
"(Contributed by Alex Gaynor; :issue:`21306`.)"
msgstr ""
":func:`hmac.compare_digest` 是從 Python 3 向後移植的，以使 Python 2 "
"應用程式可以使用抗定時攻擊的比較操作。 （由 Alex Gaynor "
"提供；:issue:`21306`。）"

#: ../../whatsnew/2.7.rst:2613
#, fuzzy
msgid ""
"OpenSSL 1.0.1g was upgraded in the official Windows installers published on "
"python.org. (Contributed by Zachary Ware; :issue:`21462`.)"
msgstr ""
"OpenSSL 1.0.1g 在 python.org 上發布的官方 Windows 安裝程式中進行了升級。 （"
"由 Zachary Ware 提供；:issue:`21462`。）"

#: ../../whatsnew/2.7.rst:2616
#, fuzzy
msgid ":pep:`466` related features added in Python 2.7.8:"
msgstr ":pep:`466` 相關特性在 Python 2.7.8 中新增："

#: ../../whatsnew/2.7.rst:2618
#, fuzzy
msgid ""
":func:`hashlib.pbkdf2_hmac` was backported from Python 3 to make a hashing "
"algorithm suitable for secure password storage broadly available to Python 2 "
"applications. (Contributed by Alex Gaynor; :issue:`21304`.)"
msgstr ""
":func:`hashlib.pbkdf2_hmac` 是從 Python 3 向後移植的，"
"使適用於安全密碼儲存的雜湊演算法廣泛適用於 Python 2 應用程式。 （由 Alex "
"Gaynor 提供；:issue:`21304`。）"

#: ../../whatsnew/2.7.rst:2622
#, fuzzy
msgid ""
"OpenSSL 1.0.1h was upgraded for the official Windows installers published on "
"python.org. (contributed by Zachary Ware in :issue:`21671` for CVE-2014-0224)"
msgstr ""
"針對 python.org 上發布的官方 Windows 安裝程式升級了 OpenSSL 1.0.1h。 （由 "
"Zachary Ware 在 :issue:`21671` 中為 CVE-2014-0224 貢獻）"

#: ../../whatsnew/2.7.rst:2625
#, fuzzy
msgid ":pep:`466` related features added in Python 2.7.9:"
msgstr ":pep:`466` 相關特性在 Python 2.7.9 中新增："

#: ../../whatsnew/2.7.rst:2627
#, fuzzy
msgid ""
"Most of Python 3.4's :mod:`ssl` module was backported. This means :mod:`ssl` "
"now supports Server Name Indication, TLS1.x settings, access to the platform "
"certificate store, the :class:`~ssl.SSLContext` class, and other features. "
"(Contributed by Alex Gaynor and David Reid; :issue:`21308`.)"
msgstr ""
"大部分 Python 3.4 的 :mod:`ssl` 模組被反向移植。這意味著 :mod:`ssl` "
"現在支援伺服器名稱指示、TLS1.x 設定、訪問平台證書儲存、:class:`~ssl."
"SSLContext` 類和其他功能。 （由 Alex Gaynor 和 David Reid "
"提供；:issue:`21308`。）"

#: ../../whatsnew/2.7.rst:2632
#, fuzzy
msgid ""
"Refer to the \"Version added: 2.7.9\" notes in the module documentation for "
"specific details."
msgstr "具體可以參考模組文檔中的“Version added: 2.7.9”註釋。"

#: ../../whatsnew/2.7.rst:2635
#, fuzzy
msgid ""
":func:`os.urandom` was changed to cache a file descriptor to ``/dev/"
"urandom`` instead of reopening ``/dev/urandom`` on every call. (Contributed "
"by Alex Gaynor; :issue:`21305`.)"
msgstr ""
":func:`os.urandom` 已更改為將文件描述器快取到 ``/dev/urandom`` "
"而不是在每次呼叫時重新打開 ``/dev/urandom``。 （由 Alex Gaynor "
"提供；:issue:`21305`。）"

#: ../../whatsnew/2.7.rst:2639
#, fuzzy
msgid ""
":data:`hashlib.algorithms_guaranteed` and :data:`hashlib."
"algorithms_available` were backported from Python 3 to make it easier for "
"Python 2 applications to select the strongest available hash algorithm. "
"(Contributed by Alex Gaynor in :issue:`21307`)"
msgstr ""
":data:`hashlib.algorithms_guaranteed` 和 :data:`hashlib.algorithms_available` "
"是從 Python 3 向後移植的，以使 Python 2 "
"應用程式更容易選擇最強的可用雜湊演算法。 （由 Alex Gaynor 在 :issue:`21307` "
"中貢獻）"

#: ../../whatsnew/2.7.rst:2646
#, fuzzy
msgid "PEP 477: Backport ensurepip (PEP 453) to Python 2.7"
msgstr "PEP 477：將 ensurepip (PEP 453) 反向移植到 Python 2.7"

#: ../../whatsnew/2.7.rst:2648
#, fuzzy
msgid ""
":pep:`477` approves the inclusion of the :pep:`453` ensurepip module and the "
"improved documentation that was enabled by it in the Python 2.7 maintenance "
"releases, appearing first in the Python 2.7.9 release."
msgstr ""
":pep:`477` 批准包含 :pep:`453` ensurepip 模組及其在 Python 2.7 "
"維護版本中啟用的改進文檔，首先出現在 Python 2.7.9 版本中。"

#: ../../whatsnew/2.7.rst:2654
#, fuzzy
msgid "Bootstrapping pip By Default"
msgstr "預設引導 pip"

#: ../../whatsnew/2.7.rst:2656
#, fuzzy
msgid ""
"The new :mod:`ensurepip` module (defined in :pep:`453`) provides a standard "
"cross-platform mechanism to bootstrap the pip installer into Python "
"installations. The version of ``pip`` included with Python 2.7.9 is ``pip`` "
"1.5.6, and future 2.7.x maintenance releases will update the bundled version "
"to the latest version of ``pip`` that is available at the time of creating "
"the release candidate."
msgstr ""
"新的 :mod:`ensurepip` 模組（在 :pep:`453` 中定義）"
"提供了一個標準的跨平台機制來將 pip 安裝程式引導到 Python 安裝中。 Python "
"2.7.9 中包含的 ``pip`` 版本是 ``pip`` 1.5.6，未來的 2.7.x "
"維護版本會將捆綁版本更新為最新版本的 ``pip``，可在建立發布候選的時間。"

#: ../../whatsnew/2.7.rst:2663
#, fuzzy
msgid ""
"By default, the commands ``pip``, ``pipX`` and ``pipX.Y`` will be installed "
"on all platforms (where X.Y stands for the version of the Python "
"installation), along with the ``pip`` Python package and its dependencies."
msgstr ""
"預設情況下，命令 ``pip``、``pipX`` 和 ``pipX.Y`` 將安裝在所有平台上（其中 "
"X.Y 代表 Python 安裝的版本），以及 ``pip` ` Python 包及其依賴項。"

#: ../../whatsnew/2.7.rst:2667
#, fuzzy
msgid ""
"For CPython :ref:`source builds on POSIX systems <building-python-on-unix>`, "
"the ``make install`` and ``make altinstall`` commands do not bootstrap "
"``pip`` by default.  This behaviour can be controlled through configure "
"options, and overridden through Makefile options."
msgstr ""
"對於在 POSIX 系統上構建的 CPython 源程式碼 <building-python-on-"
"unix>`，預設情況下，``make install`` 和 ``make altinstall`` 命令不會引導 "
"``pip``。此行為可以通過配置選項控制，並通過 Makefile 選項覆蓋。"

#: ../../whatsnew/2.7.rst:2672
#, fuzzy
msgid ""
"On Windows and Mac OS X, the CPython installers now default to installing "
"``pip`` along with CPython itself (users may opt out of installing it during "
"the installation process). Window users will need to opt in to the automatic "
"``PATH`` modifications to have ``pip`` available from the command line by "
"default, otherwise it can still be accessed through the Python launcher for "
"Windows as ``py -m pip``."
msgstr ""
"在 Windows 和 Mac OS X 上，CPython 安裝程式現在預設安裝 ``pip`` 和 CPython "
"本身（使用者可以在安裝過程中選擇不安裝它）。 Windows "
"使用者將需要選擇自動修改 ``PATH`` 以在預設情況下從命令列獲得 ``pip``，"
"否則它仍然可以通過 Windows 的 Python 啟動器訪問，如 ``py -m pip ``。"

#: ../../whatsnew/2.7.rst:2679
#, fuzzy
msgid ""
"As `discussed in the PEP`__, platform packagers may choose not to install "
"these commands by default, as long as, when invoked, they provide clear and "
"simple directions on how to install them on that platform (usually using the "
"system package manager)."
msgstr ""
"正如`在 PEP`__ 中討論的那樣，平台打包者可以選擇不預設安裝這些命令，只要在呼叫"
"時提供關於如何在該平台上安裝它們的清晰簡單的說明（通常使用系統包管理器） ."

#: ../../whatsnew/2.7.rst:2688
#, fuzzy
msgid "Documentation Changes"
msgstr "文檔更改"

#: ../../whatsnew/2.7.rst:2690
#, fuzzy
msgid ""
"As part of this change, the :ref:`installing-index` and :ref:`distributing-"
"index` sections of the documentation have been completely redesigned as "
"short getting started and FAQ documents. Most packaging documentation has "
"now been moved out to the Python Packaging Authority maintained `Python "
"Packaging User Guide <https://packaging.python.org>`__ and the documentation "
"of the individual projects."
msgstr ""
"作為此更改的一部分，文檔的 :ref:`installing-index` 和 :ref:`distributing-"
"index` 部分已完全重新設計為簡短入門和常見問題解答文檔。"
"大多數打包文檔現在已移至 Python Packaging Authority 維護的`Python Packaging "
"User Guide <https://packaging.python.org>`__ 和各個項目的文檔中。"

#: ../../whatsnew/2.7.rst:2698
#, fuzzy
msgid ""
"However, as this migration is currently still incomplete, the legacy "
"versions of those guides remaining available as :ref:`install-index` and :"
"ref:`distutils-index`."
msgstr ""
"但是，由於此遷移目前仍未完成，這些指南的舊版本仍可作為 :ref:`install-index` "
"和 :ref:`distutils-index` 使用。"

#: ../../whatsnew/2.7.rst:2705
#, fuzzy
msgid ":pep:`453` -- Explicit bootstrapping of pip in Python installations"
msgstr ":pep:`453` -- 在 Python 安裝中顯式引導 pip"

#: ../../whatsnew/2.7.rst:2705
#, fuzzy
msgid ""
"PEP written by Donald Stufft and Nick Coghlan, implemented by Donald Stufft, "
"Nick Coghlan, Martin von Löwis and Ned Deily."
msgstr ""
"PEP 由 Donald Stufft 和 Nick Coghlan 編寫，由 Donald Stufft、Nick Coghlan、"
"Martin von Löwis 和 Ned Deily 實施。"

#: ../../whatsnew/2.7.rst:2709
#, fuzzy
msgid ""
"PEP 476: Enabling certificate verification by default for stdlib http clients"
msgstr "PEP 476：預設為 stdlib http 客戶端啟用證書驗證"

#: ../../whatsnew/2.7.rst:2711
#, fuzzy
msgid ""
":pep:`476` updated :mod:`httplib` and modules which use it, such as :mod:"
"`urllib2` and :mod:`xmlrpclib`, to now verify that the server presents a "
"certificate which is signed by a Certificate Authority in the platform trust "
"store and whose hostname matches the hostname being requested by default, "
"significantly improving security for many applications. This change was made "
"in the Python 2.7.9 release."
msgstr ""
":pep:`476` 更新了 :mod:`httplib` 和使用它的模組，例如 :mod:`urllib2` 和 :mod:"
"`xmlrpclib`，現在驗證伺服器是否提供由證書籤名的證書平台信任庫中的權限及其主機"
"名與預設請求的主機名相匹配，顯著提高了許多應用程式的安全性。此更改是在 "
"Python 2.7.9 版本中進行的。"

#: ../../whatsnew/2.7.rst:2718
#, fuzzy
msgid ""
"For applications which require the old previous behavior, they can pass an "
"alternate context::"
msgstr "對於需要舊的先前行為的應用程式，它們可以傳遞備用上下文::"

#: ../../whatsnew/2.7.rst:2735
#, fuzzy
msgid "PEP 493: HTTPS verification migration tools for Python 2.7"
msgstr "PEP 493：Python 2.7 的 HTTPS 驗證遷移工具"

#: ../../whatsnew/2.7.rst:2737
#, fuzzy
msgid ""
":pep:`493` provides additional migration tools to support a more incremental "
"infrastructure upgrade process for environments containing applications and "
"services relying on the historically permissive processing of server "
"certificates when establishing client HTTPS connections.  These additions "
"were made in the Python 2.7.12 release."
msgstr ""
":pep:`493` 提供額外的遷移工具，以支援包含應用程式和服務的環境的更多增量基礎設"
"施升級過程，這些應用程式和服務在建立客戶端 HTTPS "
"連接時依賴於歷史上對伺服器證書的寬鬆處理。這些新增是在 Python 2.7.12 "
"版本中進行的。"

#: ../../whatsnew/2.7.rst:2743
#, fuzzy
msgid ""
"These tools are intended for use in cases where affected applications and "
"services can't be modified to explicitly pass a more permissive SSL context "
"when establishing the connection."
msgstr "這些工具旨在用於無法修改受影響的應用程式和服務以在建立連接時顯式傳遞更寬鬆的 "
"SSL 上下文的情況。"

#: ../../whatsnew/2.7.rst:2747
#, fuzzy
msgid ""
"For applications and services which can't be modified at all, the new "
"``PYTHONHTTPSVERIFY`` environment variable may be set to ``0`` to revert an "
"entire Python process back to the default permissive behaviour of Python "
"2.7.8 and earlier."
msgstr ""
"對於根本無法修改的應用程式和服務，可以將新的 ``PYTHONHTTPSVERIFY`` 環境變數設定為"
" ``0``，以將整個 Python 行程恢復為 Python 2.7.8 及更早版本的預設允許行為."

#: ../../whatsnew/2.7.rst:2752
#, fuzzy
msgid ""
"For cases where the connection establishment code can't be modified, but the "
"overall application can be, the new :func:`ssl._https_verify_certificates` "
"function can be used to adjust the default behaviour at runtime."
msgstr ""
"對於無法修改連接建立程式碼但可以修改整個應用程式的情況，可以使用新的 "
":func:`ssl._https_verify_certificates` 函式在運行時調整預設行為。"

#: ../../whatsnew/2.7.rst:2758
#, fuzzy
msgid "New ``make regen-all`` build target"
msgstr "新的“make regen-all”構建目標"

#: ../../whatsnew/2.7.rst:2760
#, fuzzy
msgid ""
"To simplify cross-compilation, and to ensure that CPython can reliably be "
"compiled without requiring an existing version of Python to already be "
"available, the autotools-based build system no longer attempts to implicitly "
"recompile generated files based on file modification times."
msgstr ""
"為了簡化交叉編譯，並確保 CPython 可以在不需要現有 Python "
"版本可用的情況下可靠地編譯，基於 autotools "
"的構建系統不再嘗試根據文件修改時間隱式重新編譯生成的文件。"

#: ../../whatsnew/2.7.rst:2765
#, fuzzy
msgid ""
"Instead, a new ``make regen-all`` command has been added to force "
"regeneration of these files when desired (e.g. after an initial version of "
"Python has already been built based on the pregenerated versions)."
msgstr ""
"相反，新增了一個新的“make regen-"
"all”命令以在需要時強制重新生成這些文件（例如，"
"在基於預生成版本構建了初始版本的 Python 之後）。"

#: ../../whatsnew/2.7.rst:2769
#, fuzzy
msgid ""
"More selective regeneration targets are also defined - see :source:`Makefile."
"pre.in` for details."
msgstr "還定義了更多選擇性的再生目標 - 有關詳細資訊，請參見 :source:`Makefile.pre."
"in`。"

#: ../../whatsnew/2.7.rst:2772 ../../whatsnew/2.7.rst:2785
#, fuzzy
msgid "(Contributed by Victor Stinner in :issue:`23404`.)"
msgstr "（由 Victor Stinner 在 :issue:`23404` 中貢獻。）"

#: ../../whatsnew/2.7.rst:2778
#, fuzzy
msgid "Removal of ``make touch`` build target"
msgstr "刪除 ``make touch`` 構建目標"

#: ../../whatsnew/2.7.rst:2780
#, fuzzy
msgid ""
"The ``make touch`` build target previously used to request implicit "
"regeneration of generated files by updating their modification times has "
"been removed."
msgstr "以前用於通過更新修改時間來請求生成文件的隱式重新生成的“make "
"touch”構建目標已被刪除。"

#: ../../whatsnew/2.7.rst:2783
#, fuzzy
msgid "It has been replaced by the new ``make regen-all`` target."
msgstr "它已被新的“make regen-all”目標取代。"

#: ../../whatsnew/2.7.rst:2794
msgid "Acknowledgements"
msgstr "致謝"

#: ../../whatsnew/2.7.rst:2796
#, fuzzy
msgid ""
"The author would like to thank the following people for offering "
"suggestions, corrections and assistance with various drafts of this article: "
"Nick Coghlan, Philip Jenvey, Ryan Lovett, R. David Murray, Hugh Secker-"
"Walker."
msgstr ""
"作者要感謝以下人員為本文的各種草稿提供的建議、更正和幫助：Nick Coghlan、"
"Philip Jenvey、Ryan Lovett、R. David Murray、Hugh Secker-Walker。"
