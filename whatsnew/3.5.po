# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Liang-Bo Wang <me@liang2.tw>, 2016
# Noah Chen <noahcse@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-31 08:13+0000\n"
"PO-Revision-Date: 2018-05-23 16:20+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../whatsnew/3.5.rst:3
msgid "What's New In Python 3.5"
msgstr "Python 3.4 有什麼新功能"

#: ../../whatsnew/3.5.rst:0
msgid "Editors"
msgstr "編輯者"

#: ../../whatsnew/3.5.rst:5
msgid "Elvis Pranskevichus <elvis@magic.io>, Yury Selivanov <yury@magic.io>"
msgstr "Elvis Pranskevichus <elvis@magic.io>, Yury Selivanov <yury@magic.io>"

#: ../../whatsnew/3.5.rst:47
msgid ""
"This article explains the new features in Python 3.5, compared to 3.4. "
"Python 3.5 was released on September 13, 2015.  See the `changelog <https://"
"docs.python.org/3.5/whatsnew/changelog.html>`_ for a full list of changes."
msgstr ""

#: ../../whatsnew/3.5.rst:54
#, fuzzy
msgid ":pep:`478` - Python 3.5 Release Schedule"
msgstr ":pep:`478` - Python 3.5 發佈時間表"

#: ../../whatsnew/3.5.rst:58
#, fuzzy
msgid "Summary -- Release highlights"
msgstr "總結——發布亮點"

#: ../../whatsnew/3.5.rst:60
#, fuzzy
msgid "New syntax features:"
msgstr "新的語法特性："

#: ../../whatsnew/3.5.rst:62
#, fuzzy
msgid ""
":ref:`PEP 492 <whatsnew-pep-492>`, coroutines with async and await syntax."
msgstr ":ref:`PEP 492 <whatsnew-pep-492>`，協程與非同步和等待語法。"

#: ../../whatsnew/3.5.rst:63
#, fuzzy
msgid ""
":ref:`PEP 465 <whatsnew-pep-465>`, a new matrix multiplication operator: ``a "
"@ b``."
msgstr ":ref:`PEP 465 <whatsnew-pep-465>`，一個新的矩陣乘法運算符：``a @ b``。"

#: ../../whatsnew/3.5.rst:64
#, fuzzy
msgid ""
":ref:`PEP 448 <whatsnew-pep-448>`, additional unpacking generalizations."
msgstr ":ref:`PEP 448 <whatsnew-pep-448>`，額外的解包概括。"

#: ../../whatsnew/3.5.rst:67
#, fuzzy
msgid "New library modules:"
msgstr "新的庫模組："

#: ../../whatsnew/3.5.rst:69
#, fuzzy
msgid ":mod:`typing`: :ref:`PEP 484 -- Type Hints <whatsnew-pep-484>`."
msgstr ":mod:`typing`: :ref:`PEP 484 -- 型別提示 <whatsnew-pep-484>`。"

#: ../../whatsnew/3.5.rst:70
#, fuzzy
msgid ""
":mod:`zipapp`: :ref:`PEP 441 Improving Python ZIP Application Support "
"<whatsnew-zipapp>`."
msgstr ":mod:`zipapp`: :ref:`PEP 441 改進 Python ZIP 應用程式支援 <whatsnew-"
"zipapp>`。"

#: ../../whatsnew/3.5.rst:74
#, fuzzy
msgid "New built-in features:"
msgstr "新的內建功能："

#: ../../whatsnew/3.5.rst:76
#, fuzzy
msgid ""
"``bytes % args``, ``bytearray % args``: :ref:`PEP 461 <whatsnew-pep-461>` -- "
"Adding ``%`` formatting to bytes and bytearray."
msgstr ""
"``bytes % args``, ``bytearray % args``: :ref:`PEP 461 <whatsnew-pep-461>` -- "
"新增 ``%`` 格式到位元組和位元組數組。"

#: ../../whatsnew/3.5.rst:79
#, fuzzy
msgid ""
"New :meth:`bytes.hex`, :meth:`bytearray.hex` and :meth:`memoryview.hex` "
"methods. (Contributed by Arnon Yaari in :issue:`9951`.)"
msgstr ""
"新的 :meth:`bytes.hex`、:meth:`bytearray.hex` 和 :meth:`memoryview.hex` 方法。 "
"（由 Arnon Yaari 在 :issue:`9951` 中貢獻。）"

#: ../../whatsnew/3.5.rst:82
#, fuzzy
msgid ""
":class:`memoryview` now supports tuple indexing (including multi-"
"dimensional). (Contributed by Antoine Pitrou in :issue:`23632`.)"
msgstr ""
":class:`memoryview` 現在支援元組索引（包括多維）。 （由 Antoine Pitrou 在 "
":issue:`23632` 中貢獻。）"

#: ../../whatsnew/3.5.rst:85
#, fuzzy
msgid ""
"Generators have a new ``gi_yieldfrom`` attribute, which returns the object "
"being iterated by ``yield from`` expressions. (Contributed by Benno Leslie "
"and Yury Selivanov in :issue:`24450`.)"
msgstr ""
"生成器有一個新的 ``gi_yieldfrom`` 屬性，它回傳由 ``yield from`` "
"表達式疊代的物件。 （由 Benno Leslie 和 Yury Selivanov 在 :issue:`24450` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:89
#, fuzzy
msgid ""
"A new :exc:`RecursionError` exception is now raised when maximum recursion "
"depth is reached.  (Contributed by Georg Brandl in :issue:`19235`.)"
msgstr ""
"當達到最大遞迴深度時，現在會引發一個新的 RecursionError 例外。 （由 Georg "
"Brandl 在 :issue:`19235` 中貢獻。）"

#: ../../whatsnew/3.5.rst:94
#, fuzzy
msgid "CPython implementation improvements:"
msgstr "CPython 實作改進："

#: ../../whatsnew/3.5.rst:96
#, fuzzy
msgid ""
"When the ``LC_TYPE`` locale is the POSIX locale (``C`` locale), :py:data:"
"`sys.stdin` and :py:data:`sys.stdout` now use the ``surrogateescape`` error "
"handler, instead of the ``strict`` error handler. (Contributed by Victor "
"Stinner in :issue:`19977`.)"
msgstr ""
"當 ``LC_TYPE`` 語言環境是 POSIX 語言環境（``C`` 語言環境）時，:py:data:`sys."
"stdin` 和 :py:data:`sys.stdout` 現在使用 ``surrogateescape``錯誤處理程式，"
"而不是 ``strict`` 錯誤處理程式。 （由 Victor Stinner 在 :issue:`19977` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:101
#, fuzzy
msgid ""
"``.pyo`` files are no longer used and have been replaced by a more flexible "
"scheme that includes the optimization level explicitly in ``.pyc`` name. "
"(See :ref:`PEP 488 overview <whatsnew-pep-488>`.)"
msgstr ""
"``.pyo`` 文件不再使用，取而代之的是一種更靈活的方案，該方案在 ``.pyc`` "
"名稱中明確包含最佳化級別。 （參見 :ref:`PEP 488 概述 <whatsnew-pep-488>`。）"

#: ../../whatsnew/3.5.rst:105
#, fuzzy
msgid ""
"Builtin and extension modules are now initialized in a multi-phase process, "
"which is similar to how Python modules are loaded. (See :ref:`PEP 489 "
"overview <whatsnew-pep-489>`.)"
msgstr ""
"內建和擴充模組現在在多階段過程中初始化，這類似於 Python 模組的加載方式。 （"
"參見 :ref:`PEP 489 概述 <whatsnew-pep-489>`。）"

#: ../../whatsnew/3.5.rst:110
#, fuzzy
msgid "Significant improvements in the standard library:"
msgstr "標準庫的重大改進："

#: ../../whatsnew/3.5.rst:112
#, fuzzy
msgid ""
":class:`collections.OrderedDict` is now :ref:`implemented in C <whatsnew-"
"ordereddict>`, which makes it 4 to 100 times faster."
msgstr ""
":class:`collections.OrderedDict` 現在 :ref:`在 C <whatsnew-ordereddict>` "
"中實作，這使其速度提高了 4 到 100 倍。"

#: ../../whatsnew/3.5.rst:116
#, fuzzy
msgid ""
"The :mod:`ssl` module gained :ref:`support for Memory BIO <whatsnew-"
"sslmemorybio>`, which decouples SSL protocol handling from network IO."
msgstr ""
":mod:`ssl` 模組獲得了 :ref:`對 Memory BIO <whatsnew-sslmemorybio>` 的支援，"
"這將 SSL 協定處理與網絡 IO 分離。"

#: ../../whatsnew/3.5.rst:120
#, fuzzy
msgid ""
"The new :func:`os.scandir` function provides a :ref:`better and "
"significantly faster way <whatsnew-pep-471>` of directory traversal."
msgstr "新的 :func:`os.scandir` 函式提供了一種 :ref:`更好且明顯更快的目錄遍歷方式 "
"<whatsnew-pep-471>`。"

#: ../../whatsnew/3.5.rst:124
#, fuzzy
msgid ""
":func:`functools.lru_cache` has been mostly :ref:`reimplemented in C "
"<whatsnew-lrucache>`, yielding much better performance."
msgstr ""
":func:`functools.lru_cache` 主要是 :ref:`在 C <whatsnew-lrucache>` "
"中重新實作，產生更好的性能。"

#: ../../whatsnew/3.5.rst:128
#, fuzzy
msgid ""
"The new :func:`subprocess.run` function provides a :ref:`streamlined way to "
"run subprocesses <whatsnew-subprocess>`."
msgstr ""
"新的 :func:`subprocess.run` 函式提供了一種 :ref:`簡化的方式來運行子行程 "
"<whatsnew-subprocess>`。"

#: ../../whatsnew/3.5.rst:131
#, fuzzy
msgid ""
"The :mod:`traceback` module has been significantly :ref:`enhanced <whatsnew-"
"traceback>` for improved performance and developer convenience."
msgstr ":mod:`traceback` 模組已得到顯著增強 <whatsnew-"
"traceback>`，以提高性能和開發人員的便利性。"

#: ../../whatsnew/3.5.rst:136
#, fuzzy
msgid "Security improvements:"
msgstr "安全改進："

#: ../../whatsnew/3.5.rst:138
#, fuzzy
msgid ""
"SSLv3 is now disabled throughout the standard library. It can still be "
"enabled by instantiating a :class:`ssl.SSLContext` manually.  (See :issue:"
"`22638` for more details; this change was backported to CPython 3.4 and 2.7.)"
msgstr ""
"SSLv3 現在在整個標準庫中被禁用。它仍然可以通過手動實例化 ssl.SSLContext "
"來啟用。 （有關詳細資訊，請參閱 :issue:`22638`；此更改已反向移植到 CPython "
"3.4 和 2.7。）"

#: ../../whatsnew/3.5.rst:143
#, fuzzy
msgid ""
"HTTP cookie parsing is now stricter, in order to protect against potential "
"injection attacks. (Contributed by Antoine Pitrou in :issue:`22796`.)"
msgstr ""
"HTTP cookie 解析現在更加嚴格，以防止潛在的注入攻擊。 （由 Antoine Pitrou 在 "
":issue:`22796` 中貢獻。）"

#: ../../whatsnew/3.5.rst:148
#, fuzzy
msgid "Windows improvements:"
msgstr "Windows 改進："

#: ../../whatsnew/3.5.rst:150
#, fuzzy
msgid ""
"A new installer for Windows has replaced the old MSI. See :ref:`using-on-"
"windows` for more information."
msgstr "適用於 Windows 的新安裝程式取代了舊的 MSI。有關更多資訊，請參閱 :ref:`using-"
"on-windows`。"

#: ../../whatsnew/3.5.rst:153
#, fuzzy
msgid ""
"Windows builds now use Microsoft Visual C++ 14.0, and extension modules "
"should use the same."
msgstr "Windows 構建現在使用 Microsoft Visual C++ 14.0，擴充模組也應該使用相同的。"

#: ../../whatsnew/3.5.rst:157
#, fuzzy
msgid ""
"Please read on for a comprehensive list of user-facing changes, including "
"many other smaller improvements, CPython optimizations, deprecations, and "
"potential porting issues."
msgstr "請繼續閱讀以獲取面向使用者的更改的完整列表，包括許多其他較小的改進、CPython "
"最佳化、棄用和潛在的移植問題。"

#: ../../whatsnew/3.5.rst:163
#, fuzzy
msgid "New Features"
msgstr "新功能"

#: ../../whatsnew/3.5.rst:168
#, fuzzy
msgid "PEP 492 - Coroutines with async and await syntax"
msgstr "PEP 492 - 具有非同步和等待語法的協程"

#: ../../whatsnew/3.5.rst:170
#, fuzzy
msgid ""
":pep:`492` greatly improves support for asynchronous programming in Python "
"by adding :term:`awaitable objects <awaitable>`, :term:`coroutine functions "
"<coroutine function>`, :term:`asynchronous iteration <asynchronous "
"iterable>`, and :term:`asynchronous context managers <asynchronous context "
"manager>`."
msgstr ""
":pep:`492` 通過新增 :term:`awaitable objects <awaitable>`、:term:`coroutine "
"functions <coroutine function>`、:term:`asynchronous iteration <asynchronous "
"iterable>` 大大改進了 Python 中對非同步編程的支援, 和 :term:`asynchronous "
"context managers <asynchronous context manager>`。"

#: ../../whatsnew/3.5.rst:176
#, fuzzy
msgid ""
"Coroutine functions are declared using the new :keyword:`async def` syntax::"
msgstr "使用新的 :keyword:`async def` 語法聲明協程函式::"

#: ../../whatsnew/3.5.rst:181
#, fuzzy
msgid ""
"Inside a coroutine function, the new :keyword:`await` expression can be used "
"to suspend coroutine execution until the result is available.  Any object "
"can be *awaited*, as long as it implements the :term:`awaitable` protocol by "
"defining the :meth:`__await__` method."
msgstr ""
"在協程函式內部，新的 :keyword:`await` "
"表達式可用於暫停協程執行，直到結果可用。任何對像都可以 *awaited*，"
"只要它通過定義 :meth:`__await__` 方法實作 :term:`awaitable` 協定。"

#: ../../whatsnew/3.5.rst:186
#, fuzzy
msgid ""
"PEP 492 also adds :keyword:`async for` statement for convenient iteration "
"over asynchronous iterables."
msgstr "PEP 492 還新增了 :keyword:`async for` "
"語句，以便於對非同步可疊代物件進行疊代。"

#: ../../whatsnew/3.5.rst:189
#, fuzzy
msgid "An example of a rudimentary HTTP client written using the new syntax::"
msgstr "使用新語法編寫的基本 HTTP 客戶端示例："

#: ../../whatsnew/3.5.rst:215
#, fuzzy
msgid ""
"Similarly to asynchronous iteration, there is a new syntax for asynchronous "
"context managers.  The following script::"
msgstr "與非同步疊代類似，非同步上下文管理器有一種新語法。以下腳本::"

#: ../../whatsnew/3.5.rst:235
#, fuzzy
msgid "will output::"
msgstr "將輸出：："

#: ../../whatsnew/3.5.rst:244
#, fuzzy
msgid ""
"Note that both :keyword:`async for` and :keyword:`async with` can only be "
"used inside a coroutine function declared with :keyword:`async def`."
msgstr ""
"請注意 :keyword:`async for` 和 :keyword:`async with` 只能在使用 :keyword:`"
"async def` 聲明的協程函式中使用。"

#: ../../whatsnew/3.5.rst:247
#, fuzzy
msgid ""
"Coroutine functions are intended to be run inside a compatible event loop, "
"such as the :ref:`asyncio loop <asyncio-event-loop>`."
msgstr "協程函式旨在在相容的事件循環中運行，例如 :ref:`asyncio loop <asyncio-event-"
"loop>`。"

#: ../../whatsnew/3.5.rst:253
#, fuzzy
msgid ""
"Starting with CPython 3.5.2, ``__aiter__`` can directly return :term:"
"`asynchronous iterators <asynchronous iterator>`.  Returning an :term:"
"`awaitable` object will result in a :exc:`PendingDeprecationWarning`."
msgstr ""
"從 CPython 3.5.2 開始，``__aiter__`` 可以直接回傳 :term:`asynchronous "
"iterators <asynchronous iterator>`。回傳 :term:`awaitable` 物件將導致 "
":exc:`PendingDeprecationWarning`。"

#: ../../whatsnew/3.5.rst:259
#, fuzzy
msgid "See more details in the :ref:`async-iterators` documentation section."
msgstr "在 :ref:`async-iterators` 文檔部分查看更多詳細資訊。"

#: ../../whatsnew/3.5.rst:265
#, fuzzy
msgid ":pep:`492` -- Coroutines with async and await syntax"
msgstr ":pep:`492` -- 具有非同步和等待語法的協程"

#: ../../whatsnew/3.5.rst:266
msgid "PEP written and implemented by Yury Selivanov."
msgstr "由 Yury Selivanov 撰寫 PEP 與實作。"

#: ../../whatsnew/3.5.rst:272
#, fuzzy
msgid "PEP 465 - A dedicated infix operator for matrix multiplication"
msgstr "PEP 465 - 用於矩陣乘法的專用中綴運算符"

#: ../../whatsnew/3.5.rst:274
#, fuzzy
msgid ""
":pep:`465` adds the ``@`` infix operator for matrix multiplication. "
"Currently, no builtin Python types implement the new operator, however, it "
"can be implemented by defining :meth:`__matmul__`, :meth:`__rmatmul__`, and :"
"meth:`__imatmul__` for regular, reflected, and in-place matrix "
"multiplication.  The semantics of these methods is similar to that of "
"methods defining other infix arithmetic operators."
msgstr ""
":pep:`465` 為矩陣乘法新增了 ``@`` 中綴運算符。目前，沒有內建 Python 型別實作 "
"new 運算符，但是，它可以通過為常規矩陣、反射矩陣和就地矩陣定義 "
":meth:`__matmul__`、:meth:`__rmatmul__` 和 :meth:`__imatmul__` "
"來實作乘法。這些方法的語義類似於定義其他中綴算術運算符的方法。"

#: ../../whatsnew/3.5.rst:281
#, fuzzy
msgid ""
"Matrix multiplication is a notably common operation in many fields of "
"mathematics, science, engineering, and the addition of ``@`` allows writing "
"cleaner code::"
msgstr "矩陣乘法是數學、科學、工程等許多領域中非常常見的運算，新增 ``@`` 允許編寫更清晰的"
"程式碼::"

#: ../../whatsnew/3.5.rst:287
#, fuzzy
msgid "instead of::"
msgstr "代替：："

#: ../../whatsnew/3.5.rst:292
#, fuzzy
msgid "NumPy 1.10 has support for the new operator::"
msgstr "NumPy 1.10 支援新的運算符::"

#: ../../whatsnew/3.5.rst:312
#, fuzzy
msgid ":pep:`465` -- A dedicated infix operator for matrix multiplication"
msgstr ":pep:`465` -- 矩陣乘法的專用中綴運算符"

#: ../../whatsnew/3.5.rst:313
msgid "PEP written by Nathaniel J. Smith; implemented by Benjamin Peterson."
msgstr "由 Nathaniel J. Smith 撰寫 PEP；由 Benjamin Peterson 實作。"

#: ../../whatsnew/3.5.rst:319
#, fuzzy
msgid "PEP 448 - Additional Unpacking Generalizations"
msgstr "PEP 448 - 額外的解包概括"

#: ../../whatsnew/3.5.rst:321
#, fuzzy
msgid ""
":pep:`448` extends the allowed uses of the ``*`` iterable unpacking operator "
"and ``**`` dictionary unpacking operator.  It is now possible to use an "
"arbitrary number of unpackings in :ref:`function calls <calls>`::"
msgstr ""
":pep:`448` 擴充了``*`` 可疊代解包運算符和``**`` 字典解包運算符的允許使用。"
"現在可以在 :ref:`function calls <calls>`:: 中使用任意數量的解包："

#: ../../whatsnew/3.5.rst:335
#, fuzzy
msgid ""
"Similarly, tuple, list, set, and dictionary displays allow multiple "
"unpackings (see :ref:`exprlists` and :ref:`dict`)::"
msgstr "類似地，元組、列表、集合和字典顯示允許多次解包（參見 :ref:`exprlists` 和 "
":ref:`dict`）::"

#: ../../whatsnew/3.5.rst:353
#, fuzzy
msgid ":pep:`448` -- Additional Unpacking Generalizations"
msgstr ":pep:`448` -- 額外的解包概括"

#: ../../whatsnew/3.5.rst:353
#, fuzzy
msgid ""
"PEP written by Joshua Landau; implemented by Neil Girdhar, Thomas Wouters, "
"and Joshua Landau."
msgstr ""
"PEP 由 Joshua Landau 撰寫；由 Neil Girdhar、Thomas Wouters 和 Joshua Landau "
"實施。"

#: ../../whatsnew/3.5.rst:360
#, fuzzy
msgid "PEP 461 - percent formatting support for bytes and bytearray"
msgstr "PEP 461 - 對位元組和位元組數組的百分比格式化支援"

#: ../../whatsnew/3.5.rst:362
#, fuzzy
msgid ""
":pep:`461` adds support for the ``%`` :ref:`interpolation operator <bytes-"
"formatting>` to :class:`bytes` and :class:`bytearray`."
msgstr ""
":pep:`461` 新增了對 ``%`` 的支援 :ref:`interpolation operator <bytes-"
"formatting>` 到 :class:`bytes` 和 :class:`bytearray`。"

#: ../../whatsnew/3.5.rst:366
#, fuzzy
msgid ""
"While interpolation is usually thought of as a string operation, there are "
"cases where interpolation on ``bytes`` or ``bytearrays`` makes sense, and "
"the work needed to make up for this missing functionality detracts from the "
"overall readability of the code.  This issue is particularly important when "
"dealing with wire format protocols, which are often a mixture of binary and "
"ASCII compatible text."
msgstr ""
"雖然插值通常被認為是字串操作，但在某些情況下，對“位元組”或“位元組數組”進行插"
"值是有意義的，並且彌補此缺失功能所需的工作會降低程式碼的整體可讀性."
"在處理有線格式協定時，這個問題尤為重要，這些協定通常是二進位和 ASCII "
"相容文本的混合體。"

#: ../../whatsnew/3.5.rst:373 ../../whatsnew/3.5.rst:1848
msgid "Examples::"
msgstr ""
"範例：\n"
"\n"
"::"

#: ../../whatsnew/3.5.rst:381
#, fuzzy
msgid ""
"Unicode is not allowed for ``%b``, but it is accepted by ``%a`` (equivalent "
"of ``repr(obj).encode('ascii', 'backslashreplace')``)::"
msgstr ""
"``%b`` 不允許使用 Unicode，但 ``%a`` 接受它（相當於 ``repr(obj).encode("
"'ascii', 'backslashreplace')``）："

#: ../../whatsnew/3.5.rst:392
#, fuzzy
msgid ""
"Note that ``%s`` and ``%r`` conversion types, although supported, should "
"only be used in codebases that need compatibility with Python 2."
msgstr "請注意，``%s`` 和 ``%r`` 轉換型別雖然受支援，但只應在需要與 Python 2 "
"相容的程式碼庫中使用。"

#: ../../whatsnew/3.5.rst:398
#, fuzzy
msgid ":pep:`461` -- Adding % formatting to bytes and bytearray"
msgstr ":pep:`461` -- 新增 % 格式到位元組和位元組數組"

#: ../../whatsnew/3.5.rst:398
#, fuzzy
msgid ""
"PEP written by Ethan Furman; implemented by Neil Schemenauer and Ethan "
"Furman."
msgstr "Ethan Furman 編寫的 PEP；由 Neil Schenmauer 和 Ethan Furman 實施。"

#: ../../whatsnew/3.5.rst:405
#, fuzzy
msgid "PEP 484 - Type Hints"
msgstr "PEP 484 - 型別提示"

#: ../../whatsnew/3.5.rst:407
#, fuzzy
msgid ""
"Function annotation syntax has been a Python feature since version 3.0 (:pep:"
"`3107`), however the semantics of annotations has been left undefined."
msgstr "自 3.0 版 (:pep:`3107`) 以來，函式註釋語法一直是 Python "
"的一個特性，但是註釋的語義一直未定義。"

#: ../../whatsnew/3.5.rst:410
#, fuzzy
msgid ""
"Experience has shown that the majority of function annotation uses were to "
"provide type hints to function parameters and return values.  It became "
"evident that it would be beneficial for Python users, if the standard "
"library included the base definitions and tools for type annotations."
msgstr ""
"經驗表明，函式註釋的大部分用途是為函式參數和回傳值提供型別提示。很明顯，如果"
"標準庫包含用於型別註釋的基本定義和工具，那麼這對 Python 使用者將是有益的。"

#: ../../whatsnew/3.5.rst:415
#, fuzzy
msgid ""
":pep:`484` introduces a :term:`provisional module <provisional API>` to "
"provide these standard definitions and tools, along with some conventions "
"for situations where annotations are not available."
msgstr ""
":pep:`484` 引入了一個 :term:`臨時模組 <provisional API>` "
"來提供這些標准定義和工具，以及一些針對註釋不可用情況的約定。"

#: ../../whatsnew/3.5.rst:419
#, fuzzy
msgid ""
"For example, here is a simple function whose argument and return type are "
"declared in the annotations::"
msgstr "例如，這是一個簡單的函式，其參數和回傳型別在註釋中聲明："

#: ../../whatsnew/3.5.rst:425
#, fuzzy
msgid ""
"While these annotations are available at runtime through the usual :attr:"
"`__annotations__` attribute, *no automatic type checking happens at "
"runtime*.  Instead, it is assumed that a separate off-line type checker (e."
"g. `mypy <http://mypy-lang.org>`_) will be used for on-demand source code "
"analysis."
msgstr ""
"雖然這些註解在運行時通過通常的 :attr:`__annotations__` 屬性可用，但*不會在運"
"行時進行自動型別檢查*。相反，假設一個單獨的離線型別檢查器（例如 `mypy <http"
"://mypy-lang.org>`_）將用於按需源程式碼分析。"

#: ../../whatsnew/3.5.rst:431
#, fuzzy
msgid ""
"The type system supports unions, generic types, and a special type named :"
"class:`~typing.Any` which is consistent with (i.e. assignable to and from) "
"all types."
msgstr "型別系統支援聯合、通用型別和一個名為 :class:`~typing.Any` "
"的特殊型別，它與所有型別一致（即可分配給和分配給所有型別）。"

#: ../../whatsnew/3.5.rst:437
msgid ":mod:`typing` module documentation"
msgstr ":mod:`typing` 模組文件"

#: ../../whatsnew/3.5.rst:439
#, fuzzy
msgid ":pep:`484` -- Type Hints"
msgstr ":pep:`484` -- 型別提示"

#: ../../whatsnew/3.5.rst:439
#, fuzzy
msgid ""
"PEP written by Guido van Rossum, Jukka Lehtosalo, and Łukasz Langa; "
"implemented by Guido van Rossum."
msgstr ""
"PEP 由 Guido van Rossum、Jukka Lehtosalo 和 Łukasz Langa 編寫；由 Guido van "
"Rossum 實施。"

#: ../../whatsnew/3.5.rst:441
#, fuzzy
msgid ":pep:`483` -- The Theory of Type Hints"
msgstr ":pep:`483` -- 型別提示理論"

#: ../../whatsnew/3.5.rst:442
msgid "PEP written by Guido van Rossum"
msgstr "由 Guido van Rossum 撰寫 PEP"

#: ../../whatsnew/3.5.rst:448
#, fuzzy
msgid ""
"PEP 471 - os.scandir() function -- a better and faster directory iterator"
msgstr "PEP 471 - os.scandir() 函式——更好更快的目錄疊代器"

#: ../../whatsnew/3.5.rst:450
#, fuzzy
msgid ""
":pep:`471` adds a new directory iteration function, :func:`os.scandir`, to "
"the standard library.  Additionally, :func:`os.walk` is now implemented "
"using ``scandir``, which makes it 3 to 5 times faster on POSIX systems and 7 "
"to 20 times faster on Windows systems.  This is largely achieved by greatly "
"reducing the number of calls to :func:`os.stat` required to walk a directory "
"tree."
msgstr ""
":pep:`471` 在標準庫中新增了一個新的目錄疊代函式 :func:`os."
"scandir`。此外，:func:`os.walk` 現在使用 ``scandir`` 實作，這使得它在 POSIX "
"系統上快 3 到 5 倍，在 Windows 系統上快 7 到 20 倍。"
"這主要是通過大大減少遍歷目錄樹所需的呼叫 os.stat 的次數來實作的。"

#: ../../whatsnew/3.5.rst:457
#, fuzzy
msgid ""
"Additionally, ``scandir`` returns an iterator, as opposed to returning a "
"list of file names, which improves memory efficiency when iterating over "
"very large directories."
msgstr "此外，``scandir`` 回傳一個疊代器，而不是回傳一個文件名列表，這在疊代非常大的"
"目錄時提高了記憶體效率。"

#: ../../whatsnew/3.5.rst:461
#, fuzzy
msgid ""
"The following example shows a simple use of :func:`os.scandir` to display "
"all the files (excluding directories) in the given *path* that don't start "
"with ``'.'``. The :meth:`entry.is_file() <os.DirEntry.is_file>` call will "
"generally not make an additional system call::"
msgstr ""
"以下示例顯示了 os.scandir 的簡單用法，以顯示給定 *path* 中不以 ``'.'`` "
"開頭的所有文件（不包括目錄）。 :meth:`entry.is_file() <os.DirEntry.is_file>` "
"呼叫通常不會進行額外的系統呼叫::"

#: ../../whatsnew/3.5.rst:472
#, fuzzy
msgid ""
":pep:`471` -- os.scandir() function -- a better and faster directory iterator"
msgstr ":pep:`471` -- os.scandir() 函式 -- 更好更快的目錄疊代器"

#: ../../whatsnew/3.5.rst:473
msgid ""
"PEP written and implemented by Ben Hoyt with the help of Victor Stinner."
msgstr "在 Victor Stinner 協助下由 Ben Hoyt 撰寫 PEP 與實作。"

#: ../../whatsnew/3.5.rst:479
#, fuzzy
msgid "PEP 475: Retry system calls failing with EINTR"
msgstr "PEP 475：重試 EINTR 失敗的系統呼叫"

#: ../../whatsnew/3.5.rst:481
#, fuzzy
msgid ""
"An :py:data:`errno.EINTR` error code is returned whenever a system call, "
"that is waiting for I/O, is interrupted by a signal.  Previously, Python "
"would raise :exc:`InterruptedError` in such cases.  This meant that, when "
"writing a Python application, the developer had two choices:"
msgstr ""
"每當等待 I/O 的系統呼叫被信號中斷時，都會回傳 :py:data:`errno.EINTR` "
"錯誤程式碼。以前，Python 會在這種情況下引發 "
":exc:`InterruptedError`。這意味著，在編寫 Python "
"應用程式時，開發人員有兩種選擇："

#: ../../whatsnew/3.5.rst:486
#, fuzzy
msgid "Ignore the ``InterruptedError``."
msgstr "忽略``InterruptedError``。"

#: ../../whatsnew/3.5.rst:487
#, fuzzy
msgid ""
"Handle the ``InterruptedError`` and attempt to restart the interrupted "
"system call at every call site."
msgstr "處理 InterruptedError 並嘗試在每個呼叫點重新啟動中斷的系統呼叫。"

#: ../../whatsnew/3.5.rst:490
#, fuzzy
msgid ""
"The first option makes an application fail intermittently. The second option "
"adds a large amount of boilerplate that makes the code nearly unreadable.  "
"Compare::"
msgstr "第一個選項使應用程式間歇性失敗。第二個選項新增了大量樣板文件，使程式碼幾乎不"
"可讀。比較：："

#: ../../whatsnew/3.5.rst:496
msgid "and::"
msgstr ""
"和：\n"
"\n"
"::"

#: ../../whatsnew/3.5.rst:505
#, fuzzy
msgid ""
":pep:`475` implements automatic retry of system calls on ``EINTR``.  This "
"removes the burden of dealing with ``EINTR`` or :exc:`InterruptedError` in "
"user code in most situations and makes Python programs, including the "
"standard library, more robust.  Note that the system call is only retried if "
"the signal handler does not raise an exception."
msgstr ""
":pep:`475` 在``EINTR`` "
"上實作系統呼叫的自動重試。這消除了在大多數情況下處理使用者程式碼中的``EINTR``"
" 或 :exc:`InterruptedError` 的負擔，並使 Python 程式（包括標準庫）更加健壯。"
"請注意，只有在信號處理程式未引發例外時才會重試系統呼叫。"

#: ../../whatsnew/3.5.rst:512
#, fuzzy
msgid ""
"Below is a list of functions which are now retried when interrupted by a "
"signal:"
msgstr "以下是現在被信號中斷時重試的函式列表："

#: ../../whatsnew/3.5.rst:515
msgid ":func:`open` and :func:`io.open`;"
msgstr ":func:`open` 和 :func:`io.open`\\ ；"

#: ../../whatsnew/3.5.rst:517
msgid "functions of the :mod:`faulthandler` module;"
msgstr ":mod:`faulthandler` 模組的函式；"

#: ../../whatsnew/3.5.rst:519
#, fuzzy
msgid ""
":mod:`os` functions: :func:`~os.fchdir`, :func:`~os.fchmod`, :func:`~os."
"fchown`, :func:`~os.fdatasync`, :func:`~os.fstat`, :func:`~os.fstatvfs`, :"
"func:`~os.fsync`, :func:`~os.ftruncate`, :func:`~os.mkfifo`, :func:`~os."
"mknod`, :func:`~os.open`, :func:`~os.posix_fadvise`, :func:`~os."
"posix_fallocate`, :func:`~os.pread`, :func:`~os.pwrite`, :func:`~os.read`, :"
"func:`~os.readv`, :func:`~os.sendfile`, :func:`~os.wait3`, :func:`~os."
"wait4`, :func:`~os.wait`, :func:`~os.waitid`, :func:`~os.waitpid`, :func:"
"`~os.write`, :func:`~os.writev`;"
msgstr ""
":mod:`os` 函式: :func:`~os.fchdir`, :func:`~os.fchmod`, :func:`~os.fchown`, "
":func:`~os.fdatasync`, :func :`~os.fstat`, :func:`~os.fstatvfs`, :func:`~os."
"fsync`, :func:`~os.ftruncate`, :func:`~os.mkfifo`, :func :`~os.mknod`, "
":func:`~os.open`, :func:`~os.posix_fadvise`, :func:`~os.posix_fallocate`, "
":func:`~os.pread`, :func :`~os.pwrite`, :func:`~os.read`, :func:`~os.readv`, "
":func:`~os.sendfile`, :func:`~os.wait3`, :func :`~os.wait4`, :func:`~os.wait`"
", :func:`~os.waitid`, :func:`~os.waitpid`, :func:`~os.write`, :func :`~os."
"writev`;"

#: ../../whatsnew/3.5.rst:529
#, fuzzy
msgid ""
"special cases: :func:`os.close` and :func:`os.dup2` now ignore :py:data:"
"`~errno.EINTR` errors; the syscall is not retried (see the PEP for the "
"rationale);"
msgstr ""
"特殊情況：:func:`os.close` 和 :func:`os.dup2` 現在忽略:py:data:`~errno.EINTR` "
"錯誤；不重試系統呼叫（請參閱 PEP 了解基本原理）；"

#: ../../whatsnew/3.5.rst:533
#, fuzzy
msgid ""
":mod:`select` functions: :func:`devpoll.poll() <select.devpoll.poll>`, :func:"
"`epoll.poll() <select.epoll.poll>`, :func:`kqueue.control() <select.kqueue."
"control>`, :func:`poll.poll() <select.poll.poll>`, :func:`~select.select`;"
msgstr ""
":mod:`select` 函式：:func:`devpoll.poll() <select.devpoll.poll>`, "
":func:`epoll.poll() <select.epoll.poll>`, :func:`kqueue。 control() <select."
"kqueue.control>`, :func:`poll.poll() <select.poll.poll>`, :func:`~select."
"select`;"

#: ../../whatsnew/3.5.rst:538
#, fuzzy
msgid ""
"methods of the :class:`~socket.socket` class: :meth:`~socket.socket."
"accept`, :meth:`~socket.socket.connect` (except for non-blocking sockets), :"
"meth:`~socket.socket.recv`, :meth:`~socket.socket.recvfrom`, :meth:`~socket."
"socket.recvmsg`, :meth:`~socket.socket.send`, :meth:`~socket.socket."
"sendall`, :meth:`~socket.socket.sendmsg`, :meth:`~socket.socket.sendto`;"
msgstr ""
":class:`~socket.socket` 類的方法：:meth:`~socket.socket.accept`, "
":meth:`~socket.socket.connect` (非阻塞 socket 除外), :meth:` ~socket.socket."
"recv`, :meth:`~socket.socket.recvfrom`, :meth:`~socket.socket.recvmsg`, "
":meth:`~socket.socket.send`, :meth:`~socket .socket.sendall`, :meth:`~socket."
"socket.sendmsg`, :meth:`~socket.socket.sendto`;"

#: ../../whatsnew/3.5.rst:545
msgid ":func:`signal.sigtimedwait` and :func:`signal.sigwaitinfo`;"
msgstr ":func:`signal.sigtimedwait` 和 :func:`signal.sigwaitinfo`\\ ；"

#: ../../whatsnew/3.5.rst:547
msgid ":func:`time.sleep`."
msgstr ":func:`time.sleep`\\ 。"

#: ../../whatsnew/3.5.rst:552
#, fuzzy
msgid ":pep:`475` -- Retry system calls failing with EINTR"
msgstr ":pep:`475` -- 重試 EINTR 失敗的系統呼叫"

#: ../../whatsnew/3.5.rst:552
#, fuzzy
msgid ""
"PEP and implementation written by Charles-François Natali and Victor "
"Stinner, with the help of Antoine Pitrou (the French connection)."
msgstr ""
"PEP 和實作由 Charles-François Natali 和 Victor Stinner 在 Antoine "
"Pitrou（法國人）的幫助下編寫。"

#: ../../whatsnew/3.5.rst:559
#, fuzzy
msgid "PEP 479: Change StopIteration handling inside generators"
msgstr "PEP 479：更改生成器內部的 StopIteration 處理"

#: ../../whatsnew/3.5.rst:561
#, fuzzy
msgid ""
"The interaction of generators and :exc:`StopIteration` in Python 3.4 and "
"earlier was sometimes surprising, and could conceal obscure bugs.  "
"Previously, ``StopIteration`` raised accidentally inside a generator "
"function was interpreted as the end of the iteration by the loop construct "
"driving the generator."
msgstr ""
"Python 3.4 及更早版本中生成器與 :exc:`StopIteration` 的交互有時令人驚訝，並且"
"可能隱藏隱蔽的錯誤。以前，在生成器函式內意外引發的 ``StopIteration`` 被驅動生成器"
"的循環結構解釋為疊代結束。"

#: ../../whatsnew/3.5.rst:567
#, fuzzy
msgid ""
":pep:`479` changes the behavior of generators: when a ``StopIteration`` "
"exception is raised inside a generator, it is replaced with a :exc:"
"`RuntimeError` before it exits the generator frame.  The main goal of this "
"change is to ease debugging in the situation where an unguarded :func:`next` "
"call raises ``StopIteration`` and causes the iteration controlled by the "
"generator to terminate silently. This is particularly pernicious in "
"combination with the ``yield from`` construct."
msgstr ""
":pep:`479` 改變了生成器的行為：當在生成器內部引發 ``StopIteration`` 例外時，"
"它會在退出生成器框架之前被 :exc:`RuntimeError` 替換。"
"此更改的主要目標是在無人看守的 :func:`next` 呼叫引發 ``StopIteration`` "
"並導致生成器控制的疊代靜默終止的情況下簡化除錯。這與 ``yield from`` "
"結構結合使用時尤其有害。"

#: ../../whatsnew/3.5.rst:575
#, fuzzy
msgid ""
"This is a backwards incompatible change, so to enable the new behavior, a :"
"term:`__future__` import is necessary::"
msgstr "這是一個向後不相容的更改，因此要啟用新行為，需要 :term:`__future__` 導入::"

#: ../../whatsnew/3.5.rst:595
#, fuzzy
msgid ""
"Without a ``__future__`` import, a :exc:`PendingDeprecationWarning` will be "
"raised whenever a :exc:`StopIteration` exception is raised inside a "
"generator."
msgstr ""
"如果沒有 `__future__`` 導入，只要在生成器內部引發 :exc:`StopIteration` 例外，"
"就會引發 PendingDeprecationWarning。"

#: ../../whatsnew/3.5.rst:601
#, fuzzy
msgid ":pep:`479` -- Change StopIteration handling inside generators"
msgstr ":pep:`479` -- 更改生成器內部的 StopIteration 處理"

#: ../../whatsnew/3.5.rst:601
#, fuzzy
msgid ""
"PEP written by Chris Angelico and Guido van Rossum. Implemented by Chris "
"Angelico, Yury Selivanov and Nick Coghlan."
msgstr ""
"PEP 由 Chris Angelico 和 Guido van Rossum 編寫。由 Chris Angelico、Yury "
"Selivanov 和 Nick Coghlan 實施。"

#: ../../whatsnew/3.5.rst:608
#, fuzzy
msgid "PEP 485: A function for testing approximate equality"
msgstr "PEP 485：一個測試近似相等的函式"

#: ../../whatsnew/3.5.rst:610
#, fuzzy
msgid ""
":pep:`485` adds the :func:`math.isclose` and :func:`cmath.isclose` functions "
"which tell whether two values are approximately equal or \"close\" to each "
"other.  Whether or not two values are considered close is determined "
"according to given absolute and relative tolerances. Relative tolerance is "
"the maximum allowed difference between ``isclose`` arguments, relative to "
"the larger absolute value::"
msgstr ""
":pep:`485` 新增了 :func:`math.isclose` 和 :func:`cmath.isclose` 函式，它們判"
"斷兩個值是否近似相等或彼此“接近”。兩個值是否接近取決於給定的絕對和相對公差。"
"相對公差是 ``isclose`` 參數之間的最大允許差異，相對於較大的絕對值::"

#: ../../whatsnew/3.5.rst:625
#, fuzzy
msgid ""
"It is also possible to compare two values using absolute tolerance, which "
"must be a non-negative value::"
msgstr "也可以使用絕對公差來比較兩個值，它必須是一個非負值::"

#: ../../whatsnew/3.5.rst:639
#, fuzzy
msgid ":pep:`485` -- A function for testing approximate equality"
msgstr ":pep:`485` -- 測試近似相等的函式"

#: ../../whatsnew/3.5.rst:639
#, fuzzy
msgid ""
"PEP written by Christopher Barker; implemented by Chris Barker and Tal Einat."
msgstr "PEP 由 Christopher Barker 撰寫；由 Chris Barker 和 Tal Einat 實施。"

#: ../../whatsnew/3.5.rst:646
#, fuzzy
msgid "PEP 486: Make the Python Launcher aware of virtual environments"
msgstr "PEP 486：讓 Python 啟動器感知虛擬環境"

#: ../../whatsnew/3.5.rst:648
#, fuzzy
msgid ""
":pep:`486` makes the Windows launcher (see :pep:`397`) aware of an active "
"virtual environment. When the default interpreter would be used and the "
"``VIRTUAL_ENV`` environment variable is set, the interpreter in the virtual "
"environment will be used."
msgstr ""
":pep:`486` 使 Windows 啟動器（參見 :pep:`397`）知道活動的虛擬環境。"
"當使用預設直譯器並設定 ``VIRTUAL_ENV`` 環境變數時，將使用虛擬環境中的直譯器。"

#: ../../whatsnew/3.5.rst:655
#, fuzzy
msgid ":pep:`486` -- Make the Python Launcher aware of virtual environments"
msgstr ":pep:`486` -- 讓 Python 啟動器感知虛擬環境"

#: ../../whatsnew/3.5.rst:656
msgid "PEP written and implemented by Paul Moore."
msgstr "由 Paul Moore 撰寫 PEP 與實作。"

#: ../../whatsnew/3.5.rst:662
#, fuzzy
msgid "PEP 488: Elimination of PYO files"
msgstr "PEP 488：消除 PYO 文件"

#: ../../whatsnew/3.5.rst:664
#, fuzzy
msgid ""
":pep:`488` does away with the concept of ``.pyo`` files. This means that ``."
"pyc`` files represent both unoptimized and optimized bytecode. To prevent "
"the need to constantly regenerate bytecode files, ``.pyc`` files now have an "
"optional ``opt-`` tag in their name when the bytecode is optimized. This has "
"the side-effect of no more bytecode file name clashes when running under "
"either :option:`-O` or :option:`-OO`. Consequently, bytecode files generated "
"from :option:`-O`, and :option:`-OO` may now exist simultaneously. :func:"
"`importlib.util.cache_from_source` has an updated API to help with this "
"change."
msgstr ""
":pep:`488` 取消了 `.pyo`` 文件的概念。這意味著 .pyc 文件代表未最佳化和最佳化"
"的位元組碼。為了防止需要不斷地重新生成位元組碼文件，``.pyc`` "
"文件現在在最佳化位元組碼時在其名稱中有一個可選的``opt-`` "
"標記。這有一個副作用，即在 :option:`-O` 或 :option:`-OO` "
"下運行時不再有位元組碼文件名衝突。因此，從 :option:`-O` 和 :option:`-OO` "
"生成的位元組碼文件現在可能同時存在。 :func:`importlib.util.cache_from_source`"
" 有一個更新的 API 來幫助進行此更改。"

#: ../../whatsnew/3.5.rst:676
#, fuzzy
msgid ":pep:`488` -- Elimination of PYO files"
msgstr ":pep:`488` -- 刪除 PYO 文件"

#: ../../whatsnew/3.5.rst:677
msgid "PEP written and implemented by Brett Cannon."
msgstr "由 Brett Cannon 撰寫 PEP 與實作。"

#: ../../whatsnew/3.5.rst:683
#, fuzzy
msgid "PEP 489: Multi-phase extension module initialization"
msgstr "PEP 489：多階段擴充模組初始化"

#: ../../whatsnew/3.5.rst:685
#, fuzzy
msgid ""
":pep:`489` updates extension module initialization to take advantage of the "
"two step module loading mechanism introduced by :pep:`451` in Python 3.4."
msgstr ":pep:`489` 更新擴充模組初始化以利用 :pep:`451` 在 Python 3.4 "
"中引入的兩步模組加載機制。"

#: ../../whatsnew/3.5.rst:688
#, fuzzy
msgid ""
"This change brings the import semantics of extension modules that opt-in to "
"using the new mechanism much closer to those of Python source and bytecode "
"modules, including the ability to use any valid identifier as a module name, "
"rather than being restricted to ASCII."
msgstr ""
"此更改使選擇使用新機制的擴充模組的導入語義更接近 Python "
"源和位元組碼模組的導入語義，包括使用任何有效標識符作為模組名稱的能力，"
"而不是僅限於 ASCII。"

#: ../../whatsnew/3.5.rst:696
#, fuzzy
msgid ":pep:`489` -- Multi-phase extension module initialization"
msgstr ":pep:`489` -- 多階段擴充模組初始化"

#: ../../whatsnew/3.5.rst:696
#, fuzzy
msgid ""
"PEP written by Petr Viktorin, Stefan Behnel, and Nick Coghlan; implemented "
"by Petr Viktorin."
msgstr "PEP 由 Petr Viktorin、Stefan Behnel 和 Nick Coghlan 編寫；由 Petr Viktorin "
"實施。"

#: ../../whatsnew/3.5.rst:701
#, fuzzy
msgid "Other Language Changes"
msgstr "其他語言變化"

#: ../../whatsnew/3.5.rst:703
#, fuzzy
msgid "Some smaller changes made to the core Python language are:"
msgstr "對核心 Python 語言所做的一些較小的更改是："

#: ../../whatsnew/3.5.rst:705
#, fuzzy
msgid ""
"Added the ``\"namereplace\"`` error handlers.  The ``\"backslashreplace\"`` "
"error handlers now work with decoding and translating. (Contributed by "
"Serhiy Storchaka in :issue:`19676` and :issue:`22286`.)"
msgstr ""
"新增了 ``\"namereplace\"`` 錯誤處理程式。 ``\"backslashreplace\"`` "
"錯誤處理程式現在可用於解碼和翻譯。 （由 Serhiy Storchaka 在 :issue:`19676` "
"和 :issue:`22286` 中貢獻。）"

#: ../../whatsnew/3.5.rst:709
#, fuzzy
msgid ""
"The :option:`-b` option now affects comparisons of :class:`bytes` with :"
"class:`int`.  (Contributed by Serhiy Storchaka in :issue:`23681`.)"
msgstr ""
":option:`-b` 選項現在影響 :class:`bytes` 與 :class:`int` 的比較。 （由 "
"Serhiy Storchaka 在 :issue:`23681` 中貢獻。）"

#: ../../whatsnew/3.5.rst:712
#, fuzzy
msgid ""
"New Kazakh ``kz1048`` and Tajik ``koi8_t`` :ref:`codecs <standard-"
"encodings>`. (Contributed by Serhiy Storchaka in :issue:`22682` and :issue:"
"`22681`.)"
msgstr ""
"新哈薩克語``kz1048`` 和塔吉克語``koi8_t`` :ref:`codecs <standard-"
"encodings>`。 （由 Serhiy Storchaka 在 :issue:`22682` 和 :issue:`22681` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:715
#, fuzzy
msgid ""
"Property docstrings are now writable. This is especially useful for :func:"
"`collections.namedtuple` docstrings. (Contributed by Berker Peksag in :issue:"
"`24064`.)"
msgstr ""
"屬性文檔字串現在是可寫的。這對於 :func:`collections.namedtuple` "
"文檔字串特別有用。 （由 Berker Peksag 在 :issue:`24064` 中貢獻。）"

#: ../../whatsnew/3.5.rst:719
#, fuzzy
msgid ""
"Circular imports involving relative imports are now supported. (Contributed "
"by Brett Cannon and Antoine Pitrou in :issue:`17636`.)"
msgstr ""
"現在支援涉及相對導入的循環導入。 （由 Brett Cannon 和 Antoine Pitrou 在 "
":issue:`17636` 中貢獻。）"

#: ../../whatsnew/3.5.rst:724
#, fuzzy
msgid "New Modules"
msgstr "新模組"

#: ../../whatsnew/3.5.rst:727
msgid "typing"
msgstr "typing"

#: ../../whatsnew/3.5.rst:729
#, fuzzy
msgid ""
"The new :mod:`typing` :term:`provisional <provisional API>` module provides "
"standard definitions and tools for function type annotations. See :ref:`Type "
"Hints <whatsnew-pep-484>` for more information."
msgstr ""
"新的 :mod:`typing` :term:`provisional <provisional API>` "
"模組為函式型別註釋提供標准定義和工具。有關詳細資訊，請參閱 :ref:`Type Hints "
"<whatsnew-pep-484>`。"

#: ../../whatsnew/3.5.rst:736
msgid "zipapp"
msgstr "zipapp"

#: ../../whatsnew/3.5.rst:738
#, fuzzy
msgid ""
"The new :mod:`zipapp` module (specified in :pep:`441`) provides an API and "
"command line tool for creating executable Python Zip Applications, which "
"were introduced in Python 2.6 in :issue:`1739468`, but which were not well "
"publicized, either at the time or since."
msgstr ""
"新的 :mod:`zipapp` 模組（在 :pep:`441` 中指定）提供了一個 API 和命令列工具，"
"用於建立可執行的 Python Zip 應用程式，它們在 Python 2.6 的 :issue:`1739468` "
"中引入，但它們是沒有得到很好的宣傳，無論是當時還是之後。"

#: ../../whatsnew/3.5.rst:743
#, fuzzy
msgid ""
"With the new module, bundling your application is as simple as putting all "
"the files, including a ``__main__.py`` file, into a directory ``myapp`` and "
"running:"
msgstr "使用新模組，捆綁您的應用程式就像將所有文件（包括 ``__main__.py`` 文件）"
"放入目錄 ``myapp`` 並運行一樣簡單："

#: ../../whatsnew/3.5.rst:752
#, fuzzy
msgid ""
"The module implementation has been contributed by Paul Moore in :issue:"
"`23491`."
msgstr "模組實作由 Paul Moore 在 :issue:`23491` 中貢獻。"

#: ../../whatsnew/3.5.rst:757
#, fuzzy
msgid ":pep:`441` -- Improving Python ZIP Application Support"
msgstr ":pep:`441` -- 改進 Python ZIP 應用程式支援"

#: ../../whatsnew/3.5.rst:761
#, fuzzy
msgid "Improved Modules"
msgstr "改進模組"

#: ../../whatsnew/3.5.rst:764
msgid "argparse"
msgstr "argparse"

#: ../../whatsnew/3.5.rst:766
#, fuzzy
msgid ""
"The :class:`~argparse.ArgumentParser` class now allows disabling :ref:"
"`abbreviated usage <prefix-matching>` of long options by setting :ref:"
"`allow_abbrev` to ``False``.  (Contributed by Jonathan Paugh, Steven "
"Bethard, paul j3 and Daniel Eriksson in :issue:`14910`.)"
msgstr ""
":class:`~argparse.ArgumentParser` 類現在允許通過將 :ref:`allow_abbrev` "
"設定為 ``False`` 來禁用長選項的縮寫用法 <prefix-matching>。 （由 Jonathan "
"Paugh、Steven Bethard、paul j3 和 Daniel Eriksson 在 :issue:`14910` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:773
msgid "asyncio"
msgstr "asyncio"

#: ../../whatsnew/3.5.rst:775
#, fuzzy
msgid ""
"Since the :mod:`asyncio` module is :term:`provisional <provisional API>`, "
"all changes introduced in Python 3.5 have also been backported to Python 3.4."
"x."
msgstr ""
"由於 :mod:`asyncio` 模組是 :term:`provisional <provisional API>`，Python 3.5 "
"中引入的所有更改也已反向移植到 Python 3.4.x。"

#: ../../whatsnew/3.5.rst:778
#, fuzzy
msgid "Notable changes in the :mod:`asyncio` module since Python 3.4.0:"
msgstr "自 Python 3.4.0 以來 :mod:`asyncio` 模組的顯著變化："

#: ../../whatsnew/3.5.rst:780
#, fuzzy
msgid ""
"New debugging APIs: :meth:`loop.set_debug() <asyncio.loop.set_debug>` and :"
"meth:`loop.get_debug() <asyncio.loop.get_debug>` methods. (Contributed by "
"Victor Stinner.)"
msgstr ""
"新的除錯 API：:meth:`loop.set_debug() <asyncio.loop.set_debug>` 和 "
":meth:`loop.get_debug() <asyncio.loop.get_debug>` 方法。 （由 Victor Stinner "
"提供。）"

#: ../../whatsnew/3.5.rst:784
#, fuzzy
msgid ""
"The proactor event loop now supports SSL. (Contributed by Antoine Pitrou and "
"Victor Stinner in :issue:`22560`.)"
msgstr ""
"proactor 事件循環現在支援 SSL。 （由 Antoine Pitrou 和 Victor Stinner 在 "
":issue:`22560` 中貢獻。）"

#: ../../whatsnew/3.5.rst:787
#, fuzzy
msgid ""
"A new :meth:`loop.is_closed() <asyncio.loop.is_closed>` method to check if "
"the event loop is closed. (Contributed by Victor Stinner in :issue:`21326`.)"
msgstr ""
"一個新的 :meth:`loop.is_closed() <asyncio.loop.is_closed>` "
"方法來檢查事件循環是否關閉。 （由 Victor Stinner 在 :issue:`21326` 中貢獻。）"

#: ../../whatsnew/3.5.rst:791
#, fuzzy
msgid ""
"A new :meth:`loop.create_task() <asyncio.loop.create_task>` to conveniently "
"create and schedule a new :class:`~asyncio.Task` for a coroutine.  The "
"``create_task`` method is also used by all asyncio functions that wrap "
"coroutines into tasks, such as :func:`asyncio.wait`, :func:`asyncio.gather`, "
"etc. (Contributed by Victor Stinner.)"
msgstr ""
"一個新的 :meth:`loop.create_task() <asyncio.loop.create_task>` "
"可以方便地為協程建立和安排一個新的 :class:`~asyncio.Task`。 ``create_task`` "
"方法也被所有將協程包裝到任務中的非同步函式使用，例如 :func:`asyncio."
"wait`、:func:`asyncio.gather` 等。（由 Victor Stinner 提供。）"

#: ../../whatsnew/3.5.rst:798
#, fuzzy
msgid ""
"A new :meth:`transport.get_write_buffer_limits() <asyncio.WriteTransport."
"get_write_buffer_limits>` method to inquire for *high-* and *low-* water "
"limits of the flow control. (Contributed by Victor Stinner.)"
msgstr ""
"一個新的 :meth:`transport.get_write_buffer_limits() <asyncio.WriteTransport."
"get_write_buffer_limits>` 方法來查詢流量控制的 *high-* 和 *low-* 水位限制。 "
"（由 Victor Stinner 提供。）"

#: ../../whatsnew/3.5.rst:803
#, fuzzy
msgid ""
"The :func:`~asyncio.async` function is deprecated in favor of :func:"
"`~asyncio.ensure_future`. (Contributed by Yury Selivanov.)"
msgstr ""
":func:`~asyncio.async` 函式已棄用，取而代之的是 :func:`~asyncio."
"ensure_future`。 （由 Yury Selivanov 提供。）"

#: ../../whatsnew/3.5.rst:807
#, fuzzy
msgid ""
"New :meth:`loop.set_task_factory() <asyncio.loop.set_task_factory>` and :"
"meth:`loop.get_task_factory() <asyncio.loop.get_task_factory>` methods to "
"customize the task factory that :meth:`loop.create_task() <asyncio.loop."
"create_task>` method uses.  (Contributed by Yury Selivanov.)"
msgstr ""
"新的 :meth:`loop.set_task_factory() <asyncio.loop.set_task_factory>` 和 "
":meth:`loop.get_task_factory() <asyncio.loop.get_task_factory>` 方法來自定義 "
":meth:`loop.create_task 的任務工廠() <asyncio.loop.create_task>` 方法使用。 "
"（由 Yury Selivanov 提供。）"

#: ../../whatsnew/3.5.rst:814
#, fuzzy
msgid ""
"New :meth:`Queue.join() <asyncio.Queue.join>` and :meth:`Queue.task_done() "
"<asyncio.Queue.task_done>` queue methods. (Contributed by Victor Stinner.)"
msgstr ""
"新的 Queue.join() <asyncio.Queue.join> 和 Queue.task_done() "
"<asyncio.Queue.task_done> 隊列方法。 （由 Victor Stinner 提供。）"

#: ../../whatsnew/3.5.rst:818
#, fuzzy
msgid ""
"The ``JoinableQueue`` class was removed, in favor of the :class:`asyncio."
"Queue` class. (Contributed by Victor Stinner.)"
msgstr ""
"``JoinableQueue`` 類被移除，取而代之的是 :class:`asyncio.Queue` 類。 （由 "
"Victor Stinner 提供。）"

#: ../../whatsnew/3.5.rst:822
#, fuzzy
msgid "Updates in 3.5.1:"
msgstr "3.5.1 更新："

#: ../../whatsnew/3.5.rst:824
#, fuzzy
msgid ""
"The :func:`~asyncio.ensure_future` function and all functions that use it, "
"such as :meth:`loop.run_until_complete() <asyncio.loop.run_until_complete>`, "
"now accept all kinds of :term:`awaitable objects <awaitable>`. (Contributed "
"by Yury Selivanov.)"
msgstr ""
":func:`~asyncio.ensure_future` 函式和所有使用它的函式，例如 :meth:`loop."
"run_until_complete() <asyncio.loop.run_until_complete>`，現在接受各種 :term:`"
"awaitable 物件 <等待>`。 （由 Yury Selivanov 提供。）"

#: ../../whatsnew/3.5.rst:829
#, fuzzy
msgid ""
"New :func:`~asyncio.run_coroutine_threadsafe` function to submit coroutines "
"to event loops from other threads. (Contributed by Vincent Michel.)"
msgstr ""
"新的 :func:`~asyncio.run_coroutine_threadsafe` "
"函式可以將協程從其他執行緒提交到事件循環。 （由文森特·米歇爾提供。）"

#: ../../whatsnew/3.5.rst:833
#, fuzzy
msgid ""
"New :meth:`Transport.is_closing() <asyncio.BaseTransport.is_closing>` method "
"to check if the transport is closing or closed. (Contributed by Yury "
"Selivanov.)"
msgstr ""
"新的 :meth:`Transport.is_closing() <asyncio.BaseTransport.is_closing>` "
"方法來檢查傳輸是否正在關閉。 （由 Yury Selivanov 提供。）"

#: ../../whatsnew/3.5.rst:837
#, fuzzy
msgid ""
"The :meth:`loop.create_server() <asyncio.loop.create_server>` method can now "
"accept a list of hosts. (Contributed by Yann Sionneau.)"
msgstr ""
":meth:`loop.create_server() <asyncio.loop.create_server>` "
"方法現在可以接受主機列表。 （由 Yann Sionneau 提供。）"

#: ../../whatsnew/3.5.rst:841
#, fuzzy
msgid "Updates in 3.5.2:"
msgstr "3.5.2 更新："

#: ../../whatsnew/3.5.rst:843
#, fuzzy
msgid ""
"New :meth:`loop.create_future() <asyncio.loop.create_future>` method to "
"create Future objects.  This allows alternative event loop implementations, "
"such as `uvloop <https://github.com/MagicStack/uvloop>`_, to provide a "
"faster :class:`asyncio.Future` implementation. (Contributed by Yury "
"Selivanov.)"
msgstr ""
"新的 :meth:`loop.create_future() <asyncio.loop.create_future>` 方法來建立 "
"Future 物件。這允許替代事件循環實作，例如 `uvloop <https://github.com/"
"MagicStack/uvloop>`_，以提供更快的 asyncio.Future 實作。 （由 Yury Selivanov "
"提供。）"

#: ../../whatsnew/3.5.rst:850
#, fuzzy
msgid ""
"New :meth:`loop.get_exception_handler() <asyncio.loop."
"get_exception_handler>` method to get the current exception handler. "
"(Contributed by Yury Selivanov.)"
msgstr ""
"新的 :meth:`loop.get_exception_handler() <asyncio.loop."
"get_exception_handler>` 方法來獲取當前的例外處理程式。 （由 Yury Selivanov "
"提供。）"

#: ../../whatsnew/3.5.rst:854
#, fuzzy
msgid ""
"New :meth:`StreamReader.readuntil() <asyncio.StreamReader.readuntil>` method "
"to read data from the stream until a separator bytes sequence appears. "
"(Contributed by Mark Korenberg.)"
msgstr ""
"新的 :meth:`StreamReader.readuntil() <asyncio.StreamReader.readuntil>` "
"方法從流中讀取資料，直到出現分隔位元組序列。 （由馬克·科倫伯格提供。）"

#: ../../whatsnew/3.5.rst:859
#, fuzzy
msgid ""
"The :meth:`loop.create_connection() <asyncio.loop.create_connection>` and :"
"meth:`loop.create_server() <asyncio.loop.create_server>` methods are "
"optimized to avoid calling the system ``getaddrinfo`` function if the "
"address is already resolved. (Contributed by A. Jesse Jiryu Davis.)"
msgstr ""
":meth:`loop.create_connection() <asyncio.loop.create_connection>` "
"和 :meth:`loop.create_server() <asyncio.loop.create_server>` "
"方法被最佳化以避免呼叫系統的 ``getaddrinfo`` 函式如果地址已經解析。 （由 A. "
"Jesse Jiryu Davis 提供。）"

#: ../../whatsnew/3.5.rst:865
#, fuzzy
msgid ""
"The :meth:`loop.sock_connect(sock, address) <asyncio.loop.sock_connect>` no "
"longer requires the *address* to be resolved prior to the call. (Contributed "
"by A. Jesse Jiryu Davis.)"
msgstr ""
":meth:`loop.sock_connect(sock, address) <asyncio.loop.sock_connect>` "
"不再需要在呼叫之前解析 *address*。 （由 A. Jesse Jiryu Davis 提供。）"

#: ../../whatsnew/3.5.rst:871
msgid "bz2"
msgstr "bz2"

#: ../../whatsnew/3.5.rst:873
#, fuzzy
msgid ""
"The :meth:`BZ2Decompressor.decompress <bz2.BZ2Decompressor.decompress>` "
"method now accepts an optional *max_length* argument to limit the maximum "
"size of decompressed data. (Contributed by Nikolaus Rath in :issue:`15955`.)"
msgstr ""
":meth:`BZ2Decompressor.decompress <bz2.BZ2Decompressor.decompress>` "
"方法現在接受一個可選的 *max_length* 參數來限制解壓縮資料的最大大小。 （由 "
"Nikolaus Rath 在 :issue:`15955` 中貢獻。）"

#: ../../whatsnew/3.5.rst:879
msgid "cgi"
msgstr "cgi"

#: ../../whatsnew/3.5.rst:881
#, fuzzy
msgid ""
"The :class:`~cgi.FieldStorage` class now supports the :term:`context "
"manager` protocol.  (Contributed by Berker Peksag in :issue:`20289`.)"
msgstr ""
":class:`~cgi.FieldStorage` 類現在支援 :term:`context manager` 協定。 （由 "
"Berker Peksag 在 :issue:`20289` 中貢獻。）"

#: ../../whatsnew/3.5.rst:886
msgid "cmath"
msgstr "cmath"

#: ../../whatsnew/3.5.rst:888
#, fuzzy
msgid ""
"A new function :func:`~cmath.isclose` provides a way to test for approximate "
"equality.  (Contributed by Chris Barker and Tal Einat in :issue:`24270`.)"
msgstr ""
"新函式 :func:`~cmath.isclose` 提供了一種測試近似相等性的方法。 （由 Chris "
"Barker 和 Tal Einat 在 :issue:`24270` 中貢獻。）"

#: ../../whatsnew/3.5.rst:893
msgid "code"
msgstr "code"

#: ../../whatsnew/3.5.rst:895
#, fuzzy
msgid ""
"The :func:`InteractiveInterpreter.showtraceback() <code."
"InteractiveInterpreter.showtraceback>` method now prints the full chained "
"traceback, just like the interactive interpreter.  (Contributed by Claudiu "
"Popa in :issue:`17442`.)"
msgstr ""
":func:`InteractiveInterpreter.showtraceback() <code.InteractiveInterpreter."
"showtraceback>` 方法現在印出完整的鍊式回溯，就像交互式直譯器一樣。 （由 "
"Claudiu Popa 在 :issue:`17442` 中貢獻。）"

#: ../../whatsnew/3.5.rst:901
msgid "collections"
msgstr "collections"

#: ../../whatsnew/3.5.rst:905
#, fuzzy
msgid ""
"The :class:`~collections.OrderedDict` class is now implemented in C, which "
"makes it 4 to 100 times faster.  (Contributed by Eric Snow in :issue:"
"`16991`.)"
msgstr ""
":class:`~collections.OrderedDict` 類現在用 C 語言實作，這使其速度提高了 4 到 "
"100 倍。 （由 Eric Snow 在 :issue:`16991` 中貢獻。）"

#: ../../whatsnew/3.5.rst:908
#, fuzzy
msgid ""
":meth:`OrderedDict.items() <collections.OrderedDict.items>`, :meth:"
"`OrderedDict.keys() <collections.OrderedDict.keys>`, :meth:`OrderedDict."
"values() <collections.OrderedDict.values>` views now support :func:"
"`reversed` iteration. (Contributed by Serhiy Storchaka in :issue:`19505`.)"
msgstr ""
":meth:`OrderedDict.items() <collections.OrderedDict.items>`, "
":meth:`OrderedDict.keys() <collections.OrderedDict.keys>`, :meth:`OrderedDict"
".values() <collections.OrderedDict. values>` 視圖現在支援 :func:`reversed` "
"疊代。 （由 Serhiy Storchaka 在 :issue:`19505` 中貢獻。）"

#: ../../whatsnew/3.5.rst:914
#, fuzzy
msgid ""
"The :class:`~collections.deque` class now defines :meth:`~collections.deque."
"index`, :meth:`~collections.deque.insert`, and :meth:`~collections.deque."
"copy`, and supports the ``+`` and ``*`` operators. This allows deques to be "
"recognized as a :class:`~collections.abc.MutableSequence` and improves their "
"substitutability for lists. (Contributed by Raymond Hettinger in :issue:"
"`23704`.)"
msgstr ""
":class:`~collections.deque` 類現在定義了 :meth:`~collections.deque."
"index`、:meth:`~collections.deque.insert` 和 :meth:`~collections.deque."
"copy`,並支援``+`` 和``*`` 運算符。這允許雙端隊列被識別為 :class:`~collections"
".abc.MutableSequence` 並提高它們對列表的可替代性。 （由 Raymond Hettinger 在 "
":issue:`23704` 中貢獻。）"

#: ../../whatsnew/3.5.rst:921
#, fuzzy
msgid ""
"Docstrings produced by :func:`~collections.namedtuple` can now be updated::"
msgstr ":func:`~collections.namedtuple` 生成的文檔字串現在可以更新::"

#: ../../whatsnew/3.5.rst:928
#, fuzzy
msgid "(Contributed by Berker Peksag in :issue:`24064`.)"
msgstr "（由 Berker Peksag 在 :issue:`24064` 中貢獻。）"

#: ../../whatsnew/3.5.rst:930
#, fuzzy
msgid ""
"The :class:`~collections.UserString` class now implements the :meth:"
"`__getnewargs__`, :meth:`__rmod__`, :meth:`~str.casefold`, :meth:`~str."
"format_map`, :meth:`~str.isprintable`, and :meth:`~str.maketrans` methods to "
"match the corresponding methods of :class:`str`. (Contributed by Joe Jevnik "
"in :issue:`22189`.)"
msgstr ""
":class:`~collections.UserString` 類現在實作了 :meth:`__getnewargs__`, "
":meth:`__rmod__`, :meth:`~str.casefold`, :meth:`~str.format_map`, :meth "
":`~str.isprintable` 和 :meth:`~str.maketrans` 方法來匹配 :class:`str` "
"的相應方法。 （由 Joe Jevnik 在 :issue:`22189` 中貢獻。）"

#: ../../whatsnew/3.5.rst:938
msgid "collections.abc"
msgstr "collections.abc"

#: ../../whatsnew/3.5.rst:940
#, fuzzy
msgid ""
"The :meth:`Sequence.index() <collections.abc.Sequence.index>` method now "
"accepts *start* and *stop* arguments to match the corresponding methods of :"
"class:`tuple`, :class:`list`, etc. (Contributed by Devin Jeanpierre in :"
"issue:`23086`.)"
msgstr ""
":meth:`Sequence.index() <collections.abc.Sequence.index>` 方法現在接受 "
"*start* 和 *stop* 參數以匹配 :class:`tuple`、:class:`list` 的相應方法等（由 "
"Devin Jeanpierre 在 :issue:`23086` 中貢獻。）"

#: ../../whatsnew/3.5.rst:945
#, fuzzy
msgid ""
"A new :class:`~collections.abc.Generator` abstract base class. (Contributed "
"by Stefan Behnel in :issue:`24018`.)"
msgstr ""
"一個新的 :class:`~collections.abc.Generator` 抽象基底類別。 （由 Stefan "
"Behnel 在 :issue:`24018` 中貢獻。）"

#: ../../whatsnew/3.5.rst:948
#, fuzzy
msgid ""
"New :class:`~collections.abc.Awaitable`, :class:`~collections.abc."
"Coroutine`, :class:`~collections.abc.AsyncIterator`, and :class:"
"`~collections.abc.AsyncIterable` abstract base classes. (Contributed by Yury "
"Selivanov in :issue:`24184`.)"
msgstr ""
"新的 :class:`~collections.abc.Awaitable`、:class:`~collections.abc."
"Coroutine`、:class:`~collections.abc.AsyncIterator` 和 :class:`~collections."
"abc.AsyncIterable` 抽象基底類別。 （由 Yury Selivanov 在 :issue:`24184` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:953
#, fuzzy
msgid ""
"For earlier Python versions, a backport of the new ABCs is available in an "
"external `PyPI package <https://pypi.org/project/backports_abc>`_."
msgstr ""
"對於較早的 Python 版本，新 ABC 的反向移植在外部 `PyPI 包 <https://pypi.org/"
"project/backports_abc>`_ 中可用。"

#: ../../whatsnew/3.5.rst:958
msgid "compileall"
msgstr "compileall"

#: ../../whatsnew/3.5.rst:960
#, fuzzy
msgid ""
"A new :mod:`compileall` option, :samp:`-j {N}`, allows running *N* workers "
"simultaneously to perform parallel bytecode compilation. The :func:"
"`~compileall.compile_dir` function has a corresponding ``workers`` "
"parameter.  (Contributed by Claudiu Popa in :issue:`16104`.)"
msgstr ""
"一個新的 :mod:`compileall` 選項，:samp:`-j {N}`，允許同時運行 *N* 個 worker "
"來執行並行位元組碼編譯。 :func:`~compileall.compile_dir` 函式有一個相應的 "
"``workers`` 參數。 （由 Claudiu Popa 在 :issue:`16104` 中貢獻。）"

#: ../../whatsnew/3.5.rst:965
#, fuzzy
msgid ""
"Another new option, ``-r``, allows controlling the maximum recursion level "
"for subdirectories.  (Contributed by Claudiu Popa in :issue:`19628`.)"
msgstr "另一個新選項 ``-r``允許控制子目錄的最大遞迴級別。 （由 Claudiu Popa 在 "
":issue:`19628` 中貢獻。）"

#: ../../whatsnew/3.5.rst:968
#, fuzzy
msgid ""
"The ``-q`` command line option can now be specified more than once, in which "
"case all output, including errors, will be suppressed.  The corresponding "
"``quiet`` parameter in :func:`~compileall.compile_dir`, :func:`~compileall."
"compile_file`, and :func:`~compileall.compile_path` can now accept an "
"integer value indicating the level of output suppression. (Contributed by "
"Thomas Kluyver in :issue:`21338`.)"
msgstr ""
"``-q`` "
"命令列選項現在可以指定多次，在這種情況下，包括錯誤在內的所有輸出都將被抑制。 "
":func:`~compileall.compile_dir`、:func:`~compileall.compile_file` 和 "
":func:`~compileall.compile_path` 中相應的 ``quiet`` "
"參數現在可以接受表示輸出級別的整數值抑制。 （由 Thomas Kluyver 在 "
":issue:`21338` 中貢獻。）"

#: ../../whatsnew/3.5.rst:977
msgid "concurrent.futures"
msgstr "concurrent.futures"

#: ../../whatsnew/3.5.rst:979
#, fuzzy
msgid ""
"The :meth:`Executor.map() <concurrent.futures.Executor.map>` method now "
"accepts a *chunksize* argument to allow batching of tasks to improve "
"performance when :meth:`~concurrent.futures.ProcessPoolExecutor` is used. "
"(Contributed by Dan O'Reilly in :issue:`11271`.)"
msgstr ""
":meth:`Executor.map() <concurrent.futures.Executor.map>` 方法現在接受 "
"*chunksize* 參數以允許在使用 :meth:`~concurrent.futures.ProcessPoolExecutor` "
"時對任務進行批處理以提高性能. （由 Dan O'Reilly 在 :issue:`11271` 中貢獻。）"

#: ../../whatsnew/3.5.rst:984
#, fuzzy
msgid ""
"The number of workers in the :class:`~concurrent.futures.ThreadPoolExecutor` "
"constructor is optional now.  The default value is 5 times the number of "
"CPUs. (Contributed by Claudiu Popa in :issue:`21527`.)"
msgstr ""
":class:`~concurrent.futures.ThreadPoolExecutor` 構造函式中的 worker "
"數量現在是可選的。預設值是 CPU 數量的 5 倍。 （由 Claudiu Popa 在 "
":issue:`21527` 中貢獻。）"

#: ../../whatsnew/3.5.rst:990
msgid "configparser"
msgstr "configparser"

#: ../../whatsnew/3.5.rst:992
#, fuzzy
msgid ""
":mod:`configparser` now provides a way to customize the conversion of values "
"by specifying a dictionary of converters in the :class:`~configparser."
"ConfigParser` constructor, or by defining them as methods in "
"``ConfigParser`` subclasses.  Converters defined in a parser instance are "
"inherited by its section proxies."
msgstr ""
":mod:`configparser` 現在提供了一種自定義值轉換的方法，方法是在 "
":class:`~configparser.ConfigParser` 構造函式中指定轉換器字典，"
"或者通過將它們定義為 ``ConfigParser`` "
"子類別中的方法。解析器實例中定義的轉換器由其部分代理繼承。"

#: ../../whatsnew/3.5.rst:998
msgid "Example::"
msgstr ""
"範例：\n"
"\n"
"::"

#: ../../whatsnew/3.5.rst:1016
#, fuzzy
msgid "(Contributed by Łukasz Langa in :issue:`18159`.)"
msgstr "（由 Łukasz Langa 在 :issue:`18159` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1020
msgid "contextlib"
msgstr "contextlib"

#: ../../whatsnew/3.5.rst:1022
#, fuzzy
msgid ""
"The new :func:`~contextlib.redirect_stderr` :term:`context manager` (similar "
"to :func:`~contextlib.redirect_stdout`) makes it easier for utility scripts "
"to handle inflexible APIs that write their output to :data:`sys.stderr` and "
"don't provide any options to redirect it::"
msgstr ""
"新的 :func:`~contextlib.redirect_stderr` :term:`context manager`（類似於 "
":func:`~contextlib.redirect_stdout`）使實用程式腳本更容易處理將輸出寫入 "
":data:` 的不靈活的 API sys.stderr` 並且不提供任何重定向選項::"

#: ../../whatsnew/3.5.rst:1035
#, fuzzy
msgid "(Contributed by Berker Peksag in :issue:`22389`.)"
msgstr "（由 Berker Peksag 在 :issue:`22389` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1039
msgid "csv"
msgstr "csv"

#: ../../whatsnew/3.5.rst:1041
#, fuzzy
msgid ""
"The :meth:`~csv.csvwriter.writerow` method now supports arbitrary iterables, "
"not just sequences.  (Contributed by Serhiy Storchaka in :issue:`23171`.)"
msgstr ""
":meth:`~csv.csvwriter.writerow` 方法現在支援任意疊代，而不僅僅是序列。 （由 "
"Serhiy Storchaka 在 :issue:`23171` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1046
msgid "curses"
msgstr "curses"

#: ../../whatsnew/3.5.rst:1048
#, fuzzy
msgid ""
"The new :func:`~curses.update_lines_cols` function updates the :envvar:"
"`LINES` and :envvar:`COLS` environment variables.  This is useful for "
"detecting manual screen resizing.  (Contributed by Arnon Yaari in :issue:"
"`4254`.)"
msgstr ""
"新的 :func:`~curses.update_lines_cols` 函式更新了 :envvar:`LINES` 和 "
":envvar:`COLS` 環境變數。這對於檢測手動屏幕調整大小很有用。 （由 Arnon Yaari "
"在 :issue:`4254` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1054
msgid "dbm"
msgstr "dbm"

#: ../../whatsnew/3.5.rst:1056
#, fuzzy
msgid ""
":func:`dumb.open <dbm.dumb.open>` always creates a new database when the "
"flag has the value ``\"n\"``.  (Contributed by Claudiu Popa in :issue:"
"`18039`.)"
msgstr ""
":func:`dumb.open <dbm.dumb.open>` 總是在旗標值為 ``\"n\"`` "
"時建立一個新資料庫。 （由 Claudiu Popa 在 :issue:`18039` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1061
msgid "difflib"
msgstr "difflib"

#: ../../whatsnew/3.5.rst:1063
#, fuzzy
msgid ""
"The charset of HTML documents generated by :meth:`HtmlDiff.make_file() "
"<difflib.HtmlDiff.make_file>` can now be customized by using a new *charset* "
"keyword-only argument. The default charset of HTML document changed from ``"
"\"ISO-8859-1\"`` to ``\"utf-8\"``. (Contributed by Berker Peksag in :issue:"
"`2052`.)"
msgstr ""
"由 :meth:`HtmlDiff.make_file() <difflib.HtmlDiff.make_file>` 生成的 HTML "
"文檔的字元集現在可以使用新的 *charset* 僅關鍵字參數進行自定義。 HTML "
"文檔的預設字元集從 ``ISO-8859-1``更改為 ``utf-8``。 （由 Berker Peksag 在 "
":issue:`2052` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1070
#, fuzzy
msgid ""
"The :func:`~difflib.diff_bytes` function can now compare lists of byte "
"strings.  This fixes a regression from Python 2. (Contributed by Terry J. "
"Reedy and Greg Ward in :issue:`17445`.)"
msgstr ""
":func:`~difflib.diff_bytes` 函式現在可以比較位元組串列表。這修復了 Python 2 "
"的回歸。（由 Terry J. Reedy 和 Greg Ward 在 :issue:`17445` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1076
msgid "distutils"
msgstr "distutils"

#: ../../whatsnew/3.5.rst:1078
#, fuzzy
msgid ""
"Both the ``build`` and ``build_ext`` commands now accept a ``-j`` option to "
"enable parallel building of extension modules. (Contributed by Antoine "
"Pitrou in :issue:`5309`.)"
msgstr ""
"``build`` 和 ``build_ext`` 命令現在都接受一個 ``-j`` "
"選項來啟用擴充模組的並行構建。 （由 Antoine Pitrou 在 :issue:`5309` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:1082
#, fuzzy
msgid ""
"The :mod:`distutils` module now supports ``xz`` compression, and can be "
"enabled by passing ``xztar`` as an argument to ``bdist --format``. "
"(Contributed by Serhiy Storchaka in :issue:`16314`.)"
msgstr ""
":mod:`distutils` 模組現在支援 ``xz`` 壓縮，並且可以通過將 ``xztar`` "
"作為參數傳遞給 ``bdist --format`` 來啟用。 （由 Serhiy Storchaka 在 "
":issue:`16314` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1088
msgid "doctest"
msgstr "doctest"

#: ../../whatsnew/3.5.rst:1090
#, fuzzy
msgid ""
"The :func:`~doctest.DocTestSuite` function returns an empty :class:`unittest."
"TestSuite` if *module* contains no docstrings, instead of raising :exc:"
"`ValueError`.  (Contributed by Glenn Jones in :issue:`15916`.)"
msgstr ""
":func:`~doctest.DocTestSuite` 函式回傳一個空的 :class:`unittest.TestSuite` "
"如果 *module* 不包含文檔字串，而不是引發 :exc:`ValueError`。 （由 Glenn "
"Jones 在 :issue:`15916` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1096
msgid "email"
msgstr "email"

#: ../../whatsnew/3.5.rst:1098
#, fuzzy
msgid ""
"A new policy option :attr:`Policy.mangle_from_ <email.policy.Policy."
"mangle_from_>` controls whether or not lines that start with ``\"From \"`` "
"in email bodies are prefixed with a ``\">\"`` character by generators.  The "
"default is ``True`` for :attr:`~email.policy.compat32` and ``False`` for all "
"other policies. (Contributed by Milan Oberkirch in :issue:`20098`.)"
msgstr ""
"一個新的策略選項 :attr:`Policy.mangle_from_ <email.policy.Policy."
"mangle_from_>` 控制電子郵件正文中以 ``\"From\"`` 開頭的行是否以 ``\">\"`` "
"為前綴發電機的性格。 :attr:`~email.policy.compat32` 的預設值為 ``True``，"
"所有其他策略的預設值為 ``False``。 （由 Milan Oberkirch 在 :issue:`20098` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:1104
#, fuzzy
msgid ""
"A new :meth:`Message.get_content_disposition() <email.message.Message."
"get_content_disposition>` method provides easy access to a canonical value "
"for the :mailheader:`Content-Disposition` header. (Contributed by Abhilash "
"Raj in :issue:`21083`.)"
msgstr ""
"新的 :meth:`Message.get_content_disposition() <email.message.Message."
"get_content_disposition>` 方法可以輕鬆訪問:mailheader:`Content-Disposition` "
"標頭的規範值。 （由 Abhilash Raj 在 :issue:`21083` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1110
#, fuzzy
msgid ""
"A new policy option :attr:`EmailPolicy.utf8 <email.policy.EmailPolicy.utf8>` "
"can be set to ``True`` to encode email headers using the UTF-8 charset "
"instead of using encoded words.  This allows ``Messages`` to be formatted "
"according to :rfc:`6532` and used with an SMTP server that supports the :rfc:"
"`6531` ``SMTPUTF8`` extension.  (Contributed by R. David Murray in :issue:"
"`24211`.)"
msgstr ""
"一個新的策略選項 :attr:`EmailPolicy.utf8 <email.policy.EmailPolicy.utf8>` "
"可以設定為 ``True`` 以使用 UTF-8 "
"字元集而不是使用編碼詞對電子郵件標頭進行編碼。這允許根據 :rfc:`6532` 格式化 "
"``Messages`` 並與支援 :rfc:`6531` ``SMTPUTF8`` 擴充的 SMTP 伺服器一起使用。 "
"（由 R. David Murray 在 :issue:`24211` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1117
#, fuzzy
msgid ""
"The :class:`mime.text.MIMEText <email.mime.text.MIMEText>` constructor now "
"accepts a :class:`charset.Charset <email.charset.Charset>` instance. "
"(Contributed by Claude Paroz and Berker Peksag in :issue:`16324`.)"
msgstr ""
":class:`mime.text.MIMEText <email.mime.text.MIMEText>` "
"構造函式現在接受一個 :class:`charset.Charset <email.charset.Charset>` 實例。 "
"（由 Claude Paroz 和 Berker Peksag 在 :issue:`16324` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1123
msgid "enum"
msgstr "enum"

#: ../../whatsnew/3.5.rst:1125
#, fuzzy
msgid ""
"The :class:`~enum.Enum` callable has a new parameter *start* to specify the "
"initial number of enum values if only *names* are provided::"
msgstr ":class:`~enum.Enum` 可呼叫函式有一個新參數 *start* 來指定枚舉值的初始數量（"
"如果僅提供 *names* 的話）::"

#: ../../whatsnew/3.5.rst:1134
#, fuzzy
msgid "(Contributed by Ethan Furman in :issue:`21706`.)"
msgstr "（由 Ethan Furman 在 :issue:`21706` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1138
msgid "faulthandler"
msgstr "faulthandler"

#: ../../whatsnew/3.5.rst:1140
#, fuzzy
msgid ""
"The :func:`~faulthandler.enable`, :func:`~faulthandler.register`, :func:"
"`~faulthandler.dump_traceback` and :func:`~faulthandler."
"dump_traceback_later` functions now accept file descriptors in addition to "
"file-like objects. (Contributed by Wei Wu in :issue:`23566`.)"
msgstr ""
":func:`~faulthandler.enable`、:func:`~faulthandler."
"register`、:func:`~faulthandler.dump_traceback` 和 :func:`~faulthandler."
"dump_traceback_later` 函式現在除了文件描述器外還接受文件描述器像物體。 （由 "
"Wei Wu 在 :issue:`23566` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1148
msgid "functools"
msgstr "functools"

#: ../../whatsnew/3.5.rst:1152
#, fuzzy
msgid ""
"Most of the :func:`~functools.lru_cache` machinery is now implemented in C, "
"making it significantly faster.  (Contributed by Matt Joiner, Alexey "
"Kachayev, and Serhiy Storchaka in :issue:`14373`.)"
msgstr ""
"大多數 :func:`~functools.lru_cache` 機制現在都在 C 中實作，使其速度顯著加快。"
" （由 Matt Joiner、Alexey Kachayev 和 Serhiy Storchaka 在 :issue:`14373` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:1158
msgid "glob"
msgstr "glob"

#: ../../whatsnew/3.5.rst:1160
#, fuzzy
msgid ""
"The :func:`~glob.iglob` and :func:`~glob.glob` functions now support "
"recursive search in subdirectories, using the ``\"**\"`` pattern. "
"(Contributed by Serhiy Storchaka in :issue:`13968`.)"
msgstr ""
":func:`~glob.iglob` 和 :func:`~glob.glob` 函式現在支援使用 ``\"**\"`` "
"模式在子目錄中進行遞迴搜索。 （由 Serhiy Storchaka 在 :issue:`13968` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:1166
msgid "gzip"
msgstr "gzip"

#: ../../whatsnew/3.5.rst:1168
#, fuzzy
msgid ""
"The *mode* argument of the :class:`~gzip.GzipFile` constructor now accepts ``"
"\"x\"`` to request exclusive creation. (Contributed by Tim Heaney in :issue:"
"`19222`.)"
msgstr ""
":class:`~gzip.GzipFile` 構造函式的 *mode* 參數現在接受 ``\"x\"`` "
"來請求獨占建立。 （由 Tim Heaney 在 :issue:`19222` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1174
msgid "heapq"
msgstr "heapq"

#: ../../whatsnew/3.5.rst:1176
#, fuzzy
msgid ""
"Element comparison in :func:`~heapq.merge` can now be customized by passing "
"a :term:`key function` in a new optional *key* keyword argument, and a new "
"optional *reverse* keyword argument can be used to reverse element "
"comparison::"
msgstr ""
":func:`~heapq.merge` 中的元素比較現在可以通過在新的可選 *key* "
"關鍵字參數中傳遞 :term:`key function` 來自定義，並且可以使用新的可選 "
"*reverse* 關鍵字參數來反轉元素比較::"

#: ../../whatsnew/3.5.rst:1189
#, fuzzy
msgid "(Contributed by Raymond Hettinger in :issue:`13742`.)"
msgstr "（由 Raymond Hettinger 在 :issue:`13742` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1193
msgid "http"
msgstr "http"

#: ../../whatsnew/3.5.rst:1195
#, fuzzy
msgid ""
"A new :class:`HTTPStatus <http.HTTPStatus>` enum that defines a set of HTTP "
"status codes, reason phrases and long descriptions written in English. "
"(Contributed by Demian Brecht in :issue:`21793`.)"
msgstr ""
"一個新的 :class:`HTTPStatus <http.HTTPStatus>` 枚舉，它定義了一組 HTTP "
"狀態程式碼、原因短語和用英語編寫的長描述。 （由 Demian Brecht 在 "
":issue:`21793` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1201
msgid "http.client"
msgstr "http.client"

#: ../../whatsnew/3.5.rst:1203
#, fuzzy
msgid ""
":meth:`HTTPConnection.getresponse() <http.client.HTTPConnection."
"getresponse>` now raises a :exc:`~http.client.RemoteDisconnected` exception "
"when a remote server connection is closed unexpectedly.  Additionally, if a :"
"exc:`ConnectionError` (of which ``RemoteDisconnected`` is a subclass) is "
"raised, the client socket is now closed automatically, and will reconnect on "
"the next request::"
msgstr ""
":meth:`HTTPConnection.getresponse() <http.client.HTTPConnection.getresponse>`"
" 現在在遠程伺服器連接意外關閉時引發 :exc:`~http.client.RemoteDisconnected` "
"例外。此外，如果引發 :exc:`ConnectionError`（其中 ``RemoteDisconnected`` "
"是一個子類別），客戶端 socket 現在會自動關閉，並將在下一個請求時重新連接::"

#: ../../whatsnew/3.5.rst:1219
#, fuzzy
msgid "(Contributed by Martin Panter in :issue:`3566`.)"
msgstr "（由 Martin Panter 在 :issue:`3566` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1223
#, fuzzy
msgid "idlelib and IDLE"
msgstr "空閒庫和空閒"

#: ../../whatsnew/3.5.rst:1225
#, fuzzy
msgid ""
"Since idlelib implements the IDLE shell and editor and is not intended for "
"import by other programs, it gets improvements with every release.  See :"
"file:`Lib/idlelib/NEWS.txt` for a cumulative list of changes since 3.4.0, as "
"well as changes made in future 3.5.x releases. This file is also available "
"from the IDLE :menuselection:`Help --> About IDLE` dialog."
msgstr ""
"由於 idlelib 實作了 IDLE shell 和編輯器，並且不打算由其他程式導入，因此它在每"
"個版本中都得到了改進。請參閱 :file:`Lib/idlelib/NEWS.txt`，了解自 3.4.0 "
"以來的累積更改列表，以及未來 3.5.x 版本中所做的更改。此文件也可從 IDLE "
":menuselection:`Help --> About IDLE` 對話框中獲得。"

#: ../../whatsnew/3.5.rst:1233
msgid "imaplib"
msgstr "imaplib"

#: ../../whatsnew/3.5.rst:1235
#, fuzzy
msgid ""
"The :class:`~imaplib.IMAP4` class now supports the :term:`context manager` "
"protocol. When used in a :keyword:`with` statement, the IMAP4 ``LOGOUT`` "
"command will be called automatically at the end of the block. (Contributed "
"by Tarek Ziadé and Serhiy Storchaka in :issue:`4972`.)"
msgstr ""
":class:`~imaplib.IMAP4` 類現在支援 :term:`context manager` 協定。當在 "
":keyword:`with` 語句中使用時，IMAP4 ``LOGOUT`` 命令將在塊的末尾自動呼叫。 （"
"由 Tarek Ziadé 和 Serhiy Storchaka 在 :issue:`4972` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1240
#, fuzzy
msgid ""
"The :mod:`imaplib` module now supports :rfc:`5161` (ENABLE Extension) and :"
"rfc:`6855` (UTF-8 Support) via the :meth:`IMAP4.enable() <imaplib.IMAP4."
"enable>` method.  A new :attr:`IMAP4.utf8_enabled <imaplib.IMAP4."
"utf8_enabled>` attribute tracks whether or not :rfc:`6855` support is "
"enabled. (Contributed by Milan Oberkirch, R. David Murray, and Maciej Szulik "
"in :issue:`21800`.)"
msgstr ""
":mod:`imaplib` 模組現在通過 :meth:`IMAP4.enable() <imaplib.IMAP4.enable 支援 "
":rfc:`5161`（啟用擴充）和 :rfc:`6855`（UTF-8 支援） >` 方法。一個新的 :attr:`"
"IMAP4.utf8_enabled <imaplib.IMAP4.utf8_enabled>` 屬性跟踪是否啟用了 "
":rfc:`6855` 支援。 （由 Milan Oberkirch、R. David Murray 和 Maciej Szulik 在 "
":issue:`21800` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1247
#, fuzzy
msgid ""
"The :mod:`imaplib` module now automatically encodes non-ASCII string "
"usernames and passwords using UTF-8, as recommended by the RFCs.  "
"(Contributed by Milan Oberkirch in :issue:`21800`.)"
msgstr ""
":mod:`imaplib` 模組現在按照 RFC 的建議使用 UTF-8 自動編碼非 ASCII "
"字串使用者名和密碼。 （由 Milan Oberkirch 在 :issue:`21800` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1253
msgid "imghdr"
msgstr "imghdr"

#: ../../whatsnew/3.5.rst:1255
#, fuzzy
msgid ""
"The :func:`~imghdr.what` function now recognizes the `OpenEXR <https://www."
"openexr.com>`_ format (contributed by Martin Vignali and Claudiu Popa in :"
"issue:`20295`), and the `WebP <https://en.wikipedia.org/wiki/WebP>`_ format "
"(contributed by Fabrice Aneche and Claudiu Popa in :issue:`20197`.)"
msgstr ""
":func:`~imghdr.what` 函式現在可以識別 `OpenEXR <https://www.openexr.com>`_ "
"格式（由 Martin Vignali 和 Claudiu Popa 在 :issue:`20295` 中貢獻）和 ` WebP "
"<https://en.wikipedia.org/wiki/WebP>`_ 格式（由 Fabrice Aneche 和 Claudiu "
"Popa 在 :issue:`20197` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1263
msgid "importlib"
msgstr "importlib"

#: ../../whatsnew/3.5.rst:1265
#, fuzzy
msgid ""
"The :class:`util.LazyLoader <importlib.util.LazyLoader>` class allows for "
"lazy loading of modules in applications where startup time is important. "
"(Contributed by Brett Cannon in :issue:`17621`.)"
msgstr ""
":class:`util.LazyLoader <importlib.util.LazyLoader>` "
"類允許在啟動時間很重要的應用程式中延遲加載模組。 （由 Brett Cannon 在 "
":issue:`17621` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1269
#, fuzzy
msgid ""
"The :func:`abc.InspectLoader.source_to_code() <importlib.abc.InspectLoader."
"source_to_code>` method is now a static method.  This makes it easier to "
"initialize a module object with code compiled from a string by running "
"``exec(code, module.__dict__)``. (Contributed by Brett Cannon in :issue:"
"`21156`.)"
msgstr ""
":func:`abc.InspectLoader.source_to_code() <importlib.abc.InspectLoader."
"source_to_code>` 方法現在是靜態方法。這使得通過運行 exec(code, module."
"__dict__) 可以更容易地使用從字串編譯的程式碼來初始化模組物件。 （由 Brett "
"Cannon 在 :issue:`21156` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1275
#, fuzzy
msgid ""
"The new :func:`util.module_from_spec() <importlib.util.module_from_spec>` "
"function is now the preferred way to create a new module.  As opposed to "
"creating a :class:`types.ModuleType` instance directly, this new function "
"will set the various import-controlled attributes based on the passed-in "
"spec object.  (Contributed by Brett Cannon in :issue:`20383`.)"
msgstr ""
"新的 :func:`util.module_from_spec() <importlib.util.module_from_spec>` "
"函式現在是建立新模組的首選方法。與直接建立 types.ModuleType "
"實例相反，這個新函式將根據傳入的規範物件設定各種導入控制的屬性。 （由 Brett "
"Cannon 在 :issue:`20383` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1283
msgid "inspect"
msgstr "inspect"

#: ../../whatsnew/3.5.rst:1285
#, fuzzy
msgid ""
"Both the :class:`~inspect.Signature` and :class:`~inspect.Parameter` classes "
"are now picklable and hashable.  (Contributed by Yury Selivanov in :issue:"
"`20726` and :issue:`20334`.)"
msgstr ""
":class:`~inspect.Signature` 和 :class:`~inspect.Parameter` 類現在都可以 "
"picklable 和 hashable。 （由 Yury Selivanov 在 :issue:`20726` 和 "
":issue:`20334` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1289
#, fuzzy
msgid ""
"A new :meth:`BoundArguments.apply_defaults() <inspect.BoundArguments."
"apply_defaults>` method provides a way to set default values for missing "
"arguments::"
msgstr ""
"一個新的 :meth:`BoundArguments.apply_defaults() <inspect.BoundArguments."
"apply_defaults>` 方法提供了一種為缺少的參數設定預設值的方法："

#: ../../whatsnew/3.5.rst:1299
#, fuzzy
msgid "(Contributed by Yury Selivanov in :issue:`24190`.)"
msgstr "（由 Yury Selivanov 在 :issue:`24190` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1301
#, fuzzy
msgid ""
"A new class method :meth:`Signature.from_callable() <inspect.Signature."
"from_callable>` makes subclassing of :class:`~inspect.Signature` easier.  "
"(Contributed by Yury Selivanov and Eric Snow in :issue:`17373`.)"
msgstr ""
"一個新的類方法 :meth:`Signature.from_callable() <inspect.Signature."
"from_callable>` 使得 :class:`~inspect.Signature` 的子類別化更容易。 （由 "
"Yury Selivanov 和 Eric Snow 在 :issue:`17373` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1306
#, fuzzy
msgid ""
"The :func:`~inspect.signature` function now accepts a *follow_wrapped* "
"optional keyword argument, which, when set to ``False``, disables automatic "
"following of ``__wrapped__`` links. (Contributed by Yury Selivanov in :issue:"
"`20691`.)"
msgstr ""
":func:`~inspect.signature` 函式現在接受 *follow_wrapped* 可選關鍵字參數，"
"當設定為 ``False`` 時，將禁用自動跟踪 `__wrapped__`` 鏈接。 （由 Yury "
"Selivanov 在 :issue:`20691` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1311
#, fuzzy
msgid ""
"A set of new functions to inspect :term:`coroutine functions <coroutine "
"function>` and :term:`coroutine objects <coroutine>` has been added: :func:"
"`~inspect.iscoroutine`, :func:`~inspect.iscoroutinefunction`, :func:"
"`~inspect.isawaitable`, :func:`~inspect.getcoroutinelocals`, and :func:"
"`~inspect.getcoroutinestate`. (Contributed by Yury Selivanov in :issue:"
"`24017` and :issue:`24400`.)"
msgstr ""
"新增了一組用於檢查協程函式 <協程函式> 和協程物件 <協程> "
"的新函式：:func:`~inspect.iscoroutine`、:func:`~inspect。 "
"iscoroutinefunction`、:func:`~inspect.isawaitable`、:func:`~inspect."
"getcoroutinelocals` 和 :func:`~inspect.getcoroutinestate`。 （由 Yury "
"Selivanov 在 :issue:`24017` 和 :issue:`24400` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1319
#, fuzzy
msgid ""
"The :func:`~inspect.stack`, :func:`~inspect.trace`, :func:`~inspect."
"getouterframes`, and :func:`~inspect.getinnerframes` functions now return a "
"list of named tuples. (Contributed by Daniel Shahaf in :issue:`16808`.)"
msgstr ""
":func:`~inspect.stack`、:func:`~inspect.trace`、:func:`~inspect."
"getouterframes` 和 :func:`~inspect.getinnerframes` 函式現在回傳命名元組列表。"
" （由 Daniel Shahaf 在 :issue:`16808` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1326
msgid "io"
msgstr "io"

#: ../../whatsnew/3.5.rst:1328
#, fuzzy
msgid ""
"A new :meth:`BufferedIOBase.readinto1() <io.BufferedIOBase.readinto1>` "
"method, that uses at most one call to the underlying raw stream's :meth:"
"`RawIOBase.read() <io.RawIOBase.read>` or :meth:`RawIOBase.readinto() <io."
"RawIOBase.readinto>` methods. (Contributed by Nikolaus Rath in :issue:"
"`20578`.)"
msgstr ""
"一種新的 :meth:`BufferedIOBase.readinto1() <io.BufferedIOBase.readinto1>` "
"方法，最多呼叫一次底層原始流的 :meth:`RawIOBase.read() <io.RawIOBase.read>` "
"或 :meth:`RawIOBase.readinto() <io.RawIOBase.readinto>` 方法。 （由 Nikolaus "
"Rath 在 :issue:`20578` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1336
msgid "ipaddress"
msgstr "ipaddress"

#: ../../whatsnew/3.5.rst:1338
#, fuzzy
msgid ""
"Both the :class:`~ipaddress.IPv4Network` and :class:`~ipaddress.IPv6Network` "
"classes now accept an ``(address, netmask)`` tuple argument, so as to easily "
"construct network objects from existing addresses::"
msgstr ""
":class:`~ipaddress.IPv4Network` 和 :class:`~ipaddress.IPv6Network` "
"類現在都接受一個 ``(address, netmask)`` "
"元組參數，以便從現有地址輕鬆構建網絡物件::"

#: ../../whatsnew/3.5.rst:1348
#, fuzzy
msgid "(Contributed by Peter Moody and Antoine Pitrou in :issue:`16531`.)"
msgstr "（由 Peter Moody 和 Antoine Pitrou 在 :issue:`16531` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1350
#, fuzzy
msgid ""
"A new :attr:`~ipaddress.IPv4Network.reverse_pointer` attribute for the :"
"class:`~ipaddress.IPv4Network` and :class:`~ipaddress.IPv6Network` classes "
"returns the name of the reverse DNS PTR record::"
msgstr ""
":class:`~ipaddress.IPv4Network` 和 :class:`~ipaddress.IPv6Network` 類的新 "
":attr:`~ipaddress.IPv4Network.reverse_pointer 屬性回傳反向 DNS PTR "
"記錄的名稱::"

#: ../../whatsnew/3.5.rst:1362
#, fuzzy
msgid "(Contributed by Leon Weber in :issue:`20480`.)"
msgstr "（由 Leon Weber 在 :issue:`20480` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1366
msgid "json"
msgstr "json"

#: ../../whatsnew/3.5.rst:1368
#, fuzzy
msgid ""
"The :mod:`json.tool` command line interface now preserves the order of keys "
"in JSON objects passed in input.  The new ``--sort-keys`` option can be used "
"to sort the keys alphabetically. (Contributed by Berker Peksag in :issue:"
"`21650`.)"
msgstr ""
":mod:`json.tool` 命令列界面現在保留輸入中傳遞的 JSON 對像中鍵的順序。新的 "
"``--sort-keys`` 選項可用於按字母順序對鍵進行排序。 （由 Berker Peksag 在 "
":issue:`21650` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1373
#, fuzzy
msgid ""
"JSON decoder now raises :exc:`~json.JSONDecodeError` instead of :exc:"
"`ValueError` to provide better context information about the error. "
"(Contributed by Serhiy Storchaka in :issue:`19361`.)"
msgstr ""
"JSON 解碼器現在引發 :exc:`~json.JSONDecodeError` 而不是 :exc:`ValueError` "
"以提供有關錯誤的更好的上下文資訊。 （由 Serhiy Storchaka 在 :issue:`19361` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:1379
msgid "linecache"
msgstr "linecache"

#: ../../whatsnew/3.5.rst:1381
#, fuzzy
msgid ""
"A new :func:`~linecache.lazycache` function can be used to capture "
"information about a non-file-based module to permit getting its lines later "
"via :func:`~linecache.getline`. This avoids doing I/O until a line is "
"actually needed, without having to carry the module globals around "
"indefinitely. (Contributed by Robert Collins in :issue:`17911`.)"
msgstr ""
"一個新的 :func:`~linecache.lazycache` "
"函式可用於捕獲有關非基於文件的模組的資訊，以允許稍後通過 :func:`~linecache."
"getline` 獲取其行。這避免了在實際需要一行之前執行 I/"
"O，而不必無限期地攜帶模組全局變數。 （由 Robert Collins 在 :issue:`17911` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:1389
msgid "locale"
msgstr "locale"

#: ../../whatsnew/3.5.rst:1391
#, fuzzy
msgid ""
"A new :func:`~locale.delocalize` function can be used to convert a string "
"into a normalized number string, taking the ``LC_NUMERIC`` settings into "
"account::"
msgstr ""
"一個新的 :func:`~locale.delocalize` 函式可用於將字串轉換為規範化的數字字串，"
"將 ``LC_NUMERIC`` 設定考慮在內::"

#: ../../whatsnew/3.5.rst:1404
#, fuzzy
msgid "(Contributed by Cédric Krier in :issue:`13918`.)"
msgstr "（由 Cédric Krier 在 :issue:`13918` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1408
msgid "logging"
msgstr "logging"

#: ../../whatsnew/3.5.rst:1410
#, fuzzy
msgid ""
"All logging methods (:class:`~logging.Logger` :meth:`~logging.Logger.log`, :"
"meth:`~logging.Logger.exception`, :meth:`~logging.Logger.critical`, :meth:"
"`~logging.Logger.debug`, etc.), now accept exception instances as an "
"*exc_info* argument, in addition to boolean values and exception tuples::"
msgstr ""
"所有日誌記錄方法meth:`~logging.Logger.debug` 等)，除了布爾值和例外元組之外，"
"現在還接受例外實例作為 *exc_info* 參數::"

#: ../../whatsnew/3.5.rst:1423
#, fuzzy
msgid "(Contributed by Yury Selivanov in :issue:`20537`.)"
msgstr "（由 Yury Selivanov 在 :issue:`20537` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1425
#, fuzzy
msgid ""
"The :class:`handlers.HTTPHandler <logging.handlers.HTTPHandler>` class now "
"accepts an optional :class:`ssl.SSLContext` instance to configure SSL "
"settings used in an HTTP connection. (Contributed by Alex Gaynor in :issue:"
"`22788`.)"
msgstr ""
":class:`handlers.HTTPHandler <logging.handlers.HTTPHandler>` "
"類現在接受一個可選的 :class:`ssl.SSLContext` 實例來配置 HTTP 連接中使用的 "
"SSL 設定。 （由 Alex Gaynor 在 :issue:`22788` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1430
#, fuzzy
msgid ""
"The :class:`handlers.QueueListener <logging.handlers.QueueListener>` class "
"now takes a *respect_handler_level* keyword argument which, if set to "
"``True``, will pass messages to handlers taking handler levels into account. "
"(Contributed by Vinay Sajip.)"
msgstr ""
":class:`handlers.QueueListener <logging.handlers.QueueListener>` 類現在採用 "
"*respect_handler_level* 關鍵字參數，如果設定為 "
"``True``，將把消息傳遞給處理程式並考慮處理程式級別。 （由 Vinay Sajip "
"提供。）"

#: ../../whatsnew/3.5.rst:1437
msgid "lzma"
msgstr "lzma"

#: ../../whatsnew/3.5.rst:1439
#, fuzzy
msgid ""
"The :meth:`LZMADecompressor.decompress() <lzma.LZMADecompressor.decompress>` "
"method now accepts an optional *max_length* argument to limit the maximum "
"size of decompressed data. (Contributed by Martin Panter in :issue:`15955`.)"
msgstr ""
":meth:`LZMADecompressor.decompress() <lzma.LZMADecompressor.decompress>` "
"方法現在接受一個可選的 *max_length* 參數來限制解壓縮資料的最大大小。 （由 "
"Martin Panter 在 :issue:`15955` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1446
msgid "math"
msgstr "math"

#: ../../whatsnew/3.5.rst:1448
#, fuzzy
msgid ""
"Two new constants have been added to the :mod:`math` module: :data:`~math."
"inf` and :data:`~math.nan`.  (Contributed by Mark Dickinson in :issue:"
"`23185`.)"
msgstr ""
":mod:`math` 模組中新增了兩個新常數：:data:`~math.inf` 和 :data:`~math.nan`。 "
"（由 Mark Dickinson 在 :issue:`23185` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1451
#, fuzzy
msgid ""
"A new function :func:`~math.isclose` provides a way to test for approximate "
"equality. (Contributed by Chris Barker and Tal Einat in :issue:`24270`.)"
msgstr ""
"新函式 :func:`~math.isclose` 提供了一種測試近似相等性的方法。 （由 Chris "
"Barker 和 Tal Einat 在 :issue:`24270` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1454
#, fuzzy
msgid ""
"A new :func:`~math.gcd` function has been added.  The :func:`fractions.gcd` "
"function is now deprecated. (Contributed by Mark Dickinson and Serhiy "
"Storchaka in :issue:`22486`.)"
msgstr ""
"新增了一個新的 :func:`~math.gcd` 函式。 :func:`fractions.gcd` 函式現已棄用。 "
"（由 Mark Dickinson 和 Serhiy Storchaka 在 :issue:`22486` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1460
msgid "multiprocessing"
msgstr "multiprocessing"

#: ../../whatsnew/3.5.rst:1462
#, fuzzy
msgid ""
":func:`sharedctypes.synchronized() <multiprocessing.sharedctypes."
"synchronized>` objects now support the :term:`context manager` protocol. "
"(Contributed by Charles-François Natali in :issue:`21565`.)"
msgstr ""
":func:`sharedctypes.synchronized() <multiprocessing.sharedctypes."
"synchronized>` 物件現在支援 :term:`context manager` 協定。 （由 Charles-"
"François Natali 在 :issue:`21565` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1468
msgid "operator"
msgstr "operator"

#: ../../whatsnew/3.5.rst:1470
#, fuzzy
msgid ""
":func:`~operator.attrgetter`, :func:`~operator.itemgetter`, and :func:"
"`~operator.methodcaller` objects now support pickling. (Contributed by Josh "
"Rosenberg and Serhiy Storchaka in :issue:`22955`.)"
msgstr ""
":func:`~operator.attrgetter`、:func:`~operator.itemgetter` 和 "
":func:`~operator.methodcaller` 物件現在支援酸洗。 （由 Josh Rosenberg 和 "
"Serhiy Storchaka 在 :issue:`22955` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1474
#, fuzzy
msgid ""
"New :func:`~operator.matmul` and :func:`~operator.imatmul` functions to "
"perform matrix multiplication. (Contributed by Benjamin Peterson in :issue:"
"`21176`.)"
msgstr ""
"新的 :func:`~operator.matmul` 和 :func:`~operator.imatmul` "
"函式來執行矩陣乘法。 （由 Benjamin Peterson 在 :issue:`21176` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1480
msgid "os"
msgstr "os"

#: ../../whatsnew/3.5.rst:1482
#, fuzzy
msgid ""
"The new :func:`~os.scandir` function returning an iterator of :class:`~os."
"DirEntry` objects has been added.  If possible, :func:`~os.scandir` extracts "
"file attributes while scanning a directory, removing the need to perform "
"subsequent system calls to determine file type or attributes, which may "
"significantly improve performance.  (Contributed by Ben Hoyt with the help "
"of Victor Stinner in :issue:`22524`.)"
msgstr ""
"新增了回傳 :class:`~os.DirEntry` 物件疊代器的新 :func:`~os.scandir` "
"函式。如果可能，:func:`~os.scandir` 在掃描目錄時提取文件屬性，無需執行後續系"
"統呼叫來確定文件型別或屬性，這可能會顯著提高性能。 （由 Ben Hoyt 在 Victor "
"Stinner 的幫助下在 :issue:`22524` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1489
#, fuzzy
msgid ""
"On Windows, a new :attr:`stat_result.st_file_attributes <os.stat_result."
"st_file_attributes>` attribute is now available.  It corresponds to the "
"``dwFileAttributes`` member of the ``BY_HANDLE_FILE_INFORMATION`` structure "
"returned by ``GetFileInformationByHandle()``.  (Contributed by Ben Hoyt in :"
"issue:`21719`.)"
msgstr ""
"在 Windows 上，一個新的 :attr:`stat_result.st_file_attributes <os.stat_result"
".st_file_attributes>` 屬性現在可用。它對應於“GetFileInformationByHandle()”回"
"傳的“BY_HANDLE_FILE_INFORMATION”結構的 ``dwFileAttributes`` 成員。 （由 Ben Hoyt "
"在 :issue:`21719` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1495
#, fuzzy
msgid ""
"The :func:`~os.urandom` function now uses the ``getrandom()`` syscall on "
"Linux 3.17 or newer, and ``getentropy()`` on OpenBSD 5.6 and newer, removing "
"the need to use ``/dev/urandom`` and avoiding failures due to potential file "
"descriptor exhaustion.  (Contributed by Victor Stinner in :issue:`22181`.)"
msgstr ""
":func:`~os.urandom` 函式現在在 Linux 3.17 或更新版本上使用 ``getrandom()`` "
"系統呼叫，在 OpenBSD 5.6 和更新版本上使用 ``getentropy()``，不再需要使用 ``/ "
"dev/urandom`` 並避免由於潛在的文件描述器耗盡而導致的失敗。 （由 Victor "
"Stinner 在 :issue:`22181` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1500
#, fuzzy
msgid ""
"New :func:`~os.get_blocking` and :func:`~os.set_blocking` functions allow "
"getting and setting a file descriptor's blocking mode (:data:`~os."
"O_NONBLOCK`.) (Contributed by Victor Stinner in :issue:`22054`.)"
msgstr ""
"新的 :func:`~os.get_blocking` 和 :func:`~os.set_blocking` "
"函式允許獲取和設定文件描述器的阻塞模式（:data:`~os.O_NONBLOCK`。）（由 "
"Victor Stinner 在 :issue 中貢獻:`22054`。）"

#: ../../whatsnew/3.5.rst:1504
#, fuzzy
msgid ""
"The :func:`~os.truncate` and :func:`~os.ftruncate` functions are now "
"supported on Windows.  (Contributed by Steve Dower in :issue:`23668`.)"
msgstr ""
"Windows 現在支援 :func:`~os.truncate` 和 :func:`~os.ftruncate` 函式。 （由 "
"Steve Dower 在 :issue:`23668` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1507
#, fuzzy
msgid ""
"There is a new :func:`os.path.commonpath` function returning the longest "
"common sub-path of each passed pathname.  Unlike the :func:`os.path."
"commonprefix` function, it always returns a valid path::"
msgstr ""
"有一個新的 os.path.commonpath 函式回傳每個傳遞的路徑名的最長公開子路徑。不像 "
":func:`os.path.commonprefix` 函式，它總是回傳一個有效的路徑::"

#: ../../whatsnew/3.5.rst:1518
#, fuzzy
msgid "(Contributed by Rafik Draoui and Serhiy Storchaka in :issue:`10395`.)"
msgstr "（由 Rafik Draoui 和 Serhiy Storchaka 在 :issue:`10395` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1522
msgid "pathlib"
msgstr "pathlib"

#: ../../whatsnew/3.5.rst:1524
#, fuzzy
msgid ""
"The new :meth:`Path.samefile() <pathlib.Path.samefile>` method can be used "
"to check whether the path points to the same file as another path, which can "
"be either another :class:`~pathlib.Path` object, or a string::"
msgstr ""
"新的 :meth:`Path.samefile() <pathlib.Path.samefile>` "
"方法可用於檢查路徑是否指向與另一個路徑相同的文件，可以是另一個 :class:`~"
"pathlib.Path ` 物件，或字串::"

#: ../../whatsnew/3.5.rst:1534
#, fuzzy
msgid "(Contributed by Vajrasky Kok and Antoine Pitrou in :issue:`19775`.)"
msgstr "（由 Vajrasky Kok 和 Antoine Pitrou 在 :issue:`19775` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1536
#, fuzzy
msgid ""
"The :meth:`Path.mkdir() <pathlib.Path.mkdir>` method now accepts a new "
"optional *exist_ok* argument to match ``mkdir -p`` and :func:`os.makedirs` "
"functionality.  (Contributed by Berker Peksag in :issue:`21539`.)"
msgstr ""
":meth:`Path.mkdir() <pathlib.Path.mkdir>` 方法現在接受一個新的可選 *exist_ok*"
" 參數來匹配 ``mkdir -p`` 和 :func:`os.makedirs` 功能。 （由 Berker Peksag 在 "
":issue:`21539` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1540
#, fuzzy
msgid ""
"There is a new :meth:`Path.expanduser() <pathlib.Path.expanduser>` method to "
"expand ``~`` and ``~user`` prefixes.  (Contributed by Serhiy Storchaka and "
"Claudiu Popa in :issue:`19776`.)"
msgstr ""
"有一個新的 :meth:`Path.expanduser() <pathlib.Path.expanduser>` 方法來擴充 "
"``~`` 和 ``~user`` 前綴。 （由 Serhiy Storchaka 和 Claudiu Popa 在 "
":issue:`19776` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1544
#, fuzzy
msgid ""
"A new :meth:`Path.home() <pathlib.Path.home>` class method can be used to "
"get a :class:`~pathlib.Path` instance representing the user’s home "
"directory. (Contributed by Victor Salgado and Mayank Tripathi in :issue:"
"`19777`.)"
msgstr ""
"一個新的 :meth:`Path.home() <pathlib.Path.home>` "
"類方法可用於獲取表示使用者主目錄的 :class:`~pathlib.Path` 實例。 （由 Victor "
"Salgado 和 Mayank Tripathi 在 :issue:`19777` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1549
#, fuzzy
msgid ""
"New :meth:`Path.write_text() <pathlib.Path.write_text>`, :meth:`Path."
"read_text() <pathlib.Path.read_text>`, :meth:`Path.write_bytes() <pathlib."
"Path.write_bytes>`, :meth:`Path.read_bytes() <pathlib.Path.read_bytes>` "
"methods to simplify read/write operations on files."
msgstr ""
"新的 :meth:`Path.write_text() <pathlib.Path.write_text>`, :meth:`Path."
"read_text() <pathlib.Path.read_text>`, :meth:`Path.write_bytes() "
"<pathlib.Path .write_bytes>`, :meth:`Path.read_bytes() <pathlib.Path."
"read_bytes>` 方法來簡化對文件的讀/寫操作。"

#: ../../whatsnew/3.5.rst:1555
#, fuzzy
msgid ""
"The following code snippet will create or rewrite existing file ``~/"
"spam42``::"
msgstr "以下程式碼片段將建立或重寫現有文件 ``~/spam42``::"

#: ../../whatsnew/3.5.rst:1563
#, fuzzy
msgid "(Contributed by Christopher Welborn in :issue:`20218`.)"
msgstr "（由 Christopher Welborn 在 :issue:`20218` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1567
msgid "pickle"
msgstr "pickle"

#: ../../whatsnew/3.5.rst:1569
#, fuzzy
msgid ""
"Nested objects, such as unbound methods or nested classes, can now be "
"pickled using :ref:`pickle protocols <pickle-protocols>` older than protocol "
"version 4. Protocol version 4 already supports these cases.  (Contributed by "
"Serhiy Storchaka in :issue:`23611`.)"
msgstr ""
"嵌套物件，例如未綁定方法或嵌套類，現在可以使用比協定版本 4 更早的 pickle "
"協定 <pickle-protocols> 進行醃製。協定版本 4 已經支援這些情況。 （由 Serhiy "
"Storchaka 在 :issue:`23611` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1576
msgid "poplib"
msgstr "poplib"

#: ../../whatsnew/3.5.rst:1578
#, fuzzy
msgid ""
"A new :meth:`POP3.utf8() <poplib.POP3.utf8>` command enables :rfc:`6856` "
"(Internationalized Email) support, if a POP server supports it. (Contributed "
"by Milan OberKirch in :issue:`21804`.)"
msgstr ""
"如果 POP 伺服器支援，新的 :meth:`POP3.utf8() <poplib.POP3.utf8>` 命令啟用 "
":rfc:`6856`（國際化電子郵件）支援。 （由 Milan OberKirch 在 :issue:`21804` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:1584
msgid "re"
msgstr "re"

#: ../../whatsnew/3.5.rst:1586
#, fuzzy
msgid ""
"References and conditional references to groups with fixed length are now "
"allowed in lookbehind assertions::"
msgstr "後向斷言中現在允許對具有固定長度的組的引用和條件引用::"

#: ../../whatsnew/3.5.rst:1596
#, fuzzy
msgid "(Contributed by Serhiy Storchaka in :issue:`9179`.)"
msgstr "（由 Serhiy Storchaka 在 :issue:`9179` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1598
#, fuzzy
msgid ""
"The number of capturing groups in regular expressions is no longer limited "
"to 100.  (Contributed by Serhiy Storchaka in :issue:`22437`.)"
msgstr "正則表達式中捕獲組的數量不再限制為 100。（由 Serhiy Storchaka 在 "
":issue:`22437` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1601
#, fuzzy
msgid ""
"The :func:`~re.sub` and :func:`~re.subn` functions now replace unmatched "
"groups with empty strings instead of raising an exception. (Contributed by "
"Serhiy Storchaka in :issue:`1519638`.)"
msgstr ""
":func:`~re.sub` 和 :func:`~re.subn` "
"函式現在用空字串替換不匹配的組，而不是引發例外。 （由 Serhiy Storchaka 在 "
":issue:`1519638` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1605
#, fuzzy
msgid ""
"The :class:`re.error` exceptions have new attributes, :attr:`~re.error."
"msg`, :attr:`~re.error.pattern`, :attr:`~re.error.pos`, :attr:`~re.error."
"lineno`, and :attr:`~re.error.colno`, that provide better context "
"information about the error::"
msgstr ""
":class:`re.error` 例外有新的屬性，:attr:`~re.error.msg`, :attr:`~re.error."
"pattern`, :attr:`~re.error.pos`, :attr:`~re.error.lineno` 和 :attr:`~re.error"
".colno`，它們提供了關於錯誤的更好的上下文資訊："

#: ../../whatsnew/3.5.rst:1619
#, fuzzy
msgid "(Contributed by Serhiy Storchaka in :issue:`22578`.)"
msgstr "（由 Serhiy Storchaka 在 :issue:`22578` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1623
msgid "readline"
msgstr "readline"

#: ../../whatsnew/3.5.rst:1625
#, fuzzy
msgid ""
"A new :func:`~readline.append_history_file` function can be used to append "
"the specified number of trailing elements in history to the given file. "
"(Contributed by Bruno Cauet in :issue:`22940`.)"
msgstr ""
"一個新的 :func:`~readline.append_history_file` "
"函式可用於將歷史記錄中指定數量的尾隨元素附加到給定文件。 （由 Bruno Cauet 在 "
":issue:`22940` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1631
msgid "selectors"
msgstr "selectors"

#: ../../whatsnew/3.5.rst:1633
#, fuzzy
msgid ""
"The new :class:`~selectors.DevpollSelector` supports efficient ``/dev/poll`` "
"polling on Solaris. (Contributed by Giampaolo Rodola' in :issue:`18931`.)"
msgstr ""
"新的 :class:`~selectors.DevpollSelector` 支援在 Solaris 上高效的 ``/dev/"
"poll`` 輪詢。 （由 Giampaolo Rodola 在 :issue:`18931` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1639
msgid "shutil"
msgstr "shutil"

#: ../../whatsnew/3.5.rst:1641
#, fuzzy
msgid ""
"The :func:`~shutil.move` function now accepts a *copy_function* argument, "
"allowing, for example, the :func:`~shutil.copy` function to be used instead "
"of the default :func:`~shutil.copy2` if there is a need to ignore file "
"metadata when moving. (Contributed by Claudiu Popa in :issue:`19840`.)"
msgstr ""
":func:`~shutil.move` 函式現在接受 *copy_function* 參數，例如，允許使用 "
":func:`~shutil.copy` 函式代替預設的 :func:`~shutil.copy2 ` "
"如果移動時需要忽略文件元資料。 （由 Claudiu Popa 在 :issue:`19840` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1647
#, fuzzy
msgid ""
"The :func:`~shutil.make_archive` function now supports the *xztar* format. "
"(Contributed by Serhiy Storchaka in :issue:`5411`.)"
msgstr ""
":func:`~shutil.make_archive` 函式現在支援 *xztar* 格式。 （由 Serhiy "
"Storchaka 在 :issue:`5411` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1652
msgid "signal"
msgstr "signal"

#: ../../whatsnew/3.5.rst:1654
#, fuzzy
msgid ""
"On Windows, the :func:`~signal.set_wakeup_fd` function now also supports "
"socket handles.  (Contributed by Victor Stinner in :issue:`22018`.)"
msgstr ""
"在 Windows 上，:func:`~signal.set_wakeup_fd` 函式現在也支援 socket 句柄。 （由 "
"Victor Stinner 在 :issue:`22018` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1657
#, fuzzy
msgid ""
"Various ``SIG*`` constants in the :mod:`signal` module have been converted "
"into :mod:`Enums <enum>`.  This allows meaningful names to be printed during "
"debugging, instead of integer \"magic numbers\". (Contributed by Giampaolo "
"Rodola' in :issue:`21076`.)"
msgstr ""
":mod:`signal` 模組中的各種 ``SIG*`` 常數已轉換為 :mod:`Enums "
"<enum>`。這允許在除錯期間印出有意義的名稱，而不是整數“幻數”。 （由 Giampaolo "
"Rodola 在 :issue:`21076` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1664
msgid "smtpd"
msgstr "smtpd"

#: ../../whatsnew/3.5.rst:1666
#, fuzzy
msgid ""
"Both the :class:`~smtpd.SMTPServer` and :class:`~smtpd.SMTPChannel` classes "
"now accept a *decode_data* keyword argument to determine if the ``DATA`` "
"portion of the SMTP transaction is decoded using the ``\"utf-8\"`` codec or "
"is instead provided to the :meth:`SMTPServer.process_message() <smtpd."
"SMTPServer.process_message>` method as a byte string.  The default is "
"``True`` for backward compatibility reasons, but will change to ``False`` in "
"Python 3.6.  If *decode_data* is set to ``False``, the ``process_message`` "
"method must be prepared to accept keyword arguments. (Contributed by Maciej "
"Szulik in :issue:`19662`.)"
msgstr ""
":class:`~smtpd.SMTPServer` 和 :class:`~smtpd.SMTPChannel` 類現在都接受 "
"*decode_data* 關鍵字參數以確定 SMTP 事務的 ``DATA`` 部分是否使用 `` "
"解碼 ``utf-8```` 編解碼器或作為位元組字串提供給 :meth:`SMTPServer."
"process_message() <smtpd.SMTPServer.process_message>` "
"方法。出於向後相容的原因，預設值為 ``True``，但在 Python 3.6 中將更改為 ``False``。"
"如果 *decode_data* "
"設定為 ``False``，“process_message”方法必須準備好接受關鍵字參數。 （由 Maciej "
"Szulik 在 :issue:`19662` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1677
#, fuzzy
msgid ""
"The :class:`~smtpd.SMTPServer` class now advertises the ``8BITMIME`` "
"extension (:rfc:`6152`) if *decode_data* has been set ``True``.  If the "
"client specifies ``BODY=8BITMIME`` on the ``MAIL`` command, it is passed to :"
"meth:`SMTPServer.process_message() <smtpd.SMTPServer.process_message>` via "
"the *mail_options* keyword. (Contributed by Milan Oberkirch and R.  David "
"Murray in :issue:`21795`.)"
msgstr ""
":class:`~smtpd.SMTPServer` 類現在公佈 ``8BITMIME`` 擴充名 (:rfc:`6152`) 如果 "
"*decode_data* 已設定為 ``True``。如果客戶端在 `MAIL`` 命令上指定 "
"``BODY=8BITMIME``，它會通過 *mail_options* 關鍵字傳遞給 :meth:`SMTPServer."
"process_message() <smtpd.SMTPServer.process_message>`。 （由 Milan Oberkirch "
"和 R. David Murray 在 :issue:`21795` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1684
#, fuzzy
msgid ""
"The :class:`~smtpd.SMTPServer` class now also supports the ``SMTPUTF8`` "
"extension (:rfc:`6531`: Internationalized Email).  If the client specified "
"``SMTPUTF8 BODY=8BITMIME`` on the ``MAIL`` command, they are passed to :meth:"
"`SMTPServer.process_message() <smtpd.SMTPServer.process_message>` via the "
"*mail_options* keyword.  It is the responsibility of the ``process_message`` "
"method to correctly handle the ``SMTPUTF8`` data. (Contributed by Milan "
"Oberkirch in :issue:`21725`.)"
msgstr ""
":class:`~smtpd.SMTPServer` 類現在還支援 ``SMTPUTF8`` "
"擴充（:rfc:`6531`：國際化電子郵件）。如果客戶端在 ``MAIL`` 命令上指定了 ``"
"SMTPUTF8 BODY=8BITMIME``，它們將通過 *mail_options* 關鍵字傳遞給 "
":meth:`SMTPServer.process_message() <smtpd.SMTPServer.process_message>`。 "
"``process_message`` 方法負責正確處理 ``SMTPUTF8`` 資料。 （由 Milan "
"Oberkirch 在 :issue:`21725` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1692
#, fuzzy
msgid ""
"It is now possible to provide, directly or via name resolution, IPv6 "
"addresses in the :class:`~smtpd.SMTPServer` constructor, and have it "
"successfully connect.  (Contributed by Milan Oberkirch in :issue:`14758`.)"
msgstr ""
"現在可以在 :class:`~smtpd.SMTPServer` 構造函式中直接或通過名稱解析提供 IPv6 "
"地址，並使其成功連接。 （由 Milan Oberkirch 在 :issue:`14758` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1698
msgid "smtplib"
msgstr "smtplib"

#: ../../whatsnew/3.5.rst:1700
#, fuzzy
msgid ""
"A new :meth:`SMTP.auth() <smtplib.SMTP.auth>` method provides a convenient "
"way to implement custom authentication mechanisms. (Contributed by Milan "
"Oberkirch in :issue:`15014`.)"
msgstr ""
"新的 :meth:`SMTP.auth() <smtplib.SMTP.auth>` "
"方法提供了一種實作自定義身份驗證機制的便捷方法。 （由 Milan Oberkirch 在 "
":issue:`15014` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1704
#, fuzzy
msgid ""
"The :meth:`SMTP.set_debuglevel() <smtplib.SMTP.set_debuglevel>` method now "
"accepts an additional debuglevel (2), which enables timestamps in debug "
"messages. (Contributed by Gavin Chappell and Maciej Szulik in :issue:"
"`16914`.)"
msgstr ""
":meth:`SMTP.set_debuglevel() <smtplib.SMTP.set_debuglevel>` "
"方法現在接受額外的除錯級別 (2)，它在除錯消息中啟用時間戳。 （由 Gavin "
"Chappell 和 Maciej Szulik 在 :issue:`16914` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1708
#, fuzzy
msgid ""
"Both the :meth:`SMTP.sendmail() <smtplib.SMTP.sendmail>` and :meth:`SMTP."
"send_message() <smtplib.SMTP.send_message>` methods now support :rfc:`6531` "
"(SMTPUTF8). (Contributed by Milan Oberkirch and R. David Murray in :issue:"
"`22027`.)"
msgstr ""
":meth:`SMTP.sendmail() <smtplib.SMTP.sendmail>` 和 :meth:`SMTP.send_message()"
" <smtplib.SMTP.send_message>` 方法現在都支援 :rfc:`6531` (SMTPUTF8)。 （由 "
"Milan Oberkirch 和 R. David Murray 在 :issue:`22027` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1715
msgid "sndhdr"
msgstr "sndhdr"

#: ../../whatsnew/3.5.rst:1717
#, fuzzy
msgid ""
"The :func:`~sndhdr.what` and :func:`~sndhdr.whathdr` functions  now return "
"a :func:`~collections.namedtuple`.  (Contributed by Claudiu Popa in :issue:"
"`18615`.)"
msgstr ""
":func:`~sndhdr.what` 和 :func:`~sndhdr.whathdr` 函式現在回傳一個 "
":func:`~collections.namedtuple`。 （由 Claudiu Popa 在 :issue:`18615` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:1723
msgid "socket"
msgstr "socket"

#: ../../whatsnew/3.5.rst:1725
#, fuzzy
msgid ""
"Functions with timeouts now use a monotonic clock, instead of a system "
"clock. (Contributed by Victor Stinner in :issue:`22043`.)"
msgstr "超時功能現在使用單調時鐘，而不是系統時鐘。 （由 Victor Stinner 在 "
":issue:`22043` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1728
#, fuzzy
msgid ""
"A new :meth:`socket.sendfile() <socket.socket.sendfile>` method allows "
"sending a file over a socket by using the high-performance :func:`os."
"sendfile` function on UNIX, resulting in uploads being from 2 to 3 times "
"faster than when using plain :meth:`socket.send() <socket.socket.send>`. "
"(Contributed by Giampaolo Rodola' in :issue:`17552`.)"
msgstr ""
"新的 :meth:`socket.sendfile() <socket.socket.sendfile>` 方法允許使用 UNIX "
"上的高性能 :func:`os.sendfile` 函式通過 socket 發送文件，"
"從而導致上傳來自比使用普通 socket.send() <socket.socket.send> 快 2 到 3 倍。 "
"（由 Giampaolo Rodola 在 :issue:`17552` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1734
#, fuzzy
msgid ""
"The :meth:`socket.sendall() <socket.socket.sendall>` method no longer resets "
"the socket timeout every time bytes are received or sent.  The socket "
"timeout is now the maximum total duration to send all data. (Contributed by "
"Victor Stinner in :issue:`23853`.)"
msgstr ""
":meth:`socket.sendall() <socket.socket.sendall>` 方法不再在每次接收或發送位元"
"組時重置 socket 超時。 socket 超時現在是發送所有資料的最大總持續時間。 （由 "
"Victor Stinner 在 :issue:`23853` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1739
#, fuzzy
msgid ""
"The *backlog* argument of the :meth:`socket.listen() <socket.socket.listen>` "
"method is now optional.  By default it is set to :data:`SOMAXCONN <socket."
"SOMAXCONN>` or to ``128``, whichever is less. (Contributed by Charles-"
"François Natali in :issue:`21455`.)"
msgstr ""
":meth:`socket.listen() <socket.socket.listen>` 方法的 *backlog* "
"參數現在是可選的。預設情況下，它設定為 :data:`SOMAXCONN <socket.SOMAXCONN>` "
"或 ``128``，以較小者為準。 （由 Charles-François Natali 在 :issue:`21455` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:1746
msgid "ssl"
msgstr "ssl"

#: ../../whatsnew/3.5.rst:1751
#, fuzzy
msgid "Memory BIO Support"
msgstr "記憶體 BIO 支援"

#: ../../whatsnew/3.5.rst:1753
#, fuzzy
msgid "(Contributed by Geert Jansen in :issue:`21965`.)"
msgstr "（由 Geert Jansen 在 :issue:`21965` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1755
#, fuzzy
msgid ""
"The new :class:`~ssl.SSLObject` class has been added to provide SSL protocol "
"support for cases when the network I/O capabilities of :class:`~ssl."
"SSLSocket` are not necessary or are suboptimal.  ``SSLObject`` represents an "
"SSL protocol instance, but does not implement any network I/O methods, and "
"instead provides a memory buffer interface.  The new :class:`~ssl.MemoryBIO` "
"class can be used to pass data between Python and an SSL protocol instance."
msgstr ""
"新增了新的 :class:`~ssl.SSLObject` 類，以便在 :class:`~ssl.SSLSocket` 的網絡 "
"I/O 功能不是必需的或次優的情況下提供 SSL 協定支援。 ``SSLObject`` 表示一個 "
"SSL 協定實例，但不實作任何網絡 I/O 方法，而是提供一個記憶體緩衝區介面。新的 "
":class:`~ssl.MemoryBIO` 類可用於在 Python 和 SSL 協定實例之間傳遞資料。"

#: ../../whatsnew/3.5.rst:1762
#, fuzzy
msgid ""
"The memory BIO SSL support is primarily intended to be used in frameworks "
"implementing asynchronous I/O for which :class:`~ssl.SSLSocket`'s readiness "
"model (\"select/poll\") is inefficient."
msgstr ""
"記憶體 BIO SSL 支援主要用於實作非同步 I/O 的框架，其中 :class:`~ssl."
"SSLSocket` 的就緒模型（“select/poll”）效率低下。"

#: ../../whatsnew/3.5.rst:1766
#, fuzzy
msgid ""
"A new :meth:`SSLContext.wrap_bio() <ssl.SSLContext.wrap_bio>` method can be "
"used to create a new ``SSLObject`` instance."
msgstr ""
"新的 :meth:`SSLContext.wrap_bio() <ssl.SSLContext.wrap_bio>` "
"方法可用於建立新的 ``SSLObject`` 實例。"

#: ../../whatsnew/3.5.rst:1771
#, fuzzy
msgid "Application-Layer Protocol Negotiation Support"
msgstr "應用層協定協商支援"

#: ../../whatsnew/3.5.rst:1773
#, fuzzy
msgid "(Contributed by Benjamin Peterson in :issue:`20188`.)"
msgstr "（由 Benjamin Peterson 在 :issue:`20188` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1775
#, fuzzy
msgid ""
"Where OpenSSL support is present, the :mod:`ssl` module now implements the "
"*Application-Layer Protocol Negotiation* TLS extension as described in :rfc:"
"`7301`."
msgstr ""
"在存在 OpenSSL 支援的情況下，:mod:`ssl` 模組現在實作了 *Application-Layer "
"Protocol Negotiation* TLS 擴充，如 :rfc:`7301` 中所述。"

#: ../../whatsnew/3.5.rst:1779
#, fuzzy
msgid ""
"The new :meth:`SSLContext.set_alpn_protocols() <ssl.SSLContext."
"set_alpn_protocols>` can be used to specify which protocols a socket should "
"advertise during the TLS handshake."
msgstr ""
"新的 :meth:`SSLContext.set_alpn_protocols() <ssl.SSLContext."
"set_alpn_protocols>` 可用於指定 socket 在 TLS 握手期間應通告哪些協定。"

#: ../../whatsnew/3.5.rst:1783
#, fuzzy
msgid ""
"The new :meth:`SSLSocket.selected_alpn_protocol() <ssl.SSLSocket."
"selected_alpn_protocol>` returns the protocol that was selected during the "
"TLS handshake. The :data:`~ssl.HAS_ALPN` flag indicates whether ALPN support "
"is present."
msgstr ""
"新的 :meth:`SSLSocket.selected_alpn_protocol() <ssl.SSLSocket."
"selected_alpn_protocol>` 回傳在 TLS 握手期間選擇的協定。 :data:`~ssl."
"HAS_ALPN` 旗標指示是否存在 ALPN 支援。"

#: ../../whatsnew/3.5.rst:1790
#, fuzzy
msgid "Other Changes"
msgstr "其他變化"

#: ../../whatsnew/3.5.rst:1792
#, fuzzy
msgid ""
"There is a new :meth:`SSLSocket.version() <ssl.SSLSocket.version>` method to "
"query the actual protocol version in use. (Contributed by Antoine Pitrou in :"
"issue:`20421`.)"
msgstr ""
"有一個新的 :meth:`SSLSocket.version() <ssl.SSLSocket.version>` "
"方法來查詢正在使用的實際協定版本。 （由 Antoine Pitrou 在 :issue:`20421` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:1796
#, fuzzy
msgid ""
"The :class:`~ssl.SSLSocket` class now implements a :meth:`SSLSocket."
"sendfile() <ssl.SSLSocket.sendfile>` method. (Contributed by Giampaolo "
"Rodola' in :issue:`17552`.)"
msgstr ""
":class:`~ssl.SSLSocket` 類現在實作了 :meth:`SSLSocket.sendfile() <ssl."
"SSLSocket.sendfile>` 方法。 （由 Giampaolo Rodola 在 :issue:`17552` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:1800
#, fuzzy
msgid ""
"The :meth:`SSLSocket.send() <ssl.SSLSocket.send>` method now raises either "
"the :exc:`ssl.SSLWantReadError` or :exc:`ssl.SSLWantWriteError` exception on "
"a non-blocking socket if the operation would block. Previously, it would "
"return ``0``.  (Contributed by Nikolaus Rath in :issue:`20951`.)"
msgstr "如果操作會阻止。以前，它會回傳 ``0``。 （由 Nikolaus Rath 在 :issue:`20951` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:1805
#, fuzzy
msgid ""
"The :func:`~ssl.cert_time_to_seconds` function now interprets the input time "
"as UTC and not as local time, per :rfc:`5280`.  Additionally, the return "
"value is always an :class:`int`. (Contributed by Akira Li in :issue:`19940`.)"
msgstr ""
":func:`~ssl.cert_time_to_seconds` 函式現在根據 :rfc:`5280` 將輸入時間解釋為 "
"UTC 而不是本地時間。此外，回傳值始終是 :class:`int`。 （由 Akira Li 在 "
":issue:`19940` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1809
#, fuzzy
msgid ""
"New :meth:`SSLObject.shared_ciphers() <ssl.SSLObject.shared_ciphers>` and :"
"meth:`SSLSocket.shared_ciphers() <ssl.SSLSocket.shared_ciphers>` methods "
"return the list of ciphers sent by the client during the handshake. "
"(Contributed by Benjamin Peterson in :issue:`23186`.)"
msgstr ""
"新的 :meth:`SSLObject.shared_ciphers() <ssl.SSLObject.shared_ciphers>` 和 "
":meth:`SSLSocket.shared_ciphers() <ssl.SSLSocket.shared_ciphers>` "
"方法回傳客戶端在握手期間發送的密碼列表。 （由 Benjamin Peterson 在 "
":issue:`23186` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1814
#, fuzzy
msgid ""
"The :meth:`SSLSocket.do_handshake() <ssl.SSLSocket.do_handshake>`, :meth:"
"`SSLSocket.read() <ssl.SSLSocket.read>`, :meth:`SSLSocket.shutdown() <ssl."
"SSLSocket.shutdown>`, and :meth:`SSLSocket.write() <ssl.SSLSocket.write>` "
"methods of the :class:`~ssl.SSLSocket` class no longer reset the socket "
"timeout every time bytes are received or sent. The socket timeout is now the "
"maximum total duration of the method. (Contributed by Victor Stinner in :"
"issue:`23853`.)"
msgstr ""
":meth:`SSLSocket.do_handshake() <ssl.SSLSocket.do_handshake>`, "
":meth:`SSLSocket.read() <ssl.SSLSocket.read>`, :meth:`SSLSocket.shutdown() "
"<ssl.SSLSocket .shutdown>` 和 :meth:`SSLSocket.write() <ssl.SSLSocket.write>`"
" :class:`~ssl.SSLSocket` 類的方法不再在每次接收或發送位元組時重置 socket 超時。"
" socket 超時現在是該方法的最大總持續時間。 （由 Victor Stinner 在 "
":issue:`23853` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1822
#, fuzzy
msgid ""
"The :func:`~ssl.match_hostname` function now supports matching of IP "
"addresses. (Contributed by Antoine Pitrou in :issue:`23239`.)"
msgstr ""
":func:`~ssl.match_hostname` 函式現在支援 IP 地址匹配。 （由 Antoine Pitrou "
"在 :issue:`23239` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1827
msgid "sqlite3"
msgstr "sqlite3"

#: ../../whatsnew/3.5.rst:1829
#, fuzzy
msgid ""
"The :class:`~sqlite3.Row` class now fully supports the sequence protocol, in "
"particular :func:`reversed` iteration and slice indexing. (Contributed by "
"Claudiu Popa in :issue:`10203`; by Lucas Sinclair, Jessica McKellar, and  "
"Serhiy Storchaka in :issue:`13583`.)"
msgstr ""
":class:`~sqlite3.Row` 類現在完全支援序列協定，特別是 :func:`reversed` "
"疊代和切片索引。 （由 Claudiu Popa 在 :issue:`10203` 中貢獻；由 Lucas "
"Sinclair、Jessica McKellar 和 Serhiy Storchaka 在 :issue:`13583` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1838
msgid "subprocess"
msgstr "subprocess"

#: ../../whatsnew/3.5.rst:1840
#, fuzzy
msgid ""
"The new :func:`~subprocess.run` function has been added. It runs the "
"specified command and returns a :class:`~subprocess.CompletedProcess` "
"object, which describes a finished process.  The new API is more consistent "
"and is the recommended approach to invoking subprocesses in Python code that "
"does not need to maintain compatibility with earlier Python versions. "
"(Contributed by Thomas Kluyver in :issue:`23342`.)"
msgstr ""
"新增了新的 :func:`~subprocess.run` 函式。它運行指定的命令並回傳一個 "
":class:`~subprocess.CompletedProcess` 物件，它描述了一個完成的過程。新的 API "
"更加一致，是在不需要保持與早期 Python 版本相容性的 Python "
"程式碼中呼叫子流程的推薦方法。 （由 Thomas Kluyver 在 :issue:`23342` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:1864
msgid "sys"
msgstr "sys"

#: ../../whatsnew/3.5.rst:1866
#, fuzzy
msgid ""
"A new :func:`~sys.set_coroutine_wrapper` function allows setting a global "
"hook that will be called whenever a :term:`coroutine object <coroutine>` is "
"created by an :keyword:`async def` function.  A corresponding :func:`~sys."
"get_coroutine_wrapper` can be used to obtain a currently set wrapper.  Both "
"functions are :term:`provisional <provisional API>`, and are intended for "
"debugging purposes only.  (Contributed by Yury Selivanov in :issue:`24017`.)"
msgstr ""
"一個新的 :func:`~sys.set_coroutine_wrapper` 函式允許設定一個全局鉤子，只要 "
":keyword:`async def` 函式建立一個 :term:`coroutine object <coroutine>` "
"就會被呼叫。相應的 :func:`~sys.get_coroutine_wrapper` "
"可用於獲取當前設定的包裝器。這兩個函式都是 :term:`provisional <provisional "
"API>`，僅用於除錯目的。 （由 Yury Selivanov 在 :issue:`24017` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1874
#, fuzzy
msgid ""
"A new :func:`~sys.is_finalizing` function can be used to check if the Python "
"interpreter is :term:`shutting down <interpreter shutdown>`. (Contributed by "
"Antoine Pitrou in :issue:`22696`.)"
msgstr ""
"一個新的 :func:`~sys.is_finalizing` 函式可用於檢查 Python 直譯器是否正在關閉 "
"<interpreter shutdown>`。 （由 Antoine Pitrou 在 :issue:`22696` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1880
msgid "sysconfig"
msgstr "sysconfig"

#: ../../whatsnew/3.5.rst:1882
#, fuzzy
msgid ""
"The name of the user scripts directory on Windows now includes the first two "
"components of the Python version. (Contributed by Paul Moore in :issue:"
"`23437`.)"
msgstr ""
"Windows 上使用者腳本目錄的名稱現在包括 Python 版本的前兩個組件。 （由 Paul "
"Moore 在 :issue:`23437` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1888
msgid "tarfile"
msgstr "tarfile"

#: ../../whatsnew/3.5.rst:1890
#, fuzzy
msgid ""
"The *mode* argument of the :func:`~tarfile.open` function now accepts ``\"x"
"\"`` to request exclusive creation.  (Contributed by Berker Peksag in :issue:"
"`21717`.)"
msgstr ""
":func:`~tarfile.open` 函式的 *mode* 參數現在接受 ``\"x\"`` 來請求獨占建立。 "
"（由 Berker Peksag 在 :issue:`21717` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1893
#, fuzzy
msgid ""
"The :meth:`TarFile.extractall() <tarfile.TarFile.extractall>` and :meth:"
"`TarFile.extract() <tarfile.TarFile.extract>` methods now take a keyword "
"argument *numeric_owner*.  If set to ``True``, the extracted files and "
"directories will be owned by the numeric ``uid`` and ``gid`` from the "
"tarfile. If set to ``False`` (the default, and the behavior in versions "
"prior to 3.5), they will be owned by the named user and group in the "
"tarfile. (Contributed by Michael Vogt and Eric Smith in :issue:`23193`.)"
msgstr ""
":meth:`TarFile.extractall() <tarfile.TarFile.extractall>` 和 :meth:`TarFile."
"extract() <tarfile.TarFile.extract>` 方法現在採用關鍵字參數 "
"*numeric_owner*。如果設定為 ``True``，提取的文件和目錄將由 tar "
"文件中的數字 ``uid``和 ``gid``擁有。如果設定為 ``False``（預設值，以及 3.5 "
"之前的版本中的行為），它們將由 tarfile 中指定的使用者和組擁有。 （由 Michael "
"Vogt 和 Eric Smith 在 :issue:`23193` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1901
#, fuzzy
msgid ""
"The :meth:`TarFile.list() <tarfile.TarFile.list>` now accepts an optional "
"*members* keyword argument that can be set to a subset of the list returned "
"by :meth:`TarFile.getmembers() <tarfile.TarFile.getmembers>`. (Contributed "
"by Serhiy Storchaka in :issue:`21549`.)"
msgstr ""
":meth:`TarFile.list() <tarfile.TarFile.list>` 現在接受一個可選的 *members* "
"關鍵字參數，該參數可以設定為 :meth:`TarFile.getmembers() <tarfile "
"回傳的列表的子集.TarFile.getmembers>`。 （由 Serhiy Storchaka 在 "
":issue:`21549` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1908
msgid "threading"
msgstr "threading"

#: ../../whatsnew/3.5.rst:1910
#, fuzzy
msgid ""
"Both the :meth:`Lock.acquire() <threading.Lock.acquire>` and :meth:`RLock."
"acquire() <threading.RLock.acquire>` methods now use a monotonic clock for "
"timeout management. (Contributed by Victor Stinner in :issue:`22043`.)"
msgstr ""
":meth:`Lock.acquire() <threading.Lock.acquire>` 和 :meth:`RLock.acquire() "
"<threading.RLock.acquire>` 方法現在都使用單調時鐘進行超時管理。 （由 Victor "
"Stinner 在 :issue:`22043` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1917
msgid "time"
msgstr "time"

#: ../../whatsnew/3.5.rst:1919
#, fuzzy
msgid ""
"The :func:`~time.monotonic` function is now always available. (Contributed "
"by Victor Stinner in :issue:`22043`.)"
msgstr ""
":func:`~time.monotonic` 函式現在始終可用。 （由 Victor Stinner 在 "
":issue:`22043` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1924
msgid "timeit"
msgstr "timeit"

#: ../../whatsnew/3.5.rst:1926
#, fuzzy
msgid ""
"A new command line option ``-u`` or :samp:`--unit={U}` can be used to "
"specify the time unit for the timer output.  Supported options are ``usec``, "
"``msec``, or ``sec``.  (Contributed by Julian Gindi in :issue:`18983`.)"
msgstr ""
"新的命令列選項``-u`` 或 :samp:`--unit={U}` "
"可用於指定定時器輸出的時間單位。支援的選項是 ``usec``、 ``msec``或 ``sec``。 （由 "
"Julian Gindi 在 :issue:`18983` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1930
#, fuzzy
msgid ""
"The :func:`~timeit.timeit` function has a new *globals* parameter for "
"specifying the namespace in which the code will be running. (Contributed by "
"Ben Roberts in :issue:`2527`.)"
msgstr ""
":func:`~timeit.timeit` 函式有一個新的 *globals* "
"參數，用於指定程式碼將在其中運行的名稱空間。 （由 Ben Roberts 在 "
":issue:`2527` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1936
msgid "tkinter"
msgstr "tkinter"

#: ../../whatsnew/3.5.rst:1938
#, fuzzy
msgid ""
"The :mod:`tkinter._fix` module used for setting up the Tcl/Tk environment on "
"Windows has been replaced by a private function in the :mod:`_tkinter` "
"module which makes no permanent changes to environment variables. "
"(Contributed by Zachary Ware in :issue:`20035`.)"
msgstr ""
":mod:`tkinter._fix` 用於在 Windows 上設定 Tcl/Tk 環境的模組已被 "
":mod:`_tkinter` 模組中的私有函式所取代，該模組不會對環境變數進行永久更改。 （"
"由 Zachary Ware 在 :issue:`20035` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1947
msgid "traceback"
msgstr "traceback"

#: ../../whatsnew/3.5.rst:1949
#, fuzzy
msgid ""
"New :func:`~traceback.walk_stack` and :func:`~traceback.walk_tb` functions "
"to conveniently traverse frame and traceback objects. (Contributed by Robert "
"Collins in :issue:`17911`.)"
msgstr ""
"新的 :func:`~traceback.walk_stack` 和 :func:`~traceback.walk_tb` "
"函式可以方便地遍歷框架和回溯物件。 （由 Robert Collins 在 :issue:`17911` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:1953
#, fuzzy
msgid ""
"New lightweight classes: :class:`~traceback.TracebackException`, :class:"
"`~traceback.StackSummary`, and :class:`~traceback.FrameSummary`. "
"(Contributed by Robert Collins in :issue:`17911`.)"
msgstr ""
"新的輕量級類：:class:`~traceback.TracebackException`、:class:`~traceback."
"StackSummary` 和 :class:`~traceback.FrameSummary`。 （由 Robert Collins 在 "
":issue:`17911` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1957
#, fuzzy
msgid ""
"Both the :func:`~traceback.print_tb` and :func:`~traceback.print_stack` "
"functions now support negative values for the *limit* argument. (Contributed "
"by Dmitry Kazakov in :issue:`22619`.)"
msgstr ""
":func:`~traceback.print_tb` 和 :func:`~traceback.print_stack` 函式現在都支援 "
"*limit* 參數的負值。 （由 Dmitry Kazakov 在 :issue:`22619` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1963
msgid "types"
msgstr "types"

#: ../../whatsnew/3.5.rst:1965
#, fuzzy
msgid ""
"A new :func:`~types.coroutine` function to transform :term:`generator "
"<generator iterator>` and :class:`generator-like <collections.abc."
"Generator>` objects into :term:`awaitables <awaitable>`. (Contributed by "
"Yury Selivanov in :issue:`24017`.)"
msgstr ""
"一個新的 :func:`~types.coroutine` 函式將 :term:`generator <generator "
"iterator>` 和 :class:`generator-like <collections.abc.Generator>` 物件轉換為 "
":term:`awaitables <awaitable> `。 （由 Yury Selivanov 在 :issue:`24017` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:1971
#, fuzzy
msgid ""
"A new type called :class:`~types.CoroutineType`, which is used for :term:"
"`coroutine` objects created by :keyword:`async def` functions. (Contributed "
"by Yury Selivanov in :issue:`24400`.)"
msgstr ""
"一種名為 :class:`~types.CoroutineType` 的新型別，用於 :keyword:`async def` "
"函式建立的 :term:`coroutine` 物件。 （由 Yury Selivanov 在 :issue:`24400` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:1977
msgid "unicodedata"
msgstr "unicodedata"

#: ../../whatsnew/3.5.rst:1979
#, fuzzy
msgid ""
"The :mod:`unicodedata` module now uses data from `Unicode 8.0.0 <https://"
"unicode.org/versions/Unicode8.0.0/>`_."
msgstr ""
":mod:`unicodedata` 模組現在使用來自 `Unicode 8.0.0 <https://unicode.org/"
"versions/Unicode8.0.0/>`_ 的資料。"

#: ../../whatsnew/3.5.rst:1984
msgid "unittest"
msgstr "unittest"

#: ../../whatsnew/3.5.rst:1986
#, fuzzy
msgid ""
"The :meth:`TestLoader.loadTestsFromModule() <unittest.TestLoader."
"loadTestsFromModule>` method now accepts a keyword-only argument *pattern* "
"which is passed to ``load_tests`` as the third argument.  Found packages are "
"now checked for ``load_tests`` regardless of whether their path matches "
"*pattern*, because it is impossible for a package name to match the default "
"pattern. (Contributed by Robert Collins and Barry A. Warsaw in :issue:"
"`16662`.)"
msgstr ""
":meth:`TestLoader.loadTestsFromModule() <unittest.TestLoader."
"loadTestsFromModule>` 方法現在接受僅關鍵字參數 *pattern*，"
"它作為第三個參數傳遞給 ``load_tests``。找到的包現在會檢查 ``load_tests`` "
"而不管它們的路徑是否匹配 *pattern*，因為包名稱不可能與預設模式匹配。 （由 "
"Robert Collins 和 Barry A. Warsaw 在 :issue:`16662` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1993
#, fuzzy
msgid ""
"Unittest discovery errors now are exposed in the :data:`TestLoader.errors "
"<unittest.TestLoader.errors>` attribute of the :class:`~unittest.TestLoader` "
"instance. (Contributed by Robert Collins in :issue:`19746`.)"
msgstr ""
"Unittest 發現錯誤現在暴露在 :class:`~unittest.TestLoader` 實例的 :data:`"
"TestLoader.errors <unittest.TestLoader.errors>` 屬性中。 （由 Robert Collins "
"在 :issue:`19746` 中貢獻。）"

#: ../../whatsnew/3.5.rst:1998
#, fuzzy
msgid ""
"A new command line option ``--locals`` to show local variables in "
"tracebacks.  (Contributed by Robert Collins in :issue:`22936`.)"
msgstr ""
"一個新的命令列選項 ``--locals`` 用於在回溯中顯示局部變數。 （由 Robert "
"Collins 在 :issue:`22936` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2003
msgid "unittest.mock"
msgstr "unittest.mock"

#: ../../whatsnew/3.5.rst:2005
#, fuzzy
msgid "The :class:`~unittest.mock.Mock` class has the following improvements:"
msgstr ":class:`~unittest.mock.Mock` 類有以下改進："

#: ../../whatsnew/3.5.rst:2007
#, fuzzy
msgid ""
"The class constructor has a new *unsafe* parameter, which causes mock "
"objects to raise :exc:`AttributeError` on attribute names starting with ``"
"\"assert\"``. (Contributed by Kushal Das in :issue:`21238`.)"
msgstr ""
"類構造函式有一個新的*不安全*參數，它會導致模擬對像在以“斷言”開頭的屬性名稱上"
"引發 :exc:`AttributeError`。 （由 Kushal Das 在 :issue:`21238` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2012
#, fuzzy
msgid ""
"A new :meth:`Mock.assert_not_called() <unittest.mock.Mock."
"assert_not_called>` method to check if the mock object was called. "
"(Contributed by Kushal Das in :issue:`21262`.)"
msgstr ""
"一個新的 Mock.assert_not_called() <unittest.mock.Mock.assert_not_called> "
"方法來檢查模擬對像是否被呼叫。 （由 Kushal Das 在 :issue:`21262` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2016
#, fuzzy
msgid ""
"The :class:`~unittest.mock.MagicMock` class now supports :meth:"
"`__truediv__`, :meth:`__divmod__` and :meth:`__matmul__` operators. "
"(Contributed by Johannes Baiter in :issue:`20968`, and Håkan Lövdahl in :"
"issue:`23581` and :issue:`23568`.)"
msgstr ""
":class:`~unittest.mock.MagicMock` "
"類現在支援 :meth:`__truediv__`、:meth:`__divmod__` 和 :meth:`__matmul__` "
"運算符。 （由 Johannes Baiter 在 :issue:`20968` 和 Håkan Lövdahl 在 "
":issue:`23581` 和 :issue:`23568` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2021
#, fuzzy
msgid ""
"It is no longer necessary to explicitly pass ``create=True`` to the :func:"
"`~unittest.mock.patch` function when patching builtin names. (Contributed by "
"Kushal Das in :issue:`17660`.)"
msgstr ""
"修補內建名稱時，不再需要顯式將 ``create=True`` 傳遞給 :func:`~unittest.mock."
"patch` 函式。 （由 Kushal Das 在 :issue:`17660` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2027
msgid "urllib"
msgstr "urllib"

#: ../../whatsnew/3.5.rst:2029
#, fuzzy
msgid ""
"A new :class:`request.HTTPPasswordMgrWithPriorAuth <urllib.request."
"HTTPPasswordMgrWithPriorAuth>` class allows HTTP Basic Authentication "
"credentials to be managed so as to eliminate unnecessary ``401`` response "
"handling, or to unconditionally send credentials on the first request in "
"order to communicate with servers that return a ``404`` response instead of "
"a ``401`` if the ``Authorization`` header is not sent. (Contributed by Matej "
"Cepl in :issue:`19494` and Akshit Khurana in :issue:`7159`.)"
msgstr ""
"一個新的 :class:`request.HTTPPasswordMgrWithPriorAuth <urllib.request."
"HTTPPasswordMgrWithPriorAuth>` 類允許管理 HTTP 基本身份驗證憑據，"
"以消除不必要的 ``401`` 響應處理，或者無條件地在第一個請求上按順序發送憑據如果"
"未發送“授權”標頭，則與回傳 ``404``響應而不是 ``401``的伺服器進行通信。 （由 Matej "
"Cepl 在 :issue:`19494` 和 Akshit Khurana 在 :issue:`7159` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2038
#, fuzzy
msgid ""
"A new *quote_via* argument for the :func:`parse.urlencode() <urllib.parse."
"urlencode>` function provides a way to control the encoding of query parts "
"if needed. (Contributed by Samwyse and Arnon Yaari in :issue:`13866`.)"
msgstr ""
":func:`parse.urlencode() <urllib.parse.urlencode>` 函式的新 *quote_via* "
"參數提供了一種在需要時控制查詢部分編碼的方法。 （由 Samwyse 和 Arnon Yaari "
"在 :issue:`13866` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2043
#, fuzzy
msgid ""
"The :func:`request.urlopen() <urllib.request.urlopen>` function accepts an :"
"class:`ssl.SSLContext` object as a *context* argument, which will be used "
"for the HTTPS connection.  (Contributed by Alex Gaynor in :issue:`22366`.)"
msgstr ""
":func:`request.urlopen() <urllib.request.urlopen>` 函式接受一個 :class:`ssl."
"SSLContext` 對像作為 *context* 參數，它將用於 HTTPS 連接。 （由 Alex Gaynor "
"在 :issue:`22366` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2047
#, fuzzy
msgid ""
"The :func:`parse.urljoin() <urllib.parse.urljoin>` was updated to use the :"
"rfc:`3986` semantics for the resolution of relative URLs, rather than :rfc:"
"`1808` and :rfc:`2396`. (Contributed by Demian Brecht and Senthil Kumaran "
"in :issue:`22118`.)"
msgstr ""
":func:`parse.urljoin() <urllib.parse.urljoin>` 已更新為使用 :rfc:`3986` "
"語義來解析相對 URL，而不是 :rfc:`1808` 和 :rfc:` 2396`。 （由 Demian Brecht "
"和 Senthil Kumaran 在 :issue:`22118` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2054
msgid "wsgiref"
msgstr "wsgiref"

#: ../../whatsnew/3.5.rst:2056
#, fuzzy
msgid ""
"The *headers* argument of the :class:`headers.Headers <wsgiref.headers."
"Headers>` class constructor is now optional. (Contributed by Pablo Torres "
"Navarrete and SilentGhost in :issue:`5800`.)"
msgstr ""
":class:`headers.Headers <wsgiref.headers.Headers>` 類構造函式的 *headers* "
"參數現在是可選的。 （由 Pablo Torres Navarrete 和 SilentGhost 在 "
":issue:`5800` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2062
msgid "xmlrpc"
msgstr "xmlrpc"

#: ../../whatsnew/3.5.rst:2064
#, fuzzy
msgid ""
"The :class:`client.ServerProxy <xmlrpc.client.ServerProxy>` class now "
"supports the :term:`context manager` protocol. (Contributed by Claudiu Popa "
"in :issue:`20627`.)"
msgstr ""
":class:`client.ServerProxy <xmlrpc.client.ServerProxy>` 類現在支援 :term:`"
"context manager` 協定。 （由 Claudiu Popa 在 :issue:`20627` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2068
#, fuzzy
msgid ""
"The :class:`client.ServerProxy <xmlrpc.client.ServerProxy>` constructor now "
"accepts an optional :class:`ssl.SSLContext` instance. (Contributed by Alex "
"Gaynor in :issue:`22960`.)"
msgstr ""
":class:`client.ServerProxy <xmlrpc.client.ServerProxy>` "
"構造函式現在接受一個可選的 :class:`ssl.SSLContext` 實例。 （由 Alex Gaynor "
"在 :issue:`22960` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2074
msgid "xml.sax"
msgstr "xml.sax"

#: ../../whatsnew/3.5.rst:2076
#, fuzzy
msgid ""
"SAX parsers now support a character stream of the :class:`xmlreader."
"InputSource <xml.sax.xmlreader.InputSource>` object. (Contributed by Serhiy "
"Storchaka in :issue:`2175`.)"
msgstr ""
"SAX 解析器現在支援 :class:`xmlreader.InputSource <xml.sax.xmlreader."
"InputSource>` 物件的字元流。 （由 Serhiy Storchaka 在 :issue:`2175` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:2080
#, fuzzy
msgid ""
":func:`~xml.sax.parseString` now accepts a :class:`str` instance. "
"(Contributed by Serhiy Storchaka in :issue:`10590`.)"
msgstr ""
":func:`~xml.sax.parseString` 現在接受一個 :class:`str` 實例。 （由 Serhiy "
"Storchaka 在 :issue:`10590` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2085
msgid "zipfile"
msgstr "zipfile"

#: ../../whatsnew/3.5.rst:2087
#, fuzzy
msgid ""
"ZIP output can now be written to unseekable streams. (Contributed by Serhiy "
"Storchaka in :issue:`23252`.)"
msgstr "ZIP 輸出現在可以寫入無法搜索的流。 （由 Serhiy Storchaka 在 :issue:`23252` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:2090
#, fuzzy
msgid ""
"The *mode* argument of :meth:`ZipFile.open() <zipfile.ZipFile.open>` method "
"now accepts ``\"x\"`` to request exclusive creation. (Contributed by Serhiy "
"Storchaka in :issue:`21717`.)"
msgstr ""
":meth:`ZipFile.open() <zipfile.ZipFile.open>` 方法的 *mode* 參數現在接受 ``"
"\"x\"`` 來請求獨占建立。 （由 Serhiy Storchaka 在 :issue:`21717` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2096
#, fuzzy
msgid "Other module-level changes"
msgstr "其他模組級更改"

#: ../../whatsnew/3.5.rst:2098
#, fuzzy
msgid ""
"Many functions in the :mod:`mmap`, :mod:`ossaudiodev`, :mod:`socket`, :mod:"
"`ssl`, and :mod:`codecs` modules now accept writable :term:`bytes-like "
"objects <bytes-like object>`. (Contributed by Serhiy Storchaka in :issue:"
"`23001`.)"
msgstr ""
":mod:`mmap`、:mod:`ossaudiodev`、:mod:`socket`、:mod:`ssl` 和 :mod:`codecs` "
"模組中的許多函式現在接受可寫的 :term:`bytes-like objects <bytes-like "
"object>`。 （由 Serhiy Storchaka 在 :issue:`23001` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2105
#, fuzzy
msgid "Optimizations"
msgstr "最佳化"

#: ../../whatsnew/3.5.rst:2107
#, fuzzy
msgid ""
"The :func:`os.walk` function has been sped up by 3 to 5 times on POSIX "
"systems, and by 7 to 20 times on Windows.  This was done using the new :func:"
"`os.scandir` function, which exposes file information from the underlying "
"``readdir`` or ``FindFirstFile``/``FindNextFile`` system calls.  "
"(Contributed by Ben Hoyt with help from Victor Stinner in :issue:`23605`.)"
msgstr ""
":func:`os.walk` 函式在 POSIX 系統上加速了 3 到 5 倍，在 Windows 上加速了 7 "
"到 20 倍。這是使用新的 os.scandir 函式完成的，該函式從底層的 ``readdir`` 或 "
"``FindFirstFile``/``FindNextFile`` 系統呼叫中公開文件資訊。 （由 Ben Hoyt 在 "
"Victor Stinner 的幫助下在 :issue:`23605` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2113
#, fuzzy
msgid ""
"Construction of ``bytes(int)`` (filled by zero bytes) is faster and uses "
"less memory for large objects. ``calloc()`` is used instead of ``malloc()`` "
"to allocate memory for these objects. (Contributed by Victor Stinner in :"
"issue:`21233`.)"
msgstr ""
"``bytes(int)``（由零位元組填充）的構造更快，並且對大物件使用更少的記憶體。使"
"用``calloc()`` 代替``malloc()`` 來為這些物件分配記憶體。 （由 Victor Stinner "
"在 :issue:`21233` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2118
#, fuzzy
msgid ""
"Some operations on :mod:`ipaddress` :class:`~ipaddress.IPv4Network` and :"
"class:`~ipaddress.IPv6Network` have been massively sped up, such as :meth:"
"`~ipaddress.IPv4Network.subnets`, :meth:`~ipaddress.IPv4Network.supernet`, :"
"func:`~ipaddress.summarize_address_range`, :func:`~ipaddress."
"collapse_addresses`. The speed up can range from 3 to 15 times. (Contributed "
"by Antoine Pitrou, Michel Albert, and Markus in :issue:`21486`, :issue:"
"`21487`, :issue:`20826`, :issue:`23266`.)"
msgstr ""
"在 :mod:`ipaddress` :class:`~ipaddress.IPv4Network` 和 :class:`~ipaddress."
"IPv6Network` 上的一些操作已經大大加速，例如 :meth:`~ipaddress.IPv4Network."
"subnets`, :meth :`~ipaddress.IPv4Network.supernet`, :func:`~ipaddress."
"summarize_address_range`, :func:`~ipaddress.collapse_addresses`。"
"加速範圍可以從 3 到 15 倍不等。 （由 Antoine Pitrou、Michel Albert 和 Markus "
"在 :issue:`21486`、:issue:`21487`、:issue:`20826`、:issue:`23266` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2126
#, fuzzy
msgid ""
"Pickling of :mod:`ipaddress` objects was optimized to produce significantly "
"smaller output.  (Contributed by Serhiy Storchaka in :issue:`23133`.)"
msgstr ""
":mod:`ipaddress` 物件的酸洗經過最佳化以產生明顯更小的輸出。 （由 Serhiy "
"Storchaka 在 :issue:`23133` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2129
#, fuzzy
msgid ""
"Many operations on :class:`io.BytesIO` are now 50% to 100% faster. "
"(Contributed by Serhiy Storchaka in :issue:`15381` and David Wilson in :"
"issue:`22003`.)"
msgstr ""
":class:`io.BytesIO` 上的許多操作現在快了 50% 到 100%。 （由 Serhiy Storchaka "
"在 :issue:`15381` 和 David Wilson 在 :issue:`22003` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2133
#, fuzzy
msgid ""
"The :func:`marshal.dumps` function is now faster: 65--85% with versions 3 "
"and 4, 20--25% with versions 0 to 2 on typical data, and up to 5 times in "
"best cases. (Contributed by Serhiy Storchaka in :issue:`20416` and :issue:"
"`23344`.)"
msgstr ""
":func:`marshal.dumps` 函式現在更快：對於典型資料，版本 3 和 4 為 65--85%，"
"版本 0 到 2 為 20--25%，最佳情況下最高可達 5 倍。 （由 Serhiy Storchaka 在 "
":issue:`20416` 和 :issue:`23344` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2138
#, fuzzy
msgid ""
"The UTF-32 encoder is now 3 to 7 times faster. (Contributed by Serhiy "
"Storchaka in :issue:`15027`.)"
msgstr "UTF-32 編碼器現在快 3 到 7 倍。 （由 Serhiy Storchaka 在 :issue:`15027` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:2141
#, fuzzy
msgid ""
"Regular expressions are now parsed up to 10% faster. (Contributed by Serhiy "
"Storchaka in :issue:`19380`.)"
msgstr "現在解析正則表達式的速度提高了 10%。 （由 Serhiy Storchaka 在 :issue:`19380` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:2144
#, fuzzy
msgid ""
"The :func:`json.dumps` function was optimized to run with "
"``ensure_ascii=False`` as fast as with ``ensure_ascii=True``. (Contributed "
"by Naoki Inada in :issue:`23206`.)"
msgstr ""
":func:`json.dumps` 函式經過最佳化，在使用 ``ensure_ascii=False`` "
"時運行速度與使用 ``ensure_ascii=True`` 時一樣快。 （由 Naoki Inada 在 "
":issue:`23206` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2148
#, fuzzy
msgid ""
"The :c:func:`PyObject_IsInstance` and :c:func:`PyObject_IsSubclass` "
"functions have been sped up in the common case that the second argument has :"
"class:`type` as its metaclass. (Contributed Georg Brandl by in :issue:"
"`22540`.)"
msgstr ""
":c:func:`PyObject_IsInstance` 和 :c:func:`PyObject_IsSubclass` "
"函式在第二個參數具有 :class:`type` 作為其元類的常見情況下得到了加速。 （由 "
"Georg Brandl 在 :issue:`22540` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2153
#, fuzzy
msgid ""
"Method caching was slightly improved, yielding up to 5% performance "
"improvement in some benchmarks. (Contributed by Antoine Pitrou in :issue:"
"`22847`.)"
msgstr ""
"方法快取略有改進，在某些基準測試中產生高達 5% 的性能改進。 （由 Antoine "
"Pitrou 在 :issue:`22847` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2157
#, fuzzy
msgid ""
"Objects from the :mod:`random` module now use 50% less memory on 64-bit "
"builds.  (Contributed by Serhiy Storchaka in :issue:`23488`.)"
msgstr ""
"來自 :mod:`random` 模組的物件現在在 64 位構建中使用的記憶體減少了 50%。 （由 "
"Serhiy Storchaka 在 :issue:`23488` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2160
#, fuzzy
msgid ""
"The :func:`property` getter calls are up to 25% faster. (Contributed by Joe "
"Jevnik in :issue:`23910`.)"
msgstr ""
":func:`property` getter 呼叫速度提高了 25%。 （由 Joe Jevnik 在 "
":issue:`23910` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2163
#, fuzzy
msgid ""
"Instantiation of :class:`fractions.Fraction` is now up to 30% faster. "
"(Contributed by Stefan Behnel in :issue:`22464`.)"
msgstr ""
":class:`fractions.Fraction` 的實例化現在最多快 30%。 （由 Stefan Behnel 在 "
":issue:`22464` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2166
#, fuzzy
msgid ""
"String methods :meth:`~str.find`, :meth:`~str.rfind`, :meth:`~str.split`, :"
"meth:`~str.partition` and the :keyword:`in` string operator are now "
"significantly faster for searching 1-character substrings. (Contributed by "
"Serhiy Storchaka in :issue:`23573`.)"
msgstr ""
"字串方法 :meth:`~str.find`、:meth:`~str.rfind`、:meth:`~str."
"split`、:meth:`~str.partition` 和 :keyword:`in` 字串運算符現在搜索 1 "
"個字元的子字串的速度明顯加快。 （由 Serhiy Storchaka 在 :issue:`23573` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:2173
#, fuzzy
msgid "Build and C API Changes"
msgstr "構建和 C API 更改"

#: ../../whatsnew/3.5.rst:2175
#, fuzzy
msgid "New ``calloc`` functions were added:"
msgstr "新增了新的 ``calloc`` 函式："

#: ../../whatsnew/3.5.rst:2177
msgid ":c:func:`PyMem_RawCalloc`,"
msgstr ":c:func:`PyMem_RawCalloc`,"

#: ../../whatsnew/3.5.rst:2178
msgid ":c:func:`PyMem_Calloc`,"
msgstr ":c:func:`PyMem_Calloc`,"

#: ../../whatsnew/3.5.rst:2179
msgid ":c:func:`PyObject_Calloc`."
msgstr ":c:func:`PyObject_Calloc`."

#: ../../whatsnew/3.5.rst:2181
#, fuzzy
msgid "(Contributed by Victor Stinner in :issue:`21233`.)"
msgstr "（由 Victor Stinner 在 :issue:`21233` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2183
#, fuzzy
msgid "New encoding/decoding helper functions:"
msgstr "新的編碼/解碼輔助函式："

#: ../../whatsnew/3.5.rst:2185
#, fuzzy
msgid ":c:func:`Py_DecodeLocale` (replaced ``_Py_char2wchar()``),"
msgstr ":c:func:`Py_DecodeLocale`（替換為``_Py_char2wchar()``），"

#: ../../whatsnew/3.5.rst:2186
#, fuzzy
msgid ":c:func:`Py_EncodeLocale` (replaced ``_Py_wchar2char()``)."
msgstr ":c:func:`Py_EncodeLocale`（替換為``_Py_wchar2char()``）。"

#: ../../whatsnew/3.5.rst:2188
#, fuzzy
msgid "(Contributed by Victor Stinner in :issue:`18395`.)"
msgstr "（由 Victor Stinner 在 :issue:`18395` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2190
#, fuzzy
msgid ""
"A new :c:func:`PyCodec_NameReplaceErrors` function to replace the unicode "
"encode error with ``\\N{...}`` escapes. (Contributed by Serhiy Storchaka in :"
"issue:`19676`.)"
msgstr ""
"一個新的 :c:func:`PyCodec_NameReplaceErrors` 函式用 ``\\N{...}`` 轉義替換 "
"unicode 編碼錯誤。 （由 Serhiy Storchaka 在 :issue:`19676` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2194
#, fuzzy
msgid ""
"A new :c:func:`PyErr_FormatV` function similar to :c:func:`PyErr_Format`, "
"but accepts a ``va_list`` argument. (Contributed by Antoine Pitrou in :issue:"
"`18711`.)"
msgstr ""
"一個新的 :c:func:`PyErr_FormatV` 函式類似於 :c:func:`PyErr_Format`，"
"但接受一個 ``va_list`` 參數。 （由 Antoine Pitrou 在 :issue:`18711` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:2198
#, fuzzy
msgid ""
"A new :c:data:`PyExc_RecursionError` exception. (Contributed by Georg Brandl "
"in :issue:`19235`.)"
msgstr ""
"一個新的 :c:data:`PyExc_RecursionError` 例外。 （由 Georg Brandl 在 "
":issue:`19235` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2201
#, fuzzy
msgid ""
"New :c:func:`PyModule_FromDefAndSpec`, :c:func:`PyModule_FromDefAndSpec2`, "
"and :c:func:`PyModule_ExecDef` functions introduced by :pep:`489` -- multi-"
"phase extension module initialization. (Contributed by Petr Viktorin in :"
"issue:`24268`.)"
msgstr ""
":c:func:`PyModule_FromDefAndSpec`、:c:func:`PyModule_FromDefAndSpec2` 和 "
":c:func:`PyModule_ExecDef` 函式由 :pep:`489` 引入——多階段擴充模組初始化。 （"
"由 Petr Viktorin 在 :issue:`24268` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2206
#, fuzzy
msgid ""
"New :c:func:`PyNumber_MatrixMultiply` and :c:func:"
"`PyNumber_InPlaceMatrixMultiply` functions to perform matrix multiplication. "
"(Contributed by Benjamin Peterson in :issue:`21176`.  See also :pep:`465` "
"for details.)"
msgstr ""
"新的 :c:func:`PyNumber_MatrixMultiply` 和 "
":c:func:`PyNumber_InPlaceMatrixMultiply` 函式執行矩陣乘法。 （由 Benjamin "
"Peterson 在 :issue:`21176` 中貢獻。有關詳細資訊，另請參閱 :pep:`465`。）"

#: ../../whatsnew/3.5.rst:2212
#, fuzzy
msgid ""
"The :c:member:`PyTypeObject.tp_finalize` slot is now part of the stable ABI."
msgstr ":c:member:`PyTypeObject.tp_finalize` 插槽現在是穩定 ABI 的一部分。"

#: ../../whatsnew/3.5.rst:2214
#, fuzzy
msgid ""
"Windows builds now require Microsoft Visual C++ 14.0, which is available as "
"part of `Visual Studio 2015 <https://www.visualstudio.com/>`_."
msgstr ""
"Windows 構建現在需要 Microsoft Visual C++ 14.0，它作為 `Visual Studio 2015 "
"<https://www.visualstudio.com/>`_ 的一部分提供。"

#: ../../whatsnew/3.5.rst:2217
#, fuzzy
msgid ""
"Extension modules now include a platform information tag in their filename "
"on some platforms (the tag is optional, and CPython will import extensions "
"without it, although if the tag is present and mismatched, the extension "
"won't be loaded):"
msgstr ""
"擴充模組現在在某些平台上的文件名中包含平台資訊標籤（該標籤是可選的，CPython "
"將在沒有它的情況下導入擴充，但如果標籤存在且不匹配，則不會加載擴充）："

#: ../../whatsnew/3.5.rst:2222
#, fuzzy
msgid ""
"On Linux, extension module filenames end with ``.cpython-<major><minor>m-"
"<architecture>-<os>.pyd``:"
msgstr ""
"在 Linux 上，擴充模組文件名以 ``.cpython-<major><minor>m-<architecture>-<os>."
"pyd`` 結尾："

#: ../../whatsnew/3.5.rst:2225 ../../whatsnew/3.5.rst:2242
#, fuzzy
msgid ""
"``<major>`` is the major number of the Python version; for Python 3.5 this "
"is ``3``."
msgstr "``<major>`` 是 Python 版本的主要編號；對於 Python 3.5，這是 ``3``。"

#: ../../whatsnew/3.5.rst:2228 ../../whatsnew/3.5.rst:2245
#, fuzzy
msgid ""
"``<minor>`` is the minor number of the Python version; for Python 3.5 this "
"is ``5``."
msgstr "``<minor>`` 是 Python 版本的次編號；對於 Python 3.5，這是 ``5``。"

#: ../../whatsnew/3.5.rst:2231
#, fuzzy
msgid ""
"``<architecture>`` is the hardware architecture the extension module was "
"built to run on. It's most commonly either ``i386`` for 32-bit Intel "
"platforms or ``x86_64`` for 64-bit Intel (and AMD) platforms."
msgstr ""
"``<architecture>`` 是構建擴充模組以運行的硬件架構。最常見的是用於 32 位 "
"Intel 平台的 ``i386`` 或用於 64 位 Intel（和 AMD）平台的 ``x86_64``。"

#: ../../whatsnew/3.5.rst:2235
#, fuzzy
msgid ""
"``<os>`` is always ``linux-gnu``, except for extensions built to talk to the "
"32-bit ABI on 64-bit platforms, in which case it is ``linux-gnu32`` (and "
"``<architecture>`` will be ``x86_64``)."
msgstr ""
"``<os>`` 始終是 ``linux-gnu``，除了為在 64 位平台上與 32 位 ABI "
"對話而構建的擴充除外，在這種情況下它是 ``linux-gnu32``（和 ` "
"`<architecture>`` 將是 ``x86_64``）。"

#: ../../whatsnew/3.5.rst:2239
#, fuzzy
msgid ""
"On Windows, extension module filenames end with ``<debug>.cp<major><minor>-"
"<platform>.pyd``:"
msgstr "在 Windows 上，擴充模組文件名以“<debug>.cp<major><minor>-<platform>."
"pyd”結尾："

#: ../../whatsnew/3.5.rst:2248
#, fuzzy
msgid ""
"``<platform>`` is the platform the extension module was built for, either "
"``win32`` for Win32, ``win_amd64`` for Win64, ``win_ia64`` for Windows "
"Itanium 64, and ``win_arm`` for Windows on ARM."
msgstr ""
"``<platform>`` 是構建擴充模組的平台，``win32`` 用於 Win32，``win_amd64`` "
"用於 Win64，``win_ia64`` 用於 Windows Itanium 64，以及 ``win_arm``適用於 ARM "
"上的 Windows。"

#: ../../whatsnew/3.5.rst:2252
#, fuzzy
msgid ""
"If built in debug mode, ``<debug>`` will be ``_d``, otherwise it will be "
"blank."
msgstr "如果在除錯模式下構建，``<debug>`` 將為``_d``，否則將為空白。"

#: ../../whatsnew/3.5.rst:2255
#, fuzzy
msgid ""
"On OS X platforms, extension module filenames now end with ``-darwin.so``."
msgstr "在 OS X 平台上，擴充模組文件名現在以“-darwin.so”結尾。"

#: ../../whatsnew/3.5.rst:2257
#, fuzzy
msgid ""
"On all other platforms, extension module filenames are the same as they were "
"with Python 3.4."
msgstr "在所有其他平台上，擴充模組文件名與 Python 3.4 相同。"

#: ../../whatsnew/3.5.rst:2262
#, fuzzy
msgid "Deprecated"
msgstr "棄用"

#: ../../whatsnew/3.5.rst:2265
#, fuzzy
msgid "New Keywords"
msgstr "新關鍵詞"

#: ../../whatsnew/3.5.rst:2267
#, fuzzy
msgid ""
"``async`` and ``await`` are not recommended to be used as variable, class, "
"function or module names.  Introduced by :pep:`492` in Python 3.5, they will "
"become proper keywords in Python 3.7."
msgstr ""
"不建議將 ``async`` 和 ``await`` 用作變數、類、函式或模組名稱。在 Python 3.5 "
"中由 :pep:`492` 引入，它們將成為 Python 3.7 中的適當關鍵字。"

#: ../../whatsnew/3.5.rst:2273
#, fuzzy
msgid "Deprecated Python Behavior"
msgstr "棄用的 Python 行為"

#: ../../whatsnew/3.5.rst:2275
#, fuzzy
msgid ""
"Raising the :exc:`StopIteration` exception inside a generator will now "
"generate a silent :exc:`PendingDeprecationWarning`, which will become a non-"
"silent deprecation warning in Python 3.6 and will trigger a :exc:"
"`RuntimeError` in Python 3.7. See :ref:`PEP 479: Change StopIteration "
"handling inside generators <whatsnew-pep-479>` for details."
msgstr ""
"在生成器中引發 :exc:`StopIteration` 例外現在將生成靜默 "
":exc:`PendingDeprecationWarning`，這將成為 Python 3.6 中的非靜默棄用警告，"
"並在 Python 3.7 中觸發 :exc:`RuntimeError`。有關詳細資訊，請參閱 :ref:`PEP "
"479：更改生成器內部的 StopIteration 處理 <whatsnew-pep-479>`。"

#: ../../whatsnew/3.5.rst:2283
#, fuzzy
msgid "Unsupported Operating Systems"
msgstr "不支援的操作系統"

#: ../../whatsnew/3.5.rst:2285
#, fuzzy
msgid ""
"Windows XP is no longer supported by Microsoft, thus, per :PEP:`11`, CPython "
"3.5 is no longer officially supported on this OS."
msgstr "Microsoft 不再支援 Windows XP，因此，根據 :PEP:`11`，此操作系統不再正式支援 "
"CPython 3.5。"

#: ../../whatsnew/3.5.rst:2290
#, fuzzy
msgid "Deprecated Python modules, functions and methods"
msgstr "棄用的 Python 模組、函式和方法"

#: ../../whatsnew/3.5.rst:2292
#, fuzzy
msgid ""
"The :mod:`formatter` module has now graduated to full deprecation and is "
"still slated for removal in Python 3.6."
msgstr ":mod:`formatter` 模組現已完全棄用，仍計劃在 Python 3.6 中刪除。"

#: ../../whatsnew/3.5.rst:2295
#, fuzzy
msgid ""
"The :func:`asyncio.async` function is deprecated in favor of :func:`~asyncio."
"ensure_future`."
msgstr ":func:`asyncio.async` 函式已棄用，取而代之的是 :func:`~asyncio."
"ensure_future`。"

#: ../../whatsnew/3.5.rst:2298
#, fuzzy
msgid ""
"The :mod:`smtpd` module has in the past always decoded the DATA portion of "
"email messages using the ``utf-8`` codec.  This can now be controlled by the "
"new *decode_data* keyword to :class:`~smtpd.SMTPServer`.  The default value "
"is ``True``, but this default is deprecated.  Specify the *decode_data* "
"keyword with an appropriate value to avoid the deprecation warning."
msgstr ""
":mod:`smtpd` 模組過去總是使用 ``utf-8`` 編解碼器解碼電子郵件的資料部分。"
"現在可以通過 :class:`~smtpd.SMTPServer` 的新 *decode_data* "
"關鍵字來控制。預設值為 ``True``，但此預設值已棄用。使用適當的值指定 "
"*decode_data* 關鍵字以避免棄用警告。"

#: ../../whatsnew/3.5.rst:2304
#, fuzzy
msgid ""
"Directly assigning values to the :attr:`~http.cookies.Morsel.key`, :attr:"
"`~http.cookies.Morsel.value` and :attr:`~http.cookies.Morsel.coded_value` "
"of :class:`http.cookies.Morsel` objects is deprecated.  Use the :meth:`~http."
"cookies.Morsel.set` method instead.  In addition, the undocumented "
"*LegalChars* parameter of :meth:`~http.cookies.Morsel.set` is deprecated, "
"and is now ignored."
msgstr ""
"直接給 :attr:`~http.cookies.Morsel.key`, :attr:`~http.cookies.Morsel.value` "
"和 :attr:`~http.cookies.Morsel.coded_value` 賦值:class: `http.cookies.Morsel`"
" 對像已棄用。請改用 :meth:`~http.cookies.Morsel.set` 方法。此外，未記錄的 "
"*LegalChars* 參數 :meth:`~http.cookies.Morsel.set` 已棄用，現在已被忽略。"

#: ../../whatsnew/3.5.rst:2311
#, fuzzy
msgid ""
"Passing a format string as keyword argument *format_string* to the :meth:"
"`~string.Formatter.format` method of the :class:`string.Formatter` class has "
"been deprecated. (Contributed by Serhiy Storchaka in :issue:`23671`.)"
msgstr ""
"將格式字串作為關鍵字參數 *format_string* 傳遞給 :class:`string.Formatter` "
"類的 :meth:`~string.Formatter.format` 方法已被棄用。 （由 Serhiy Storchaka "
"在 :issue:`23671` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2316
#, fuzzy
msgid ""
"The :func:`platform.dist` and :func:`platform.linux_distribution` functions "
"are now deprecated.  Linux distributions use too many different ways of "
"describing themselves, so the functionality is left to a package. "
"(Contributed by Vajrasky Kok and Berker Peksag in :issue:`1322`.)"
msgstr ""
":func:`platform.dist` 和 :func:`platform.linux_distribution` 函式現已棄用。 "
"Linux 發行版使用太多不同的方式來描述自己，因此功能留給了一個包。 （由 "
"Vajrasky Kok 和 Berker Peksag 在 :issue:`1322` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2321
#, fuzzy
msgid ""
"The previously undocumented ``from_function`` and ``from_builtin`` methods "
"of :class:`inspect.Signature` are deprecated.  Use the new :meth:`Signature."
"from_callable() <inspect.Signature.from_callable>` method instead. "
"(Contributed by Yury Selivanov in :issue:`24248`.)"
msgstr ""
"以前未記錄的``from_function`` 和``from_builtin`` 的 inspect.Signature "
"方法已棄用。請改用新的 Signature.from_callable() "
"<inspect.Signature.from_callable> 方法。 （由 Yury Selivanov 在 "
":issue:`24248` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2326
#, fuzzy
msgid ""
"The :func:`inspect.getargspec` function is deprecated and scheduled to be "
"removed in Python 3.6.  (See :issue:`20438` for details.)"
msgstr ""
":func:`inspect.getargspec` 函式已棄用併計劃在 Python 3.6 中刪除。 "
"（有關詳細資訊，請參閱 :issue:`20438`。）"

#: ../../whatsnew/3.5.rst:2329
#, fuzzy
msgid ""
"The :mod:`inspect` :func:`~inspect.getfullargspec`, :func:`~inspect."
"getcallargs`, and :func:`~inspect.formatargspec` functions are deprecated in "
"favor of the :func:`inspect.signature` API. (Contributed by Yury Selivanov "
"in :issue:`20438`.)"
msgstr ""
":mod:`inspect` :func:`~inspect.getfullargspec`、:func:`~inspect.getcallargs` "
"和 :func:`~inspect.formatargspec` 函式已棄用，取而代之的是 "
":func:`inspect。簽名`API。 （由 Yury Selivanov 在 :issue:`20438` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2334
#, fuzzy
msgid ""
":func:`~inspect.getargvalues` and :func:`~inspect.formatargvalues` functions "
"were inadvertently marked as deprecated with the release of Python 3.5.0."
msgstr ""
":func:`~inspect.getargvalues` 和 :func:`~inspect.formatargvalues` 函式在 "
"Python 3.5.0 版本中被無意中標記為已棄用。"

#: ../../whatsnew/3.5.rst:2337
#, fuzzy
msgid ""
"Use of :const:`re.LOCALE` flag with str patterns or :const:`re.ASCII` is now "
"deprecated.  (Contributed by Serhiy Storchaka in :issue:`22407`.)"
msgstr ""
"使用帶有 str 模式的 :const:`re.LOCALE` 旗標或 :const:`re.ASCII` 現已棄用。 （"
"由 Serhiy Storchaka 在 :issue:`22407` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2340
#, fuzzy
msgid ""
"Use of unrecognized special sequences consisting of ``'\\'`` and an ASCII "
"letter in regular expression patterns and replacement patterns now raises a "
"deprecation warning and will be forbidden in Python 3.6. (Contributed by "
"Serhiy Storchaka in :issue:`23622`.)"
msgstr ""
"在正則表達式模式和替換模式中使用由 ``'\\'`` 和 ASCII "
"字母組成的無法識別的特殊序列現在會引發棄用警告，並將在 Python 3.6 中被禁止。 "
"（由 Serhiy Storchaka 在 :issue:`23622` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2345
#, fuzzy
msgid ""
"The undocumented and unofficial *use_load_tests* default argument of the :"
"meth:`unittest.TestLoader.loadTestsFromModule` method now is deprecated and "
"ignored. (Contributed by Robert Collins and Barry A. Warsaw in :issue:"
"`16662`.)"
msgstr ""
"unittest.TestLoader.loadTestsFromModule 方法的未記錄和非官方 *use_load_tests*"
" 預設參數現在已棄用並被忽略。 （由 Robert Collins 和 Barry A. Warsaw 在 "
":issue:`16662` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2352
#, fuzzy
msgid "Removed"
msgstr "刪除"

#: ../../whatsnew/3.5.rst:2355
#, fuzzy
msgid "API and Feature Removals"
msgstr "API 和功能刪除"

#: ../../whatsnew/3.5.rst:2357
#, fuzzy
msgid ""
"The following obsolete and previously deprecated APIs and features have been "
"removed:"
msgstr "以下過時和以前棄用的 API 和功能已被刪除："

#: ../../whatsnew/3.5.rst:2360
#, fuzzy
msgid ""
"The ``__version__`` attribute has been dropped from the email package.  The "
"email code hasn't been shipped separately from the stdlib for a long time, "
"and the ``__version__`` string was not updated in the last few releases."
msgstr ""
"``__version__`` 屬性已從電子郵件包中刪除。電子郵件程式碼已經很長時間沒有與 "
"stdlib 分開發布了，``__version__`` 字串在最近的幾個版本中也沒有更新。"

#: ../../whatsnew/3.5.rst:2364
#, fuzzy
msgid ""
"The internal ``Netrc`` class in the :mod:`ftplib` module was deprecated in "
"3.4, and has now been removed. (Contributed by Matt Chaput in :issue:`6623`.)"
msgstr ""
":mod:`ftplib` 模組中的內部 ``Netrc`` 類在 3.4 中被棄用，現在已被刪除。 （由 "
"Matt Chaput 在 :issue:`6623` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2368
#, fuzzy
msgid "The concept of ``.pyo`` files has been removed."
msgstr "``.pyo`` 文件的概念已被刪除。"

#: ../../whatsnew/3.5.rst:2370
#, fuzzy
msgid ""
"The JoinableQueue class in the provisional :mod:`asyncio` module was "
"deprecated in 3.4.4 and is now removed. (Contributed by A. Jesse Jiryu Davis "
"in :issue:`23464`.)"
msgstr ""
"臨時 :mod:`asyncio` 模組中的 JoinableQueue 類在 3.4.4 中已棄用，現已刪除。 （"
"由 A. Jesse Jiryu Davis 在 :issue:`23464` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2376
#, fuzzy
msgid "Porting to Python 3.5"
msgstr "移植到 Python 3.5"

#: ../../whatsnew/3.5.rst:2378
#, fuzzy
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr "本節列出了先前描述的更改和其他可能需要更改程式碼的錯誤修復。"

#: ../../whatsnew/3.5.rst:2383
#, fuzzy
msgid "Changes in Python behavior"
msgstr "Python 行為的變化"

#: ../../whatsnew/3.5.rst:2385
#, fuzzy
msgid ""
"Due to an oversight, earlier Python versions erroneously accepted the "
"following syntax::"
msgstr "由於疏忽，早期的 Python 版本錯誤地接受了以下語法："

#: ../../whatsnew/3.5.rst:2391
#, fuzzy
msgid ""
"Python 3.5 now correctly raises a :exc:`SyntaxError`, as generator "
"expressions must be put in parentheses if not a sole argument to a function."
msgstr "Python 3.5 現在可以正確地引發 :exc:`SyntaxError`，因為如果生成器表達式不是函"
"式的唯一參數，則必須將其放在括號中。"

#: ../../whatsnew/3.5.rst:2396
#, fuzzy
msgid "Changes in the Python API"
msgstr "Python API 的變化"

#: ../../whatsnew/3.5.rst:2398
#, fuzzy
msgid ""
":pep:`475`: System calls are now retried when interrupted by a signal "
"instead of raising :exc:`InterruptedError` if the Python signal handler does "
"not raise an exception."
msgstr ""
":pep:`475`: 如果 Python "
"信號處理程式沒有引發例外，系統呼叫現在會在被信號中斷時重試，而不是引發 "
":exc:`InterruptedError`。"

#: ../../whatsnew/3.5.rst:2402
#, fuzzy
msgid ""
"Before Python 3.5, a :class:`datetime.time` object was considered to be "
"false if it represented midnight in UTC.  This behavior was considered "
"obscure and error-prone and has been removed in Python 3.5.  See :issue:"
"`13936` for full details."
msgstr ""
"在 Python 3.5 之前，如果 datetime.time 物件代表 UTC "
"中的午夜，則該對像被認為是錯誤的。此行為被認為是晦澀難懂且容易出錯的，已在 "
"Python 3.5 中刪除。有關詳細資訊，請參閱 :issue:`13936`。"

#: ../../whatsnew/3.5.rst:2407
#, fuzzy
msgid ""
"The :meth:`ssl.SSLSocket.send()` method now raises either :exc:`ssl."
"SSLWantReadError` or :exc:`ssl.SSLWantWriteError` on a non-blocking socket "
"if the operation would block.  Previously, it would return ``0``.  "
"(Contributed by Nikolaus Rath in :issue:`20951`.)"
msgstr ""
":meth:`ssl.SSLSocket.send()` 方法現在在非阻塞 socket 上引發 :exc:`ssl."
"SSLWantReadError` 或 :exc:`ssl.SSLWantWriteError` "
"如果操作會阻塞。以前，它會回傳 ``0``。 （由 Nikolaus Rath 在 :issue:`20951` "
"中貢獻。）"

#: ../../whatsnew/3.5.rst:2412
#, fuzzy
msgid ""
"The ``__name__`` attribute of generators is now set from the function name, "
"instead of being set from the code name. Use ``gen.gi_code.co_name`` to "
"retrieve the code name. Generators also have a new ``__qualname__`` "
"attribute, the qualified name, which is now used for the representation of a "
"generator (``repr(gen)``). (Contributed by Victor Stinner in :issue:`21205`.)"
msgstr ""
"生成器的 ``__name__`` 屬性現在從函式名設定，而不是從程式碼名設定。使用 ``gen."
"gi_code.co_name`` 檢索代號。生成器還有一個新的 ``__qualname__`` "
"屬性，即限定名稱，現在用於表示生成器 (``repr(gen)``)。 （由 Victor Stinner "
"在 :issue:`21205` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2419
#, fuzzy
msgid ""
"The deprecated \"strict\" mode and argument of :class:`~html.parser."
"HTMLParser`, :meth:`HTMLParser.error`, and the :exc:`HTMLParserError` "
"exception have been removed.  (Contributed by Ezio Melotti in :issue:"
"`15114`.) The *convert_charrefs* argument of :class:`~html.parser."
"HTMLParser` is now ``True`` by default.  (Contributed by Berker Peksag in :"
"issue:`21047`.)"
msgstr ""
"已棄用的“嚴格”模式和參數 :class:`~html.parser.HTMLParser`、:meth:`HTMLParser."
"error` 和 :exc:`HTMLParserError` 例外已被刪除。 （由 Ezio Melotti 在 "
":issue:`15114` 中貢獻。） :class:`~html.parser.HTMLParser` 的 "
"*convert_charrefs* 參數現在預設為 ``True``。 （由 Berker Peksag 在 "
":issue:`21047` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2425
#, fuzzy
msgid ""
"Although it is not formally part of the API, it is worth noting for porting "
"purposes (ie: fixing tests) that error messages that were previously of the "
"form \"'sometype' does not support the buffer protocol\" are now of the form "
"\"a :term:`bytes-like object` is required, not 'sometype'\". (Contributed by "
"Ezio Melotti in :issue:`16518`.)"
msgstr ""
"儘管它不是 API "
"的正式組成部分，但出於移植目的（即：修復測試）值得注意的是，以前形式為“"
"'sometype' 不支援緩衝區協定”的錯誤消息現在形式為“a :term:`bytes-like object` "
"是必需的，而不是'sometype'”。 （由 Ezio Melotti 在 :issue:`16518` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2431
#, fuzzy
msgid ""
"If the current directory is set to a directory that no longer exists then :"
"exc:`FileNotFoundError` will no longer be raised and instead :meth:"
"`~importlib.machinery.FileFinder.find_spec` will return ``None`` **without** "
"caching ``None`` in :data:`sys.path_importer_cache`, which is different than "
"the typical case (:issue:`22834`)."
msgstr ""
"如果當前目錄設定為不再存在的目錄，則 :exc:`FileNotFoundError` 將不再引發，"
"而是 :meth:`~importlib.machinery.FileFinder.find_spec` 將回傳 ``None`` "
"**沒有** 在 :data:`sys.path_importer_cache` 中快取 ``None``，"
"這與典型情況不同 (:issue:`22834`)。"

#: ../../whatsnew/3.5.rst:2437
#, fuzzy
msgid ""
"HTTP status code and messages from :mod:`http.client` and :mod:`http.server` "
"were refactored into a common :class:`~http.HTTPStatus` enum.  The values "
"in :mod:`http.client` and :mod:`http.server` remain available for backwards "
"compatibility.  (Contributed by Demian Brecht in :issue:`21793`.)"
msgstr ""
"來自 :mod:`http.client` 和 :mod:`http.server` 的 HTTP "
"狀態程式碼和消息被重構為一個通用的 :class:`~http.HTTPStatus` 枚舉。 "
":mod:`http.client` 和 :mod:`http.server` 中的值仍然可用於向後相容。 （由 "
"Demian Brecht 在 :issue:`21793` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2442
#, fuzzy
msgid ""
"When an import loader defines :meth:`importlib.machinery.Loader.exec_module` "
"it is now expected to also define :meth:`~importlib.machinery.Loader."
"create_module` (raises a :exc:`DeprecationWarning` now, will be an error in "
"Python 3.6). If the loader inherits from :class:`importlib.abc.Loader` then "
"there is nothing to do, else simply define :meth:`~importlib.machinery."
"Loader.create_module` to return ``None``.  (Contributed by Brett Cannon in :"
"issue:`23014`.)"
msgstr ""
"當一個導入加載器定義 :meth:`importlib.machinery.Loader.exec_module` "
"現在期望它也定義 :meth:`~importlib.machinery.Loader.create_module`（"
"現在引發一個 :exc:`DeprecationWarning`，將是Python 3.6 中的一個錯誤）。"
"如果加載器繼承自 :class:`importlib.abc.Loader` 則無事可做，否則只需定義 "
":meth:`~importlib.machinery.Loader.create_module` 以回傳 ``None``。 （由 "
"Brett Cannon 在 :issue:`23014` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2450
#, fuzzy
msgid ""
"The :func:`re.split` function always ignored empty pattern matches, so the ``"
"\"x*\"`` pattern worked the same as ``\"x+\"``, and the ``\"\\b\"`` pattern "
"never worked.  Now :func:`re.split` raises a warning if the pattern could "
"match an empty string.  For compatibility, use patterns that never match an "
"empty string (e.g. ``\"x+\"`` instead of ``\"x*\"``).  Patterns that could "
"only match an empty string (such as ``\"\\b\"``) now raise an error. "
"(Contributed by Serhiy Storchaka in :issue:`22818`.)"
msgstr ""
":func:`re.split` 函式總是忽略空模式匹配，所以 ``\"x*\"`` 模式與 ``\"x+\"`` "
"和 ``\"\\b\"`` 模式一樣工作從來沒有工作過。現在 :func:`re.split` 在模式可以匹"
"配空字串時發出警告。為了相容性，使用從不匹配空字串的模式（例如，``\"x+\"`` "
"而不是 ``\"x*\"``）。只能匹配空字串的模式（例如 ``\"\\b\"``）現在會引發錯誤。"
" （由 Serhiy Storchaka 在 :issue:`22818` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2458
#, fuzzy
msgid ""
"The :class:`http.cookies.Morsel` dict-like interface has been made self "
"consistent:  morsel comparison now takes the :attr:`~http.cookies.Morsel."
"key` and :attr:`~http.cookies.Morsel.value` into account, :meth:`~http."
"cookies.Morsel.copy` now results in a :class:`~http.cookies.Morsel` instance "
"rather than a :class:`dict`, and :meth:`~http.cookies.Morsel.update` will "
"now raise an exception if any of the keys in the update dictionary are "
"invalid.  In addition, the undocumented *LegalChars* parameter of :func:"
"`~http.cookies.Morsel.set` is deprecated and is now ignored.  (Contributed "
"by Demian Brecht in :issue:`2211`.)"
msgstr ""
":class:`http.cookies.Morsel` 類似 dict 的介面已經變得自洽：morsel "
"比較現在採用 :attr:`~http.cookies.Morsel.key` 和 :attr:`~http.cookies.Morsel ."
"value` 考慮在內，:meth:`~http.cookies.Morsel.copy` 現在產生一個 :class:`~http."
"cookies.Morsel` "
"實例而不是一個 :class:`dict`，並且 :meth:`如果更新字典中的任何鍵無效，~"
"http.cookies.Morsel.update 現在將引發例外。此外，未記錄的 *LegalChars* 參數 "
":func:`~http.cookies.Morsel.set` 已棄用，現在已被忽略。 （由 Demian Brecht "
"在 :issue:`2211` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2468
#, fuzzy
msgid ""
":pep:`488` has removed ``.pyo`` files from Python and introduced the "
"optional ``opt-`` tag in ``.pyc`` file names. The :func:`importlib.util."
"cache_from_source` has gained an *optimization* parameter to help control "
"the ``opt-`` tag. Because of this, the *debug_override* parameter of the "
"function is now deprecated. ``.pyo`` files are also no longer supported as a "
"file argument to the Python interpreter and thus serve no purpose when "
"distributed on their own (i.e. sourceless code distribution). Due to the "
"fact that the magic number for bytecode has changed in Python 3.5, all old "
"``.pyo`` files from previous versions of Python are invalid regardless of "
"this PEP."
msgstr ""
":pep:`488` 已經從 Python 中刪除了``.pyo`` 文件，並在``.pyc`` "
"文件名中引入了可選的``opt-`` 標籤。 :func:`importlib.util.cache_from_source` "
"獲得了一個 *optimization* 參數來幫助控制 ``opt-`` 標籤。因此，該函式的 "
"*debug_override* 參數現已棄用。 ``.pyo`` 文件也不再被支援作為 Python "
"直譯器的文件參數，因此在單獨分發時沒有任何作用（即無源程式碼分發）。"
"由於位元組碼的幻數在 Python 3.5 中發生了變化，因此不管這個 PEP 是什麼，"
"以前版本的 Python 中所有舊的 ``.pyo`` 文件都是無效的。"

#: ../../whatsnew/3.5.rst:2479
#, fuzzy
msgid ""
"The :mod:`socket` module now exports the :data:`~socket.CAN_RAW_FD_FRAMES` "
"constant on linux 3.6 and greater."
msgstr ""
":mod:`socket` 模組現在在 linux 3.6 及更高版本上導出 :data:`~socket."
"CAN_RAW_FD_FRAMES` 常數。"

#: ../../whatsnew/3.5.rst:2482
#, fuzzy
msgid ""
"The :func:`ssl.cert_time_to_seconds` function now interprets the input time "
"as UTC and not as local time, per :rfc:`5280`.  Additionally, the return "
"value is always an :class:`int`. (Contributed by Akira Li in :issue:`19940`.)"
msgstr ""
":func:`ssl.cert_time_to_seconds` 函式現在根據 :rfc:`5280` 將輸入時間解釋為 "
"UTC 而不是本地時間。此外，回傳值始終是 :class:`int`。 （由 Akira Li 在 "
":issue:`19940` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2486
#, fuzzy
msgid ""
"The ``pygettext.py`` Tool now uses the standard +NNNN format for timezones "
"in the POT-Creation-Date header."
msgstr "``pygettext.py`` 工具現在對 POT-Creation-Date 標頭中的時區使用標準的 +NNNN "
"格式。"

#: ../../whatsnew/3.5.rst:2489
#, fuzzy
msgid ""
"The :mod:`smtplib` module now uses :data:`sys.stderr` instead of the "
"previous module-level :data:`stderr` variable for debug output.  If your "
"(test) program depends on patching the module-level variable to capture the "
"debug output, you will need to update it to capture sys.stderr instead."
msgstr ""
":mod:`smtplib` 模組現在使用 :data:`sys.stderr` 而不是以前的模組級 "
":data:`stderr` "
"變數來進行除錯輸出。如果您的（測試）程式依賴於修補模組級變數來捕獲除錯輸出，"
"您將需要更新它以捕獲 sys.stderr。"

#: ../../whatsnew/3.5.rst:2494
#, fuzzy
msgid ""
"The :meth:`str.startswith` and :meth:`str.endswith` methods no longer return "
"``True`` when finding the empty string and the indexes are completely out of "
"range.  (Contributed by Serhiy Storchaka in :issue:`24284`.)"
msgstr ""
":meth:`str.startswith` 和 :meth:`str.endswith` "
"方法在找到空字串且索引完全超出範圍時不再回傳 ``True``。 （由 Serhiy "
"Storchaka 在 :issue:`24284` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2498
#, fuzzy
msgid ""
"The :func:`inspect.getdoc` function now returns documentation strings "
"inherited from base classes.  Documentation strings no longer need to be "
"duplicated if the inherited documentation is appropriate.  To suppress an "
"inherited string, an empty string must be specified (or the documentation "
"may be filled in).  This change affects the output of the :mod:`pydoc` "
"module and the :func:`help` function. (Contributed by Serhiy Storchaka in :"
"issue:`15582`.)"
msgstr ""
":func:`inspect.getdoc` 函式現在回傳從基底類別繼承的文檔字串。如果繼承的文檔是"
"合適的，則不再需要復製文檔字串。要抑制繼承的字串，必須指定一個空字串（或者可"
"以填寫文檔）。此更改會影響 :mod:`pydoc` 模組和 :func:`help` 函式的輸出。 （"
"由 Serhiy Storchaka 在 :issue:`15582` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2506
#, fuzzy
msgid ""
"Nested :func:`functools.partial` calls are now flattened.  If you were "
"relying on the previous behavior, you can now either add an attribute to a :"
"func:`functools.partial` object or you can create a subclass of :func:"
"`functools.partial`. (Contributed by Alexander Belopolsky in :issue:`7830`.)"
msgstr ""
"嵌套的 :func:`functools.partial` 呼叫現在被展平了。如果您依賴於以前的行為，"
"您現在可以向 func:`functools.partial` 物件新增一個屬性，或者您可以建立 "
":func:`functools.partial` 的子類別。 （由 Alexander Belopolsky 在 "
":issue:`7830` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2513
msgid "Changes in the C API"
msgstr "C API 中的改動"

#: ../../whatsnew/3.5.rst:2515
#, fuzzy
msgid ""
"The undocumented :c:member:`~PyMemoryViewObject.format` member of the (non-"
"public) :c:type:`PyMemoryViewObject` structure has been removed. All "
"extensions relying on the relevant parts in ``memoryobject.h`` must be "
"rebuilt."
msgstr ""
"未記錄的 :c:member:`~PyMemoryViewObject.format` "
"成員（非公開）:c:type:`PyMemoryViewObject` "
"結構已被刪除。必須重建依賴於“memoryobject.h”中相關部分的所有擴充。"

#: ../../whatsnew/3.5.rst:2520
#, fuzzy
msgid ""
"The :c:type:`PyMemAllocator` structure was renamed to :c:type:"
"`PyMemAllocatorEx` and a new ``calloc`` field was added."
msgstr ""
":c:type:`PyMemAllocator` 結構重命名為 :c:type:`PyMemAllocatorEx` "
"並新增了一個新的 ``calloc`` 欄位。"

#: ../../whatsnew/3.5.rst:2523
#, fuzzy
msgid ""
"Removed non-documented macro :c:macro:`PyObject_REPR` which leaked "
"references. Use format character ``%R`` in :c:func:`PyUnicode_FromFormat`-"
"like functions to format the :func:`repr` of the object. (Contributed by "
"Serhiy Storchaka in :issue:`22453`.)"
msgstr ""
"刪除了未記錄的巨集 :c:macro:`PyObject_REPR` 洩漏引用。在類似 "
"PyUnicode_FromFormat 的函式中使用格式字元 ``%R`` 來格式化物件的 "
":func:`repr`。 （由 Serhiy Storchaka 在 :issue:`22453` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2528
#, fuzzy
msgid ""
"Because the lack of the :attr:`__module__` attribute breaks pickling and "
"introspection, a deprecation warning is now raised for builtin types without "
"the :attr:`__module__` attribute.  This would be an AttributeError in the "
"future. (Contributed by Serhiy Storchaka in :issue:`20204`.)"
msgstr ""
"由於缺少 :attr:`__module__` 屬性會破壞 pickling 和內省，因此現在會針對沒有 "
":attr:`__module__` 屬性的內建型別發出棄用警告。將來這將是一個 "
"AttributeError。 （由 Serhiy Storchaka 在 :issue:`20204` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2534
#, fuzzy
msgid ""
"As part of the :pep:`492` implementation, the ``tp_reserved`` slot of :c:"
"type:`PyTypeObject` was replaced with a :c:member:`tp_as_async` slot.  Refer "
"to :ref:`coro-objects` for new types, structures and functions."
msgstr ""
"作為 :pep:`492` 實作的一部分，:c:type:`PyTypeObject` 的 ``tp_reserved`` "
"插槽被替換為 :c:member:`tp_as_async` 插槽。有關新型別、結構和函式的資訊，"
"請參閱 :ref:`coro-objects`。"

#: ../../whatsnew/3.5.rst:2541
#, fuzzy
msgid "Notable changes in Python 3.5.4"
msgstr "Python 3.5.4 中的顯著變化"

#: ../../whatsnew/3.5.rst:2544
#, fuzzy
msgid "New ``make regen-all`` build target"
msgstr "新的“make regen-all”構建目標"

#: ../../whatsnew/3.5.rst:2546
#, fuzzy
msgid ""
"To simplify cross-compilation, and to ensure that CPython can reliably be "
"compiled without requiring an existing version of Python to already be "
"available, the autotools-based build system no longer attempts to implicitly "
"recompile generated files based on file modification times."
msgstr ""
"為了簡化交叉編譯，並確保 CPython 可以在不需要現有 Python "
"版本可用的情況下可靠地編譯，基於 autotools "
"的構建系統不再嘗試根據文件修改時間隱式重新編譯生成的文件。"

#: ../../whatsnew/3.5.rst:2551
#, fuzzy
msgid ""
"Instead, a new ``make regen-all`` command has been added to force "
"regeneration of these files when desired (e.g. after an initial version of "
"Python has already been built based on the pregenerated versions)."
msgstr ""
"相反，新增了一個新的“make regen-"
"all”命令以在需要時強制重新生成這些文件（例如，"
"在基於預生成版本構建了初始版本的 Python 之後）。"

#: ../../whatsnew/3.5.rst:2555
#, fuzzy
msgid ""
"More selective regeneration targets are also defined - see :source:`Makefile."
"pre.in` for details."
msgstr "還定義了更多選擇性的再生目標 - 有關詳細資訊，請參見 :source:`Makefile.pre."
"in`。"

#: ../../whatsnew/3.5.rst:2558 ../../whatsnew/3.5.rst:2571
#, fuzzy
msgid "(Contributed by Victor Stinner in :issue:`23404`.)"
msgstr "（由 Victor Stinner 在 :issue:`23404` 中貢獻。）"

#: ../../whatsnew/3.5.rst:2564
#, fuzzy
msgid "Removal of ``make touch`` build target"
msgstr "刪除 ``make touch`` 構建目標"

#: ../../whatsnew/3.5.rst:2566
#, fuzzy
msgid ""
"The ``make touch`` build target previously used to request implicit "
"regeneration of generated files by updating their modification times has "
"been removed."
msgstr "以前用於通過更新修改時間來請求生成文件的隱式重新生成的“make "
"touch”構建目標已被刪除。"

#: ../../whatsnew/3.5.rst:2569
#, fuzzy
msgid "It has been replaced by the new ``make regen-all`` target."
msgstr "它已被新的“make regen-all”目標取代。"
