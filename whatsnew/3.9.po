# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-04 00:15+0000\n"
"PO-Revision-Date: 2023-05-02 10:28+0800\n"
"Last-Translator: Matt Wang <mattwang44@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.2.2\n"

#: ../../whatsnew/3.9.rst:3
msgid "What's New In Python 3.9"
msgstr "Python 3.9 有什麼新功能"

#: ../../whatsnew/3.9.rst:0
msgid "Editor"
msgstr "編輯者"

#: ../../whatsnew/3.9.rst:5
msgid "Łukasz Langa"
msgstr "Łukasz Langa"

#: ../../whatsnew/3.9.rst:45
#, fuzzy
msgid ""
"This article explains the new features in Python 3.9, compared to 3.8. "
"Python 3.9 was released on October 5, 2020."
msgstr ""
"本文介紹了 Python 3.9 與 3.8 相比的新功能。 Python 3.9 於 2020 年 10 月 5 日"
"發布。"

#: ../../whatsnew/3.9.rst:48
#, fuzzy
msgid "For full details, see the :ref:`changelog <changelog>`."
msgstr "有關完整詳細資訊，請參閱 :ref:`changelog <changelog>`。"

#: ../../whatsnew/3.9.rst:52
#, fuzzy
msgid ":pep:`596` - Python 3.9 Release Schedule"
msgstr ":pep:`596` - Python 3.9 發佈時間表"

#: ../../whatsnew/3.9.rst:56
#, fuzzy
msgid "Summary -- Release highlights"
msgstr "總結——發布亮點"

#: ../../whatsnew/3.9.rst:61
#, fuzzy
msgid "New syntax features:"
msgstr "新的語法特性："

#: ../../whatsnew/3.9.rst:63
#, fuzzy
msgid ":pep:`584`, union operators added to ``dict``;"
msgstr ":pep:`584`，聯合運算符新增到``dict``；"

#: ../../whatsnew/3.9.rst:64
#, fuzzy
msgid ":pep:`585`, type hinting generics in standard collections;"
msgstr ":pep:`585`，標準集合中的型別提示泛型；"

#: ../../whatsnew/3.9.rst:65
#, fuzzy
msgid ":pep:`614`, relaxed grammar restrictions on decorators."
msgstr ":pep:`614`，放寬了裝飾器的語法限制。"

#: ../../whatsnew/3.9.rst:67
#, fuzzy
msgid "New built-in features:"
msgstr "新的內建功能："

#: ../../whatsnew/3.9.rst:69
#, fuzzy
msgid ":pep:`616`, string methods to remove prefixes and suffixes."
msgstr ":pep:`616`，刪除前綴和後綴的字串方法。"

#: ../../whatsnew/3.9.rst:71
#, fuzzy
msgid "New features in the standard library:"
msgstr "標準庫中的新特性："

#: ../../whatsnew/3.9.rst:73
#, fuzzy
msgid ":pep:`593`, flexible function and variable annotations;"
msgstr ":pep:`593`，靈活的函式和變數註解；"

#: ../../whatsnew/3.9.rst:74
#, fuzzy
msgid ""
":func:`os.pidfd_open` added that allows process management without races and "
"signals."
msgstr ":func:`os.pidfd_open` 新增了允許沒有競爭和信號的行程管理。"

#: ../../whatsnew/3.9.rst:77
#, fuzzy
msgid "Interpreter improvements:"
msgstr "直譯器改進："

#: ../../whatsnew/3.9.rst:79
#, fuzzy
msgid ""
":pep:`573`, fast access to module state from methods of C extension types;"
msgstr ":pep:`573`，從 C 擴充型別的方法快速訪問模組狀態；"

#: ../../whatsnew/3.9.rst:81
#, fuzzy
msgid ":pep:`617`, CPython now uses a new parser based on PEG;"
msgstr ":pep:`617`，CPython 現在使用基於 PEG 的新解析器；"

#: ../../whatsnew/3.9.rst:82
#, fuzzy
msgid ""
"a number of Python builtins (range, tuple, set, frozenset, list, dict) are "
"now sped up using :pep:`590` vectorcall;"
msgstr ""
"許多 Python 內建函式（range、tuple、set、frozenset、list、dict）現在使用 :"
"pep:`590` vectorcall 加速；"

#: ../../whatsnew/3.9.rst:84
#, fuzzy
msgid "garbage collection does not block on resurrected objects;"
msgstr "垃圾收集不會阻塞復活的物件；"

#: ../../whatsnew/3.9.rst:85
#, fuzzy
msgid ""
"a number of Python modules (:mod:`_abc`, :mod:`audioop`, :mod:`_bz2`, :mod:"
"`_codecs`, :mod:`_contextvars`, :mod:`_crypt`, :mod:`_functools`, :mod:"
"`_json`, :mod:`_locale`, :mod:`math`, :mod:`operator`, :mod:`resource`, :mod:"
"`time`, :mod:`_weakref`) now use multiphase initialization as defined by PEP "
"489;"
msgstr ""
"一些 Python 模組:`_functools`, :mod:`_json`, :mod:`_locale`, :mod:`math`, :"
"mod:`operator`, :mod:`resource`, :mod:`time`, :mod: `_weakref`) 現在使用 PEP "
"489 定義的多階段初始化；"

#: ../../whatsnew/3.9.rst:90
#, fuzzy
msgid ""
"a number of standard library modules (:mod:`audioop`, :mod:`ast`, :mod:"
"`grp`, :mod:`_hashlib`, :mod:`pwd`, :mod:`_posixsubprocess`, :mod:`random`, :"
"mod:`select`, :mod:`struct`, :mod:`termios`, :mod:`zlib`) are now using the "
"stable ABI defined by PEP 384."
msgstr ""
"許多標準庫模組（:mod:`audioop`, :mod:`ast`, :mod:`grp`, :mod:`_hashlib`, :"
"mod:`pwd`, :mod:`_posixsubprocess`, : mod:`random`, :mod:`select`, :mod:"
"`struct`, :mod:`termios`, :mod:`zlib`) 現在使用 PEP 384 定義的穩定 ABI。"

#: ../../whatsnew/3.9.rst:95
#, fuzzy
msgid "New library modules:"
msgstr "新的庫模組："

#: ../../whatsnew/3.9.rst:97
#, fuzzy
msgid ""
":pep:`615`, the IANA Time Zone Database is now present in the standard "
"library in the :mod:`zoneinfo` module;"
msgstr ":pep:`615`，IANA 時區資料庫現在存在於 :mod:`zoneinfo` 模組的標準庫中；"

#: ../../whatsnew/3.9.rst:99
#, fuzzy
msgid ""
"an implementation of a topological sort of a graph is now provided in the "
"new :mod:`graphlib` module."
msgstr "現在在新的 :mod:`graphlib` 模組中提供了圖的拓撲排序的實作。"

#: ../../whatsnew/3.9.rst:102
#, fuzzy
msgid "Release process changes:"
msgstr "發布流程變更："

#: ../../whatsnew/3.9.rst:104
#, fuzzy
msgid ":pep:`602`, CPython adopts an annual release cycle."
msgstr ":pep:`602`，CPython 採用年度發布週期。"

#: ../../whatsnew/3.9.rst:108
#, fuzzy
msgid "You should check for DeprecationWarning in your code"
msgstr "您應該在程式碼中檢查 DeprecationWarning"

#: ../../whatsnew/3.9.rst:110
#, fuzzy
msgid ""
"When Python 2.7 was still supported, a lot of functionality in Python 3 was "
"kept for backward compatibility with Python 2.7. With the end of Python 2 "
"support, these backward compatibility layers have been removed, or will be "
"removed soon. Most of them emitted a :exc:`DeprecationWarning` warning for "
"several years. For example, using ``collections.Mapping`` instead of "
"``collections.abc.Mapping`` emits a :exc:`DeprecationWarning` since Python "
"3.3, released in 2012."
msgstr ""
"當仍然支援 Python 2.7 時，為了向後相容 Python 2.7，保留了 Python 3 中的許多功"
"能。隨著 Python 2 支援的結束，這些向後相容層已經被移除，或者即將被移除。他們"
"中的大多數人發出了 :exc:`DeprecationWarning` 警告好幾年了。例如，自 2012 年發"
"布的 Python 3.3 以來，使用 ``collections.Mapping`` 而不是 ``collections.abc."
"Mapping`` 會發出 DeprecationWarning。"

#: ../../whatsnew/3.9.rst:118
#, fuzzy
msgid ""
"Test your application with the :option:`-W` ``default`` command-line option "
"to see :exc:`DeprecationWarning` and :exc:`PendingDeprecationWarning`, or "
"even with :option:`-W` ``error`` to treat them as errors. :ref:`Warnings "
"Filter <warning-filter>` can be used to ignore warnings from third-party "
"code."
msgstr ""
"使用 :option:`-W` ``default`` 命令列選項測試您的應用程式以查看 :exc:"
"`DeprecationWarning` 和 :exc:`PendingDeprecationWarning`，甚至使用 :option:`-"
"W` ``error `` 將它們視為錯誤。 :ref:`Warnings Filter <warning-filter>` 可用於"
"忽略來自第三方程式碼的警告。"

#: ../../whatsnew/3.9.rst:123
#, fuzzy
msgid ""
"Python 3.9 is the last version providing those Python 2 backward "
"compatibility layers, to give more time to Python projects maintainers to "
"organize the removal of the Python 2 support and add support for Python 3.9."
msgstr ""
"Python 3.9 是提供這些 Python 2 向後相容層的最後一個版本，以便為 Python 項目維"
"護者提供更多時間來組織刪除 Python 2 支援並新增對 Python 3.9 的支援。"

#: ../../whatsnew/3.9.rst:127
#, fuzzy
msgid ""
"Aliases to :ref:`Abstract Base Classes <collections-abstract-base-classes>` "
"in the :mod:`collections` module, like ``collections.Mapping`` alias to :"
"class:`collections.abc.Mapping`, are kept for one last release for backward "
"compatibility. They will be removed from Python 3.10."
msgstr ""
":ref:`collections` 模組中的抽象基底類別 <collections-abstract-base-classes>` "
"的別名，如 ``collections.Mapping`` 別名到 :class:`collections.abc.Mapping`，"
"為了向後相容，保留最後一個版本。它們將從 Python 3.10 中刪除。"

#: ../../whatsnew/3.9.rst:132
#, fuzzy
msgid ""
"More generally, try to run your tests in the :ref:`Python Development Mode "
"<devmode>` which helps to prepare your code to make it compatible with the "
"next Python version."
msgstr ""
"更一般地說，嘗試在 :ref:`Python 開發模式 <devmode>` 中運行您的測試，這有助於"
"準備您的程式碼以使其與下一個 Python 版本相容。"

#: ../../whatsnew/3.9.rst:136
#, fuzzy
msgid ""
"Note: a number of pre-existing deprecations were removed in this version of "
"Python as well. Consult the :ref:`removed-in-python-39` section."
msgstr ""
"注意：在此版本的 Python 中也刪除了許多預先存在的棄用。請參閱 :ref:`removed-"
"in-python-39` 部分。"

#: ../../whatsnew/3.9.rst:141 ../../whatsnew/3.9.rst:1274
msgid "New Features"
msgstr "新功能"

#: ../../whatsnew/3.9.rst:144
#, fuzzy
msgid "Dictionary Merge & Update Operators"
msgstr "字典合併和更新操作符"

#: ../../whatsnew/3.9.rst:146
#, fuzzy
msgid ""
"Merge (``|``) and update (``|=``) operators have been added to the built-in :"
"class:`dict` class. Those complement the existing ``dict.update`` and "
"``{**d1, **d2}`` methods of merging dictionaries."
msgstr ""
"合併 (``|``) 和更新 (``|=``) 運算符已新增到內建 :class:`dict` 類中。這些補充"
"了現有的``dict.update`` 和``{**d1, **d2}`` 合併字典的方法。"

#: ../../whatsnew/3.9.rst:150 ../../whatsnew/3.9.rst:283
msgid "Example::"
msgstr ""
"範例：\n"
"\n"
"::"

#: ../../whatsnew/3.9.rst:159
#, fuzzy
msgid ""
"See :pep:`584` for a full description. (Contributed by Brandt Bucher in :"
"issue:`36144`.)"
msgstr ""
"有關完整說明，請參閱 :pep:`584`。 （由 Brandt Bucher 在 :issue:`36144` 中貢"
"獻。）"

#: ../../whatsnew/3.9.rst:163
#, fuzzy
msgid "New String Methods to Remove Prefixes and Suffixes"
msgstr "刪除前綴和後綴的新字串方法"

#: ../../whatsnew/3.9.rst:165
#, fuzzy
msgid ""
":meth:`str.removeprefix(prefix)<str.removeprefix>` and :meth:`str."
"removesuffix(suffix)<str.removesuffix>` have been added to easily remove an "
"unneeded prefix or a suffix from a string. Corresponding ``bytes``, "
"``bytearray``, and ``collections.UserString`` methods have also been added. "
"See :pep:`616` for a full description. (Contributed by Dennis Sweeney in :"
"issue:`39939`.)"
msgstr ""
"新增了 :meth:`str.removeprefix(prefix)<str.removeprefix>` 和 :meth:`str."
"removesuffix(suffix)<str.removesuffix>` 以輕鬆從字串中刪除不需要的前綴或後"
"綴。還新增了相應的 ``bytes``、 ``bytearray`` 和“collections.UserString”方法。"
"有關完整說明，請參閱 :pep:`616`。 （由 Dennis Sweeney 在 :issue:`39939` 中貢"
"獻。）"

#: ../../whatsnew/3.9.rst:173
#, fuzzy
msgid "Type Hinting Generics in Standard Collections"
msgstr "標準集合中的型別提示泛型"

#: ../../whatsnew/3.9.rst:175
#, fuzzy
msgid ""
"In type annotations you can now use built-in collection types such as "
"``list`` and ``dict`` as generic types instead of importing the "
"corresponding capitalized types (e.g. ``List`` or ``Dict``) from "
"``typing``.  Some other types in the standard library are also now generic, "
"for example ``queue.Queue``."
msgstr ""
"在型別註釋中，您現在可以使用內建集合型別（例如 ``list`` 和 ``dict`` 作為泛型"
"型別，而不是從中導入相應的大寫型別（例如 ``List`` 或 ``Dict``） ``打字``。標"
"準庫中的一些其他型別現在也是通用的，例如 ``queue.Queue``。"

#: ../../whatsnew/3.9.rst:181 ../../whatsnew/3.9.rst:1162
msgid "Example:"
msgstr "範例："

#: ../../whatsnew/3.9.rst:189
#, fuzzy
msgid ""
"See :pep:`585` for more details.  (Contributed by Guido van Rossum, Ethan "
"Smith, and Batuhan Taşkaya in :issue:`39481`.)"
msgstr ""
"有關更多詳細資訊，請參見 :pep:`585`。 （由 Guido van Rossum、Ethan Smith 和 "
"Batuhan Taşkaya 在 :issue:`39481` 中貢獻。）"

#: ../../whatsnew/3.9.rst:193
#, fuzzy
msgid "New Parser"
msgstr "新解析器"

#: ../../whatsnew/3.9.rst:195
#, fuzzy
msgid ""
"Python 3.9 uses a new parser, based on `PEG <https://en.wikipedia.org/wiki/"
"Parsing_expression_grammar>`_ instead of `LL(1) <https://en.wikipedia.org/"
"wiki/LL_parser>`_.  The new parser's performance is roughly comparable to "
"that of the old parser, but the PEG formalism is more flexible than LL(1) "
"when it comes to designing new language features.  We'll start using this "
"flexibility in Python 3.10 and later."
msgstr ""
"Python 3.9 使用新的解析器，基於 `PEG <https://en.wikipedia.org/wiki/"
"Parsing_expression_grammar>`_ 而不是 `LL(1) <https://en.wikipedia.org/wiki/"
"LL_parser> `_。新解析器的性能與舊解析器大致相當，但在設計新語言功能時，PEG 形"
"式比 LL(1) 更靈活。我們將開始在 Python 3.10 及更高版本中使用這種靈活性。"

#: ../../whatsnew/3.9.rst:203
#, fuzzy
msgid ""
"The :mod:`ast` module uses the new parser and produces the same AST as the "
"old parser."
msgstr ":mod:`ast` 模組使用新的解析器並生成與舊解析器相同的 AST。"

#: ../../whatsnew/3.9.rst:206
#, fuzzy
msgid ""
"In Python 3.10, the old parser will be deleted and so will all functionality "
"that depends on it (primarily the :mod:`parser` module, which has long been "
"deprecated).  In Python 3.9 *only*, you can switch back to the LL(1) parser "
"using a command line switch (``-X oldparser``) or an environment variable "
"(``PYTHONOLDPARSER=1``)."
msgstr ""
"在 Python 3.10 中，舊的解析器將被刪除，所有依賴於它的功能也將被刪除（主要是 :"
"mod:`parser` 模組，它早已被棄用）。在 Python 3.9 *僅* 中，您可以使用命令列開"
"關（``-X oldparser``）或環境變數（``PYTHONOLDPARSER=1``）切換回 LL(1) 解析"
"器。"

#: ../../whatsnew/3.9.rst:212
#, fuzzy
msgid ""
"See :pep:`617` for more details.  (Contributed by Guido van Rossum, Pablo "
"Galindo and Lysandros Nikolaou in :issue:`40334`.)"
msgstr ""
"有關詳細資訊，請參閱 :pep:`617`。 （由 Guido van Rossum、Pablo Galindo 和 "
"Lysandros Nikolaou 在 :issue:`40334` 中貢獻。）"

#: ../../whatsnew/3.9.rst:217
#, fuzzy
msgid "Other Language Changes"
msgstr "其他語言變化"

#: ../../whatsnew/3.9.rst:219
#, fuzzy
msgid ""
":func:`__import__` now raises :exc:`ImportError` instead of :exc:"
"`ValueError`, which used to occur when a relative import went past its top-"
"level package. (Contributed by Ngalim Siregar in :issue:`37444`.)"
msgstr ""
":func:`__import__` 現在引發 :exc:`ImportError` 而不是 :exc:`ValueError`，後者"
"通常在相對導入超過其頂級包時發生。 （由 Ngalim Siregar 在 :issue:`37444` 中貢"
"獻。）"

#: ../../whatsnew/3.9.rst:224
#, fuzzy
msgid ""
"Python now gets the absolute path of the script filename specified on the "
"command line (ex: ``python3 script.py``): the ``__file__`` attribute of the :"
"mod:`__main__` module became an absolute path, rather than a relative path. "
"These paths now remain valid after the current directory is changed by :func:"
"`os.chdir`. As a side effect, the traceback also displays the absolute path "
"for :mod:`__main__` module frames in this case. (Contributed by Victor "
"Stinner in :issue:`20443`.)"
msgstr ""
"Python 現在獲取命令列上指定的腳本文件名的絕對路徑（例如：``python3 script."
"py``）：:mod:`__main__` 模組的``__file__`` 屬性變成了絕對路徑，而不是而不是相"
"對路徑。在 :func:`os.chdir` 更改當前目錄後，這些路徑現在仍然有效。作為副作"
"用，在這種情況下，回溯還顯示 :mod:`__main__` 模組框架的絕對路徑。 （由 "
"Victor Stinner 在 :issue:`20443` 中貢獻。）"

#: ../../whatsnew/3.9.rst:232
#, fuzzy
msgid ""
"In the :ref:`Python Development Mode <devmode>` and in :ref:`debug build "
"<debug-build>`, the *encoding* and *errors* arguments are now checked for "
"string encoding and decoding operations. Examples: :func:`open`, :meth:`str."
"encode` and :meth:`bytes.decode`."
msgstr ""
"在 :ref:`Python 開發模式 <devmode>` 和 :ref:`debug build <debug-build>` 中，"
"現在檢查 *encoding* 和 *errors* 參數以進行字串編碼和解碼操作。示例：:func:"
"`open`、:meth:`str.encode` 和 :meth:`bytes.decode`。"

#: ../../whatsnew/3.9.rst:237
#, fuzzy
msgid ""
"By default, for best performance, the *errors* argument is only checked at "
"the first encoding/decoding error and the *encoding* argument is sometimes "
"ignored for empty strings. (Contributed by Victor Stinner in :issue:`37388`.)"
msgstr ""
"預設情況下，為了獲得最佳性能，僅在第一個編碼/解碼錯誤時檢查 *errors* 參數，並"
"且有時會忽略空字串的 *encoding* 參數。 （由 Victor Stinner 在 :issue:`37388` "
"中貢獻。）"

#: ../../whatsnew/3.9.rst:242
#, fuzzy
msgid ""
"``\"\".replace(\"\", s, n)`` now returns ``s`` instead of an empty string "
"for all non-zero ``n``.  It is now consistent with ``\"\".replace(\"\", "
"s)``. There are similar changes for :class:`bytes` and :class:`bytearray` "
"objects. (Contributed by Serhiy Storchaka in :issue:`28029`.)"
msgstr ""
"``\"\".replace(\"\", s, n)`` 現在為所有非零的 ``n`` 回傳 ``s`` 而不是空字串。"
"它現在與 ``\"\".replace(\"\", s)`` 一致。 :class:`bytes` 和 :class:"
"`bytearray` 對像也有類似的變化。 （由 Serhiy Storchaka 在 :issue:`28029` 中貢"
"獻。）"

#: ../../whatsnew/3.9.rst:247
#, fuzzy
msgid ""
"Any valid expression can now be used as a :term:`decorator`.  Previously, "
"the grammar was much more restrictive.  See :pep:`614` for details. "
"(Contributed by Brandt Bucher in :issue:`39702`.)"
msgstr ""
"任何有效的表達式現在都可以用作 :term:`decorator`。以前，語法的限制要多得多。"
"有關詳細資訊，請參閱 :pep:`614`。 （由 Brandt Bucher 在 :issue:`39702` 中貢"
"獻。）"

#: ../../whatsnew/3.9.rst:251
#, fuzzy
msgid ""
"Improved help for the :mod:`typing` module. Docstrings are now shown for all "
"special forms and special generic aliases (like ``Union`` and ``List``). "
"Using :func:`help` with generic alias like ``List[int]`` will show the help "
"for the correspondent concrete type (``list`` in this case). (Contributed by "
"Serhiy Storchaka in :issue:`40257`.)"
msgstr ""
"改進了 :mod:`typing` 模組的幫助。現在顯示所有特殊形式和特殊通用別名（如 "
"``Union`` 和 ``List``）的文檔字串。使用 :func:`help` 和通用別名，如 "
"``List[int]`` 將顯示相應具體型別的幫助（在本例中為 ``list``）。 （由 Serhiy "
"Storchaka 在 :issue:`40257` 中貢獻。）"

#: ../../whatsnew/3.9.rst:257
#, fuzzy
msgid ""
"Parallel running of :meth:`~agen.aclose` / :meth:`~agen.asend` / :meth:"
"`~agen.athrow` is now prohibited, and ``ag_running`` now reflects the actual "
"running status of the async generator. (Contributed by Yury Selivanov in :"
"issue:`30773`.)"
msgstr ""
":meth:`~agen.aclose` / :meth:`~agen.asend` / :meth:`~agen.athrow` 的並行運行"
"現在被禁止，``ag_running`` 現在反映實際的運行狀態非同步生成器。 （由 Yury "
"Selivanov 在 :issue:`30773` 中貢獻。）"

#: ../../whatsnew/3.9.rst:262
#, fuzzy
msgid ""
"Unexpected errors in calling the ``__iter__`` method are no longer masked by "
"``TypeError`` in the :keyword:`in` operator and functions :func:`~operator."
"contains`, :func:`~operator.indexOf` and :func:`~operator.countOf` of the :"
"mod:`operator` module. (Contributed by Serhiy Storchaka in :issue:`40824`.)"
msgstr ""
"呼叫 ``__iter__`` 方法時的意外錯誤不再被 :keyword:`in` 運算符和函式中的 "
"``TypeError`` 掩蓋 :func:`~operator.contains`, :func:`~operator.indexOf ` "
"和 :func:`~operator.countOf` 的 :mod:`operator` 模組。 （由 Serhiy Storchaka "
"在 :issue:`40824` 中貢獻。）"

#: ../../whatsnew/3.9.rst:268
#, fuzzy
msgid ""
"Unparenthesized lambda expressions can no longer be the expression part in "
"an ``if`` clause in comprehensions and generator expressions. See :issue:"
"`41848` and :issue:`43755` for details."
msgstr ""
"未加括號的 lambda 表達式不能再作為推導式和生成器表達式中 ``if``子句的表達式部"
"分。有關詳細資訊，請參閱 :issue:`41848` 和 :issue:`43755`。"

#: ../../whatsnew/3.9.rst:274
msgid "New Modules"
msgstr "新模組"

#: ../../whatsnew/3.9.rst:277
msgid "zoneinfo"
msgstr "zoneinfo"

#: ../../whatsnew/3.9.rst:279
#, fuzzy
msgid ""
"The :mod:`zoneinfo` module brings support for the IANA time zone database to "
"the standard library. It adds :class:`zoneinfo.ZoneInfo`, a concrete :class:"
"`datetime.tzinfo` implementation backed by the system's time zone data."
msgstr ""
":mod:`zoneinfo` 模組為標準庫帶來了對 IANA 時區資料庫的支援。它新增了 :class:"
"`zoneinfo.ZoneInfo`，一個由系統時區資料支援的具體 :class:`datetime.tzinfo` 實"
"作。"

#: ../../whatsnew/3.9.rst:303
#, fuzzy
msgid ""
"As a fall-back source of data for platforms that don't ship the IANA "
"database, the |tzdata|_ module was released as a first-party package -- "
"distributed via PyPI and maintained by the CPython core team."
msgstr ""
"作為不提供 IANA 資料庫的平台的後備資料源，|tzdata|_ 模組作為第一方包發布——通"
"過 PyPI 分發並由 CPython 核心團隊維護。"

#: ../../whatsnew/3.9.rst:312
#, fuzzy
msgid ""
":pep:`615` -- Support for the IANA Time Zone Database in the Standard Library"
msgstr ":pep:`615` -- 支援標準庫中的 IANA 時區資料庫"

#: ../../whatsnew/3.9.rst:313
msgid "PEP written and implemented by Paul Ganssle"
msgstr "由 Paul Ganssle 撰寫 PEP 與實作"

#: ../../whatsnew/3.9.rst:317
msgid "graphlib"
msgstr "graphlib"

#: ../../whatsnew/3.9.rst:319
#, fuzzy
msgid ""
"A new module, :mod:`graphlib`, was added that contains the :class:`graphlib."
"TopologicalSorter` class to offer functionality to perform topological "
"sorting of graphs. (Contributed by Pablo Galindo, Tim Peters and Larry "
"Hastings in :issue:`17005`.)"
msgstr ""
"新增了一個新模組 :mod:`graphlib`，其中包含 :class:`graphlib."
"TopologicalSorter` 類以提供對圖進行拓撲排序的功能。 （由 Pablo Galindo、Tim "
"Peters 和 Larry Hastings 在 :issue:`17005` 中貢獻。）"

#: ../../whatsnew/3.9.rst:326
#, fuzzy
msgid "Improved Modules"
msgstr "改進模組"

#: ../../whatsnew/3.9.rst:329
msgid "ast"
msgstr "ast"

#: ../../whatsnew/3.9.rst:331
#, fuzzy
msgid ""
"Added the *indent* option to :func:`~ast.dump` which allows it to produce a "
"multiline indented output. (Contributed by Serhiy Storchaka in :issue:"
"`37995`.)"
msgstr ""
"向 :func:`~ast.dump` 新增了 *indent* 選項，允許它生成多行縮進輸出。 （由 "
"Serhiy Storchaka 在 :issue:`37995` 中貢獻。）"

#: ../../whatsnew/3.9.rst:335
#, fuzzy
msgid ""
"Added :func:`ast.unparse` as a function in the :mod:`ast` module that can be "
"used to unparse an :class:`ast.AST` object and produce a string with code "
"that would produce an equivalent :class:`ast.AST` object when parsed. "
"(Contributed by Pablo Galindo and Batuhan Taskaya in :issue:`38870`.)"
msgstr ""
"新增 :func:`ast.unparse` 作為 :mod:`ast` 模組中的一個函式，可用於解析一個 :"
"class:`ast.AST` 物件並生成一個字串，其中包含可生成等效 :class 的程式碼:`ast."
"AST` 解析時的物件。 （由 Pablo Galindo 和 Batuhan Taskaya 在 :issue:`38870` "
"中貢獻。）"

#: ../../whatsnew/3.9.rst:340
#, fuzzy
msgid ""
"Added docstrings to AST nodes that contains the ASDL signature used to "
"construct that node. (Contributed by Batuhan Taskaya in :issue:`39638`.)"
msgstr ""
"向包含用於構造該節點的 ASDL 簽名的 AST 節點新增文檔字串。 （由 Batuhan "
"Taskaya 在 :issue:`39638` 中貢獻。）"

#: ../../whatsnew/3.9.rst:344
msgid "asyncio"
msgstr "asyncio"

#: ../../whatsnew/3.9.rst:346
#, fuzzy
msgid ""
"Due to significant security concerns, the *reuse_address* parameter of :meth:"
"`asyncio.loop.create_datagram_endpoint` is no longer supported. This is "
"because of the behavior of the socket option ``SO_REUSEADDR`` in UDP. For "
"more details, see the documentation for ``loop.create_datagram_endpoint()``. "
"(Contributed by Kyle Stanley, Antoine Pitrou, and Yury Selivanov in :issue:"
"`37228`.)"
msgstr ""
"由於重大安全問題，不再支援 asyncio.loop.create_datagram_endpoint 的 "
"*reuse_address* 參數。這是因為 UDP 中 socket 選項 ``SO_REUSEADDR`` 的行為。有"
"關詳細資訊，請參閱 ``loop.create_datagram_endpoint()`` 的文檔。 （由 Kyle "
"Stanley、Antoine Pitrou 和 Yury Selivanov 在 :issue:`37228` 中貢獻。）"

#: ../../whatsnew/3.9.rst:353
#, fuzzy
msgid ""
"Added a new :term:`coroutine` :meth:`~asyncio.loop."
"shutdown_default_executor` that schedules a shutdown for the default "
"executor that waits on the :class:`~concurrent.futures.ThreadPoolExecutor` "
"to finish closing. Also, :func:`asyncio.run` has been updated to use the "
"new :term:`coroutine`. (Contributed by Kyle Stanley in :issue:`34037`.)"
msgstr ""
"新增了一個新的 coroutine :meth:`~asyncio.loop.shutdown_default_executor` 為等"
"待 :class:`~concurrent.futures.ThreadPoolExecutor` 完成關閉的預設執行程式安排"
"關閉。此外，:func:`asyncio.run` 已更新為使用新的 :term:`coroutine`。 （由 "
"Kyle Stanley 在 :issue:`34037` 中貢獻。）"

#: ../../whatsnew/3.9.rst:359
#, fuzzy
msgid ""
"Added :class:`asyncio.PidfdChildWatcher`, a Linux-specific child watcher "
"implementation that polls process file descriptors. (:issue:`38692`)"
msgstr ""
"新增了 :class:`asyncio.PidfdChildWatcher`，這是一個特定於 Linux 的子觀察器實"
"作，用於輪詢行程文件描述器。 （ :issue:`38692`）"

#: ../../whatsnew/3.9.rst:362
#, fuzzy
msgid ""
"Added a new :term:`coroutine` :func:`asyncio.to_thread`. It is mainly used "
"for running IO-bound functions in a separate thread to avoid blocking the "
"event loop, and essentially works as a high-level version of :meth:`~asyncio."
"loop.run_in_executor` that can directly take keyword arguments. (Contributed "
"by Kyle Stanley and Yury Selivanov in :issue:`32309`.)"
msgstr ""
"新增了一個新的 :term:`coroutine` :func:`asyncio.to_thread`。它主要用於在單獨"
"的執行緒中運行 IO 綁定函式以避免阻塞事件循環，本質上是 :meth:`~asyncio.loop."
"run_in_executor` 的高階版本，可以直接使用關鍵字參數。 （由 Kyle Stanley 和 "
"Yury Selivanov 在 :issue:`32309` 中貢獻。）"

#: ../../whatsnew/3.9.rst:368
#, fuzzy
msgid ""
"When cancelling the task due to a timeout, :meth:`asyncio.wait_for` will now "
"wait until the cancellation is complete also in the case when *timeout* is "
"<= 0, like it does with positive timeouts. (Contributed by Elvis "
"Pranskevichus in :issue:`32751`.)"
msgstr ""
"當由於超時而取消任務時，asyncio.wait_for 現在將等待直到取消完成，即使在 "
"*timeout* <= 0 的情況下也是如此，就像正超時一樣。 （由 Elvis Pranskevichus "
"在 :issue:`32751` 中貢獻。）"

#: ../../whatsnew/3.9.rst:373
#, fuzzy
msgid ""
":mod:`asyncio` now raises :exc:`TyperError` when calling incompatible "
"methods with an :class:`ssl.SSLSocket` socket. (Contributed by Ido Michael "
"in :issue:`37404`.)"
msgstr ""
":mod:`asyncio` 現在在使用 :class:`ssl.SSLSocket`  socket 呼叫不相容的方法時引"
"發 :exc:`TyperError`。 （由 Ido Michael 在 :issue:`37404` 中貢獻。）"

#: ../../whatsnew/3.9.rst:378
msgid "compileall"
msgstr "compileall"

#: ../../whatsnew/3.9.rst:380
#, fuzzy
msgid ""
"Added new possibility to use hardlinks for duplicated ``.pyc`` files: "
"*hardlink_dupes* parameter and --hardlink-dupes command line option. "
"(Contributed by  Lumír 'Frenzy' Balhar in :issue:`40495`.)"
msgstr ""
"新增了對重複的 .pyc 文件使用硬鏈接的新可能性：*hardlink_dupes* 參數和 --"
"hardlink-dupes 命令列選項。 （由 Lumír 'Frenzy' Balhar 在 :issue:`40495` 中貢"
"獻。）"

#: ../../whatsnew/3.9.rst:383
#, fuzzy
msgid ""
"Added new options for path manipulation in resulting ``.pyc`` files: "
"*stripdir*, *prependdir*, *limit_sl_dest* parameters and -s, -p, -e command "
"line options. Added the possibility to specify the option for an "
"optimization level multiple times. (Contributed by Lumír 'Frenzy' Balhar in :"
"issue:`38112`.)"
msgstr ""
"在生成的 .pyc 文件中新增了用於路徑操作的新選項：*stripdir*、*prependdir*、"
"*limit_sl_dest* 參數和 -s、-p、-e 命令列選項。新增了多次指定最佳化級別選項的"
"可能性。 （由 Lumír 'Frenzy' Balhar 在 :issue:`38112` 中貢獻。）"

#: ../../whatsnew/3.9.rst:388
msgid "concurrent.futures"
msgstr "concurrent.futures"

#: ../../whatsnew/3.9.rst:390
#, fuzzy
msgid ""
"Added a new *cancel_futures* parameter to :meth:`concurrent.futures.Executor."
"shutdown` that cancels all pending futures which have not started running, "
"instead of waiting for them to complete before shutting down the executor. "
"(Contributed by Kyle Stanley in :issue:`39349`.)"
msgstr ""
"向 :meth:`concurrent.futures.Executor.shutdown` 新增了一個新的 "
"*cancel_futures* 參數，取消所有尚未開始運行的未決期貨，而不是在關閉執行器之前"
"等待它們完成。 （由 Kyle Stanley 在 :issue:`39349` 中貢獻。）"

#: ../../whatsnew/3.9.rst:396
#, fuzzy
msgid ""
"Removed daemon threads from :class:`~concurrent.futures.ThreadPoolExecutor` "
"and :class:`~concurrent.futures.ProcessPoolExecutor`. This improves "
"compatibility with subinterpreters and predictability in their shutdown "
"processes. (Contributed by Kyle Stanley in :issue:`39812`.)"
msgstr ""
"從 :class:`~concurrent.futures.ThreadPoolExecutor` 和 :class:`~concurrent."
"futures.ProcessPoolExecutor` 中刪除守護執行緒。這提高了與子直譯器的相容性和關"
"閉過程中的可預測性。 （由 Kyle Stanley 在 :issue:`39812` 中貢獻。）"

#: ../../whatsnew/3.9.rst:401
#, fuzzy
msgid ""
"Workers in :class:`~concurrent.futures.ProcessPoolExecutor` are now spawned "
"on demand, only when there are no available idle workers to reuse. This "
"optimizes startup overhead and reduces the amount of lost CPU time to idle "
"workers. (Contributed by Kyle Stanley in :issue:`39207`.)"
msgstr ""
":class:`~concurrent.futures.ProcessPoolExecutor` 中的工人現在按需生成，僅當沒"
"有可用的空閒工人可供重用時。這最佳化了啟動開銷並減少了閒置工作人員損失的 CPU "
"時間。 （由 Kyle Stanley 在 :issue:`39207` 中貢獻。）"

#: ../../whatsnew/3.9.rst:407
msgid "curses"
msgstr "curses"

#: ../../whatsnew/3.9.rst:409
#, fuzzy
msgid ""
"Added :func:`curses.get_escdelay`, :func:`curses.set_escdelay`, :func:"
"`curses.get_tabsize`, and :func:`curses.set_tabsize` functions. (Contributed "
"by Anthony Sottile in :issue:`38312`.)"
msgstr ""
"新增 :func:`curses.get_escdelay`、:func:`curses.set_escdelay`、:func:`curses."
"get_tabsize` 和 :func:`curses.set_tabsize` 函式。 （由 Anthony Sottile 在 :"
"issue:`38312` 中貢獻。）"

#: ../../whatsnew/3.9.rst:414
msgid "datetime"
msgstr "datetime"

#: ../../whatsnew/3.9.rst:415
#, fuzzy
msgid ""
"The :meth:`~datetime.date.isocalendar()` of :class:`datetime.date` and :meth:"
"`~datetime.datetime.isocalendar()` of :class:`datetime.datetime` methods now "
"returns a :func:`~collections.namedtuple` instead of a :class:`tuple`. "
"(Contributed by Dong-hee Na in :issue:`24416`.)"
msgstr ""
":class:`datetime.date` 的 :meth:`~datetime.date.isocalendar()` 和 :class:"
"`datetime.datetime` 方法的 :meth:`~datetime.datetime.isocalendar()` 現在回傳"
"一個 :func:`~collections.namedtuple` 而不是 :class:`tuple`。 （由 Dong-hee "
"Na 在 :issue:`24416` 中貢獻。）"

#: ../../whatsnew/3.9.rst:421
msgid "distutils"
msgstr "distutils"

#: ../../whatsnew/3.9.rst:423
#, fuzzy
msgid ""
"The :command:`upload` command now creates SHA2-256 and Blake2b-256 hash "
"digests. It skips MD5 on platforms that block MD5 digest. (Contributed by "
"Christian Heimes in :issue:`40698`.)"
msgstr ""
":command:`upload` 命令現在建立 SHA2-256 和 Blake2b-256 雜湊摘要。它會在阻止 "
"MD5 摘要的平台上跳過 MD5。 （由 Christian Heimes 在 :issue:`40698` 中貢獻。）"

#: ../../whatsnew/3.9.rst:428
msgid "fcntl"
msgstr "fcntl"

#: ../../whatsnew/3.9.rst:430
#, fuzzy
msgid ""
"Added constants :data:`~fcntl.F_OFD_GETLK`, :data:`~fcntl.F_OFD_SETLK` and :"
"data:`~fcntl.F_OFD_SETLKW`. (Contributed by Dong-hee Na in :issue:`38602`.)"
msgstr ""
"新增常數 :data:`~fcntl.F_OFD_GETLK`、:data:`~fcntl.F_OFD_SETLK` 和 :data:"
"`~fcntl.F_OFD_SETLKW`。 （由 Dong-hee Na 在 :issue:`38602` 中貢獻。）"

#: ../../whatsnew/3.9.rst:435
msgid "ftplib"
msgstr "ftplib"

#: ../../whatsnew/3.9.rst:437
#, fuzzy
msgid ""
":class:`~ftplib.FTP` and :class:`~ftplib.FTP_TLS` now raise a :class:"
"`ValueError` if the given timeout for their constructor is zero to prevent "
"the creation of a non-blocking socket. (Contributed by Dong-hee Na in :issue:"
"`39259`.)"
msgstr ""
":class:`~ftplib.FTP` 和 :class:`~ftplib.FTP_TLS` 現在在構造函式的給定超時為零"
"時引發 :class:`ValueError` 以防止建立非阻塞 socket 。 （由 Dong-hee Na 在 :"
"issue:`39259` 中貢獻。）"

#: ../../whatsnew/3.9.rst:442
msgid "gc"
msgstr "gc"

#: ../../whatsnew/3.9.rst:444
#, fuzzy
msgid ""
"When the garbage collector makes a collection in which some objects "
"resurrect (they are reachable from outside the isolated cycles after the "
"finalizers have been executed), do not block the collection of all objects "
"that are still unreachable. (Contributed by Pablo Galindo and Tim Peters in :"
"issue:`38379`.)"
msgstr ""
"當垃圾收集器進行回收時，其中一些物件復活（在執行終結器後可以從隔離循環之外訪"
"問它們），不要阻止所有仍然無法訪問的物件的收集。 （由 Pablo Galindo 和 Tim "
"Peters 在 :issue:`38379` 中貢獻。）"

#: ../../whatsnew/3.9.rst:449
#, fuzzy
msgid ""
"Added a new function :func:`gc.is_finalized` to check if an object has been "
"finalized by the garbage collector. (Contributed by Pablo Galindo in :issue:"
"`39322`.)"
msgstr ""
"新增了一個新函式 :func:`gc.is_finalized` 來檢查垃圾收集器是否已完成物件。 "
"（由 Pablo Galindo 在 :issue:`39322` 中貢獻。）"

#: ../../whatsnew/3.9.rst:454
msgid "hashlib"
msgstr "hashlib"

#: ../../whatsnew/3.9.rst:456
#, fuzzy
msgid ""
"The :mod:`hashlib` module can now use SHA3 hashes and SHAKE XOF from OpenSSL "
"when available. (Contributed by Christian Heimes in :issue:`37630`.)"
msgstr ""
":mod:`hashlib` 模組現在可以使用來自 OpenSSL 的 SHA3 雜湊和 SHAKE XOF（如果可"
"用）。 （由 Christian Heimes 在 :issue:`37630` 中貢獻。）"

#: ../../whatsnew/3.9.rst:460
#, fuzzy
msgid ""
"Builtin hash modules can now be disabled with ``./configure --without-"
"builtin-hashlib-hashes`` or selectively enabled with e.g. ``./configure --"
"with-builtin-hashlib-hashes=sha3,blake2`` to force use of OpenSSL based "
"implementation. (Contributed by Christian Heimes in :issue:`40479`)"
msgstr ""
"現在可以使用 ``./configure --without-builtin-hashlib-hashes`` 禁用內建雜湊模"
"組，或者使用例如有選擇地啟用``./configure --with-builtin-hashlib-hashes=sha3,"
"blake2`` 強制使用基於 OpenSSL 的實作。 （由 Christian Heimes 在 :issue:"
"`40479` 中貢獻）"

#: ../../whatsnew/3.9.rst:468
msgid "http"
msgstr "http"

#: ../../whatsnew/3.9.rst:470
#, fuzzy
msgid ""
"HTTP status codes ``103 EARLY_HINTS``, ``418 IM_A_TEAPOT`` and ``425 "
"TOO_EARLY`` are added to :class:`http.HTTPStatus`. (Contributed by Dong-hee "
"Na in :issue:`39509` and Ross Rhodes in :issue:`39507`.)"
msgstr ""
"HTTP 狀態程式碼 ``103 EARLY_HINTS``、``418 IM_A_TEAPOT`` 和 ``425 "
"TOO_EARLY`` 新增到 :class:`http.HTTPStatus`。 （由 Dong-hee Na 在 :issue:"
"`39509` 和 Ross Rhodes 在 :issue:`39507` 中貢獻。）"

#: ../../whatsnew/3.9.rst:474
#, fuzzy
msgid "IDLE and idlelib"
msgstr "空閒和空閒庫"

#: ../../whatsnew/3.9.rst:476
#, fuzzy
msgid ""
"Added option to toggle cursor blink off.  (Contributed by Zackery Spytz in :"
"issue:`4603`.)"
msgstr ""
"新增了關閉光標閃爍的選項。 （由 Zackery Spytz 在 :issue:`4603` 中貢獻。）"

#: ../../whatsnew/3.9.rst:479
#, fuzzy
msgid ""
"Escape key now closes IDLE completion windows.  (Contributed by Johnny "
"Najera in :issue:`38944`.)"
msgstr ""
"Escape 鍵現在關閉 IDLE 完成窗口。 （由 Johnny Najera 在 :issue:`38944` 中貢"
"獻。）"

#: ../../whatsnew/3.9.rst:482
#, fuzzy
msgid ""
"Added keywords to module name completion list.  (Contributed by Terry J. "
"Reedy in :issue:`37765`.)"
msgstr ""
"在模組名稱完成列表中新增了關鍵字。 （由 Terry J. Reedy 在 :issue:`37765` 中貢"
"獻。）"

#: ../../whatsnew/3.9.rst:485
#, fuzzy
msgid "New in 3.9 maintenance releases"
msgstr "3.9 維護版本中的新功能"

#: ../../whatsnew/3.9.rst:487
#, fuzzy
msgid ""
"Make IDLE invoke :func:`sys.excepthook` (when started without '-n'). User "
"hooks were previously ignored.  (Contributed by Ken Hilton in :issue:"
"`43008`.)"
msgstr ""
"使 IDLE 呼叫 :func:`sys.excepthook`（在沒有 ``-n``的情況下啟動）。以前忽略了"
"使用者掛鉤。 （由 Ken Hilton 在 :issue:`43008` 中貢獻。）"

#: ../../whatsnew/3.9.rst:491
#, fuzzy
msgid "The changes above have been backported to 3.8 maintenance releases."
msgstr "上述更改已反向移植到 3.8 維護版本。"

#: ../../whatsnew/3.9.rst:493
#, fuzzy
msgid ""
"Rearrange the settings dialog.  Split the General tab into Windows and Shell/"
"Ed tabs.  Move help sources, which extend the Help menu, to the Extensions "
"tab.  Make space for new options and shorten the dialog. The latter makes "
"the dialog better fit small screens.  (Contributed by Terry Jan Reedy in :"
"issue:`40468`.)  Move the indent space setting from the Font tab to the new "
"Windows tab.  (Contributed by Mark Roseman and Terry Jan Reedy in :issue:"
"`33962`.)"
msgstr ""
"重新排列設定對話框。將常規選項卡拆分為 Windows 和 Shell/Ed 選項卡。將擴充“幫"
"助”菜單的幫助源移動到“擴充”選項卡。為新選項騰出空間並縮短對話框。後者使對話框"
"更適合小屏幕。 （由 Terry Jan Reedy 在 :issue:`40468` 中貢獻。）將縮進空間設"
"定從字體選項卡移動到新的 Windows 選項卡。 （由 Mark Roseman 和 Terry Jan "
"Reedy 在 :issue:`33962` 中貢獻。）"

#: ../../whatsnew/3.9.rst:501
#, fuzzy
msgid ""
"Apply syntax highlighting to ``.pyi`` files. (Contributed by Alex Waygood "
"and Terry Jan Reedy in :issue:`45447`.)"
msgstr ""
"將語法突出顯示應用於 .pyi 文件。 （由 Alex Waygood 和 Terry Jan Reedy 在 :"
"issue:`45447` 中貢獻。）"

#: ../../whatsnew/3.9.rst:505
msgid "imaplib"
msgstr "imaplib"

#: ../../whatsnew/3.9.rst:507
#, fuzzy
msgid ""
":class:`~imaplib.IMAP4` and :class:`~imaplib.IMAP4_SSL` now have an optional "
"*timeout* parameter for their constructors. Also, the :meth:`~imaplib.IMAP4."
"open` method now has an optional *timeout* parameter with this change. The "
"overridden methods of :class:`~imaplib.IMAP4_SSL` and :class:`~imaplib."
"IMAP4_stream` were applied to this change. (Contributed by Dong-hee Na in :"
"issue:`38615`.)"
msgstr ""
":class:`~imaplib.IMAP4` 和 :class:`~imaplib.IMAP4_SSL` 現在為其構造函式提供可"
"選的 *timeout* 參數。此外，:meth:`~imaplib.IMAP4.open` 方法現在有一個可選的 "
"*timeout* 參數。 :class:`~imaplib.IMAP4_SSL` 和 :class:`~imaplib."
"IMAP4_stream` 的重寫方法應用於此更改。 （由 Dong-hee Na 在 :issue:`38615` 中"
"貢獻。）"

#: ../../whatsnew/3.9.rst:514
#, fuzzy
msgid ""
":meth:`imaplib.IMAP4.unselect` is added. :meth:`imaplib.IMAP4.unselect` "
"frees server's resources associated with the selected mailbox and returns "
"the server to the authenticated state. This command performs the same "
"actions as :meth:`imaplib.IMAP4.close`, except that no messages are "
"permanently removed from the currently selected mailbox. (Contributed by "
"Dong-hee Na in :issue:`40375`.)"
msgstr ""
"新增 :meth:`imaplib.IMAP4.unselect`。 :meth:`imaplib.IMAP4.unselect` 釋放與所"
"選郵箱關聯的伺服器資源，並將伺服器回傳到已驗證狀態。此命令執行與 :meth:"
"`imaplib.IMAP4.close` 相同的操作，只是不會從當前選定的郵箱中永久刪除任何郵"
"件。 （由 Dong-hee Na 在 :issue:`40375` 中貢獻。）"

#: ../../whatsnew/3.9.rst:522
msgid "importlib"
msgstr "importlib"

#: ../../whatsnew/3.9.rst:524
#, fuzzy
msgid ""
"To improve consistency with import statements, :func:`importlib.util."
"resolve_name` now raises :exc:`ImportError` instead of :exc:`ValueError` for "
"invalid relative import attempts. (Contributed by Ngalim Siregar in :issue:"
"`37444`.)"
msgstr ""
"為了提高與導入語句的一致性，:func:`importlib.util.resolve_name` 現在針對無效"
"的相對導入嘗試引發 :exc:`ImportError` 而不是 :exc:`ValueError`。 （由 Ngalim "
"Siregar 在 :issue:`37444` 中貢獻。）"

#: ../../whatsnew/3.9.rst:529
#, fuzzy
msgid ""
"Import loaders which publish immutable module objects can now publish "
"immutable packages in addition to individual modules. (Contributed by Dino "
"Viehland in :issue:`39336`.)"
msgstr ""
"發布不可變模組物件的導入加載器現在除了單個模組之外還可以發布不可變包。 （由 "
"Dino Viehland 在 :issue:`39336` 中貢獻。）"

#: ../../whatsnew/3.9.rst:533
#, fuzzy
msgid ""
"Added :func:`importlib.resources.files` function with support for "
"subdirectories in package data, matching backport in ``importlib_resources`` "
"version 1.5. (Contributed by Jason R. Coombs in :issue:`39791`.)"
msgstr ""
"新增 :func:`importlib.resources.files` 函式，支援包資料中的子目錄，匹配 "
"``importlib_resources`` 版本 1.5 中的反向端口。 （由 Jason R. Coombs 在 :"
"issue:`39791` 中貢獻。）"

#: ../../whatsnew/3.9.rst:538
#, fuzzy
msgid ""
"Refreshed ``importlib.metadata`` from ``importlib_metadata`` version 1.6.1."
msgstr "從 ``importlib_metadata`` 版本 1.6.1 更新了 ``importlib.metadata``。"

#: ../../whatsnew/3.9.rst:541
msgid "inspect"
msgstr "inspect"

#: ../../whatsnew/3.9.rst:543
#, fuzzy
msgid ""
":attr:`inspect.BoundArguments.arguments` is changed from ``OrderedDict`` to "
"regular dict.  (Contributed by Inada Naoki in :issue:`36350` and :issue:"
"`39775`.)"
msgstr ""
":attr:`inspect.BoundArguments.arguments` 已從 `OrderedDict`` 更改為常規字"
"典。 （由 Inada Naoki 在 :issue:`36350` 和 :issue:`39775` 中貢獻。）"

#: ../../whatsnew/3.9.rst:547
msgid "ipaddress"
msgstr "ipaddress"

#: ../../whatsnew/3.9.rst:549
#, fuzzy
msgid ""
":mod:`ipaddress` now supports IPv6 Scoped Addresses (IPv6 address with "
"suffix ``%<scope_id>``)."
msgstr ""
":mod:`ipaddress` 現在支援 IPv6 作用域地址（後綴為 ``%<scope_id>`` 的 IPv6 地"
"址）。"

#: ../../whatsnew/3.9.rst:551
#, fuzzy
msgid ""
"Scoped IPv6 addresses can be parsed using :class:`ipaddress.IPv6Address`. If "
"present, scope zone ID is available through the :attr:`~ipaddress."
"IPv6Address.scope_id` attribute. (Contributed by Oleksandr Pavliuk in :issue:"
"`34788`.)"
msgstr ""
"可以使用 :class:`ipaddress.IPv6Address` 解析範圍內的 IPv6 地址。如果存在，範"
"圍區域 ID 可通過 :attr:`~ipaddress.IPv6Address.scope_id` 屬性獲得。 （由 "
"Oleksandr Pavliuk 在 :issue:`34788` 中貢獻。）"

#: ../../whatsnew/3.9.rst:555
#, fuzzy
msgid ""
"Starting with Python 3.9.5 the :mod:`ipaddress` module no longer accepts any "
"leading zeros in IPv4 address strings. (Contributed by Christian Heimes in :"
"issue:`36384`)."
msgstr ""
"從 Python 3.9.5 開始，:mod:`ipaddress` 模組不再接受 IPv4 地址字串中的任何前導"
"零。 （由 Christian Heimes 在 :issue:`36384` 中貢獻）。"

#: ../../whatsnew/3.9.rst:560
msgid "math"
msgstr "math"

#: ../../whatsnew/3.9.rst:562
#, fuzzy
msgid ""
"Expanded the :func:`math.gcd` function to handle multiple arguments. "
"Formerly, it only supported two arguments. (Contributed by Serhiy Storchaka "
"in :issue:`39648`.)"
msgstr ""
"擴充了 :func:`math.gcd` 函式來處理多個參數。以前，它只支援兩個參數。 （由 "
"Serhiy Storchaka 在 :issue:`39648` 中貢獻。）"

#: ../../whatsnew/3.9.rst:566
#, fuzzy
msgid ""
"Added :func:`math.lcm`: return the least common multiple of specified "
"arguments. (Contributed by Mark Dickinson, Ananthakrishnan and Serhiy "
"Storchaka in :issue:`39479` and :issue:`39648`.)"
msgstr ""
"新增 :func:`math.lcm`：回傳指定參數的最小公倍數。 （由 Mark Dickinson、"
"Ananthakrishnan 和 Serhiy Storchaka 在 :issue:`39479` 和 :issue:`39648` 中貢"
"獻。）"

#: ../../whatsnew/3.9.rst:570
#, fuzzy
msgid ""
"Added :func:`math.nextafter`: return the next floating-point value after *x* "
"towards *y*. (Contributed by Victor Stinner in :issue:`39288`.)"
msgstr ""
"新增 :func:`math.nextafter`：回傳 *x* 之後的下一個浮點值到 *y*。 （由 Victor "
"Stinner 在 :issue:`39288` 中貢獻。）"

#: ../../whatsnew/3.9.rst:574
#, fuzzy
msgid ""
"Added :func:`math.ulp`: return the value of the least significant bit of a "
"float. (Contributed by Victor Stinner in :issue:`39310`.)"
msgstr ""
"新增 :func:`math.ulp`：回傳浮點數最低有效位的值。 （由 Victor Stinner 在 :"
"issue:`39310` 中貢獻。）"

#: ../../whatsnew/3.9.rst:579
msgid "multiprocessing"
msgstr "multiprocessing"

#: ../../whatsnew/3.9.rst:581
#, fuzzy
msgid ""
"The :class:`multiprocessing.SimpleQueue` class has a new :meth:"
"`~multiprocessing.SimpleQueue.close` method to explicitly close the queue. "
"(Contributed by Victor Stinner in :issue:`30966`.)"
msgstr ""
":class:`multiprocessing.SimpleQueue` 類有一個新的 :meth:`~multiprocessing."
"SimpleQueue.close` 方法來顯式關閉隊列。 （由 Victor Stinner 在 :issue:"
"`30966` 中貢獻。）"

#: ../../whatsnew/3.9.rst:587
msgid "nntplib"
msgstr "nntplib"

#: ../../whatsnew/3.9.rst:589
#, fuzzy
msgid ""
":class:`~nntplib.NNTP` and :class:`~nntplib.NNTP_SSL` now raise a :class:"
"`ValueError` if the given timeout for their constructor is zero to prevent "
"the creation of a non-blocking socket. (Contributed by Dong-hee Na in :issue:"
"`39259`.)"
msgstr ""
":class:`~nntplib.NNTP` 和 :class:`~nntplib.NNTP_SSL` 現在在構造函式的給定超時"
"為零時引發 :class:`ValueError` 以防止建立非阻塞 socket 。 （由 Dong-hee Na "
"在 :issue:`39259` 中貢獻。）"

#: ../../whatsnew/3.9.rst:594
msgid "os"
msgstr "os"

#: ../../whatsnew/3.9.rst:596
#, fuzzy
msgid ""
"Added :data:`~os.CLD_KILLED` and :data:`~os.CLD_STOPPED` for :attr:"
"`si_code`. (Contributed by Dong-hee Na in :issue:`38493`.)"
msgstr ""
"為 si_code 新增了 :data:`~os.CLD_KILLED` 和 :data:`~os.CLD_STOPPED`。 （由 "
"Dong-hee Na 在 :issue:`38493` 中貢獻。）"

#: ../../whatsnew/3.9.rst:599
#, fuzzy
msgid ""
"Exposed the Linux-specific :func:`os.pidfd_open` (:issue:`38692`) and :data:"
"`os.P_PIDFD` (:issue:`38713`) for process management with file descriptors."
msgstr ""
"公開了特定於 Linux 的 :func:`os.pidfd_open` (:issue:`38692`) 和 :data:`os."
"P_PIDFD` (:issue:`38713`) 以使用文件描述器進行行程管理。"

#: ../../whatsnew/3.9.rst:603
#, fuzzy
msgid ""
"The :func:`os.unsetenv` function is now also available on Windows. "
"(Contributed by Victor Stinner in :issue:`39413`.)"
msgstr ""
":func:`os.unsetenv` 函式現在也可以在 Windows 上使用。 （由 Victor Stinner "
"在 :issue:`39413` 中貢獻。）"

#: ../../whatsnew/3.9.rst:606
#, fuzzy
msgid ""
"The :func:`os.putenv` and :func:`os.unsetenv` functions are now always "
"available. (Contributed by Victor Stinner in :issue:`39395`.)"
msgstr ""
":func:`os.putenv` 和 :func:`os.unsetenv` 函式現在始終可用。 （由 Victor "
"Stinner 在 :issue:`39395` 中貢獻。）"

#: ../../whatsnew/3.9.rst:610
#, fuzzy
msgid ""
"Added :func:`os.waitstatus_to_exitcode` function: convert a wait status to "
"an exit code. (Contributed by Victor Stinner in :issue:`40094`.)"
msgstr ""
"新增 :func:`os.waitstatus_to_exitcode` 功能：將等待狀態轉換為退出程式碼。 "
"（由 Victor Stinner 在 :issue:`40094` 中貢獻。）"

#: ../../whatsnew/3.9.rst:615
msgid "pathlib"
msgstr "pathlib"

#: ../../whatsnew/3.9.rst:617
#, fuzzy
msgid ""
"Added :meth:`pathlib.Path.readlink()` which acts similarly to :func:`os."
"readlink`. (Contributed by Girts Folkmanis in :issue:`30618`)"
msgstr ""
"新增了 :meth:`pathlib.Path.readlink()` 其作用類似於 :func:`os.readlink`。 "
"（由 Girts Folkmanis 在 :issue:`30618` 中貢獻）"

#: ../../whatsnew/3.9.rst:622
msgid "pdb"
msgstr "pdb"

#: ../../whatsnew/3.9.rst:624
#, fuzzy
msgid ""
"On Windows now :class:`~pdb.Pdb` supports ``~/.pdbrc``. (Contributed by Tim "
"Hopper and Dan Lidral-Porter in :issue:`20523`.)"
msgstr ""
"現在在 Windows 上 :class:`~pdb.Pdb` 支援``~/.pdbrc``。 （由 Tim Hopper 和 "
"Dan Lidral-Porter 在 :issue:`20523` 中貢獻。）"

#: ../../whatsnew/3.9.rst:628
msgid "poplib"
msgstr "poplib"

#: ../../whatsnew/3.9.rst:630
#, fuzzy
msgid ""
":class:`~poplib.POP3` and :class:`~poplib.POP3_SSL` now raise a :class:"
"`ValueError` if the given timeout for their constructor is zero to prevent "
"the creation of a non-blocking socket. (Contributed by Dong-hee Na in :issue:"
"`39259`.)"
msgstr ""
":class:`~poplib.POP3` 和 :class:`~poplib.POP3_SSL` 現在在構造函式的給定超時為"
"零時引發 :class:`ValueError` 以防止建立非阻塞 socket 。 （由 Dong-hee Na 在 :"
"issue:`39259` 中貢獻。）"

#: ../../whatsnew/3.9.rst:635
msgid "pprint"
msgstr "pprint"

#: ../../whatsnew/3.9.rst:637
#, fuzzy
msgid ""
":mod:`pprint` can now pretty-print :class:`types.SimpleNamespace`. "
"(Contributed by Carl Bordum Hansen in :issue:`37376`.)"
msgstr ""
":mod:`pprint` 現在可以漂亮地印出 :class:`types.SimpleNamespace`。 （由 Carl "
"Bordum Hansen 在 :issue:`37376` 中貢獻。）"

#: ../../whatsnew/3.9.rst:641
msgid "pydoc"
msgstr "pydoc"

#: ../../whatsnew/3.9.rst:643
#, fuzzy
msgid ""
"The documentation string is now shown not only for class, function, method "
"etc, but for any object that has its own ``__doc__`` attribute. (Contributed "
"by Serhiy Storchaka in :issue:`40257`.)"
msgstr ""
"文檔字串現在不僅針對類、函式、方法等顯示，而且針對任何具有自己的 ``__doc__`` "
"屬性的物件顯示。 （由 Serhiy Storchaka 在 :issue:`40257` 中貢獻。）"

#: ../../whatsnew/3.9.rst:648
msgid "random"
msgstr "random"

#: ../../whatsnew/3.9.rst:650
#, fuzzy
msgid ""
"Added a new :attr:`random.Random.randbytes` method: generate random bytes. "
"(Contributed by Victor Stinner in :issue:`40286`.)"
msgstr ""
"新增了一個新的 :attr:`random.Random.randbytes` 方法：生成隨機位元組。 （由 "
"Victor Stinner 在 :issue:`40286` 中貢獻。）"

#: ../../whatsnew/3.9.rst:654
msgid "signal"
msgstr "signal"

#: ../../whatsnew/3.9.rst:656
#, fuzzy
msgid ""
"Exposed the Linux-specific :func:`signal.pidfd_send_signal` for sending to "
"signals to a process using a file descriptor instead of a pid. (:issue:"
"`38712`)"
msgstr ""
"公開了特定於 Linux 的 :func:`signal.pidfd_send_signal` 以使用文件描述器而不"
"是 pid 向行程發送信號。 （ :issue:`38712`）"

#: ../../whatsnew/3.9.rst:660
msgid "smtplib"
msgstr "smtplib"

#: ../../whatsnew/3.9.rst:662
#, fuzzy
msgid ""
":class:`~smtplib.SMTP` and :class:`~smtplib.SMTP_SSL` now raise a :class:"
"`ValueError` if the given timeout for their constructor is zero to prevent "
"the creation of a non-blocking socket. (Contributed by Dong-hee Na in :issue:"
"`39259`.)"
msgstr ""
":class:`~smtplib.SMTP` 和 :class:`~smtplib.SMTP_SSL` 現在在構造函式的給定超時"
"為零時引發 :class:`ValueError` 以防止建立非阻塞 socket 。 （由 Dong-hee Na "
"在 :issue:`39259` 中貢獻。）"

#: ../../whatsnew/3.9.rst:666
#, fuzzy
msgid ""
":class:`~smtplib.LMTP` constructor  now has an optional *timeout* parameter. "
"(Contributed by Dong-hee Na in :issue:`39329`.)"
msgstr ""
":class:`~smtplib.LMTP` 構造函式現在有一個可選的 *timeout* 參數。 （由 Dong-"
"hee Na 在 :issue:`39329` 中貢獻。）"

#: ../../whatsnew/3.9.rst:670
msgid "socket"
msgstr "socket"

#: ../../whatsnew/3.9.rst:672
#, fuzzy
msgid ""
"The :mod:`socket` module now exports the :data:`~socket."
"CAN_RAW_JOIN_FILTERS` constant on Linux 4.1 and greater. (Contributed by "
"Stefan Tatschner and Zackery Spytz in :issue:`25780`.)"
msgstr ""
":mod:`socket` 模組現在在 Linux 4.1 及更高版本上導出 :data:`~socket."
"CAN_RAW_JOIN_FILTERS` 常數。 （由 Stefan Tatschner 和 Zackery Spytz 在 :"
"issue:`25780` 中貢獻。）"

#: ../../whatsnew/3.9.rst:676
#, fuzzy
msgid ""
"The socket module now supports the :data:`~socket.CAN_J1939` protocol on "
"platforms that support it.  (Contributed by Karl Ding in :issue:`40291`.)"
msgstr ""
"socket 模組現在在支援它的平台上支援 :data:`~socket.CAN_J1939` 協定。 （由 "
"Karl Ding 在 :issue:`40291` 中貢獻。）"

#: ../../whatsnew/3.9.rst:679
#, fuzzy
msgid ""
"The socket module now has the :func:`socket.send_fds` and :func:`socket."
"recv_fds` functions. (Contributed by Joannah Nanjekye, Shinya Okano and "
"Victor Stinner in :issue:`28724`.)"
msgstr ""
" socket 模組現在具有 :func:`socket.send_fds` 和 :func:`socket.recv_fds` 函"
"式。 （由 Joannah Nanjekye、Shinya Okano 和 Victor Stinner 在 :issue:`28724` "
"中貢獻。）"

#: ../../whatsnew/3.9.rst:685
msgid "time"
msgstr "time"

#: ../../whatsnew/3.9.rst:687
#, fuzzy
msgid ""
"On AIX, :func:`~time.thread_time` is now implemented with "
"``thread_cputime()`` which has nanosecond resolution, rather than "
"``clock_gettime(CLOCK_THREAD_CPUTIME_ID)`` which has a resolution of 10 "
"milliseconds. (Contributed by Batuhan Taskaya in :issue:`40192`)"
msgstr ""
"在 AIX 上，:func:`~time.thread_time` 現在使用具有納秒分辨率的 "
"``thread_cputime()`` 實作，而不是具有 10 毫秒分辨率的"
"``clock_gettime(CLOCK_THREAD_CPUTIME_ID)``。 （由 Batuhan Taskaya 在 :issue:"
"`40192` 中貢獻）"

#: ../../whatsnew/3.9.rst:693
msgid "sys"
msgstr "sys"

#: ../../whatsnew/3.9.rst:695
#, fuzzy
msgid ""
"Added a new :attr:`sys.platlibdir` attribute: name of the platform-specific "
"library directory. It is used to build the path of standard library and the "
"paths of installed extension modules. It is equal to ``\"lib\"`` on most "
"platforms.  On Fedora and SuSE, it is equal to ``\"lib64\"`` on 64-bit "
"platforms. (Contributed by Jan Matějek, Matěj Cepl, Charalampos Stratakis "
"and Victor Stinner in :issue:`1294959`.)"
msgstr ""
"新增了一個新的 :attr:`sys.platlibdir` 屬性：特定於平台的庫目錄的名稱。它用於"
"構建標準庫的路徑和已安裝的擴充模組的路徑。在大多數平台上它等同於``\"lib\"``。"
"在 Fedora 和 SuSE 上，它等同於 64 位平台上的 ``lib64``。 （由 Jan Matějek、"
"Matěj Cepl、Charalampos Stratakis 和 Victor Stinner 在 :issue:`1294959` 中貢"
"獻。）"

#: ../../whatsnew/3.9.rst:701
#, fuzzy
msgid ""
"Previously, :attr:`sys.stderr` was block-buffered when non-interactive. Now "
"``stderr`` defaults to always being line-buffered. (Contributed by Jendrik "
"Seipp in :issue:`13601`.)"
msgstr ""
"以前，:attr:`sys.stderr` 在非交互式時是塊緩衝的。現在 ``stderr`` 預設總是行緩"
"衝。 （由 Jendrik Seipp 在 :issue:`13601` 中貢獻。）"

#: ../../whatsnew/3.9.rst:706
msgid "tracemalloc"
msgstr "tracemalloc"

#: ../../whatsnew/3.9.rst:708
#, fuzzy
msgid ""
"Added :func:`tracemalloc.reset_peak` to set the peak size of traced memory "
"blocks to the current size, to measure the peak of specific pieces of code. "
"(Contributed by Huon Wilson in :issue:`40630`.)"
msgstr ""
"新增 :func:`tracemalloc.reset_peak` 將跟踪記憶體塊的峰值大小設定為當前大小，"
"以測量特定程式碼段的峰值。 （由 Huon Wilson 在 :issue:`40630` 中貢獻。）"

#: ../../whatsnew/3.9.rst:713 ../../whatsnew/3.9.rst:1496
msgid "typing"
msgstr "typing"

#: ../../whatsnew/3.9.rst:715
#, fuzzy
msgid ""
":pep:`593` introduced an :data:`typing.Annotated` type to decorate existing "
"types with context-specific metadata and new ``include_extras`` parameter "
"to :func:`typing.get_type_hints` to access the metadata at runtime. "
"(Contributed by Till Varoquaux and Konstantin Kashin.)"
msgstr ""
":pep:`593` 引入了一個 :data:`typing.Annotated` 型別來使用特定於上下文的元資料"
"和新的 ``include_extras`` 參數來裝飾現有型別 :func:`typing.get_type_hints` 以"
"在運行時訪問元資料。 （由 Till Varoquaux 和 Konstantin Kashin 提供。）"

#: ../../whatsnew/3.9.rst:721
msgid "unicodedata"
msgstr "unicodedata"

#: ../../whatsnew/3.9.rst:723
#, fuzzy
msgid ""
"The Unicode database has been updated to version 13.0.0. (:issue:`39926`)."
msgstr "Unicode 資料庫已更新至版本 13.0.0。 （ :issue:`39926`）。"

#: ../../whatsnew/3.9.rst:726
msgid "venv"
msgstr "venv"

#: ../../whatsnew/3.9.rst:728
#, fuzzy
msgid ""
"The activation scripts provided by :mod:`venv` now all specify their prompt "
"customization consistently by always using the value specified by "
"``__VENV_PROMPT__``. Previously some scripts unconditionally used "
"``__VENV_PROMPT__``, others only if it happened to be set (which was the "
"default case), and one used ``__VENV_NAME__`` instead. (Contributed by Brett "
"Cannon in :issue:`37663`.)"
msgstr ""
":mod:`venv` 提供的激活腳本現在都通過始終使用 ``__VENV_PROMPT__`` 指定的值來一"
"致地指定其提示自定義。以前一些腳本無條件地使用 ``__VENV_PROMPT__``，其他的只"
"有在碰巧被設定時才使用（這是預設情況），還有一個使用 ``__VENV_NAME__`` 代"
"替。 （由 Brett Cannon 在 :issue:`37663` 中貢獻。）"

#: ../../whatsnew/3.9.rst:736
msgid "xml"
msgstr "xml"

#: ../../whatsnew/3.9.rst:738
#, fuzzy
msgid ""
"White space characters within attributes are now preserved when serializing :"
"mod:`xml.etree.ElementTree` to XML file. EOLNs are no longer normalized to "
"\"\\n\". This is the result of discussion about how to interpret section "
"2.11 of XML spec. (Contributed by Mefistotelis in :issue:`39011`.)"
msgstr ""
"將 :mod:`xml.etree.ElementTree` 序列化為 XML 文件時，現在會保留屬性中的空白字"
"元。 EOLN 不再規範化為“\\n”。這是關於如何解釋 XML 規範第 2.11 節的討論結果。 "
"（由 Mefistotelis 在 :issue:`39011` 中貢獻。）"

#: ../../whatsnew/3.9.rst:746
#, fuzzy
msgid "Optimizations"
msgstr "最佳化"

#: ../../whatsnew/3.9.rst:748
#, fuzzy
msgid ""
"Optimized the idiom for assignment a temporary variable in comprehensions. "
"Now ``for y in [expr]`` in comprehensions is as fast as a simple assignment "
"``y = expr``.  For example:"
msgstr ""
"最佳化了理解中分配臨時變數的習語。現在理解中的“for y in [expr]”與簡單賦值“y "
"= expr”一樣快。例如："

#: ../../whatsnew/3.9.rst:752
#, fuzzy
msgid "sums = [s for s in [0] for x in data for s in [s + x]]"
msgstr "總和 = [s for s in [0] for x in data for s in [s + x]]"

#: ../../whatsnew/3.9.rst:754
#, fuzzy
msgid ""
"Unlike the ``:=`` operator this idiom does not leak a variable to the outer "
"scope."
msgstr "與 ``:=`` 運算符不同，這個習慣用法不會將變數洩漏到外部範圍。"

#: ../../whatsnew/3.9.rst:757
#, fuzzy
msgid "(Contributed by Serhiy Storchaka in :issue:`32856`.)"
msgstr "（由 Serhiy Storchaka 在 :issue:`32856` 中貢獻。）"

#: ../../whatsnew/3.9.rst:759
#, fuzzy
msgid ""
"Optimized signal handling in multithreaded applications. If a thread "
"different than the main thread gets a signal, the bytecode evaluation loop "
"is no longer interrupted at each bytecode instruction to check for pending "
"signals which cannot be handled. Only the main thread of the main "
"interpreter can handle signals."
msgstr ""
"最佳化多執行緒應用程式中的信號處理。如果與主執行緒不同的執行緒獲得信號，則位"
"元組碼評估循環不再在每個位元組碼指令處中斷以檢查無法處理的未決信號。只有主直"
"譯器的主執行緒可以處理信號。"

#: ../../whatsnew/3.9.rst:765
#, fuzzy
msgid ""
"Previously, the bytecode evaluation loop was interrupted at each instruction "
"until the main thread handles signals. (Contributed by Victor Stinner in :"
"issue:`40010`.)"
msgstr ""
"以前，位元組碼評估循環在每條指令處被中斷，直到主執行緒處理信號。 （由 Victor "
"Stinner 在 :issue:`40010` 中貢獻。）"

#: ../../whatsnew/3.9.rst:769
#, fuzzy
msgid ""
"Optimized the :mod:`subprocess` module on FreeBSD using ``closefrom()``. "
"(Contributed by Ed Maste, Conrad Meyer, Kyle Evans, Kubilay Kocak and Victor "
"Stinner in :issue:`38061`.)"
msgstr ""
"使用 ``closefrom()`` 在 FreeBSD 上最佳化了 :mod:`subprocess` 模組。 （由 Ed "
"Maste、Conrad Meyer、Kyle Evans、Kubilay Kocak 和 Victor Stinner 在 :issue:"
"`38061` 中貢獻。）"

#: ../../whatsnew/3.9.rst:773
#, fuzzy
msgid ""
":c:func:`PyLong_FromDouble` is now up to 1.87x faster for values that fit "
"into :c:expr:`long`. (Contributed by Sergey Fedoseev in :issue:`37986`.)"
msgstr ""
":c:func:`PyLong_FromDouble` 現在對於適合 :c:expr:`long` 的值最多快 1.87 倍。 "
"（由 Sergey Fedoseev 在 :issue:`37986` 中貢獻。）"

#: ../../whatsnew/3.9.rst:777
#, fuzzy
msgid ""
"A number of Python builtins (:class:`range`, :class:`tuple`, :class:`set`, :"
"class:`frozenset`, :class:`list`, :class:`dict`) are now sped up by using :"
"pep:`590` vectorcall protocol. (Contributed by Dong-hee Na, Mark Shannon, "
"Jeroen Demeyer and Petr Viktorin in :issue:`37207`.)"
msgstr ""
"許多 Python 內建函式（:class:`range`、:class:`tuple`、:class:`set`、:class:"
"`frozenset`、:class:`list`、:class:`dict`）現在是通過使用 :pep:`590` "
"vectorcall 協定加速。 （由 Dong-hee Na、Mark Shannon、Jeroen Demeyer 和 Petr "
"Viktorin 在 :issue:`37207` 中貢獻。）"

#: ../../whatsnew/3.9.rst:782
#, fuzzy
msgid ""
"Optimized :func:`~set.difference_update` for the case when the other set is "
"much larger than the base set. (Suggested by Evgeny Kapun with code "
"contributed by Michele Orrù in :issue:`8425`.)"
msgstr ""
"最佳化 :func:`~set.difference_update` 用於其他集合比基本集合大得多的情況。 "
"（由 Evgeny Kapun 建議，程式碼由 Michele Orrù 在 :issue:`8425` 中貢獻。）"

#: ../../whatsnew/3.9.rst:786
#, fuzzy
msgid ""
"Python's small object allocator (``obmalloc.c``) now allows (no more than) "
"one empty arena to remain available for immediate reuse, without returning "
"it to the OS.  This prevents thrashing in simple loops where an arena could "
"be created and destroyed anew on each iteration. (Contributed by Tim Peters "
"in :issue:`37257`.)"
msgstr ""
"Python 的小物件分配器 (``obmalloc.c``) 現在允許（不超過）一個空的 arena 保持"
"可用以立即重用，而無需將其回傳給操作系統。這可以防止在每次疊代中都可以重新建"
"立和銷毀競技場的簡單循環中出現顛簸。 （由 Tim Peters 在 :issue:`37257` 中貢"
"獻。）"

#: ../../whatsnew/3.9.rst:792
#, fuzzy
msgid ""
":term:`floor division` of float operation now has a better performance. Also "
"the message of :exc:`ZeroDivisionError` for this operation is updated. "
"(Contributed by Dong-hee Na in :issue:`39434`.)"
msgstr ""
"浮動操作的 :term:`floor division` 現在有更好的性能。此操作的 :exc:"
"`ZeroDivisionError` 消息也已更新。 （由 Dong-hee Na 在 :issue:`39434` 中貢"
"獻。）"

#: ../../whatsnew/3.9.rst:796
#, fuzzy
msgid ""
"Decoding short ASCII strings with UTF-8 and ascii codecs is now about 15% "
"faster.  (Contributed by Inada Naoki in :issue:`37348`.)"
msgstr ""
"使用 UTF-8 和 ascii 編解碼器解碼短 ASCII 字串的速度現在提高了大約 15%。 （由 "
"Inada Naoki 在 :issue:`37348` 中貢獻。）"

#: ../../whatsnew/3.9.rst:799
#, fuzzy
msgid ""
"Here's a summary of performance improvements from Python 3.4 through Python "
"3.9:"
msgstr "以下是從 Python 3.4 到 Python 3.9 的性能改進摘要："

#: ../../whatsnew/3.9.rst:846
#, fuzzy
msgid ""
"These results were generated from the variable access benchmark script at: "
"``Tools/scripts/var_access_benchmark.py``. The benchmark script displays "
"timings in nanoseconds.  The benchmarks were measured on an `Intel® Core™ "
"i7-4960HQ processor <https://ark.intel.com/content/www/us/en/ark/"
"products/76088/intel-core-i7-4960hq-processor-6m-cache-up-to-3-80-ghz."
"html>`_ running the macOS 64-bit builds found at `python.org <https://www."
"python.org/downloads/mac-osx/>`_."
msgstr ""
"這些結果是從變數訪問基準腳本生成的：``Tools/scripts/var_access_benchmark."
"py``。基準腳本以納秒為單位顯示計時。基準測試是在英特爾® 酷睿™ i7-4960HQ 處理"
"器 <https://ark.intel.com/content/www/us/en/ark/products/76088/intel-core-"
"i7-4960hq-processor- 6m-cache-up-to-3-80-ghz.html>`_ 運行在 `python.org "
"<https://www.python.org/downloads/mac-osx/>` 中找到的 macOS 64 位構建_。"

#: ../../whatsnew/3.9.rst:856
#, fuzzy
msgid "Deprecated"
msgstr "棄用"

#: ../../whatsnew/3.9.rst:858
#, fuzzy
msgid ""
"The distutils ``bdist_msi`` command is now deprecated, use ``bdist_wheel`` "
"(wheel packages) instead. (Contributed by Hugo van Kemenade in :issue:"
"`39586`.)"
msgstr ""
"distutils ``bdist_msi`` 命令現已棄用，請改用 ``bdist_wheel``（輪包）。 （由 "
"Hugo van Kemenade 在 :issue:`39586` 中貢獻。）"

#: ../../whatsnew/3.9.rst:862
#, fuzzy
msgid ""
"Currently :func:`math.factorial` accepts :class:`float` instances with non-"
"negative integer values (like ``5.0``).  It raises a :exc:`ValueError` for "
"non-integral and negative floats.  It is now deprecated.  In future Python "
"versions it will raise a :exc:`TypeError` for all floats. (Contributed by "
"Serhiy Storchaka in :issue:`37315`.)"
msgstr ""
"目前 :func:`math.factorial` 接受具有非負整數值（如 ``5.0``）的 :class:"
"`float` 實例。它為非整數和負浮點數引發 :exc:`ValueError`。現在已棄用。在未來"
"的 Python 版本中，它將為所有浮點數引發 :exc:`TypeError`。 （由 Serhiy "
"Storchaka 在 :issue:`37315` 中貢獻。）"

#: ../../whatsnew/3.9.rst:868
#, fuzzy
msgid ""
"The :mod:`parser` and :mod:`symbol` modules are deprecated and will be "
"removed in future versions of Python. For the majority of use cases, users "
"can leverage the Abstract Syntax Tree (AST) generation and compilation "
"stage, using the :mod:`ast` module."
msgstr ""
":mod:`parser` 和 :mod:`symbol` 模組已棄用，並將在未來的 Python 版本中刪除。對"
"於大多數用例，使用者可以使用 :mod:`ast` 模組來利用抽象語法樹 (AST) 生成和編譯"
"階段。"

#: ../../whatsnew/3.9.rst:873
#, fuzzy
msgid ""
"The Public C API functions :c:func:`PyParser_SimpleParseStringFlags`, :c:"
"func:`PyParser_SimpleParseStringFlagsFilename`, :c:func:"
"`PyParser_SimpleParseFileFlags` and :c:func:`PyNode_Compile` are deprecated "
"and will be removed in Python 3.10 together with the old parser."
msgstr ""
"公開 C API 函式:c:func:`PyParser_SimpleParseStringFlags`、:c:func:"
"`PyParser_SimpleParseStringFlagsFilename`、:c:func:"
"`PyParser_SimpleParseFileFlags` 和:c:func:`PyNode_Compile` 已棄用，並將在 "
"Python 3.10 中一起刪除使用舊的解析器。"

#: ../../whatsnew/3.9.rst:878
#, fuzzy
msgid ""
"Using :data:`NotImplemented` in a boolean context has been deprecated, as it "
"is almost exclusively the result of incorrect rich comparator "
"implementations. It will be made a :exc:`TypeError` in a future version of "
"Python. (Contributed by Josh Rosenberg in :issue:`35712`.)"
msgstr ""
"在布爾上下文中使用 :data:`NotImplemented` 已被棄用，因為它幾乎完全是不正確的"
"豐富比較器實作的結果。在未來的 Python 版本中，它將成為一個 :exc:"
"`TypeError`。 （由 Josh Rosenberg 在 :issue:`35712` 中貢獻。）"

#: ../../whatsnew/3.9.rst:884
#, fuzzy
msgid ""
"The :mod:`random` module currently accepts any hashable type as a possible "
"seed value.  Unfortunately, some of those types are not guaranteed to have a "
"deterministic hash value.  After Python 3.9, the module will restrict its "
"seeds to :const:`None`, :class:`int`, :class:`float`, :class:`str`, :class:"
"`bytes`, and :class:`bytearray`."
msgstr ""
":mod:`random` 模組目前接受任何可散列型別作為可能的種子值。不幸的是，其中一些"
"型別不能保證具有確定性雜湊值。在 Python 3.9 之後，該模組將其種子限制為："
"const:`None`、:class:`int`、:class:`float`、:class:`str`、:class:`bytes` 和:"
"class: `位元組數組`。"

#: ../../whatsnew/3.9.rst:890
#, fuzzy
msgid ""
"Opening the :class:`~gzip.GzipFile` file for writing without specifying the "
"*mode* argument is deprecated.  In future Python versions it will always be "
"opened for reading by default.  Specify the *mode* argument for opening it "
"for writing and silencing a warning. (Contributed by Serhiy Storchaka in :"
"issue:`28286`.)"
msgstr ""
"打開 :class:`~gzip.GzipFile` 文件進行寫入而不指定 *mode* 參數已被棄用。在未來"
"的 Python 版本中，它將始終預設打開以供閱讀。指定 *mode* 參數以打開它以寫入和"
"靜音警告。 （由 Serhiy Storchaka 在 :issue:`28286` 中貢獻。）"

#: ../../whatsnew/3.9.rst:896
#, fuzzy
msgid ""
"Deprecated the ``split()`` method of :class:`_tkinter.TkappType` in favour "
"of the ``splitlist()`` method which has more consistent and predicable "
"behavior. (Contributed by Serhiy Storchaka in :issue:`38371`.)"
msgstr ""
"棄用了 :class:`_tkinter.TkappType` 的 ``split()`` 方法，取而代之的是具有更一"
"致和可預測行為的 ``splitlist()`` 方法。 （由 Serhiy Storchaka 在 :issue:"
"`38371` 中貢獻。）"

#: ../../whatsnew/3.9.rst:901
#, fuzzy
msgid ""
"The explicit passing of coroutine objects to :func:`asyncio.wait` has been "
"deprecated and will be removed in version 3.11. (Contributed by Yury "
"Selivanov and Kyle Stanley in :issue:`34790`.)"
msgstr ""
"將協程物件顯式傳遞給 :func:`asyncio.wait` 已被棄用，並將在 3.11 版中刪除。 "
"（由 Yury Selivanov 和 Kyle Stanley 在 :issue:`34790` 中貢獻。）"

#: ../../whatsnew/3.9.rst:905
#, fuzzy
msgid ""
"binhex4 and hexbin4 standards are now deprecated. The :mod:`binhex` module "
"and the following :mod:`binascii` functions are now deprecated:"
msgstr ""
"binhex4 和 hexbin4 標準現已棄用。 :mod:`binhex` 模組和以下 :mod:`binascii` 函"
"式現已棄用："

#: ../../whatsnew/3.9.rst:908
msgid ":func:`~binascii.b2a_hqx`, :func:`~binascii.a2b_hqx`"
msgstr ":func:`~binascii.b2a_hqx`\\ 、\\ :func:`~binascii.a2b_hqx`"

#: ../../whatsnew/3.9.rst:909
msgid ":func:`~binascii.rlecode_hqx`, :func:`~binascii.rledecode_hqx`"
msgstr ":func:`~binascii.rlecode_hqx`\\ 、\\ :func:`~binascii.rledecode_hqx`"

#: ../../whatsnew/3.9.rst:911
#, fuzzy
msgid "(Contributed by Victor Stinner in :issue:`39353`.)"
msgstr "（由 Victor Stinner 在 :issue:`39353` 中貢獻。）"

#: ../../whatsnew/3.9.rst:913
#, fuzzy
msgid ""
":mod:`ast` classes ``slice``, ``Index`` and ``ExtSlice`` are considered "
"deprecated and will be removed in future Python versions.  ``value`` itself "
"should be used instead of ``Index(value)``.  ``Tuple(slices, Load())`` "
"should be used instead of ``ExtSlice(slices)``. (Contributed by Serhiy "
"Storchaka in :issue:`34822`.)"
msgstr ""
":mod:`ast` 類 ``slice``、``Index`` 和 ``ExtSlice`` 被認為已棄用，將在未來的 "
"Python 版本中刪除。應該使用``value`` 本身而不是``Index(value)``。應該使用 "
"``Tuple(slices, Load())`` 而不是 ``ExtSlice(slices)``。 （由 Serhiy "
"Storchaka 在 :issue:`34822` 中貢獻。）"

#: ../../whatsnew/3.9.rst:919
#, fuzzy
msgid ""
":mod:`ast` classes ``Suite``, ``Param``, ``AugLoad`` and ``AugStore`` are "
"considered deprecated and will be removed in future Python versions. They "
"were not generated by the parser and not accepted by the code generator in "
"Python 3. (Contributed by Batuhan Taskaya in :issue:`39639` and :issue:"
"`39969` and Serhiy Storchaka in :issue:`39988`.)"
msgstr ""
":mod:`ast` 類 ``Suite``、``Param``、``AugLoad`` 和 ``AugStore`` 被認為已棄"
"用，將在未來的 Python 版本中刪除。它們不是由解析器生成的，也不被 Python 3 中"
"的程式碼生成器接受。（由 Batuhan Taskaya 在 :issue:`39639` 和 :issue:`39969` "
"以及 Serhiy Storchaka 在 :issue:`39988` 中貢獻。）"

#: ../../whatsnew/3.9.rst:926
#, fuzzy
msgid ""
"The :c:func:`PyEval_InitThreads` and :c:func:`PyEval_ThreadsInitialized` "
"functions are now deprecated and will be removed in Python 3.11. Calling :c:"
"func:`PyEval_InitThreads` now does nothing. The :term:`GIL` is initialized "
"by :c:func:`Py_Initialize()` since Python 3.7. (Contributed by Victor "
"Stinner in :issue:`39877`.)"
msgstr ""
":c:func:`PyEval_InitThreads` 和 :c:func:`PyEval_ThreadsInitialized` 函式現已"
"棄用，並將在 Python 3.11 中刪除。呼叫 :c:func:`PyEval_InitThreads` 現在什麼都"
"不做。從 Python 3.7 開始，:term:`GIL` 由:c:func:`Py_Initialize()` 初始化。 "
"（由 Victor Stinner 在 :issue:`39877` 中貢獻。）"

#: ../../whatsnew/3.9.rst:932
#, fuzzy
msgid ""
"Passing ``None`` as the first argument to the :func:`shlex.split` function "
"has been deprecated.  (Contributed by Zackery Spytz in :issue:`33262`.)"
msgstr ""
"將 ``None`` 作為第一個參數傳遞給 :func:`shlex.split` 函式已被棄用。 （由 "
"Zackery Spytz 在 :issue:`33262` 中貢獻。）"

#: ../../whatsnew/3.9.rst:935
#, fuzzy
msgid ""
":func:`smtpd.MailmanProxy` is now deprecated as it is unusable without an "
"external module, ``mailman``.  (Contributed by Samuel Colvin in :issue:"
"`35800`.)"
msgstr ""
":func:`smtpd.MailmanProxy` 現已棄用，因為如果沒有外部模組 ``mailman`` 就無法"
"使用。 （由 Samuel Colvin 在 :issue:`35800` 中貢獻。）"

#: ../../whatsnew/3.9.rst:938
#, fuzzy
msgid ""
"The :mod:`lib2to3` module now emits a :exc:`PendingDeprecationWarning`. "
"Python 3.9 switched to a PEG parser (see :pep:`617`), and Python 3.10 may "
"include new language syntax that is not parsable by lib2to3's LL(1) parser. "
"The ``lib2to3`` module may be removed from the standard library in a future "
"Python version. Consider third-party alternatives such as `LibCST`_ or "
"`parso`_. (Contributed by Carl Meyer in :issue:`40360`.)"
msgstr ""
":mod:`lib2to3` 模組現在發出一個 :exc:`PendingDeprecationWarning`。 Python "
"3.9 切換到 PEG 解析器（參見 :pep:`617`），Python 3.10 可能包含 lib2to3 的 "
"LL(1) 解析器無法解析的新語言語法。在未來的 Python 版本中，``lib2to3`` 模組可"
"能會從標準庫中刪除。考慮第三方替代方案，例如 `LibCST`_ 或 `parso`_。 （由 "
"Carl Meyer 在 :issue:`40360` 中貢獻。）"

#: ../../whatsnew/3.9.rst:946
#, fuzzy
msgid ""
"The *random* parameter of :func:`random.shuffle` has been deprecated. "
"(Contributed by Raymond Hettinger in :issue:`40465`)"
msgstr ""
":func:`random.shuffle` 的 *random* 參數已被棄用。 （由 Raymond Hettinger 在 :"
"issue:`40465` 中貢獻）"

#: ../../whatsnew/3.9.rst:955 ../../whatsnew/3.9.rst:1410
#, fuzzy
msgid "Removed"
msgstr "刪除"

#: ../../whatsnew/3.9.rst:957
#, fuzzy
msgid ""
"The erroneous version at :data:`unittest.mock.__version__` has been removed."
msgstr "unittest.mock.__version__ 處的錯誤版本已被刪除。"

#: ../../whatsnew/3.9.rst:959
#, fuzzy
msgid ""
":class:`nntplib.NNTP`: ``xpath()`` and ``xgtitle()`` methods have been "
"removed. These methods are deprecated since Python 3.3. Generally, these "
"extensions are not supported or not enabled by NNTP server administrators. "
"For ``xgtitle()``, please use :meth:`nntplib.NNTP.descriptions` or :meth:"
"`nntplib.NNTP.description` instead. (Contributed by Dong-hee Na in :issue:"
"`39366`.)"
msgstr ""
":class:`nntplib.NNTP`：``xpath()`` 和 ``xgtitle()`` 方法已被刪除。自 Python "
"3.3 以來，這些方法已被棄用。通常，NNTP 伺服器管理員不支援或不啟用這些擴充。對"
"於 ``xgtitle()``，請改用 :meth:`nntplib.NNTP.descriptions` 或 :meth:`nntplib."
"NNTP.description`。 （由 Dong-hee Na 在 :issue:`39366` 中貢獻。）"

#: ../../whatsnew/3.9.rst:966
#, fuzzy
msgid ""
":class:`array.array`: ``tostring()`` and ``fromstring()`` methods have been "
"removed. They were aliases to ``tobytes()`` and ``frombytes()``, deprecated "
"since Python 3.2. (Contributed by Victor Stinner in :issue:`38916`.)"
msgstr ""
":class:`array.array`：``tostring()`` 和 ``fromstring()`` 方法已被刪除。它們"
"是 ``tobytes()`` 和 ``frombytes()`` 的別名，自 Python 3.2 起已棄用。 （由 "
"Victor Stinner 在 :issue:`38916` 中貢獻。）"

#: ../../whatsnew/3.9.rst:971
#, fuzzy
msgid ""
"The undocumented ``sys.callstats()`` function has been removed. Since Python "
"3.7, it was deprecated and always returned :const:`None`. It required a "
"special build option ``CALL_PROFILE`` which was already removed in Python "
"3.7. (Contributed by Victor Stinner in :issue:`37414`.)"
msgstr ""
"未記錄的 ``sys.callstats()`` 函式已被刪除。自 Python 3.7 起，它已被棄用並始終"
"回傳 :const:`None`。它需要一個特殊的構建選項“CALL_PROFILE”，該選項已在 "
"Python 3.7 中刪除。 （由 Victor Stinner 在 :issue:`37414` 中貢獻。）"

#: ../../whatsnew/3.9.rst:976
#, fuzzy
msgid ""
"The ``sys.getcheckinterval()`` and ``sys.setcheckinterval()`` functions have "
"been removed. They were deprecated since Python 3.2. Use :func:`sys."
"getswitchinterval` and :func:`sys.setswitchinterval` instead. (Contributed "
"by Victor Stinner in :issue:`37392`.)"
msgstr ""
"``sys.getcheckinterval()`` 和 ``sys.setcheckinterval()`` 函式已被刪除。自 "
"Python 3.2 以來，它們已被棄用。使用 :func:`sys.getswitchinterval` 和 :func:"
"`sys.setswitchinterval` 代替。 （由 Victor Stinner 在 :issue:`37392` 中貢"
"獻。）"

#: ../../whatsnew/3.9.rst:981
#, fuzzy
msgid ""
"The C function ``PyImport_Cleanup()`` has been removed. It was documented "
"as: \"Empty the module table.  For internal use only.\" (Contributed by "
"Victor Stinner in :issue:`36710`.)"
msgstr ""
"C 函式``PyImport_Cleanup()`` 已被刪除。它被記錄為：“清空模組表。僅供內部使"
"用。” （由 Victor Stinner 在 :issue:`36710` 中貢獻。）"

#: ../../whatsnew/3.9.rst:985
#, fuzzy
msgid ""
"``_dummy_thread`` and ``dummy_threading`` modules have been removed. These "
"modules were deprecated since Python 3.7 which requires threading support. "
"(Contributed by Victor Stinner in :issue:`37312`.)"
msgstr ""
"``_dummy_thread`` 和 ``dummy_threading`` 模組已被刪除。這些模組自 Python 3.7 "
"開始被棄用，它需要執行緒支援。 （由 Victor Stinner 在 :issue:`37312` 中貢"
"獻。）"

#: ../../whatsnew/3.9.rst:989
#, fuzzy
msgid ""
"``aifc.openfp()`` alias to ``aifc.open()``, ``sunau.openfp()`` alias to "
"``sunau.open()``, and ``wave.openfp()`` alias to :func:`wave.open()` have "
"been removed. They were deprecated since Python 3.7. (Contributed by Victor "
"Stinner in :issue:`37320`.)"
msgstr ""
"``aifc.openfp()`` 是``aifc.open()`` 的別名，``sunau.openfp()`` 是``sunau."
"open()`` 的別名，以及``wave.openfp() `` :func:`wave.open()` 的別名已被刪除。"
"自 Python 3.7 以來，它們已被棄用。 （由 Victor Stinner 在 :issue:`37320` 中貢"
"獻。）"

#: ../../whatsnew/3.9.rst:994
#, fuzzy
msgid ""
"The :meth:`~threading.Thread.isAlive()` method of :class:`threading.Thread` "
"has been removed. It was deprecated since Python 3.8. Use :meth:`~threading."
"Thread.is_alive()` instead. (Contributed by Dong-hee Na in :issue:`37804`.)"
msgstr ""
"threading.Thread 的 :meth:`~threading.Thread.isAlive()` 方法已被刪除。它從 "
"Python 3.8 開始被棄用。使用 :meth:`~threading.Thread.is_alive()` 代替。 （由 "
"Dong-hee Na 在 :issue:`37804` 中貢獻。）"

#: ../../whatsnew/3.9.rst:999
#, fuzzy
msgid ""
"Methods ``getchildren()`` and ``getiterator()`` of classes :class:`~xml."
"etree.ElementTree.ElementTree` and :class:`~xml.etree.ElementTree.Element` "
"in the :mod:`~xml.etree.ElementTree` module have been removed.  They were "
"deprecated in Python 3.2. Use ``iter(x)`` or ``list(x)`` instead of ``x."
"getchildren()`` and ``x.iter()`` or ``list(x.iter())`` instead of ``x."
"getiterator()``. (Contributed by Serhiy Storchaka in :issue:`36543`.)"
msgstr ""
":class:`~xml.etree.ElementTree.ElementTree` 和 :class:`~xml.etree."
"ElementTree.Element` 類的方法``getchildren()`` 和 ``getiterator()`` `~xml."
"etree.ElementTree` 模組已被刪除。它們在 Python 3.2 中被棄用。使用``iter(x)`` "
"或``list(x)`` 而不是``x.getchildren()`` 和``x.iter()`` 或``list(x.iter()) `` "
"而不是 ``x.getiterator()``。 （由 Serhiy Storchaka 在 :issue:`36543` 中貢"
"獻。）"

#: ../../whatsnew/3.9.rst:1007
#, fuzzy
msgid ""
"The old :mod:`plistlib` API has been removed, it was deprecated since Python "
"3.4. Use the :func:`~plistlib.load`, :func:`~plistlib.loads`, :func:"
"`~plistlib.dump`, and :func:`~plistlib.dumps` functions. Additionally, the "
"*use_builtin_types* parameter was removed, standard :class:`bytes` objects "
"are always used instead. (Contributed by Jon Janzen in :issue:`36409`.)"
msgstr ""
"舊的 :mod:`plistlib` API 已被刪除，自 Python 3.4 以來已棄用。使用 :func:"
"`~plistlib.load`、:func:`~plistlib.loads`、:func:`~plistlib.dump` 和 :func:"
"`~plistlib.dumps` 函式。此外，刪除了 *use_builtin_types* 參數，始終使用標準 :"
"class:`bytes` 物件。 （由 Jon Janzen 在 :issue:`36409` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1013
#, fuzzy
msgid ""
"The C function ``PyGen_NeedsFinalizing`` has been removed. It was not "
"documented, tested, or used anywhere within CPython after the implementation "
"of :pep:`442`. Patch by Joannah Nanjekye. (Contributed by Joannah Nanjekye "
"in :issue:`15088`)"
msgstr ""
"C 函式“PyGen_NeedsFinalizing”已被刪除。在 :pep:`442` 實作後，它沒有在 "
"CPython 中的任何地方記錄、測試或使用。 Joannah Nanjekye 的補丁。 （由 "
"Joannah Nanjekye 在 :issue:`15088` 中貢獻）"

#: ../../whatsnew/3.9.rst:1018
#, fuzzy
msgid ""
"``base64.encodestring()`` and ``base64.decodestring()``, aliases deprecated "
"since Python 3.1, have been removed: use :func:`base64.encodebytes` and :"
"func:`base64.decodebytes` instead. (Contributed by Victor Stinner in :issue:"
"`39351`.)"
msgstr ""
"``base64.encodestring()`` 和 ``base64.decodestring()``，自 Python 3.1 以來不"
"推薦使用的別名，已被刪除：改用 :func:`base64.encodebytes` 和 :func:`base64."
"decodebytes`。 （由 Victor Stinner 在 :issue:`39351` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1023
#, fuzzy
msgid ""
"``fractions.gcd()`` function has been removed, it was deprecated since "
"Python 3.5 (:issue:`22486`): use :func:`math.gcd` instead. (Contributed by "
"Victor Stinner in :issue:`39350`.)"
msgstr ""
"``fractions.gcd()`` 函式已被刪除，自 Python 3.5（ :issue:`22486`）以來已棄"
"用：改為使用 :func:`math.gcd`。 （由 Victor Stinner 在 :issue:`39350` 中貢"
"獻。）"

#: ../../whatsnew/3.9.rst:1027
#, fuzzy
msgid ""
"The *buffering* parameter of :class:`bz2.BZ2File` has been removed. Since "
"Python 3.0, it was ignored and using it emitted a :exc:`DeprecationWarning`. "
"Pass an open file object to control how the file is opened. (Contributed by "
"Victor Stinner in :issue:`39357`.)"
msgstr ""
":class:`bz2.BZ2File` 的 *buffering* 參數已被刪除。從 Python 3.0 開始，它被忽"
"略並使用它發出一個 DeprecationWarning。傳遞一個打開的文件物件來控制文件的打開"
"方式。 （由 Victor Stinner 在 :issue:`39357` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1032
#, fuzzy
msgid ""
"The *encoding* parameter of :func:`json.loads` has been removed. As of "
"Python 3.1, it was deprecated and ignored; using it has emitted a :exc:"
"`DeprecationWarning` since Python 3.8. (Contributed by Inada Naoki in :issue:"
"`39377`)"
msgstr ""
":func:`json.loads` 的 *encoding* 參數已被刪除。從 Python 3.1 開始，它被棄用並"
"被忽略；自 Python 3.8 以來，使用它會發出 DeprecationWarning。 （由 Inada "
"Naoki 在 :issue:`39377` 中貢獻）"

#: ../../whatsnew/3.9.rst:1037
#, fuzzy
msgid ""
"``with (await asyncio.lock):`` and ``with (yield from asyncio.lock):`` "
"statements are not longer supported, use ``async with lock`` instead.  The "
"same is correct for ``asyncio.Condition`` and ``asyncio.Semaphore``. "
"(Contributed by Andrew Svetlov in :issue:`34793`.)"
msgstr ""
"不再支援``with (await asyncio.lock):`` 和``with (yield from asyncio.lock):`` "
"語句，請改用``async with lock``。對於 ``asyncio.Condition`` 和 ``asyncio."
"Semaphore`` 也是正確的。 （由 Andrew Svetlov 在 :issue:`34793` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1042
#, fuzzy
msgid ""
"The :func:`sys.getcounts` function, the ``-X showalloccount`` command line "
"option and the ``show_alloc_count`` field of the C structure :c:type:"
"`PyConfig` have been removed. They required a special Python build by "
"defining ``COUNT_ALLOCS`` macro. (Contributed by Victor Stinner in :issue:"
"`39489`.)"
msgstr ""
":func:`sys.getcounts` 函式、``-X showalloccount`` 命令列選項和 C 結構的 "
"``show_alloc_count`` 欄位 :c:type:`PyConfig` 已被刪除。他們需要通過定"
"義“COUNT_ALLOCS”巨集來構建特殊的 Python。 （由 Victor Stinner 在 :issue:"
"`39489` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1048
#, fuzzy
msgid ""
"The ``_field_types`` attribute of the :class:`typing.NamedTuple` class has "
"been removed.  It was deprecated since Python 3.8.  Use the "
"``__annotations__`` attribute instead. (Contributed by Serhiy Storchaka in :"
"issue:`40182`.)"
msgstr ""
"typing.NamedTuple 類的 _field_types 屬性已被刪除。它從 Python 3.8 開始被棄"
"用。請改用 ``__annotations__`` 屬性。 （由 Serhiy Storchaka 在 :issue:"
"`40182` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1053
#, fuzzy
msgid ""
"The :meth:`symtable.SymbolTable.has_exec` method has been removed. It was "
"deprecated since 2006, and only returning ``False`` when it's called. "
"(Contributed by Batuhan Taskaya in :issue:`40208`)"
msgstr ""
":meth:`symtable.SymbolTable.has_exec` 方法已被刪除。它自 2006 年以來已被棄"
"用，並且僅在呼叫時回傳 ``False``。 （由 Batuhan Taskaya 在 :issue:`40208` 中"
"貢獻）"

#: ../../whatsnew/3.9.rst:1057
#, fuzzy
msgid ""
"The :meth:`asyncio.Task.current_task` and :meth:`asyncio.Task.all_tasks` "
"have been removed. They were deprecated since Python 3.7 and you can use :"
"func:`asyncio.current_task` and :func:`asyncio.all_tasks` instead. "
"(Contributed by Rémi Lapeyre in :issue:`40967`)"
msgstr ""
":meth:`asyncio.Task.current_task` 和 :meth:`asyncio.Task.all_tasks` 已被刪"
"除。自 Python 3.7 以來，它們已被棄用，您可以改用 :func:`asyncio."
"current_task` 和 :func:`asyncio.all_tasks`。 （由 Rémi Lapeyre 在 :issue:"
"`40967` 中貢獻）"

#: ../../whatsnew/3.9.rst:1062
#, fuzzy
msgid ""
"The ``unescape()`` method in the :class:`html.parser.HTMLParser` class has "
"been removed (it was deprecated since Python 3.4).  :func:`html.unescape` "
"should be used for converting character references to the corresponding "
"unicode characters."
msgstr ""
":class:`html.parser.HTMLParser` 類中的 ``unescape()`` 方法已被刪除（自 "
"Python 3.4 起已棄用）。 :func:`html.unescape` 應用於將字元引用轉換為相應的 "
"unicode 字元。"

#: ../../whatsnew/3.9.rst:1069 ../../whatsnew/3.9.rst:1336
#, fuzzy
msgid "Porting to Python 3.9"
msgstr "移植到 Python 3.9"

#: ../../whatsnew/3.9.rst:1071
#, fuzzy
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr "本節列出了先前描述的更改和其他可能需要更改程式碼的錯誤修復。"

#: ../../whatsnew/3.9.rst:1076
#, fuzzy
msgid "Changes in the Python API"
msgstr "Python API 的變化"

#: ../../whatsnew/3.9.rst:1078
#, fuzzy
msgid ""
":func:`__import__` and :func:`importlib.util.resolve_name` now raise :exc:"
"`ImportError` where it previously raised :exc:`ValueError`. Callers catching "
"the specific exception type and supporting both Python 3.9 and earlier "
"versions will need to catch both using ``except (ImportError, ValueError):``."
msgstr ""
":func:`__import__` 和 :func:`importlib.util.resolve_name` 現在在之前引發 :"
"exc:`ValueError` 的地方引發 :exc:`ImportError`。捕獲特定例外型別並同時支援 "
"Python 3.9 和更早版本的呼叫者需要使用“except (ImportError, ValueError):”來捕"
"獲兩者。"

#: ../../whatsnew/3.9.rst:1083
#, fuzzy
msgid ""
"The :mod:`venv` activation scripts no longer special-case when "
"``__VENV_PROMPT__`` is set to ``\"\"``."
msgstr ""
"當 `__VENV_PROMPT__`` 設定為 ``\"\"`` 時，:mod:`venv` 激活腳本不再是特殊情"
"況。"

#: ../../whatsnew/3.9.rst:1086
#, fuzzy
msgid ""
"The :meth:`select.epoll.unregister` method no longer ignores the :data:"
"`~errno.EBADF` error. (Contributed by Victor Stinner in :issue:`39239`.)"
msgstr ""
":meth:`select.epoll.unregister` 方法不再忽略 :data:`~errno.EBADF` 錯誤。 "
"（由 Victor Stinner 在 :issue:`39239` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1090
#, fuzzy
msgid ""
"The *compresslevel* parameter of :class:`bz2.BZ2File` became keyword-only, "
"since the *buffering* parameter has been removed. (Contributed by Victor "
"Stinner in :issue:`39357`.)"
msgstr ""
":class:`bz2.BZ2File` 的 *compresslevel* 參數變為僅限關鍵字，因為 *buffering* "
"參數已被刪除。 （由 Victor Stinner 在 :issue:`39357` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1094
#, fuzzy
msgid ""
"Simplified AST for subscription. Simple indices will be represented by their "
"value, extended slices will be represented as tuples. ``Index(value)`` will "
"return a ``value`` itself, ``ExtSlice(slices)`` will return ``Tuple(slices, "
"Load())``. (Contributed by Serhiy Storchaka in :issue:`34822`.)"
msgstr ""
"用於訂閱的簡化 AST。簡單索引將由它們的值表示，擴充切片將表示為元組。 "
"``Index(value)`` 將回傳一個 ``value`` 本身，``ExtSlice(slices)`` 將回傳 "
"``Tuple(slices, Load())``。 （由 Serhiy Storchaka 在 :issue:`34822` 中貢"
"獻。）"

#: ../../whatsnew/3.9.rst:1100
#, fuzzy
msgid ""
"The :mod:`importlib` module now ignores the :envvar:`PYTHONCASEOK` "
"environment variable when the :option:`-E` or :option:`-I` command line "
"options are being used."
msgstr ""
":mod:`importlib` 模組現在在使用 :option:`-E` 或 :option:`-I` 命令列選項時忽"
"略 :envvar:`PYTHONCASEOK` 環境變數。"

#: ../../whatsnew/3.9.rst:1104
#, fuzzy
msgid ""
"The *encoding* parameter has been added to the classes :class:`ftplib.FTP` "
"and :class:`ftplib.FTP_TLS` as a keyword-only parameter, and the default "
"encoding is changed from Latin-1 to UTF-8 to follow :rfc:`2640`."
msgstr ""
"*encoding* 參數已作為僅關鍵字參數新增到類 :class:`ftplib.FTP` 和 :class:"
"`ftplib.FTP_TLS` 中，預設編碼從 Latin-1 更改為 UTF-8 到遵循 :rfc:`2640`。"

#: ../../whatsnew/3.9.rst:1108
#, fuzzy
msgid ""
":meth:`asyncio.loop.shutdown_default_executor` has been added to :class:"
"`~asyncio.AbstractEventLoop`, meaning alternative event loops that inherit "
"from it should have this method defined. (Contributed by Kyle Stanley in :"
"issue:`34037`.)"
msgstr ""
":meth:`asyncio.loop.shutdown_default_executor` 已新增到 :class:`~asyncio."
"AbstractEventLoop`，這意味著從它繼承的替代事件循環應該定義此方法。 （由 Kyle "
"Stanley 在 :issue:`34037` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1113
#, fuzzy
msgid ""
"The constant values of future flags in the :mod:`__future__` module is "
"updated in order to prevent collision with compiler flags. Previously "
"``PyCF_ALLOW_TOP_LEVEL_AWAIT`` was clashing with ``CO_FUTURE_DIVISION``. "
"(Contributed by Batuhan Taskaya in :issue:`39562`)"
msgstr ""
":mod:`__future__` 模組中未來旗標的常數值已更新，以防止與編譯器旗標發生衝突。"
"以前``PyCF_ALLOW_TOP_LEVEL_AWAIT`` 與``CO_FUTURE_DIVISION`` 衝突。 （由 "
"Batuhan Taskaya 在 :issue:`39562` 中貢獻）"

#: ../../whatsnew/3.9.rst:1118
#, fuzzy
msgid ""
"``array('u')`` now uses ``wchar_t`` as C type instead of ``Py_UNICODE``. "
"This change doesn't affect to its behavior because ``Py_UNICODE`` is alias "
"of ``wchar_t`` since Python 3.3. (Contributed by Inada Naoki in :issue:"
"`34538`.)"
msgstr ""
"``array('u')`` 現在使用 ``wchar_t`` 作為 C 型別而不是 ``Py_UNICODE``。此更改"
"不會影響其行為，因為自 Python 3.3 以來，``Py_UNICODE`` 是 ``wchar_t`` 的別"
"名。 （由 Inada Naoki 在 :issue:`34538` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1123
#, fuzzy
msgid ""
"The :func:`logging.getLogger` API now returns the root logger when passed "
"the name ``'root'``, whereas previously it returned a non-root logger named "
"``'root'``. This could affect cases where user code explicitly wants a non-"
"root logger named ``'root'``, or instantiates a logger using ``logging."
"getLogger(__name__)`` in some top-level module called ``'root.py'``. "
"(Contributed by Vinay Sajip in :issue:`37742`.)"
msgstr ""
":func:`logging.getLogger` API 現在在傳遞名稱 ``'root'`` 時回傳根記錄器，而以"
"前它回傳一個名為 ``'root'`` 的非根記錄器。這可能會影響使用者程式碼明確需要一"
"個名為 ``root``的非根記錄器，或者在一些名為 ``root``的頂級模組中使用“logging."
"getLogger(__name__)”實例化記錄器的情況。 py'``。 （由 Vinay Sajip 在 :issue:"
"`37742` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1130
#, fuzzy
msgid ""
"Division handling of :class:`~pathlib.PurePath` now returns "
"``NotImplemented`` instead of raising a :exc:`TypeError` when passed "
"something other than an instance of ``str`` or :class:`~pathlib.PurePath`.  "
"This allows creating compatible classes that don't inherit from those "
"mentioned types. (Contributed by Roger Aiudi in :issue:`34775`)."
msgstr ""
":class:`~pathlib.PurePath` 的除法處理現在回傳 ``NotImplemented`` 而不是在傳"
"遞 ``str`` 或 :class:`~pathlib 實例以外的其他內容時引發 :exc:`TypeError`。純"
"路徑`。這允許建立不從那些提到的型別繼承的相容類。 （由 Roger Aiudi 在 :issue:"
"`34775` 中貢獻）。"

#: ../../whatsnew/3.9.rst:1136
#, fuzzy
msgid ""
"Starting with Python 3.9.5 the :mod:`ipaddress` module no longer accepts any "
"leading zeros in IPv4 address strings. Leading zeros are ambiguous and "
"interpreted as octal notation by some libraries. For example the legacy "
"function :func:`socket.inet_aton` treats leading zeros as octal notatation. "
"glibc implementation of modern :func:`~socket.inet_pton` does not accept any "
"leading zeros. (Contributed by Christian Heimes in :issue:`36384`)."
msgstr ""
"從 Python 3.9.5 開始，:mod:`ipaddress` 模組不再接受 IPv4 地址字串中的任何前導"
"零。前導零是不明確的，並被某些庫解釋為八進位表示法。例如，遺留函式 :func:"
"`socket.inet_aton` 將前導零視為八進位表示法。現代 :func:`~socket.inet_pton` "
"的 glibc 實作不接受任何前導零。 （由 Christian Heimes 在 :issue:`36384` 中貢"
"獻）。"

#: ../../whatsnew/3.9.rst:1144
#, fuzzy
msgid ""
":func:`codecs.lookup` now normalizes the encoding name the same way as :func:"
"`encodings.normalize_encoding`, except that :func:`codecs.lookup` also "
"converts the name to lower case. For example, ``\"latex+latin1\"`` encoding "
"name is now normalized to ``\"latex_latin1\"``. (Contributed by Jordon Xu "
"in :issue:`37751`.)"
msgstr ""
":func:`codecs.lookup` 現在規範化編碼名稱的方式與 :func:`encodings."
"normalize_encoding` 相同，除了 :func:`codecs.lookup` 還將名稱轉換為小寫。例"
"如，``\"latex+latin1\"`` 編碼名稱現在規範化為 ``\"latex_latin1\"``。 （由 "
"Jordon Xu 在 :issue:`37751` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1152
msgid "Changes in the C API"
msgstr "C API 中的改動"

#: ../../whatsnew/3.9.rst:1154
#, fuzzy
msgid ""
"Instances of :ref:`heap-allocated types <heap-types>` (such as those created "
"with :c:func:`PyType_FromSpec` and similar APIs) hold a reference to their "
"type object since Python 3.8. As indicated in the \"Changes in the C API\" "
"of Python 3.8, for the vast majority of cases, there should be no side "
"effect but for types that have a custom :c:member:`~PyTypeObject."
"tp_traverse` function, ensure that all custom ``tp_traverse`` functions of "
"heap-allocated types visit the object's type."
msgstr ""
":ref:`heap-allocated types <heap-types>` 的實例（例如使用 :c:func:"
"`PyType_FromSpec` 和類似 API 建立的實例）自 Python 3.8 以來持有對其型別物件的"
"引用。如 Python 3.8 的“C API 中的更改”所示，對於絕大多數情況，應該沒有副作"
"用，但對於具有自定義 :c:member:`~PyTypeObject.tp_traverse` 函式的型別，請確保"
"堆分配型別的所有自定義“tp_traverse”函式都訪問物件的型別。"

#: ../../whatsnew/3.9.rst:1175
#, fuzzy
msgid ""
"If your traverse function delegates to ``tp_traverse`` of its base class (or "
"another type), ensure that ``Py_TYPE(self)`` is visited only once. Note that "
"only :ref:`heap type <heap-types>` are expected to visit the type in "
"``tp_traverse``."
msgstr ""
"如果您的遍歷函式委託給其基底類別（或其他型別）的``tp_traverse``，請確保僅訪問"
"一次``Py_TYPE(self)``。請注意，只有 :ref:`heap type <heap-types>` 應該訪問 "
"``tp_traverse`` 中的型別。"

#: ../../whatsnew/3.9.rst:1180
#, fuzzy
msgid "For example, if your ``tp_traverse`` function includes:"
msgstr "例如，如果您的 ``tp_traverse`` 函式包括："

#: ../../whatsnew/3.9.rst:1186
#, fuzzy
msgid "then add:"
msgstr "然後加："

#: ../../whatsnew/3.9.rst:1199
msgid "(See :issue:`35810` and :issue:`40217` for more information.)"
msgstr "（更多資訊請見 :issue:`35810` 與 :issue:`40217`\\ 。）"

#: ../../whatsnew/3.9.rst:1201
#, fuzzy
msgid ""
"The functions ``PyEval_CallObject``, ``PyEval_CallFunction``, "
"``PyEval_CallMethod`` and ``PyEval_CallObjectWithKeywords`` are deprecated. "
"Use :c:func:`PyObject_Call` and its variants instead. (See more details in :"
"issue:`29548`.)"
msgstr ""
"函式``PyEval_CallObject``、``PyEval_CallFunction``、``PyEval_CallMethod`` 和"
"``PyEval_CallObjectWithKeywords`` 已棄用。請改用 :c:func:`PyObject_Call` 及其"
"變體。 （在 :issue:`29548` 中查看更多詳細資訊。）"

#: ../../whatsnew/3.9.rst:1207
#, fuzzy
msgid "CPython bytecode changes"
msgstr "CPython 位元組碼更改"

#: ../../whatsnew/3.9.rst:1209
#, fuzzy
msgid ""
"The :opcode:`LOAD_ASSERTION_ERROR` opcode was added for handling the :"
"keyword:`assert` statement. Previously, the assert statement would not work "
"correctly if the :exc:`AssertionError` exception was being shadowed. "
"(Contributed by Zackery Spytz in :issue:`34880`.)"
msgstr ""
"新增了 :opcode:`LOAD_ASSERTION_ERROR` 操作碼來處理 :keyword:`assert` 語句。以"
"前，如果 :exc:`AssertionError` 例外被隱藏，斷言語句將無法正常工作。 （由 "
"Zackery Spytz 在 :issue:`34880` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1214
#, fuzzy
msgid ""
"The :opcode:`COMPARE_OP` opcode was split into four distinct instructions:"
msgstr ":opcode:`COMPARE_OP` 操作碼被分成四個不同的指令："

#: ../../whatsnew/3.9.rst:1216
#, fuzzy
msgid "``COMPARE_OP`` for rich comparisons"
msgstr "``COMPARE_OP`` 用於豐富的比較"

#: ../../whatsnew/3.9.rst:1217
#, fuzzy
msgid "``IS_OP`` for 'is' and 'is not' tests"
msgstr "``IS_OP`` 用於 'is' 和 'is not' 測試"

#: ../../whatsnew/3.9.rst:1218
#, fuzzy
msgid "``CONTAINS_OP`` for 'in' and 'not in' tests"
msgstr "``CONTAINS_OP`` 用於 'in' 和 'not in' 測試"

#: ../../whatsnew/3.9.rst:1219
#, fuzzy
msgid ""
"``JUMP_IF_NOT_EXC_MATCH`` for checking exceptions in 'try-except' statements."
msgstr "``JUMP_IF_NOT_EXC_MATCH`` 用於檢查 ``try-except``語句中的例外。"

#: ../../whatsnew/3.9.rst:1222
#, fuzzy
msgid "(Contributed by Mark Shannon in :issue:`39156`.)"
msgstr "（由 Mark Shannon 在 :issue:`39156` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1226
#, fuzzy
msgid "Build Changes"
msgstr "構建更改"

#: ../../whatsnew/3.9.rst:1228
#, fuzzy
msgid ""
"Added ``--with-platlibdir`` option to the ``configure`` script: name of the "
"platform-specific library directory, stored in the new :attr:`sys."
"platlibdir` attribute. See :attr:`sys.platlibdir` attribute for more "
"information. (Contributed by Jan Matějek, Matěj Cepl, Charalampos Stratakis "
"and Victor Stinner in :issue:`1294959`.)"
msgstr ""
"在 ``configure`` 腳本中新增了 ``--with-platlibdir`` 選項：特定於平台的庫目錄"
"的名稱，儲存在新的 :attr:`sys.platlibdir` 屬性中。有關詳細資訊，請參閱 :attr:"
"`sys.platlibdir` 屬性。 （由 Jan Matějek、Matěj Cepl、Charalampos Stratakis "
"和 Victor Stinner 在 :issue:`1294959` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1234
#, fuzzy
msgid ""
"The ``COUNT_ALLOCS`` special build macro has been removed. (Contributed by "
"Victor Stinner in :issue:`39489`.)"
msgstr ""
"``COUNT_ALLOCS`` 特殊構建巨集已被刪除。 （由 Victor Stinner 在 :issue:"
"`39489` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1237
#, fuzzy
msgid ""
"On non-Windows platforms, the :c:func:`setenv` and :c:func:`unsetenv` "
"functions are now required to build Python. (Contributed by Victor Stinner "
"in :issue:`39395`.)"
msgstr ""
"在非 Windows 平台上，現在需要 :c:func:`setenv` 和 :c:func:`unsetenv` 函式來構"
"建 Python。 （由 Victor Stinner 在 :issue:`39395` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1241
#, fuzzy
msgid ""
"On non-Windows platforms, creating ``bdist_wininst`` installers is now "
"officially unsupported.  (See :issue:`10945` for more details.)"
msgstr ""
"在非 Windows 平台上，現在官方不支援建立 ``bdist_wininst`` 安裝程式。 （有關詳細資"
"訊，請參閱 :issue:`10945`。）"

#: ../../whatsnew/3.9.rst:1244
#, fuzzy
msgid ""
"When building Python on macOS from source, ``_tkinter`` now links with non-"
"system Tcl and Tk frameworks if they are installed in ``/Library/"
"Frameworks``, as had been the case on older releases of macOS. If a macOS "
"SDK is explicitly configured, by using :option:`--enable-universalsdk` or ``-"
"isysroot``, only the SDK itself is searched. The default behavior can still "
"be overridden with ``--with-tcltk-includes`` and ``--with-tcltk-libs``. "
"(Contributed by Ned Deily in :issue:`34956`.)"
msgstr ""
"當從源程式碼在 macOS 上構建 Python 時，``_tkinter`` 現在可以與安裝在 ``/"
"Library/Frameworks`` 中的非系統 Tcl 和 Tk 框架鏈接，就像舊版本的 macOS 一樣。"
"如果通過使用 :option:`--enable-universalsdk` 或``-isysroot`` 顯式配置了 "
"macOS SDK，則僅搜索 SDK 本身。預設行為仍然可以用``--with-tcltk-includes`` 和"
"``--with-tcltk-libs`` 覆蓋。 （由 Ned Deily 在 :issue:`34956` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1253
#, fuzzy
msgid ""
"Python can now be built for Windows 10 ARM64. (Contributed by Steve Dower "
"in :issue:`33125`.)"
msgstr ""
"現在可以為 Windows 10 ARM64 構建 Python。 （由 Steve Dower 在 :issue:`33125` "
"中貢獻。）"

#: ../../whatsnew/3.9.rst:1256
#, fuzzy
msgid ""
"Some individual tests are now skipped when ``--pgo`` is used.  The tests in "
"question increased the PGO task time significantly and likely didn't help "
"improve optimization of the final executable. This speeds up the task by a "
"factor of about 15x.  Running the full unit test suite is slow.  This change "
"may result in a slightly less optimized build since not as many code "
"branches will be executed.  If you are willing to wait for the much slower "
"build, the old behavior can be restored using ``./configure [..] "
"PROFILE_TASK=\"-m test --pgo-extended\"``.  We make no guarantees as to "
"which PGO task set produces a faster build.  Users who care should run their "
"own relevant benchmarks as results can depend on the environment, workload, "
"and compiler tool chain. (See :issue:`36044` and :issue:`37707` for more "
"details.)"
msgstr ""
"當使用 ``--pgo`` 時，現在會跳過一些單獨的測試。有問題的測試顯著增加了 PGO 任"
"務時間，並且可能無助於改進最終可執行文件的最佳化。這將任務速度提高了大約 15 "
"倍。運行完整的單元測試套件很慢。此更改可能會導致構建的最佳化程度略有下降，因"
"為不會執行那麼多程式碼分支。如果您願意等待更慢的構建，可以使用 ``./configure "
"[..] PROFILE_TASK=\"-m test --pgo-extended\"`` 恢復舊行為。我們不保證哪個 "
"PGO 任務集產生更快的構建。關心的使用者應該運行自己的相關基準測試，因為結果可"
"能取決於環境、工作負載和編譯器工具鏈。 （有關詳細資訊，請參閱 :issue:`36044` "
"和 :issue:`37707`。）"

#: ../../whatsnew/3.9.rst:1271
#, fuzzy
msgid "C API Changes"
msgstr "C API 更改"

#: ../../whatsnew/3.9.rst:1276
#, fuzzy
msgid ""
":pep:`573`: Added :c:func:`PyType_FromModuleAndSpec` to associate a module "
"with a class; :c:func:`PyType_GetModule` and :c:func:`PyType_GetModuleState` "
"to retrieve the module and its state; and :c:data:`PyCMethod` and :c:data:"
"`METH_METHOD` to allow a method to access the class it was defined in. "
"(Contributed by Marcel Plch and Petr Viktorin in :issue:`38787`.)"
msgstr ""
":pep:`573`: 新增:c:func:`PyType_FromModuleAndSpec` 將模組與類相關聯； :c:"
"func:`PyType_GetModule` 和 :c:func:`PyType_GetModuleState` 檢索模組及其狀態；"
"和 :c:data:`PyCMethod` 和 :c:data:`METH_METHOD` 允許方法訪問它定義的類。（由 "
"Marcel Plch 和 Petr Viktorin 在 :issue:`38787` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1283
#, fuzzy
msgid ""
"Added :c:func:`PyFrame_GetCode` function: get a frame code. Added :c:func:"
"`PyFrame_GetBack` function: get the frame next outer frame. (Contributed by "
"Victor Stinner in :issue:`40421`.)"
msgstr ""
"新增 :c:func:`PyFrame_GetCode` 函式：獲取幀程式碼。新增 :c:func:"
"`PyFrame_GetBack` 函式：獲取下一個外框的幀。 （由 Victor Stinner 在 :issue:"
"`40421` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1287
#, fuzzy
msgid ""
"Added :c:func:`PyFrame_GetLineNumber` to the limited C API. (Contributed by "
"Victor Stinner in :issue:`40421`.)"
msgstr ""
"將 :c:func:`PyFrame_GetLineNumber` 新增到有限的 C API。 （由 Victor Stinner "
"在 :issue:`40421` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1290
#, fuzzy
msgid ""
"Added :c:func:`PyThreadState_GetInterpreter` and :c:func:"
"`PyInterpreterState_Get` functions to get the interpreter. Added :c:func:"
"`PyThreadState_GetFrame` function to get the current frame of a Python "
"thread state. Added :c:func:`PyThreadState_GetID` function: get the unique "
"identifier of a Python thread state. (Contributed by Victor Stinner in :"
"issue:`39947`.)"
msgstr ""
"新增了:c:func:`PyThreadState_GetInterpreter` 和:c:func:"
"`PyInterpreterState_Get` 函式來獲取直譯器。新增:c:func:"
"`PyThreadState_GetFrame` 函式以獲取 Python 執行緒狀態的當前幀。新增 :c:func:"
"`PyThreadState_GetID` 函式：獲取 Python 執行緒狀態的唯一標識符。 （由 Victor "
"Stinner 在 :issue:`39947` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1298
#, fuzzy
msgid ""
"Added a new public :c:func:`PyObject_CallNoArgs` function to the C API, "
"which calls a callable Python object without any arguments. It is the most "
"efficient way to call a callable Python object without any argument. "
"(Contributed by Victor Stinner in :issue:`37194`.)"
msgstr ""
"向 C API 新增了一個新的 public :c:func:`PyObject_CallNoArgs` 函式，它呼叫一個"
"不帶任何參數的可呼叫 Python 物件。這是不帶任何參數呼叫可呼叫 Python 物件的最"
"有效方法。 （由 Victor Stinner 在 :issue:`37194` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1303 ../../whatsnew/3.9.rst:1421
#, fuzzy
msgid "Changes in the limited C API (if ``Py_LIMITED_API`` macro is defined):"
msgstr "有限 C API 的變化（如果定義了 Py_LIMITED_API 巨集）："

#: ../../whatsnew/3.9.rst:1305
#, fuzzy
msgid ""
"Provide :c:func:`Py_EnterRecursiveCall` and :c:func:`Py_LeaveRecursiveCall` "
"as regular functions for the limited API. Previously, there were defined as "
"macros, but these macros didn't compile with the limited C API which cannot "
"access ``PyThreadState.recursion_depth`` field (the structure is opaque in "
"the limited C API)."
msgstr ""
"提供:c:func:`Py_EnterRecursiveCall` 和 :c:func:"
"`Py_LeaveRecursiveCall` 作為有限 API 的常規函式。以前，有定義為巨集，但這些巨"
"集沒有使用無法訪問 ``PyThreadState.recursion_depth`` 欄位的受限 C API 編譯"
"（該結構在受限 C API 中是不透明的）。"

#: ../../whatsnew/3.9.rst:1311
#, fuzzy
msgid ""
"``PyObject_INIT()`` and ``PyObject_INIT_VAR()`` become regular \"opaque\" "
"function to hide implementation details."
msgstr ""
"``PyObject_INIT()`` 和 ``PyObject_INIT_VAR()`` 成為常規的「不透明」函式以隱藏實"
"作細節。"

#: ../../whatsnew/3.9.rst:1314 ../../whatsnew/3.9.rst:1448
#, fuzzy
msgid "(Contributed by Victor Stinner in :issue:`38644` and :issue:`39542`.)"
msgstr "（由 Victor Stinner 在 :issue:`38644` 和 :issue:`39542` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1316
#, fuzzy
msgid ""
"The :c:func:`PyModule_AddType` function is added to help adding a type to a "
"module. (Contributed by Dong-hee Na in :issue:`40024`.)"
msgstr ""
"新增 :c:func:`PyModule_AddType` 函式以幫助向模組新增型別。 （由 Dong-hee Na "
"在 :issue:`40024` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1320
#, fuzzy
msgid ""
"Added the functions :c:func:`PyObject_GC_IsTracked` and :c:func:"
"`PyObject_GC_IsFinalized` to the public API to allow to query if Python "
"objects are being currently tracked or have been already finalized by the "
"garbage collector respectively. (Contributed by Pablo Galindo Salgado in :"
"issue:`40241`.)"
msgstr ""
"將函式 :c:func:`PyObject_GC_IsTracked` 和 :c:func:`PyObject_GC_IsFinalized` "
"新增到公開 API，以允許分別查詢 Python 物件當前是否正在跟踪或已被垃圾收集器最"
"終確定。 （由 Pablo Galindo Salgado 在 :issue:`40241` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1326
#, fuzzy
msgid ""
"Added :c:func:`_PyObject_FunctionStr` to get a user-friendly string "
"representation of a function-like object. (Patch by Jeroen Demeyer in :issue:"
"`37645`.)"
msgstr ""
"新增 :c:func:`_PyObject_FunctionStr` 以獲取類函式物件的使用者友好字串表示形"
"式。 （Jeroen Demeyer 在 :issue:`37645` 中的補丁。）"

#: ../../whatsnew/3.9.rst:1330
#, fuzzy
msgid ""
"Added :c:func:`PyObject_CallOneArg` for calling an object with one "
"positional argument (Patch by Jeroen Demeyer in :issue:`37483`.)"
msgstr ""
"新增了 :c:func:`PyObject_CallOneArg` 用於呼叫帶有一個位置參數的物件（Jeroen "
"Demeyer 在 :issue:`37483` 中的補丁。）"

#: ../../whatsnew/3.9.rst:1338
#, fuzzy
msgid ""
"``PyInterpreterState.eval_frame`` (:pep:`523`) now requires a new mandatory "
"*tstate* parameter (``PyThreadState*``). (Contributed by Victor Stinner in :"
"issue:`38500`.)"
msgstr ""
"``PyInterpreterState.eval_frame`` (:pep:`523`) 現在需要一個新的強制 *tstate* "
"參數 (``PyThreadState*``)。 （由 Victor Stinner 在 :issue:`38500` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1342
#, fuzzy
msgid ""
"Extension modules: :c:member:`~PyModuleDef.m_traverse`, :c:member:"
"`~PyModuleDef.m_clear` and :c:member:`~PyModuleDef.m_free` functions of :c:"
"type:`PyModuleDef` are no longer called if the module state was requested "
"but is not allocated yet. This is the case immediately after the module is "
"created and before the module is executed (:c:data:`Py_mod_exec` function). "
"More precisely, these functions are not called if :c:member:`~PyModuleDef."
"m_size` is greater than 0 and the module state (as returned by :c:func:"
"`PyModule_GetState`) is ``NULL``."
msgstr ""
"擴充模組：:c:member:`~PyModuleDef.m_traverse`, :c:member:`~PyModuleDef."
"m_clear` 和 :c:member:`~PyModuleDef.m_free` 的函式:c:type:`PyModuleDef` 沒有"
"如果請求了模組狀態但尚未分配，則呼叫時間更長。這是在建立模組之後和執行模組之"
"前立即發生的情況（:c:data:`Py_mod_exec` 函式）。更準確地說，如果 :c:member:"
"`~PyModuleDef.m_size` 大於 0 並且模組狀態（由 :c:func:`PyModule_GetState` 回"
"傳）為 ``NULL``，則不會呼叫這些函式。"

#: ../../whatsnew/3.9.rst:1351
#, fuzzy
msgid ""
"Extension modules without module state (``m_size <= 0``) are not affected."
msgstr "沒有模組狀態（``m_size <= 0``）的擴充模組不受影響。"

#: ../../whatsnew/3.9.rst:1353
#, fuzzy
msgid ""
"If :c:func:`Py_AddPendingCall` is called in a subinterpreter, the function "
"is now scheduled to be called from the subinterpreter, rather than being "
"called from the main interpreter. Each subinterpreter now has its own list "
"of scheduled calls. (Contributed by Victor Stinner in :issue:`39984`.)"
msgstr ""
"如果在子直譯器中呼叫 :c:func:`Py_AddPendingCall`，該函式現在計劃從子直譯器呼"
"叫，而不是從主直譯器呼叫。每個子直譯器現在都有自己的預定呼叫列表。 （由 "
"Victor Stinner 在 :issue:`39984` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1359
#, fuzzy
msgid ""
"The Windows registry is no longer used to initialize :data:`sys.path` when "
"the ``-E`` option is used (if :c:member:`PyConfig.use_environment` is set to "
"``0``). This is significant when embedding Python on Windows. (Contributed "
"by Zackery Spytz in :issue:`8901`.)"
msgstr ""
"當使用 ``-E`` 選項時（如果 :c:member:`PyConfig.use_environment` 設定為 "
"``0``），Windows 註冊表不再用於初始化 :data:`sys.path`。這在 Windows 上嵌入 "
"Python 時非常重要。 （由 Zackery Spytz 在 :issue:`8901` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1364
#, fuzzy
msgid ""
"The global variable :c:data:`PyStructSequence_UnnamedField` is now a "
"constant and refers to a constant string. (Contributed by Serhiy Storchaka "
"in :issue:`38650`.)"
msgstr ""
"全局變數 :c:data:`PyStructSequence_UnnamedField` 現在是常數並引用常數字串。 "
"（由 Serhiy Storchaka 在 :issue:`38650` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1368
#, fuzzy
msgid ""
"The :c:type:`PyGC_Head` structure is now opaque. It is only defined in the "
"internal C API (``pycore_gc.h``). (Contributed by Victor Stinner in :issue:"
"`40241`.)"
msgstr ""
":c:type:`PyGC_Head` 結構現在是不透明的。它僅在內部 C API (``pycore_gc.h``) 中"
"定義。 （由 Victor Stinner 在 :issue:`40241` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1372
#, fuzzy
msgid ""
"The ``Py_UNICODE_COPY``, ``Py_UNICODE_FILL``, ``PyUnicode_WSTR_LENGTH``, :c:"
"func:`PyUnicode_FromUnicode`, :c:func:`PyUnicode_AsUnicode`, "
"``_PyUnicode_AsUnicode``, and :c:func:`PyUnicode_AsUnicodeAndSize` are "
"marked as deprecated in C.  They have been deprecated by :pep:`393` since "
"Python 3.3. (Contributed by Inada Naoki in :issue:`36346`.)"
msgstr ""
"``Py_UNICODE_COPY``、``Py_UNICODE_FILL``、``PyUnicode_WSTR_LENGTH``、:c:func:"
"`PyUnicode_FromUnicode`、:c:func:`PyUnicode_AsUnicode`、"
"``_PyUnicode_AsUnicode`` 和 :c:func:` PyUnicode_AsUnicodeAndSize` 在 C 中被標"
"記為已棄用。自 Python 3.3 以來，它們已被 :pep:`393` 棄用。 （由 Inada Naoki "
"在 :issue:`36346` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1379
#, fuzzy
msgid ""
"The :c:func:`Py_FatalError` function is replaced with a macro which logs "
"automatically the name of the current function, unless the "
"``Py_LIMITED_API`` macro is defined. (Contributed by Victor Stinner in :"
"issue:`39882`.)"
msgstr ""
":c:func:`Py_FatalError` 函式被替換為自動記錄當前函式名稱的巨集，除非定義了 "
"``Py_LIMITED_API`` 巨集。 （由 Victor Stinner 在 :issue:`39882` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1384
#, fuzzy
msgid ""
"The vectorcall protocol now requires that the caller passes only strings as "
"keyword names. (See :issue:`37540` for more information.)"
msgstr ""
"vectorcall 協定現在要求呼叫者僅傳遞字串作為關鍵字名稱。 （有關更多資訊，請參"
"閱 :issue:`37540`。）"

#: ../../whatsnew/3.9.rst:1387
#, fuzzy
msgid ""
"Implementation details of a number of macros and functions are now hidden:"
msgstr "現在隱藏了許多巨集和函式的實作細節："

#: ../../whatsnew/3.9.rst:1389
#, fuzzy
msgid ":c:func:`PyObject_IS_GC` macro was converted to a function."
msgstr ":c:func:`PyObject_IS_GC` 巨集已轉換為函式。"

#: ../../whatsnew/3.9.rst:1391
#, fuzzy
msgid ""
"The :c:func:`PyObject_NEW` macro becomes an alias to the :c:func:"
"`PyObject_New` macro, and the :c:func:`PyObject_NEW_VAR` macro becomes an "
"alias to the :c:func:`PyObject_NewVar` macro. They no longer access directly "
"the :c:member:`PyTypeObject.tp_basicsize` member."
msgstr ""
":c:func:`PyObject_NEW` 巨集成為 :c:func:`PyObject_New` 巨集的別名，而 :c:"
"func:`PyObject_NEW_VAR` 巨集成為 :c:func:`PyObject_NewVar` 巨集的別名.他們不"
"再直接訪問 :c:member:`PyTypeObject.tp_basicsize` 成員。"

#: ../../whatsnew/3.9.rst:1396
#, fuzzy
msgid ""
":c:func:`PyObject_GET_WEAKREFS_LISTPTR` macro was converted to a function: "
"the macro accessed directly the :c:member:`PyTypeObject.tp_weaklistoffset` "
"member."
msgstr ""
":c:func:`PyObject_GET_WEAKREFS_LISTPTR` 巨集被轉換為函式：巨集直接訪問 :c:"
"member:`PyTypeObject.tp_weaklistoffset` 成員。"

#: ../../whatsnew/3.9.rst:1400
#, fuzzy
msgid ""
":c:func:`PyObject_CheckBuffer` macro was converted to a function: the macro "
"accessed directly the :c:member:`PyTypeObject.tp_as_buffer` member."
msgstr ""
":c:func:`PyObject_CheckBuffer` 巨集被轉換為函式：巨集直接訪問 :c:member:"
"`PyTypeObject.tp_as_buffer` 成員。"

#: ../../whatsnew/3.9.rst:1403
#, fuzzy
msgid ""
":c:func:`PyIndex_Check` is now always declared as an opaque function to hide "
"implementation details: removed the ``PyIndex_Check()`` macro. The macro "
"accessed directly the :c:member:`PyTypeObject.tp_as_number` member."
msgstr ""
":c:func:`PyIndex_Check` 現在始終聲明為不透明函式以隱藏實作細節：刪除了 "
"``PyIndex_Check()`` 巨集。巨集直接訪問 :c:member:`PyTypeObject.tp_as_number` "
"成員。"

#: ../../whatsnew/3.9.rst:1407
msgid "(See :issue:`40170` for more details.)"
msgstr "（更多資訊請見 :issue:`40170`\\ 。）"

#: ../../whatsnew/3.9.rst:1412
#, fuzzy
msgid ""
"Excluded ``PyFPE_START_PROTECT()`` and ``PyFPE_END_PROTECT()`` macros of "
"``pyfpe.h`` from the limited C API. (Contributed by Victor Stinner in :issue:"
"`38835`.)"
msgstr ""
"從有限的 C API 中排除了``pyfpe.h`` 的``PyFPE_START_PROTECT()`` 和"
"``PyFPE_END_PROTECT()`` 巨集。 （由 Victor Stinner 在 :issue:`38835` 中貢"
"獻。）"

#: ../../whatsnew/3.9.rst:1416
#, fuzzy
msgid ""
"The ``tp_print`` slot of :ref:`PyTypeObject <type-structs>` has been "
"removed. It was used for printing objects to files in Python 2.7 and before. "
"Since Python 3.0, it has been ignored and unused. (Contributed by Jeroen "
"Demeyer in :issue:`36974`.)"
msgstr ""
":ref:`PyTypeObject <type-structs>` 的``tp_print`` 插槽已被刪除。它用於將對像"
"印出到 Python 2.7 及之前的文件中。自 Python 3.0 以來，它一直被忽略和未被使"
"用。 （由 Jeroen Demeyer 在 :issue:`36974` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1423
#, fuzzy
msgid "Excluded the following functions from the limited C API:"
msgstr "從有限的 C API 中排除了以下函式："

#: ../../whatsnew/3.9.rst:1425
#, fuzzy
msgid ""
"``PyThreadState_DeleteCurrent()`` (Contributed by Joannah Nanjekye in :issue:"
"`37878`.)"
msgstr ""
"``PyThreadState_DeleteCurrent()``（由 Joannah Nanjekye 在 :issue:`37878` 中貢"
"獻。）"

#: ../../whatsnew/3.9.rst:1427
msgid "``_Py_CheckRecursionLimit``"
msgstr "``_Py_CheckRecursionLimit``"

#: ../../whatsnew/3.9.rst:1428
msgid "``_Py_NewReference()``"
msgstr "``_Py_NewReference()``"

#: ../../whatsnew/3.9.rst:1429
msgid "``_Py_ForgetReference()``"
msgstr "``_Py_ForgetReference()``"

#: ../../whatsnew/3.9.rst:1430
msgid "``_PyTraceMalloc_NewReference()``"
msgstr "``_PyTraceMalloc_NewReference()``"

#: ../../whatsnew/3.9.rst:1431
msgid "``_Py_GetRefTotal()``"
msgstr "``_Py_GetRefTotal()``"

#: ../../whatsnew/3.9.rst:1432
#, fuzzy
msgid "The trashcan mechanism which never worked in the limited C API."
msgstr "在有限的 C API 中從未工作過的垃圾桶機制。"

#: ../../whatsnew/3.9.rst:1433
msgid "``PyTrash_UNWIND_LEVEL``"
msgstr "``PyTrash_UNWIND_LEVEL``"

#: ../../whatsnew/3.9.rst:1434
msgid "``Py_TRASHCAN_BEGIN_CONDITION``"
msgstr "``Py_TRASHCAN_BEGIN_CONDITION``"

#: ../../whatsnew/3.9.rst:1435
msgid "``Py_TRASHCAN_BEGIN``"
msgstr "``Py_TRASHCAN_BEGIN``"

#: ../../whatsnew/3.9.rst:1436
msgid "``Py_TRASHCAN_END``"
msgstr "``Py_TRASHCAN_END``"

#: ../../whatsnew/3.9.rst:1437
msgid "``Py_TRASHCAN_SAFE_BEGIN``"
msgstr "``Py_TRASHCAN_SAFE_BEGIN``"

#: ../../whatsnew/3.9.rst:1438
msgid "``Py_TRASHCAN_SAFE_END``"
msgstr "``Py_TRASHCAN_SAFE_END``"

#: ../../whatsnew/3.9.rst:1440
#, fuzzy
msgid "Moved following functions and definitions to the internal C API:"
msgstr "將以下函式和定義移至內部 C API："

#: ../../whatsnew/3.9.rst:1442
msgid "``_PyDebug_PrintTotalRefs()``"
msgstr "``_PyDebug_PrintTotalRefs()``"

#: ../../whatsnew/3.9.rst:1443
msgid "``_Py_PrintReferences()``"
msgstr "``_Py_PrintReferences()``"

#: ../../whatsnew/3.9.rst:1444
msgid "``_Py_PrintReferenceAddresses()``"
msgstr "``_Py_PrintReferenceAddresses()``"

#: ../../whatsnew/3.9.rst:1445
msgid "``_Py_tracemalloc_config``"
msgstr "``_Py_tracemalloc_config``"

#: ../../whatsnew/3.9.rst:1446
#, fuzzy
msgid "``_Py_AddToAllObjects()`` (specific to ``Py_TRACE_REFS`` build)"
msgstr "``_Py_AddToAllObjects()``（特定於 ``Py_TRACE_REFS`` 構建）"

#: ../../whatsnew/3.9.rst:1450
#, fuzzy
msgid ""
"Removed ``_PyRuntime.getframe`` hook and removed ``_PyThreadState_GetFrame`` "
"macro which was an alias to ``_PyRuntime.getframe``. They were only exposed "
"by the internal C API. Removed also ``PyThreadFrameGetter`` type. "
"(Contributed by Victor Stinner in :issue:`39946`.)"
msgstr ""
"刪除了``_PyRuntime.getframe`` 掛鉤並刪除了``_PyThreadState_GetFrame`` 巨集，"
"它是``_PyRuntime.getframe`` 的別名。它們僅由內部 C API 公開。還刪除了 "
"``PyThreadFrameGetter`` 型別。 （由 Victor Stinner 在 :issue:`39946` 中貢"
"獻。）"

#: ../../whatsnew/3.9.rst:1455
#, fuzzy
msgid ""
"Removed the following functions from the C API. Call :c:func:`PyGC_Collect` "
"explicitly to clear all free lists. (Contributed by Inada Naoki and Victor "
"Stinner in :issue:`37340`, :issue:`38896` and :issue:`40428`.)"
msgstr ""
"從 C API 中刪除了以下函式。顯式呼叫 :c:func:`PyGC_Collect` 以清除所有空閒列"
"表。 （由 Inada Naoki 和 Victor Stinner 在 :issue:`37340`、:issue:`38896` "
"和 :issue:`40428` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1460
msgid "``PyAsyncGen_ClearFreeLists()``"
msgstr "``PyAsyncGen_ClearFreeLists()``"

#: ../../whatsnew/3.9.rst:1461
msgid "``PyContext_ClearFreeList()``"
msgstr "``PyContext_ClearFreeList()``"

#: ../../whatsnew/3.9.rst:1462
msgid "``PyDict_ClearFreeList()``"
msgstr "``PyDict_ClearFreeList()``"

#: ../../whatsnew/3.9.rst:1463
msgid "``PyFloat_ClearFreeList()``"
msgstr "``PyFloat_ClearFreeList()``"

#: ../../whatsnew/3.9.rst:1464
msgid "``PyFrame_ClearFreeList()``"
msgstr "``PyFrame_ClearFreeList()``"

#: ../../whatsnew/3.9.rst:1465
msgid "``PyList_ClearFreeList()``"
msgstr "``PyList_ClearFreeList()``"

#: ../../whatsnew/3.9.rst:1466
#, fuzzy
msgid ""
"``PyMethod_ClearFreeList()`` and ``PyCFunction_ClearFreeList()``: the free "
"lists of bound method objects have been removed."
msgstr ""
"``PyMethod_ClearFreeList()`` 和 ``PyCFunction_ClearFreeList()``：綁定方法物件"
"的空閒列表已被刪除。"

#: ../../whatsnew/3.9.rst:1468
#, fuzzy
msgid ""
"``PySet_ClearFreeList()``: the set free list has been removed in Python 3.4."
msgstr "``PySet_ClearFreeList()``：已在 Python 3.4 中刪除了設定空閒列表。"

#: ../../whatsnew/3.9.rst:1470
msgid "``PyTuple_ClearFreeList()``"
msgstr "``PyTuple_ClearFreeList()``"

#: ../../whatsnew/3.9.rst:1471
#, fuzzy
msgid ""
"``PyUnicode_ClearFreeList()``: the Unicode free list has been removed in "
"Python 3.3."
msgstr "``PyUnicode_ClearFreeList()``：Python 3.3 中刪除了 Unicode 空閒列表。"

#: ../../whatsnew/3.9.rst:1474
#, fuzzy
msgid ""
"Removed ``_PyUnicode_ClearStaticStrings()`` function. (Contributed by Victor "
"Stinner in :issue:`39465`.)"
msgstr ""
"刪除了``_PyUnicode_ClearStaticStrings()`` 函式。 （由 Victor Stinner 在 :"
"issue:`39465` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1477
#, fuzzy
msgid ""
"Removed ``Py_UNICODE_MATCH``. It has been deprecated by :pep:`393`, and "
"broken since Python 3.3. The :c:func:`PyUnicode_Tailmatch` function can be "
"used instead. (Contributed by Inada Naoki in :issue:`36346`.)"
msgstr ""
"刪除了``Py_UNICODE_MATCH``。它已被 :pep:`393` 棄用，並從 Python 3.3 開始被破"
"壞。可以改用:c:func:`PyUnicode_Tailmatch` 函式。 （由 Inada Naoki 在 :issue:"
"`36346` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1482
#, fuzzy
msgid ""
"Cleaned header files of interfaces defined but with no implementation. The "
"public API symbols being removed are: "
"``_PyBytes_InsertThousandsGroupingLocale``, "
"``_PyBytes_InsertThousandsGrouping``, ``_Py_InitializeFromArgs``, "
"``_Py_InitializeFromWideArgs``, ``_PyFloat_Repr``, ``_PyFloat_Digits``, "
"``_PyFloat_DigitsInit``, ``PyFrame_ExtendStack``, ``_PyAIterWrapper_Type``, "
"``PyNullImporter_Type``, ``PyCmpWrapper_Type``, ``PySortWrapper_Type``, "
"``PyNoArgsFunction``. (Contributed by Pablo Galindo Salgado in :issue:"
"`39372`.)"
msgstr ""
"清除已定義但沒有實作的介面的標頭檔。被刪除的公開 API 符號是："
"``_PyBytes_InsertThousandsGroupingLocale``、"
"``_PyBytes_InsertThousandsGrouping``、``_Py_InitializeFromArgs``、"
"``_Py_InitializeFromWideArgs``、``_PyFloat_Repr``、``_PyFloat_Digits``、``_P "
"yFloat_DigitsInit``, ``PyFrame_ExtendStack``、``_PyAIterWrapper_Type``、"
"``PyNullImporter_Type``、``PyCmpWrapper_Type``、``PySortWrapper_Type``、"
"``PyNoArgsFunction``。 （由 Pablo Galindo Salgado 在 :issue:`39372` 中貢"
"獻。）"

#: ../../whatsnew/3.9.rst:1493
#, fuzzy
msgid "Notable changes in Python 3.9.1"
msgstr "Python 3.9.1 中的顯著變化"

#: ../../whatsnew/3.9.rst:1498
#, fuzzy
msgid ""
"The behavior of :class:`typing.Literal` was changed to conform with :pep:"
"`586` and to match the behavior of static type checkers specified in the PEP."
msgstr ""
":class:`typing.Literal` 的行為已更改為符合 :pep:`586` 並匹配 PEP 中指定的靜態"
"型別檢查器的行為。"

#: ../../whatsnew/3.9.rst:1501
#, fuzzy
msgid "``Literal`` now de-duplicates parameters."
msgstr "``Literal`` 現在刪除重複參數。"

#: ../../whatsnew/3.9.rst:1502
#, fuzzy
msgid ""
"Equality comparisons between ``Literal`` objects are now order independent."
msgstr "``Literal`` 物件之間的相等比較現在與順序無關。"

#: ../../whatsnew/3.9.rst:1503
#, fuzzy
msgid ""
"``Literal`` comparisons now respect types.  For example, ``Literal[0] == "
"Literal[False]`` previously evaluated to ``True``.  It is now ``False``.  To "
"support this change, the internally used type cache now supports "
"differentiating types."
msgstr ""
"``Literal`` 比較現在尊重型別。例如，``Literal[0] == Literal[False]`` 先前評估"
"為 ``True``。現在是 ``False``。為了支援這一變化，內部使用的型別快取現在支援區"
"分型別。"

#: ../../whatsnew/3.9.rst:1507
#, fuzzy
msgid ""
"``Literal`` objects will now raise a :exc:`TypeError` exception during "
"equality comparisons if any of their parameters are not :term:`hashable`. "
"Note that declaring ``Literal`` with mutable parameters will not throw an "
"error::"
msgstr ""
"``Literal`` 物件現在將在相等比較期間引發 :exc:`TypeError` 例外，如果它們的任"
"何參數不是 :term:`hashable`。請注意，使用可變參數聲明 ``Literal`` 不會引發錯"
"誤::"

#: ../../whatsnew/3.9.rst:1519
#, fuzzy
msgid "(Contributed by Yurii Karabas in :issue:`42345`.)"
msgstr "（由 Yurii Karabas 在 :issue:`42345` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1522
#, fuzzy
msgid "macOS 11.0 (Big Sur) and Apple Silicon Mac support"
msgstr "macOS 11.0 (Big Sur) 和 Apple Silicon Mac 支援"

#: ../../whatsnew/3.9.rst:1524
#, fuzzy
msgid ""
"As of 3.9.1, Python now fully supports building and running on macOS 11.0 "
"(Big Sur) and on Apple Silicon Macs (based on the ``ARM64`` architecture). A "
"new universal build variant, ``universal2``, is now available to natively "
"support both ``ARM64`` and ``Intel 64`` in one set of executables. Binaries "
"can also now be built on current versions of macOS to be deployed on a range "
"of older macOS versions (tested to 10.9) while making some newer OS "
"functions and options conditionally available based on the operating system "
"version in use at runtime (\"weaklinking\")."
msgstr ""
"從 3.9.1 開始，Python 現在完全支援在 macOS 11.0 (Big Sur) 和 Apple Silicon "
"Macs（基於 ``ARM64`` 架構）上構建和運行。一個新的通用構建變體 ``universal2``"
"現在可用於在一組可執行文件中原生支援 ``ARM64``和“Intel 64”。二進位文件現在也"
"可以在當前版本的 macOS 上構建，以部署在一系列較舊的 macOS 版本（測試到 10.9）"
"上，同時根據運行時使用的操作系統版本（“弱鏈接”）使一些較新的操作系統功能和選"
"項有條件地可用)."

#: ../../whatsnew/3.9.rst:1533
#, fuzzy
msgid "(Contributed by Ronald Oussoren and Lawrence D'Anna in :issue:`41100`.)"
msgstr "（由 Ronald Oussoren 和 Lawrence D'Anna 在 :issue:`41100` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1536
#, fuzzy
msgid "Notable changes in Python 3.9.2"
msgstr "Python 3.9.2 中的顯著變化"

#: ../../whatsnew/3.9.rst:1539
msgid "collections.abc"
msgstr "collections.abc"

#: ../../whatsnew/3.9.rst:1541
#, fuzzy
msgid ""
":class:`collections.abc.Callable` generic now flattens type parameters, "
"similar to what :data:`typing.Callable` currently does.  This means that "
"``collections.abc.Callable[[int, str], str]`` will have ``__args__`` of "
"``(int, str, str)``; previously this was ``([int, str], str)``.  To allow "
"this change, :class:`types.GenericAlias` can now be subclassed, and a "
"subclass will be returned when subscripting the :class:`collections.abc."
"Callable` type. Code which accesses the arguments via :func:`typing."
"get_args` or ``__args__`` need to account for this change.  A :exc:"
"`DeprecationWarning` may be emitted for invalid forms of parameterizing :"
"class:`collections.abc.Callable` which may have passed silently in Python "
"3.9.1.  This :exc:`DeprecationWarning` will become a :exc:`TypeError` in "
"Python 3.10. (Contributed by Ken Jin in :issue:`42195`.)"
msgstr ""
":class:`collections.abc.Callable` 泛型現在扁平化型別參數，類似於 :data:"
"`typing.Callable` 目前所做的。這意味著 ``collections.abc.Callable[[int, "
"str], str]`` 將有 ``__args__`` of ``(int, str, str)``；以前這是``([int, "
"str], str)``。為了允許此更改，現在可以對 types.GenericAlias 進行子類別化，並"
"且在下標 collections.abc.Callable 型別時將回傳一個子類別。通過 :func:`typing."
"get_args` 或 ``__args__`` 訪問參數的程式碼需要考慮到這一變化。 :exc:"
"`DeprecationWarning` 可能會針對無效形式的參數化 :class:`collections.abc."
"Callable` 發出，這可能已在 Python 3.9.1 中靜默通過。這個 :exec:"
"`DeprecationWarning` 將在 Python 3.10 中成為 :exec:`TypeError`。 （由 Ken "
"Jin 在 :issue:`42195` 中貢獻。）"

#: ../../whatsnew/3.9.rst:1555
msgid "urllib.parse"
msgstr "urllib.parse"

#: ../../whatsnew/3.9.rst:1557
#, fuzzy
msgid ""
"Earlier Python versions allowed using both ``;`` and ``&`` as query "
"parameter separators in :func:`urllib.parse.parse_qs` and :func:`urllib."
"parse.parse_qsl`.  Due to security concerns, and to conform with newer W3C "
"recommendations, this has been changed to allow only a single separator key, "
"with ``&`` as the default.  This change also affects :func:`cgi.parse` and :"
"func:`cgi.parse_multipart` as they use the affected functions internally. "
"For more details, please see their respective documentation. (Contributed by "
"Adam Goldschmidt, Senthil Kumaran and Ken Jin in :issue:`42967`.)"
msgstr ""
"早期的 Python 版本允許在 :func:`urllib.parse.parse_qs` 和 :func:`urllib."
"parse.parse_qsl` 中同時使用 ``;`` 和 ``&`` 作為查詢參數分隔符。出於安全考慮，"
"並為了符合更新的 W3C 建議，這已更改為僅允許單個分隔鍵，預設為 ``&``。此更改還"
"會影響 :func:`cgi.parse` 和 :func:`cgi.parse_multipart`，因為它們在內部使用受"
"影響的函式。有關詳細資訊，請參閱各自的文檔。 （由 Adam Goldschmidt、Senthil "
"Kumaran 和 Ken Jin 在 :issue:`42967` 中貢獻。）"

#~ msgid "Release"
#~ msgstr "發行版本"

#~ msgid "|release|"
#~ msgstr "|release|"

#~ msgid "Date"
#~ msgstr "日期"

#~ msgid "|today|"
#~ msgstr "|today|"
