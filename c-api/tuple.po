# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Leon H., 2017
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-15 20:43+0000\n"
"PO-Revision-Date: 2023-05-02 17:20+0800\n"
"Last-Translator: Matt Wang <mattwang44@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.2.2\n"

#: ../../c-api/tuple.rst:6
msgid "Tuple Objects"
msgstr "元組物件 (Tuple Objects)"

#: ../../c-api/tuple.rst:13
#, fuzzy
msgid "This subtype of :c:type:`PyObject` represents a Python tuple object."
msgstr ":c:type:`PyObject` 的這個子型別表示一個 Python 元組物件。"

#: ../../c-api/tuple.rst:18
#, fuzzy
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python tuple type; it "
"is the same object as :class:`tuple` in the Python layer."
msgstr ""
":c:type:`PyTypeObject` 的這個實例表示 Python 元組型別；它與 Python 層中的 :"
"class:`tuple` 是同一個物件。"

#: ../../c-api/tuple.rst:24
#, fuzzy
msgid ""
"Return true if *p* is a tuple object or an instance of a subtype of the "
"tuple type.  This function always succeeds."
msgstr ""
"如果 *p* 是元組對像或元組型別的子型別的實例，則回傳 true。這個函式總是成功"
"的。"

#: ../../c-api/tuple.rst:30
#, fuzzy
msgid ""
"Return true if *p* is a tuple object, but not an instance of a subtype of "
"the tuple type.  This function always succeeds."
msgstr ""
"如果 *p* 是元組物件，但不是元組型別的子型別的實例，則回傳 true。這個函式總是"
"成功的。"

#: ../../c-api/tuple.rst:36
#, fuzzy
msgid "Return a new tuple object of size *len*, or ``NULL`` on failure."
msgstr "回傳一個大小為 *len* 的新元組物件，或者在失敗時回傳 ``NULL``。"

#: ../../c-api/tuple.rst:41
#, fuzzy
msgid ""
"Return a new tuple object of size *n*, or ``NULL`` on failure. The tuple "
"values are initialized to the subsequent *n* C arguments pointing to Python "
"objects. ``PyTuple_Pack(2, a, b)`` is equivalent to "
"``Py_BuildValue(\"(OO)\", a, b)``."
msgstr ""
"回傳一個大小為 *n* 的新元組物件，或者在失敗時回傳 ``NULL``。元組值被初始化為"
"指向 Python 物件的後續 *n* C 參數。 ``PyTuple_Pack(2, a, b)`` 等同於 "
"``Py_BuildValue(\"(OO)\", a, b)``。"

#: ../../c-api/tuple.rst:48
#, fuzzy
msgid "Take a pointer to a tuple object, and return the size of that tuple."
msgstr "獲取指向元組物件的指標，並回傳該元組的大小。"

#: ../../c-api/tuple.rst:53
#, fuzzy
msgid ""
"Return the size of the tuple *p*, which must be non-``NULL`` and point to a "
"tuple; no error checking is performed."
msgstr ""
"回傳元組 *p* 的大小，它必須是非 ``NULL`` 並指向一個元組；不執行錯誤檢查。"

#: ../../c-api/tuple.rst:59
#, fuzzy
msgid ""
"Return the object at position *pos* in the tuple pointed to by *p*.  If "
"*pos* is negative or out of bounds, return ``NULL`` and set an :exc:"
"`IndexError` exception."
msgstr ""
"回傳 *p* 指向的元組中位置 *pos* 處的物件。如果 *pos* 為負數或超出範圍，則回"
"傳 NULL 並設定一個 IndexError 例外。"

#: ../../c-api/tuple.rst:65
#, fuzzy
msgid "Like :c:func:`PyTuple_GetItem`, but does no checking of its arguments."
msgstr "類似於 :c:func:`PyTuple_GetItem`，但不檢查其參數。"

#: ../../c-api/tuple.rst:70
#, fuzzy
msgid ""
"Return the slice of the tuple pointed to by *p* between *low* and *high*, or "
"``NULL`` on failure.  This is the equivalent of the Python expression "
"``p[low:high]``.  Indexing from the end of the list is not supported."
msgstr ""
"回傳 *p* 指向的元組在 *low* 和 *high* 之間的切片，或者在失敗時回傳 ``NULL``。"
"這相當於 Python 表達式``p[low:high]``。不支援從列表末尾開始索引。"

#: ../../c-api/tuple.rst:77
#, fuzzy
msgid ""
"Insert a reference to object *o* at position *pos* of the tuple pointed to "
"by *p*.  Return ``0`` on success.  If *pos* is out of bounds, return ``-1`` "
"and set an :exc:`IndexError` exception."
msgstr ""
"在 *p* 指向的元組的位置 *pos* 處插入對物件 *o* 的引用。成功回傳 ``0``。如果 "
"*pos* 超出範圍，回傳 ``-1`` 並設定一個 :exc:`IndexError` 例外。"

#: ../../c-api/tuple.rst:83
#, fuzzy
msgid ""
"This function \"steals\" a reference to *o* and discards a reference to an "
"item already in the tuple at the affected position."
msgstr "此函式“竊取”對 *o* 的引用並丟棄對受影響位置元組中已有項目的引用。"

#: ../../c-api/tuple.rst:89
#, fuzzy
msgid ""
"Like :c:func:`PyTuple_SetItem`, but does no error checking, and should "
"*only* be used to fill in brand new tuples."
msgstr ""
"類似於 :c:func:`PyTuple_SetItem`，但不進行錯誤檢查，並且應該*僅*用於填充全新"
"的元組。"

#: ../../c-api/tuple.rst:94
#, fuzzy
msgid ""
"This function \"steals\" a reference to *o*, and, unlike :c:func:"
"`PyTuple_SetItem`, does *not* discard a reference to any item that is being "
"replaced; any reference in the tuple at position *pos* will be leaked."
msgstr ""
"此函式“竊取”對 *o* 的引用，並且與 PyTuple_SetItem 不同，*不會*丟棄對任何被替"
"換項的引用；元組中位置 *pos* 的任何引用都將被洩露。"

#: ../../c-api/tuple.rst:102
#, fuzzy
msgid ""
"Can be used to resize a tuple.  *newsize* will be the new length of the "
"tuple. Because tuples are *supposed* to be immutable, this should only be "
"used if there is only one reference to the object.  Do *not* use this if the "
"tuple may already be known to some other part of the code.  The tuple will "
"always grow or shrink at the end.  Think of this as destroying the old tuple "
"and creating a new one, only more efficiently.  Returns ``0`` on success. "
"Client code should never assume that the resulting value of ``*p`` will be "
"the same as before calling this function. If the object referenced by ``*p`` "
"is replaced, the original ``*p`` is destroyed.  On failure, returns ``-1`` "
"and sets ``*p`` to ``NULL``, and raises :exc:`MemoryError` or :exc:"
"`SystemError`."
msgstr ""
"可用於調整元組的大小。 *newsize* 將是元組的新長度。因為元組*應該*是不可變的，"
"所以只有在對像只有一個引用時才應該使用它。如果程式碼的其他部分可能已經知道元"
"組，請*不要*使用它。元組總是會在最後增長或收縮。將此視為銷毀舊元組並建立新元"
"組，只是效率更高。成功回傳 ``0``。客戶端程式碼不應該假定 ``*p`` 的結果值與呼"
"叫此函式之前相同。如果替換了``*p`` 引用的物件，則原來的``*p`` 被銷毀。失敗"
"時，回傳 ``-1`` 並將 ``*p`` 設定為 ``NULL``，並引發 :exc:`MemoryError` 或 :"
"exc:`SystemError`。"

#: ../../c-api/tuple.rst:115
#, fuzzy
msgid "Struct Sequence Objects"
msgstr "結構序列物件"

#: ../../c-api/tuple.rst:117
#, fuzzy
msgid ""
"Struct sequence objects are the C equivalent of :func:`~collections."
"namedtuple` objects, i.e. a sequence whose items can also be accessed "
"through attributes. To create a struct sequence, you first have to create a "
"specific struct sequence type."
msgstr ""
"結構序列對像是 :func:`~collections.namedtuple` 物件的 C 等價物，即一個序列，"
"其項目也可以通過屬性訪問。要建立結構序列，您首先必須建立特定的結構序列型別。"

#: ../../c-api/tuple.rst:124
#, fuzzy
msgid ""
"Create a new struct sequence type from the data in *desc*, described below. "
"Instances of the resulting type can be created with :c:func:"
"`PyStructSequence_New`."
msgstr ""
"從 *desc* 中的資料建立一個新的結構序列型別，如下所述。結果型別的實例可以使用 "
"PyStructSequence_New 建立。"

#: ../../c-api/tuple.rst:130
#, fuzzy
msgid "Initializes a struct sequence type *type* from *desc* in place."
msgstr "從 *desc* 就地初始化一個結構序列型別 *type*。"

#: ../../c-api/tuple.rst:135
#, fuzzy
msgid ""
"The same as ``PyStructSequence_InitType``, but returns ``0`` on success and "
"``-1`` on failure."
msgstr ""
"與“PyStructSequence_InitType”相同，但成功時回傳 ``0``，失敗時回傳 ``-1``。"

#: ../../c-api/tuple.rst:143
#, fuzzy
msgid "Contains the meta information of a struct sequence type to create."
msgstr "包含要建立的結構序列型別的元資訊。"

#: ../../c-api/tuple.rst:146 ../../c-api/tuple.rst:169
#, fuzzy
msgid "Field"
msgstr "欄位"

#: ../../c-api/tuple.rst:146 ../../c-api/tuple.rst:169
msgid "C Type"
msgstr "C Type"

#: ../../c-api/tuple.rst:146 ../../c-api/tuple.rst:169
msgid "Meaning"
msgstr "意義"

#: ../../c-api/tuple.rst:148 ../../c-api/tuple.rst:171
msgid "``name``"
msgstr "``name``"

#: ../../c-api/tuple.rst:148 ../../c-api/tuple.rst:150
#: ../../c-api/tuple.rst:171 ../../c-api/tuple.rst:176
msgid "``const char *``"
msgstr "``const char *``"

#: ../../c-api/tuple.rst:148
#, fuzzy
msgid "name of the struct sequence type"
msgstr "結構序列型別的名稱"

#: ../../c-api/tuple.rst:150 ../../c-api/tuple.rst:176
msgid "``doc``"
msgstr "``doc``"

#: ../../c-api/tuple.rst:150
#, fuzzy
msgid "pointer to docstring for the type or ``NULL`` to omit"
msgstr "指向型別的文檔字串的指標或要省略的 ``NULL`` "

#: ../../c-api/tuple.rst:153
msgid "``fields``"
msgstr "``fields``"

#: ../../c-api/tuple.rst:153
msgid "``PyStructSequence_Field *``"
msgstr "``PyStructSequence_Field *``"

#: ../../c-api/tuple.rst:153
#, fuzzy
msgid "pointer to ``NULL``-terminated array with field names of the new type"
msgstr "指向具有新型別欄位名稱的以 ``NULL`` 結尾的數組的指標"

#: ../../c-api/tuple.rst:156
msgid "``n_in_sequence``"
msgstr "``n_in_sequence``"

#: ../../c-api/tuple.rst:156
msgid "``int``"
msgstr "``int``"

#: ../../c-api/tuple.rst:156
#, fuzzy
msgid "number of fields visible to the Python side (if used as tuple)"
msgstr "Python 端可見的欄位數（如果用作元組）"

#: ../../c-api/tuple.rst:163
#, fuzzy
msgid ""
"Describes a field of a struct sequence. As a struct sequence is modeled as a "
"tuple, all fields are typed as :c:expr:`PyObject*`.  The index in the :attr:"
"`fields` array of the :c:type:`PyStructSequence_Desc` determines which field "
"of the struct sequence is described."
msgstr ""
"描述結構序列的欄位。由於結構序列被建模為元組，因此所有欄位的型別都為 :c:expr:"
"`PyObject*`。 :c:type:`PyStructSequence_Desc` 的 :attr:`fields` 數組中的索引"
"決定了描述結構序列的哪個欄位。"

#: ../../c-api/tuple.rst:171
#, fuzzy
msgid ""
"name for the field or ``NULL`` to end the list of named fields, set to :c:"
"data:`PyStructSequence_UnnamedField` to leave unnamed"
msgstr ""
"欄位的名稱或 ``NULL`` 以結束命名欄位列表，設定為 :c:data:"
"`PyStructSequence_UnnamedField` 以保留未命名"

#: ../../c-api/tuple.rst:176
#, fuzzy
msgid "field docstring or ``NULL`` to omit"
msgstr "欄位文檔字串或 ``NULL`` 省略"

#: ../../c-api/tuple.rst:182
#, fuzzy
msgid "Special value for a field name to leave it unnamed."
msgstr "欄位名稱的特殊值以使其保持未命名狀態。"

#: ../../c-api/tuple.rst:184
msgid "The type was changed from ``char *``."
msgstr "型別從 ``char *`` 改變了。"

#: ../../c-api/tuple.rst:190
#, fuzzy
msgid ""
"Creates an instance of *type*, which must have been created with :c:func:"
"`PyStructSequence_NewType`."
msgstr "建立 *type* 的實例，它必須是使用 PyStructSequence_NewType 建立的。"

#: ../../c-api/tuple.rst:196
#, fuzzy
msgid ""
"Return the object at position *pos* in the struct sequence pointed to by "
"*p*. No bounds checking is performed."
msgstr "回傳 *p* 指向的結構序列中位置 *pos* 的物件。不執行邊界檢查。"

#: ../../c-api/tuple.rst:202
#, fuzzy
msgid "Macro equivalent of :c:func:`PyStructSequence_GetItem`."
msgstr "相當於 :c:func:`PyStructSequence_GetItem` 的巨集。"

#: ../../c-api/tuple.rst:207
#, fuzzy
msgid ""
"Sets the field at index *pos* of the struct sequence *p* to value *o*.  "
"Like :c:func:`PyTuple_SET_ITEM`, this should only be used to fill in brand "
"new instances."
msgstr ""
"將結構序列 *p* 的索引 *pos* 處的欄位設定為值 *o*。像 :c:func:"
"`PyTuple_SET_ITEM` 一樣，這應該只用於填充全新的實例。"

#: ../../c-api/tuple.rst:213 ../../c-api/tuple.rst:223
#, fuzzy
msgid "This function \"steals\" a reference to *o*."
msgstr "此函式“竊取”了對 *o* 的引用。"

#: ../../c-api/tuple.rst:218
#, fuzzy
msgid ""
"Similar to :c:func:`PyStructSequence_SetItem`, but implemented as a static "
"inlined function."
msgstr "類似於 :c:func:`PyStructSequence_SetItem`，但作為靜態內聯函式實作。"
