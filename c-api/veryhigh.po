# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-15 20:43+0000\n"
"PO-Revision-Date: 2023-05-02 17:42+0800\n"
"Last-Translator: Matt Wang <mattwang44@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.2.2\n"

#: ../../c-api/veryhigh.rst:8
#, fuzzy
msgid "The Very High Level Layer"
msgstr "非常高階層"

#: ../../c-api/veryhigh.rst:10
#, fuzzy
msgid ""
"The functions in this chapter will let you execute Python source code given "
"in a file or a buffer, but they will not let you interact in a more detailed "
"way with the interpreter."
msgstr ""
"本章中的函式將讓您執行文件或緩衝區中給出的 Python 源程式碼，但它們不會讓您以"
"更詳細的方式與直譯器交互。"

#: ../../c-api/veryhigh.rst:14
#, fuzzy
msgid ""
"Several of these functions accept a start symbol from the grammar as a "
"parameter.  The available start symbols are :const:`Py_eval_input`, :const:"
"`Py_file_input`, and :const:`Py_single_input`.  These are described "
"following the functions which accept them as parameters."
msgstr ""
"其中一些函式接受語法中的起始符號作為參數。可用的開始符號是 :const:"
"`Py_eval_input`、 :const:`Py_file_input` 和 :const:`Py_single_input`。這些在"
"接受它們作為參數的函式之後進行了描述。"

#: ../../c-api/veryhigh.rst:19
#, fuzzy
msgid ""
"Note also that several of these functions take :c:expr:`FILE*` parameters.  "
"One particular issue which needs to be handled carefully is that the :c:expr:"
"`FILE` structure for different C libraries can be different and "
"incompatible.  Under Windows (at least), it is possible for dynamically "
"linked extensions to actually use different libraries, so care should be "
"taken that :c:expr:`FILE*` parameters are only passed to these functions if "
"it is certain that they were created by the same library that the Python "
"runtime is using."
msgstr ""
"另請注意，其中一些函式採用 :c:expr:`FILE*` 參數。需要小心處理的一個特殊問題"
"是 :c:expr:`FILE` 結構用於不同的 C 庫可能不同且不相容。在 Windows 下（至"
"少），動態鏈接的擴充有可能實際使用不同的庫，所以應該注意 :c:expr:`FILE*` 參數"
"只有在確定它們被建立時才會傳遞給這些函式通過 Python 運行時使用的同一個庫。"

#: ../../c-api/veryhigh.rst:30
#, fuzzy
msgid ""
"The main program for the standard interpreter.  This is made available for "
"programs which embed Python.  The *argc* and *argv* parameters should be "
"prepared exactly as those which are passed to a C program's :c:func:`main` "
"function (converted to wchar_t according to the user's locale).  It is "
"important to note that the argument list may be modified (but the contents "
"of the strings pointed to by the argument list are not). The return value "
"will be ``0`` if the interpreter exits normally (i.e., without an "
"exception), ``1`` if the interpreter exits due to an exception, or ``2`` if "
"the parameter list does not represent a valid Python command line."
msgstr ""
"標準直譯器的主程式。這可用於嵌入 Python 的程式。 *argc* 和 *argv* 參數的準備"
"應與傳遞給 C 程式的 :c:func:`main` 函式的參數完全相同（根據使用者的語言環境轉"
"換為 wchar_t）。重要的是要注意參數列表可能會被修改（但參數列表指向的字串的內"
"容不會）。如果直譯器正常退出（即沒有例外），則回傳值為“0”，如果直譯器因例外退"
"出，則回傳值為 ``1``，如果參數列表不表示，則回傳值為 ``2``一個有效的 Python "
"命令列。"

#: ../../c-api/veryhigh.rst:40
#, fuzzy
msgid ""
"Note that if an otherwise unhandled :exc:`SystemExit` is raised, this "
"function will not return ``1``, but exit the process, as long as "
"``Py_InspectFlag`` is not set."
msgstr ""
"請注意，如果引發其他未處理的 :exc:`SystemExit`，只要未設定 "
"``Py_InspectFlag``，此函式將不會回傳 ``1``，而是退出行程。"

#: ../../c-api/veryhigh.rst:47
#, fuzzy
msgid "Similar to :c:func:`Py_Main` but *argv* is an array of bytes strings."
msgstr "類似於 :c:func:`Py_Main` 但 *argv* 是一個位元組字串數組。"

#: ../../c-api/veryhigh.rst:54
#, fuzzy
msgid ""
"This is a simplified interface to :c:func:`PyRun_AnyFileExFlags` below, "
"leaving *closeit* set to ``0`` and *flags* set to ``NULL``."
msgstr ""
"這是下面 :c:func:`PyRun_AnyFileExFlags` 的簡化介面，將 *closeit* 設定為 "
"``0`` 並將 *flags* 設定為 ``NULL``。"

#: ../../c-api/veryhigh.rst:60
#, fuzzy
msgid ""
"This is a simplified interface to :c:func:`PyRun_AnyFileExFlags` below, "
"leaving the *closeit* argument set to ``0``."
msgstr ""
"這是下面 :c:func:`PyRun_AnyFileExFlags` 的簡化介面，將 *closeit* 參數設定為 "
"``0``。"

#: ../../c-api/veryhigh.rst:66
msgid ""
"This is a simplified interface to :c:func:`PyRun_AnyFileExFlags` below, "
"leaving the *flags* argument set to ``NULL``."
msgstr ""
"這是下面 :c:func:`PyRun_AnyFileExFlags` 的簡化介面，將 *flags* 引數設定為 "
"``NULL``。"

#: ../../c-api/veryhigh.rst:72
#, fuzzy
msgid ""
"If *fp* refers to a file associated with an interactive device (console or "
"terminal input or Unix pseudo-terminal), return the value of :c:func:"
"`PyRun_InteractiveLoop`, otherwise return the result of :c:func:"
"`PyRun_SimpleFile`.  *filename* is decoded from the filesystem encoding (:"
"func:`sys.getfilesystemencoding`).  If *filename* is ``NULL``, this function "
"uses ``\"???\"`` as the filename. If *closeit* is true, the file is closed "
"before ``PyRun_SimpleFileExFlags()`` returns."
msgstr ""
"如果 *fp* 指的是與交互設備（控制台或終端輸入或 Unix 偽終端）關聯的文件，則回"
"傳:c:func:`PyRun_InteractiveLoop` 的值，否則回傳:c:func:`PyRun_SimpleFile 的"
"結果`。 *filename* 從文件系統編碼 (:func:`sys.getfilesystemencoding`) 中解"
"碼。如果 *filename* 是 ``NULL``，這個函式使用 ``\"???\"`` 作為文件名。如果 "
"*closeit* 為真，則在 PyRun_SimpleFileExFlags() 回傳之前關閉文件。"

#: ../../c-api/veryhigh.rst:84
msgid ""
"This is a simplified interface to :c:func:`PyRun_SimpleStringFlags` below, "
"leaving the :c:struct:`PyCompilerFlags`\\* argument set to ``NULL``."
msgstr ""
"這是下面 :c:func:`PyRun_SimpleStringFlags` 的簡化介面，將 :c:struct:"
"`PyCompilerFlags`\\* 引數設定為 ``NULL``。"

#: ../../c-api/veryhigh.rst:90
#, fuzzy
msgid ""
"Executes the Python source code from *command* in the :mod:`__main__` module "
"according to the *flags* argument. If :mod:`__main__` does not already "
"exist, it is created.  Returns ``0`` on success or ``-1`` if an exception "
"was raised.  If there was an error, there is no way to get the exception "
"information. For the meaning of *flags*, see below."
msgstr ""
"根據 *flags* 參數從 :mod:`__main__` 模組中的 *command* 執行 Python 源程式碼。"
"如果 :mod:`__main__` 尚不存在，則會建立它。成功時回傳 ``0``，如果引發例外則回"
"傳“-1”。如果出現錯誤，則無法獲取例外資訊。 *flags* 的含義，見下文。"

#: ../../c-api/veryhigh.rst:96
#, fuzzy
msgid ""
"Note that if an otherwise unhandled :exc:`SystemExit` is raised, this "
"function will not return ``-1``, but exit the process, as long as "
"``Py_InspectFlag`` is not set."
msgstr ""
"請注意，如果引發未處理的 :exc:`SystemExit`，只要未設定 Py_InspectFlag，此函式"
"將不會回傳 -1，但會退出行程。"

#: ../../c-api/veryhigh.rst:103
msgid ""
"This is a simplified interface to :c:func:`PyRun_SimpleFileExFlags` below, "
"leaving *closeit* set to ``0`` and *flags* set to ``NULL``."
msgstr ""
"這是下面 :c:func:`PyRun_SimpleFileExFlags` 的簡化介面，將 *closeit* 設定為 "
"``0`` 並將 *flags* 設定為 ``NULL``。"

#: ../../c-api/veryhigh.rst:109
msgid ""
"This is a simplified interface to :c:func:`PyRun_SimpleFileExFlags` below, "
"leaving *flags* set to ``NULL``."
msgstr ""
"這是下面 :c:func:`PyRun_SimpleFileExFlags` 的簡化介面，將 *flags* 設定為 "
"``NULL``。"

#: ../../c-api/veryhigh.rst:115
#, fuzzy
msgid ""
"Similar to :c:func:`PyRun_SimpleStringFlags`, but the Python source code is "
"read from *fp* instead of an in-memory string. *filename* should be the name "
"of the file, it is decoded from :term:`filesystem encoding and error "
"handler`. If *closeit* is true, the file is closed before "
"``PyRun_SimpleFileExFlags()`` returns."
msgstr ""
"類似於 :c:func:`PyRun_SimpleStringFlags`，但 Python 源程式碼是從 *fp* 而不是"
"記憶體中的字串中讀取的。 *filename* 應該是文件的名稱，它是從 :term:"
"`filesystem encoding and error handler` 解碼而來的。如果 *closeit* 為真，則"
"在 PyRun_SimpleFileExFlags() 回傳之前關閉文件。"

#: ../../c-api/veryhigh.rst:122
#, fuzzy
msgid ""
"On Windows, *fp* should be opened as binary mode (e.g. ``fopen(filename, "
"\"rb\")``). Otherwise, Python may not handle script file with LF line ending "
"correctly."
msgstr ""
"在 Windows 上，*fp* 應該以二進位模式打開（例如``fopen(filename, \"rb\")``）。"
"否則，Python 可能無法處理 LF 行正確結束的腳本文件。"

#: ../../c-api/veryhigh.rst:128
msgid ""
"This is a simplified interface to :c:func:`PyRun_InteractiveOneFlags` below, "
"leaving *flags* set to ``NULL``."
msgstr ""
"這是下面 :c:func:`PyRun_InteractiveOneFlags` 的簡化介面，將 *flags* 設定為 "
"``NULL``。"

#: ../../c-api/veryhigh.rst:134
#, fuzzy
msgid ""
"Read and execute a single statement from a file associated with an "
"interactive device according to the *flags* argument.  The user will be "
"prompted using ``sys.ps1`` and ``sys.ps2``.  *filename* is decoded from the :"
"term:`filesystem encoding and error handler`."
msgstr ""
"根據 *flags* 參數從與交互設備關聯的文件中讀取並執行單個語句。系統將提示使用者"
"使用 ``sys.ps1`` 和 ``sys.ps2``。 *文件名* 是從 :term:`文件系統編碼和錯誤處理"
"程式` 解碼而來的。"

#: ../../c-api/veryhigh.rst:139
#, fuzzy
msgid ""
"Returns ``0`` when the input was executed successfully, ``-1`` if there was "
"an exception, or an error code from the :file:`errcode.h` include file "
"distributed as part of Python if there was a parse error.  (Note that :file:"
"`errcode.h` is not included by :file:`Python.h`, so must be included "
"specifically if needed.)"
msgstr ""
"當輸入成功執行時回傳 ``0``，如果有例外則回傳 ``-1``，或者如果有解析錯誤。 "
"（請注意 :file:`errcode.h` 不包含在 :file:`Python.h` 中，因此如果需要，必須特"
"別包含。）"

#: ../../c-api/veryhigh.rst:148
msgid ""
"This is a simplified interface to :c:func:`PyRun_InteractiveLoopFlags` "
"below, leaving *flags* set to ``NULL``."
msgstr ""
"這是下面 :c:func:`PyRun_InteractiveLoopFlags` 的簡化介面，將 *flags* 設定為 "
"``NULL``。"

#: ../../c-api/veryhigh.rst:154
#, fuzzy
msgid ""
"Read and execute statements from a file associated with an interactive "
"device until EOF is reached.  The user will be prompted using ``sys.ps1`` "
"and ``sys.ps2``.  *filename* is decoded from the :term:`filesystem encoding "
"and error handler`.  Returns ``0`` at EOF or a negative number upon failure."
msgstr ""
"從與交互設備關聯的文件中讀取並執行語句，直到到達 EOF。系統將提示使用者使用 "
"``sys.ps1`` 和 ``sys.ps2``。 *文件名* 是從 :term:`文件系統編碼和錯誤處理程式"
"` 解碼而來的。在 EOF 處回傳 ``0`` 或在失敗時回傳負數。"

#: ../../c-api/veryhigh.rst:162
#, fuzzy
msgid ""
"Can be set to point to a function with the prototype ``int func(void)``.  "
"The function will be called when Python's interpreter prompt is about to "
"become idle and wait for user input from the terminal.  The return value is "
"ignored.  Overriding this hook can be used to integrate the interpreter's "
"prompt with other event loops, as done in the :file:`Modules/_tkinter.c` in "
"the Python source code."
msgstr ""
"可以設定為指向原型為“int func(void)”的函式。當 Python 的直譯器提示符即將變為"
"空閒並等待來自終端的使用者輸入時，將呼叫該函式。回傳值被忽略。覆蓋此掛鉤可用"
"於將直譯器的提示與其他事件循環集成，如 Python 源程式碼中的 Modules/_tkinter."
"c 中所做的那樣。"

#: ../../c-api/veryhigh.rst:173
#, fuzzy
msgid ""
"Can be set to point to a function with the prototype ``char *func(FILE "
"*stdin, FILE *stdout, char *prompt)``, overriding the default function used "
"to read a single line of input at the interpreter's prompt.  The function is "
"expected to output the string *prompt* if it's not ``NULL``, and then read a "
"line of input from the provided standard input file, returning the resulting "
"string.  For example, The :mod:`readline` module sets this hook to provide "
"line-editing and tab-completion features."
msgstr ""
"可以設定為指向具有原型“char *func(FILE *stdin, FILE *stdout, char *prompt)”的"
"函式，覆蓋用於在直譯器提示符下讀取單行輸入的預設函式。如果該函式不是 "
"``NULL`` ，則該函式應輸出字串 *prompt*，然後從提供的標準輸入文件中讀取一行輸"
"入，回傳結果字串。例如，:mod:`readline` 模組設定此鉤子以提供行編輯和製表符完"
"成功能。"

#: ../../c-api/veryhigh.rst:182
#, fuzzy
msgid ""
"The result must be a string allocated by :c:func:`PyMem_RawMalloc` or :c:"
"func:`PyMem_RawRealloc`, or ``NULL`` if an error occurred."
msgstr ""
"結果必須是由 :c:func:`PyMem_RawMalloc` 或 :c:func:`PyMem_RawRealloc` 分配的字"
"串，如果發生錯誤則為 ``NULL``。"

#: ../../c-api/veryhigh.rst:185
#, fuzzy
msgid ""
"The result must be allocated by :c:func:`PyMem_RawMalloc` or :c:func:"
"`PyMem_RawRealloc`, instead of being allocated by :c:func:`PyMem_Malloc` or :"
"c:func:`PyMem_Realloc`."
msgstr ""
"結果必須由 :c:func:`PyMem_RawMalloc` 或 :c:func:`PyMem_RawRealloc` 分配，而不"
"是由 :c:func:`PyMem_Malloc` 或 :c:func:`PyMem_Realloc` 分配。"

#: ../../c-api/veryhigh.rst:192
#, fuzzy
msgid ""
"This is a simplified interface to :c:func:`PyRun_StringFlags` below, leaving "
"*flags* set to ``NULL``."
msgstr ""
"這是下面 :c:func:`PyRun_StringFlags` 的簡化介面，將 *flags* 設定為 ``NULL``。"

#: ../../c-api/veryhigh.rst:198
#, fuzzy
msgid ""
"Execute Python source code from *str* in the context specified by the "
"objects *globals* and *locals* with the compiler flags specified by "
"*flags*.  *globals* must be a dictionary; *locals* can be any object that "
"implements the mapping protocol.  The parameter *start* specifies the start "
"token that should be used to parse the source code."
msgstr ""
"在物件 *globals* 和 *locals* 指定的上下文中從 *str* 執行 Python 源程式碼，編"
"譯器旗標由 *flags* 指定。 *globals* 必須是字典； *locals* 可以是實作映射協定"
"的任何物件。參數 *start* 指定應用於解析源程式碼的開始標記。"

#: ../../c-api/veryhigh.rst:204
#, fuzzy
msgid ""
"Returns the result of executing the code as a Python object, or ``NULL`` if "
"an exception was raised."
msgstr "回傳將程式碼作為 Python 物件執行的結果，如果引發例外則回傳 ``NULL`` 。"

#: ../../c-api/veryhigh.rst:210
#, fuzzy
msgid ""
"This is a simplified interface to :c:func:`PyRun_FileExFlags` below, leaving "
"*closeit* set to ``0`` and *flags* set to ``NULL``."
msgstr ""
"這是下面 :c:func:`PyRun_FileExFlags` 的簡化介面，將 *closeit* 設定為 ``0`` 並"
"將 *flags* 設定為 ``NULL``。"

#: ../../c-api/veryhigh.rst:216
#, fuzzy
msgid ""
"This is a simplified interface to :c:func:`PyRun_FileExFlags` below, leaving "
"*flags* set to ``NULL``."
msgstr ""
"這是下面 :c:func:`PyRun_FileExFlags` 的簡化介面，將 *flags* 設定為 ``NULL``。"

#: ../../c-api/veryhigh.rst:222
#, fuzzy
msgid ""
"This is a simplified interface to :c:func:`PyRun_FileExFlags` below, leaving "
"*closeit* set to ``0``."
msgstr ""
"這是下面 :c:func:`PyRun_FileExFlags` 的簡化介面，將 *closeit* 設定為 ``0``。"

#: ../../c-api/veryhigh.rst:228
#, fuzzy
msgid ""
"Similar to :c:func:`PyRun_StringFlags`, but the Python source code is read "
"from *fp* instead of an in-memory string. *filename* should be the name of "
"the file, it is decoded from the :term:`filesystem encoding and error "
"handler`. If *closeit* is true, the file is closed before :c:func:"
"`PyRun_FileExFlags` returns."
msgstr ""
"類似於 :c:func:`PyRun_StringFlags`，但 Python 源程式碼是從 *fp* 而不是記憶體"
"中的字串中讀取的。 *filename* 應該是文件的名稱，它是從 :term:`filesystem "
"encoding and error handler` 解碼而來的。如果 *closeit* 為真，則文件在 :c:"
"func:`PyRun_FileExFlags` 回傳之前關閉。"

#: ../../c-api/veryhigh.rst:237
#, fuzzy
msgid ""
"This is a simplified interface to :c:func:`Py_CompileStringFlags` below, "
"leaving *flags* set to ``NULL``."
msgstr ""
"這是下面 :c:func:`Py_CompileStringFlags` 的簡化介面，將 *flags* 設定為 "
"``NULL``。"

#: ../../c-api/veryhigh.rst:243
#, fuzzy
msgid ""
"This is a simplified interface to :c:func:`Py_CompileStringExFlags` below, "
"with *optimize* set to ``-1``."
msgstr ""
"這是下面 :c:func:`Py_CompileStringExFlags` 的簡化介面，*optimize* 設定為 "
"``-1``。"

#: ../../c-api/veryhigh.rst:249
#, fuzzy
msgid ""
"Parse and compile the Python source code in *str*, returning the resulting "
"code object.  The start token is given by *start*; this can be used to "
"constrain the code which can be compiled and should be :const:"
"`Py_eval_input`, :const:`Py_file_input`, or :const:`Py_single_input`.  The "
"filename specified by *filename* is used to construct the code object and "
"may appear in tracebacks or :exc:`SyntaxError` exception messages.  This "
"returns ``NULL`` if the code cannot be parsed or compiled."
msgstr ""
"解析並編譯 *str* 中的 Python 源程式碼，回傳生成的程式碼物件。開始令牌由 "
"*start* 給出；這可以用來限制可以編譯的程式碼，應該是 :const:"
"`Py_eval_input`、:const:`Py_file_input` 或 :const:`Py_single_input`。 "
"*filename* 指定的文件名用於構造程式碼物件，可能出現在回溯或 :exc:"
"`SyntaxError` 例外消息中。如果無法解析或編譯程式碼，則回傳 ``NULL`` 。"

#: ../../c-api/veryhigh.rst:257
#, fuzzy
msgid ""
"The integer *optimize* specifies the optimization level of the compiler; a "
"value of ``-1`` selects the optimization level of the interpreter as given "
"by :option:`-O` options.  Explicit levels are ``0`` (no optimization; "
"``__debug__`` is true), ``1`` (asserts are removed, ``__debug__`` is false) "
"or ``2`` (docstrings are removed too)."
msgstr ""
"整數 *optimize* 指定編譯器的最佳化級別； ``-1`` 的值選擇由 :option:`-O` "
"options 給出的直譯器的最佳化級別。顯式級別是 ``0``（無最佳化；``__debug__`` "
"為真），``1``（斷言被刪除，``__debug__`` 為假）或 ``2``（文檔字串也被刪除)."

#: ../../c-api/veryhigh.rst:268
#, fuzzy
msgid ""
"Like :c:func:`Py_CompileStringObject`, but *filename* is a byte string "
"decoded from the :term:`filesystem encoding and error handler`."
msgstr ""
"類似於 :c:func:`Py_CompileStringObject`，但 *filename* 是從 :term:"
"`filesystem encoding and error handler` 解碼的位元組字串。"

#: ../../c-api/veryhigh.rst:275
#, fuzzy
msgid ""
"This is a simplified interface to :c:func:`PyEval_EvalCodeEx`, with just the "
"code object, and global and local variables.  The other arguments are set to "
"``NULL``."
msgstr ""
"這是 :c:func:`PyEval_EvalCodeEx` 的簡化介面，僅包含程式碼對像以及全局和局部變"
"數。其他參數設定為 ``NULL`` 。"

#: ../../c-api/veryhigh.rst:282
#, fuzzy
msgid ""
"Evaluate a precompiled code object, given a particular environment for its "
"evaluation.  This environment consists of a dictionary of global variables, "
"a mapping object of local variables, arrays of arguments, keywords and "
"defaults, a dictionary of default values for :ref:`keyword-only <keyword-"
"only_parameter>` arguments and a closure tuple of cells."
msgstr ""
"給定一個特定的評估環境，評估一個預編譯的程式碼物件。這個環境包括一個全局變數"
"字典、一個局部變數映射物件、參數數組、關鍵字和預設值、一個預設值字典：ref:"
"`keyword-only <keyword-only_parameter>` 參數和一個閉包元組細胞。"

#: ../../c-api/veryhigh.rst:291
#, fuzzy
msgid ""
"Evaluate an execution frame.  This is a simplified interface to :c:func:"
"`PyEval_EvalFrameEx`, for backward compatibility."
msgstr ""
"評估執行框架。這是 :c:func:`PyEval_EvalFrameEx` 的簡化介面，用於向後相容。"

#: ../../c-api/veryhigh.rst:297
#, fuzzy
msgid ""
"This is the main, unvarnished function of Python interpretation.  The code "
"object associated with the execution frame *f* is executed, interpreting "
"bytecode and executing calls as needed.  The additional *throwflag* "
"parameter can mostly be ignored - if true, then it causes an exception to "
"immediately be thrown; this is used for the :meth:`~generator.throw` methods "
"of generator objects."
msgstr ""
"這是 Python 解釋的主要、未修飾的功能。執行與執行幀*f* 關聯的程式碼物件，根據"
"需要解釋位元組碼和執行呼叫。額外的 *throwflag* 參數大部分可以忽略——如果為真，"
"那麼它會導致立即拋出例外；這用於生成器物件的 :meth:`~generator.throw` 方法。"

#: ../../c-api/veryhigh.rst:304
#, fuzzy
msgid ""
"This function now includes a debug assertion to help ensure that it does not "
"silently discard an active exception."
msgstr "此函式現在包含一個除錯斷言，以幫助確保它不會靜默丟棄活動例外。"

#: ../../c-api/veryhigh.rst:311
#, fuzzy
msgid ""
"This function changes the flags of the current evaluation frame, and returns "
"true on success, false on failure."
msgstr ""
"此函式更改當前評估框架的旗標，並在成功時回傳 true，在失敗時回傳 false。"

#: ../../c-api/veryhigh.rst:319
#, fuzzy
msgid ""
"The start symbol from the Python grammar for isolated expressions; for use "
"with :c:func:`Py_CompileString`."
msgstr ""
"來自 Python 語法的孤立表達式的起始符號；與 :c:func:`Py_CompileString` 一起使"
"用。"

#: ../../c-api/veryhigh.rst:327
#, fuzzy
msgid ""
"The start symbol from the Python grammar for sequences of statements as read "
"from a file or other source; for use with :c:func:`Py_CompileString`.  This "
"is the symbol to use when compiling arbitrarily long Python source code."
msgstr ""
"從文件或其他來源讀取的語句序列的 Python 語法的起始符號；與 :c:func:"
"`Py_CompileString` 一起使用。這是編譯任意長的 Python 源程式碼時使用的符號。"

#: ../../c-api/veryhigh.rst:336
#, fuzzy
msgid ""
"The start symbol from the Python grammar for a single statement; for use "
"with :c:func:`Py_CompileString`. This is the symbol used for the interactive "
"interpreter loop."
msgstr ""
"單個語句的 Python 語法的起始符號；與 :c:func:`Py_CompileString` 一起使用。這"
"是用於交互式直譯器循環的符號。"

#: ../../c-api/veryhigh.rst:343
#, fuzzy
msgid ""
"This is the structure used to hold compiler flags.  In cases where code is "
"only being compiled, it is passed as ``int flags``, and in cases where code "
"is being executed, it is passed as ``PyCompilerFlags *flags``.  In this "
"case, ``from __future__ import`` can modify *flags*."
msgstr ""
"這是用於保存編譯器旗標的結構。在程式碼僅被編譯的情況下，它作為 int flags 傳"
"遞，而在程式碼正在執行的情況下，它作為 PyCompilerFlags *flags 傳遞。在這種情"
"況下，``from __future__ import`` 可以修改 *flags*。"

#: ../../c-api/veryhigh.rst:348
#, fuzzy
msgid ""
"Whenever ``PyCompilerFlags *flags`` is ``NULL``, :attr:`cf_flags` is treated "
"as equal to ``0``, and any modification due to ``from __future__ import`` is "
"discarded."
msgstr ""
"每當``PyCompilerFlags *flags`` 為``NULL`` 時，:attr:`cf_flags` 被視為等於"
"``0``，並且由於``from __future__ import`` 引起的任何修改都被丟棄。"

#: ../../c-api/veryhigh.rst:354
msgid "Compiler flags."
msgstr "編譯器旗標。"

#: ../../c-api/veryhigh.rst:358
#, fuzzy
msgid ""
"*cf_feature_version* is the minor Python version. It should be initialized "
"to ``PY_MINOR_VERSION``."
msgstr ""
"*cf_feature_version* 是次要的 Python 版本。它應該被初始化為"
"``PY_MINOR_VERSION``。"

#: ../../c-api/veryhigh.rst:361
#, fuzzy
msgid ""
"The field is ignored by default, it is used if and only if ``PyCF_ONLY_AST`` "
"flag is set in *cf_flags*."
msgstr ""
"預設情況下該欄位被忽略，當且僅當在 *cf_flags* 中設定了``PyCF_ONLY_AST`` 旗標"
"時才使用它。"

#: ../../c-api/veryhigh.rst:364
msgid "Added *cf_feature_version* field."
msgstr "新增 *cf_feature_version* 欄位。"

#: ../../c-api/veryhigh.rst:370
#, fuzzy
msgid ""
"This bit can be set in *flags* to cause division operator ``/`` to be "
"interpreted as \"true division\" according to :pep:`238`."
msgstr ""
"根據 :pep:`238`，可以在 *flags* 中設定該位，使除法運算符 ``/`` 被解釋為“真正"
"的除法”。"
