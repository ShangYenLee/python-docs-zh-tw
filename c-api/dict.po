# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# aminzai <lagunawang@gmail.com>, 2015
# Liang-Bo Wang <me@liang2.tw>, 2015
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-15 00:17+0000\n"
"PO-Revision-Date: 2017-09-22 18:26+0000\n"
"Last-Translator: Liang-Bo Wang <me@liang2.tw>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.2.2\n"

#: ../../c-api/dict.rst:6
msgid "Dictionary Objects"
msgstr "字典物件"

#: ../../c-api/dict.rst:13
msgid ""
"This subtype of :c:type:`PyObject` represents a Python dictionary object."
msgstr ":c:type:`PyObject` 子型態代表一個 Python 字典物件。"

#: ../../c-api/dict.rst:18
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python dictionary "
"type.  This is the same object as :class:`dict` in the Python layer."
msgstr ""
":c:type:`PyTypeObject` 實例代表一個 Python 字典型態。此與 Python 層中的 :"
"class:`dict` 為同一個物件。"

#: ../../c-api/dict.rst:24
msgid ""
"Return true if *p* is a dict object or an instance of a subtype of the dict "
"type.  This function always succeeds."
msgstr ""
"若 *p* 是一個字典物件或字典的子型態實例則會回傳 true。此函式每次都會執行成"
"功。"

#: ../../c-api/dict.rst:30
msgid ""
"Return true if *p* is a dict object, but not an instance of a subtype of the "
"dict type.  This function always succeeds."
msgstr ""
"若 *p* 是一個字典物件但並不是一個字典子型態的實例，則回傳 true。此函式每次都"
"會執行成功。"

#: ../../c-api/dict.rst:36
#, fuzzy
msgid "Return a new empty dictionary, or ``NULL`` on failure."
msgstr "回傳一個新的空字典，或在失敗時回傳 *NULL*\\ 。"

#: ../../c-api/dict.rst:41
#, fuzzy
msgid ""
"Return a :class:`types.MappingProxyType` object for a mapping which enforces "
"read-only behavior.  This is normally used to create a view to prevent "
"modification of the dictionary for non-dynamic class types."
msgstr ""
"為強制只讀行為的映射回傳一個 :class:`types.MappingProxyType` 物件。這通常用於"
"建立視圖以防止修改非動態類型別的字典。"

#: ../../c-api/dict.rst:48
#, fuzzy
msgid "Empty an existing dictionary of all key-value pairs."
msgstr "清空所有鍵值對的現有字典。"

#: ../../c-api/dict.rst:53
#, fuzzy
msgid ""
"Determine if dictionary *p* contains *key*.  If an item in *p* is matches "
"*key*, return ``1``, otherwise return ``0``.  On error, return ``-1``. This "
"is equivalent to the Python expression ``key in p``."
msgstr ""
"確定字典 *p* 是否包含 *key*。如果 *p* 中的項目與 *key* 匹配，則回傳 ``1``，否"
"則回傳 ``0``。出錯時，回傳 ``-1``。這等同於 Python 表達式 ``key in p``。"

#: ../../c-api/dict.rst:60
#, fuzzy
msgid "Return a new dictionary that contains the same key-value pairs as *p*."
msgstr "回傳包含與 *p* 相同的鍵值對的新字典。"

#: ../../c-api/dict.rst:65
#, fuzzy
msgid ""
"Insert *val* into the dictionary *p* with a key of *key*.  *key* must be :"
"term:`hashable`; if it isn't, :exc:`TypeError` will be raised. Return ``0`` "
"on success or ``-1`` on failure.  This function *does not* steal a reference "
"to *val*."
msgstr ""
"將 *val* 插入到字典 *p* 中，鍵為 *key*。 *key* 必須是 :term:`hashable`;如果不"
"是，將引發 :exc:`TypeError`。成功回傳 ``0``或失敗回傳 ``-1``。此函式*不會*竊"
"取對*val* 的引用。"

#: ../../c-api/dict.rst:75
#, fuzzy
msgid ""
"Insert *val* into the dictionary *p* using *key* as a key. *key* should be "
"a :c:expr:`const char*`.  The key object is created using "
"``PyUnicode_FromString(key)``.  Return ``0`` on success or ``-1`` on "
"failure.  This function *does not* steal a reference to *val*."
msgstr ""
"使用 *key* 作為鍵將 *val* 插入到字典 *p* 中。 *key* 應該是 :c:expr:`const "
"char*`。鍵對像是使用“PyUnicode_FromString(key)”建立的。成功回傳 ``0``或失敗回"
"傳 ``-1``。此函式*不會*竊取對*val* 的引用。"

#: ../../c-api/dict.rst:83
#, fuzzy
msgid ""
"Remove the entry in dictionary *p* with key *key*. *key* must be :term:"
"`hashable`; if it isn't, :exc:`TypeError` is raised. If *key* is not in the "
"dictionary, :exc:`KeyError` is raised. Return ``0`` on success or ``-1`` on "
"failure."
msgstr ""
"使用鍵 *key* 刪除字典 *p* 中的條目。 *key* 必須是 :term:`hashable`;如果不是，"
"則引發 :exc:`TypeError`。如果 *key* 不在字典中，則會引發 :exc:`KeyError`。成"
"功回傳 ``0``或失敗回傳 ``-1``。"

#: ../../c-api/dict.rst:91
#, fuzzy
msgid ""
"Remove the entry in dictionary *p* which has a key specified by the string "
"*key*. If *key* is not in the dictionary, :exc:`KeyError` is raised. Return "
"``0`` on success or ``-1`` on failure."
msgstr ""
"刪除字典 *p* 中具有由字串 *key* 指定的鍵的條目。如果 *key* 不在字典中，則會引"
"發 :exc:`KeyError`。成功回傳 ``0``或失敗回傳 ``-1``。"

#: ../../c-api/dict.rst:98
#, fuzzy
msgid ""
"Return the object from dictionary *p* which has a key *key*.  Return "
"``NULL`` if the key *key* is not present, but *without* setting an exception."
msgstr ""
"從字典 *p* 中回傳物件，它有一個鍵 *key*。如果鍵 *key* 不存在，但 *沒有* 設定"
"例外，則回傳 ``NULL``。"

#: ../../c-api/dict.rst:101
#, fuzzy
msgid ""
"Note that exceptions which occur while calling :meth:`__hash__` and :meth:"
"`__eq__` methods will get suppressed. To get error reporting use :c:func:"
"`PyDict_GetItemWithError()` instead."
msgstr ""
"請注意，呼叫 :meth:`__hash__` 和 :meth:`__eq__` 方法時發生的例外將被抑制。要"
"獲取錯誤報告，請改用 PyDict_GetItemWithError() 。"

#: ../../c-api/dict.rst:105
#, fuzzy
msgid ""
"Calling this API without :term:`GIL` held had been allowed for historical "
"reason. It is no longer allowed."
msgstr ""
"由於歷史原因，允許在不持有 :term:`GIL` 的情況下呼叫此 API。它不再被允許。"

#: ../../c-api/dict.rst:112
#, fuzzy
msgid ""
"Variant of :c:func:`PyDict_GetItem` that does not suppress exceptions. "
"Return ``NULL`` **with** an exception set if an exception occurred.  Return "
"``NULL`` **without** an exception set if the key wasn't present."
msgstr ""
"不抑制例外的 :c:func:`PyDict_GetItem` 的變體。如果發生例外，則回傳 ``NULL`` "
"** 並設定 ** 例外。如果密鑰不存在，則回傳 ``NULL`` **沒有**例外集。"

#: ../../c-api/dict.rst:120
#, fuzzy
msgid ""
"This is the same as :c:func:`PyDict_GetItem`, but *key* is specified as a :c:"
"expr:`const char*`, rather than a :c:expr:`PyObject*`."
msgstr ""
"這與 :c:func:`PyDict_GetItem` 相同，但 *key* 被指定為 :c:expr:`const char*`，"
"而不是 :c:expr:`PyObject*`。"

#: ../../c-api/dict.rst:123
#, fuzzy
msgid ""
"Note that exceptions which occur while calling :meth:`__hash__` and :meth:"
"`__eq__` methods and creating a temporary string object will get suppressed. "
"To get error reporting use :c:func:`PyDict_GetItemWithError()` instead."
msgstr ""
"請注意，呼叫 :meth:`__hash__` 和 :meth:`__eq__` 方法以及建立臨時字串物件時發"
"生的例外將被抑制。要獲取錯誤報告，請改用 PyDict_GetItemWithError() 。"

#: ../../c-api/dict.rst:131
#, fuzzy
msgid ""
"This is the same as the Python-level :meth:`dict.setdefault`.  If present, "
"it returns the value corresponding to *key* from the dictionary *p*.  If the "
"key is not in the dict, it is inserted with value *defaultobj* and "
"*defaultobj* is returned.  This function evaluates the hash function of "
"*key* only once, instead of evaluating it independently for the lookup and "
"the insertion."
msgstr ""
"這與 Python 級別的 :meth:`dict.setdefault` 相同。如果存在，它回傳對應於字典 "
"*p* 中的 *key* 的值。如果鍵不在字典中，則插入值 *defaultobj* 並回傳 "
"*defaultobj*。此函式僅對 *key* 的雜湊函式求值一次，而不是為查找和插入單獨求"
"值。"

#: ../../c-api/dict.rst:141
#, fuzzy
msgid ""
"Return a :c:type:`PyListObject` containing all the items from the dictionary."
msgstr "回傳一個 :c:type:`PyListObject` 包含字典中的所有項目。"

#: ../../c-api/dict.rst:146
#, fuzzy
msgid ""
"Return a :c:type:`PyListObject` containing all the keys from the dictionary."
msgstr "回傳一個包含字典中所有鍵的 :c:type:`PyListObject`。"

#: ../../c-api/dict.rst:151
#, fuzzy
msgid ""
"Return a :c:type:`PyListObject` containing all the values from the "
"dictionary *p*."
msgstr "回傳一個 :c:type:`PyListObject` 包含字典 *p* 中的所有值。"

#: ../../c-api/dict.rst:159
#, fuzzy
msgid ""
"Return the number of items in the dictionary.  This is equivalent to "
"``len(p)`` on a dictionary."
msgstr "回傳字典中的項目數。這相當於字典上的 ``len(p)``。"

#: ../../c-api/dict.rst:165
#, fuzzy
msgid ""
"Iterate over all key-value pairs in the dictionary *p*.  The :c:type:"
"`Py_ssize_t` referred to by *ppos* must be initialized to ``0`` prior to the "
"first call to this function to start the iteration; the function returns "
"true for each pair in the dictionary, and false once all pairs have been "
"reported.  The parameters *pkey* and *pvalue* should either point to :c:expr:"
"`PyObject*` variables that will be filled in with each key and value, "
"respectively, or may be ``NULL``.  Any references returned through them are "
"borrowed.  *ppos* should not be altered during iteration. Its value "
"represents offsets within the internal dictionary structure, and since the "
"structure is sparse, the offsets are not consecutive."
msgstr ""
"遍歷字典 *p* 中的所有鍵值對。 *ppos* 引用的 :c:type:`Py_ssize_t` 必須在第一次"
"呼叫此函式開始疊代之前初始化為 ``0``；該函式為字典中的每一對回傳 true，並在報"
"告所有對後回傳 false。參數 *pkey* 和 *pvalue* 應該指向 :c:expr:`PyObject*` 變"
"數，分別用每個鍵和值填充，或者可以是 ``NULL``。通過它們回傳的任何引用都是藉用"
"的。 *ppos* 不應在疊代期間更改。它的值表示內部字典結構中的偏移量，並且由於結"
"構是稀疏的，所以偏移量不是連續的。"

#: ../../c-api/dict.rst:176
msgid "For example::"
msgstr ""
"舉例來說：\n"
"\n"
"::"

#: ../../c-api/dict.rst:186
#, fuzzy
msgid ""
"The dictionary *p* should not be mutated during iteration.  It is safe to "
"modify the values of the keys as you iterate over the dictionary, but only "
"so long as the set of keys does not change.  For example::"
msgstr ""
"字典 *p* 不應在疊代期間發生變化。在遍歷字典時修改鍵的值是安全的，但前提是鍵集"
"不變。例如：："

#: ../../c-api/dict.rst:211
#, fuzzy
msgid ""
"Iterate over mapping object *b* adding key-value pairs to dictionary *a*. "
"*b* may be a dictionary, or any object supporting :c:func:`PyMapping_Keys` "
"and :c:func:`PyObject_GetItem`. If *override* is true, existing pairs in *a* "
"will be replaced if a matching key is found in *b*, otherwise pairs will "
"only be added if there is not a matching key in *a*. Return ``0`` on success "
"or ``-1`` if an exception was raised."
msgstr ""
"遍歷映射物件 *b*，將鍵值對新增到字典 *a*。 *b* 可以是字典，或任何支援 :c:"
"func:`PyMapping_Keys` 和 :c:func:`PyObject_GetItem` 的物件。如果 *override* "
"為真，如果在 *b* 中找到匹配的鍵，則 *a* 中的現有對將被替換，否則只有在 *a* 中"
"沒有匹配的鍵時才會新增對。成功時回傳 ``0``，如果引發例外則回傳 ``-1``。"

#: ../../c-api/dict.rst:221
#, fuzzy
msgid ""
"This is the same as ``PyDict_Merge(a, b, 1)`` in C, and is similar to ``a."
"update(b)`` in Python except that :c:func:`PyDict_Update` doesn't fall back "
"to the iterating over a sequence of key value pairs if the second argument "
"has no \"keys\" attribute.  Return ``0`` on success or ``-1`` if an "
"exception was raised."
msgstr ""
"這與 C 中的 ``PyDict_Merge(a, b, 1)`` 相同，類似於 Python 中的 ``a."
"update(b)`` 除了:c:func:`PyDict_Update` 不落如果第二個參數沒有 \"keys\" 屬"
"性，則回到疊代一系列鍵值對。成功時回傳 ``0``，如果引發例外則回傳 ``-1``。"

#: ../../c-api/dict.rst:230
#, fuzzy
msgid ""
"Update or merge into dictionary *a*, from the key-value pairs in *seq2*. "
"*seq2* must be an iterable object producing iterable objects of length 2, "
"viewed as key-value pairs.  In case of duplicate keys, the last wins if "
"*override* is true, else the first wins. Return ``0`` on success or ``-1`` "
"if an exception was raised. Equivalent Python (except for the return value)::"
msgstr ""
"從 *seq2* 中的鍵值對更新或合併到字典 *a* 中。 *seq2* 必須是一個可疊代物件，產"
"生長度為 2 的可疊代物件，被視為鍵值對。在重複鍵的情況下，如果 *override* 為"
"真，則最後一個獲勝，否則第一個獲勝。成功時回傳 ``0``，如果引發例外則回傳 "
"``-1``。等效的 Python（回傳值除外）：："
