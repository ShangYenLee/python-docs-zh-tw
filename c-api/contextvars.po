# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-09-13 00:11+0000\n"
"PO-Revision-Date: 2023-05-02 16:43+0800\n"
"Last-Translator: Matt Wang <mattwang44@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.2.2\n"

#: ../../c-api/contextvars.rst:6
#, fuzzy
msgid "Context Variables Objects"
msgstr "情境變數物件 (Context Variables Objects)"

#: ../../c-api/contextvars.rst:13
#, fuzzy
msgid ""
"In Python 3.7.1 the signatures of all context variables C APIs were "
"**changed** to use :c:type:`PyObject` pointers instead of :c:type:"
"`PyContext`, :c:type:`PyContextVar`, and :c:type:`PyContextToken`, e.g.::"
msgstr ""
"在 Python 3.7.1 中，所有情境變數 C API 的簽名被\\ **更改**\\ 為使用 :c:func:"
"`PyObject` 指標而不是 :c:func:`PyContext`，:c:func:`PyContextVar`，和 :c:"
"type:`PyContextToken`，例如："

#: ../../c-api/contextvars.rst:24
msgid "See :issue:`34762` for more details."
msgstr "更多細節請見 :issue:`34762`。"

#: ../../c-api/contextvars.rst:29
msgid ""
"This section details the public C API for the :mod:`contextvars` module."
msgstr "本節詳細介紹了 :mod:`contextvars` 模組的公開 C API。"

#: ../../c-api/contextvars.rst:33
msgid ""
"The C structure used to represent a :class:`contextvars.Context` object."
msgstr "用於表示 :class:`contextvars.Context` 物件的 C 結構。"

#: ../../c-api/contextvars.rst:38
msgid ""
"The C structure used to represent a :class:`contextvars.ContextVar` object."
msgstr "用於表示 :class:`contextvars.ContextVar` 物件的 C 結構。"

#: ../../c-api/contextvars.rst:43
msgid "The C structure used to represent a :class:`contextvars.Token` object."
msgstr "用於表示 :class:`contextvars.Token` 物件的 C 結構。"

#: ../../c-api/contextvars.rst:47
msgid "The type object representing the *context* type."
msgstr "表示 *context* 型別的型別物件。"

#: ../../c-api/contextvars.rst:51
#, fuzzy
msgid "The type object representing the *context variable* type."
msgstr "代表*情境變數*型別的型別物件。"

#: ../../c-api/contextvars.rst:55
#, fuzzy
msgid "The type object representing the *context variable token* type."
msgstr "表示*情境變數標記*型別的型別物件。"

#: ../../c-api/contextvars.rst:58
msgid "Type-check macros:"
msgstr "型別檢查巨集："

#: ../../c-api/contextvars.rst:62
#, fuzzy
msgid ""
"Return true if *o* is of type :c:data:`PyContext_Type`. *o* must not be "
"``NULL``.  This function always succeeds."
msgstr ""
"如果 *o* 是 :c:data:`PyContext_Type` 型別，則回傳 true。 *o* 不能為 "
"``NULL`` 。這個函式總是成功的。"

#: ../../c-api/contextvars.rst:67
#, fuzzy
msgid ""
"Return true if *o* is of type :c:data:`PyContextVar_Type`. *o* must not be "
"``NULL``.  This function always succeeds."
msgstr ""
"如果 *o* 是 :c:data:`PyContextVar_Type` 型別，則回傳 true。 *o* 不能為 "
"``NULL`` 。這個函式總是成功的。"

#: ../../c-api/contextvars.rst:72
#, fuzzy
msgid ""
"Return true if *o* is of type :c:data:`PyContextToken_Type`. *o* must not be "
"``NULL``.  This function always succeeds."
msgstr ""
"如果 *o* 是 :c:data:`PyContextToken_Type` 型別，則回傳 true。 *o* 不能為 "
"``NULL`` 。這個函式總是成功的。"

#: ../../c-api/contextvars.rst:76
#, fuzzy
msgid "Context object management functions:"
msgstr "情境對像管理函式："

#: ../../c-api/contextvars.rst:80
#, fuzzy
msgid ""
"Create a new empty context object.  Returns ``NULL`` if an error has "
"occurred."
msgstr "建立一個新的空情境物件。如果發生錯誤，則回傳 ``NULL`` 。"

#: ../../c-api/contextvars.rst:85
#, fuzzy
msgid ""
"Create a shallow copy of the passed *ctx* context object. Returns ``NULL`` "
"if an error has occurred."
msgstr "建立傳遞的 *ctx* 情境物件的淺表副本。如果發生錯誤，則回傳 ``NULL`` 。"

#: ../../c-api/contextvars.rst:90
#, fuzzy
msgid ""
"Create a shallow copy of the current thread context. Returns ``NULL`` if an "
"error has occurred."
msgstr "建立當前執行緒情境的淺表副本。如果發生錯誤，則回傳 ``NULL`` 。"

#: ../../c-api/contextvars.rst:95
#, fuzzy
msgid ""
"Set *ctx* as the current context for the current thread. Returns ``0`` on "
"success, and ``-1`` on error."
msgstr "將 *ctx* 設定為當前執行緒的當前情境。成功回傳 ``0``，錯誤回傳 ``-1``。"

#: ../../c-api/contextvars.rst:100
#, fuzzy
msgid ""
"Deactivate the *ctx* context and restore the previous context as the current "
"context for the current thread.  Returns ``0`` on success, and ``-1`` on "
"error."
msgstr ""
"停用 *ctx* 情境並將先前的情境恢復為當前執行緒的當前情境。成功回傳 ``0``，錯誤"
"回傳 ``-1``。"

#: ../../c-api/contextvars.rst:105
#, fuzzy
msgid "Context variable functions:"
msgstr "情境變數函式："

#: ../../c-api/contextvars.rst:109
#, fuzzy
msgid ""
"Create a new ``ContextVar`` object.  The *name* parameter is used for "
"introspection and debug purposes.  The *def* parameter specifies a default "
"value for the context variable, or ``NULL`` for no default. If an error has "
"occurred, this function returns ``NULL``."
msgstr ""
"建立一個新的 ``ContextVar`` 物件。 *name* 參數用於內省和除錯目的。 *def* 參數"
"指定情境變數的預設值，或 ``NULL`` 表示無預設值。如果發生錯誤，此函式回傳 "
"``NULL`` 。"

#: ../../c-api/contextvars.rst:116
#, fuzzy
msgid ""
"Get the value of a context variable.  Returns ``-1`` if an error has "
"occurred during lookup, and ``0`` if no error occurred, whether or not a "
"value was found."
msgstr ""
"獲取情境變數的值。如果在查找期間發生錯誤，則回傳 ``-1``，如果沒有發生錯誤，則"
"回傳 ``0``，無論是否找到值。"

#: ../../c-api/contextvars.rst:120
#, fuzzy
msgid ""
"If the context variable was found, *value* will be a pointer to it. If the "
"context variable was *not* found, *value* will point to:"
msgstr ""
"如果找到情境變數，*value* 將是指向它的指標。如果情境變數*未*找到，*值*將指"
"向："

#: ../../c-api/contextvars.rst:123
#, fuzzy
msgid "*default_value*, if not ``NULL``;"
msgstr "*default_value*，如果不是``NULL``；"

#: ../../c-api/contextvars.rst:124
#, fuzzy
msgid "the default value of *var*, if not ``NULL``;"
msgstr "*var* 的預設值，如果不是 ``NULL`` ；"

#: ../../c-api/contextvars.rst:125
msgid "``NULL``"
msgstr "``NULL``"

#: ../../c-api/contextvars.rst:127
#, fuzzy
msgid "Except for ``NULL``, the function returns a new reference."
msgstr "除了``NULL``，該函式回傳一個新的引用。"

#: ../../c-api/contextvars.rst:131
#, fuzzy
msgid ""
"Set the value of *var* to *value* in the current context.  Returns a new "
"token object for this change, or ``NULL`` if an error has occurred."
msgstr ""
"在當前情境中將 *var* 的值設定為 *value*。為此更改回傳一個新的令牌物件，如果發"
"生錯誤則回傳 ``NULL`` 。"

#: ../../c-api/contextvars.rst:136
#, fuzzy
msgid ""
"Reset the state of the *var* context variable to that it was in before :c:"
"func:`PyContextVar_Set` that returned the *token* was called. This function "
"returns ``0`` on success and ``-1`` on error."
msgstr ""
"將 *var* 情境變數的狀態重置為呼叫回傳 *token* 之前的狀態 :c:func:"
"`PyContextVar_Set`。此函式在成功時回傳 ``0``，在出錯時回傳 ``-1``。"
