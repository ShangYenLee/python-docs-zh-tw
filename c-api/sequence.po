# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-04-03 00:14+0000\n"
"PO-Revision-Date: 2018-05-23 14:32+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.2.2\n"

#: ../../c-api/sequence.rst:6
msgid "Sequence Protocol"
msgstr "序列協定"

#: ../../c-api/sequence.rst:11
#, fuzzy
msgid ""
"Return ``1`` if the object provides the sequence protocol, and ``0`` "
"otherwise. Note that it returns ``1`` for Python classes with a :meth:"
"`__getitem__` method, unless they are :class:`dict` subclasses, since in "
"general it is impossible to determine what type of keys the class supports.  "
"This function always succeeds."
msgstr ""
"如果物件提供序列協定，則回傳 ``1``，否則回傳 ``0``。請注意，對於具有 :meth:"
"`__getitem__` 方法的 Python 類，它會回傳 ``1``，除非它們是 :class:`dict` 的子"
"類別，因為通常無法確定該類支援的鍵型別。這個函式總是成功的。"

#: ../../c-api/sequence.rst:23
#, fuzzy
msgid ""
"Returns the number of objects in sequence *o* on success, and ``-1`` on "
"failure.  This is equivalent to the Python expression ``len(o)``."
msgstr ""
"成功時回傳序列 *o* 中的對像數，失敗時回傳 ``-1``。這等同於 Python 表達式 "
"``len(o)``。"

#: ../../c-api/sequence.rst:29
#, fuzzy
msgid ""
"Return the concatenation of *o1* and *o2* on success, and ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o1 + o2``."
msgstr ""
"成功時回傳 *o1* 和 *o2* 的串聯，失敗時回傳 NULL。這相當於 Python 表達式 ``o1 "
"+ o2``。"

#: ../../c-api/sequence.rst:35
#, fuzzy
msgid ""
"Return the result of repeating sequence object *o* *count* times, or "
"``NULL`` on failure.  This is the equivalent of the Python expression ``o * "
"count``."
msgstr ""
"回傳重複序列物件 *o* *count* 次的結果，或者在失敗時回傳 ``NULL``。這相當於 "
"Python 表達式 ``o * count``。"

#: ../../c-api/sequence.rst:41
#, fuzzy
msgid ""
"Return the concatenation of *o1* and *o2* on success, and ``NULL`` on "
"failure. The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python expression ``o1 += o2``."
msgstr ""
"成功時回傳 *o1* 和 *o2* 的串聯，失敗時回傳 NULL。當 *o1* 支援時，該操作就地*"
"完成。這相當於 Python 表達式 ``o1 += o2``。"

#: ../../c-api/sequence.rst:48
#, fuzzy
msgid ""
"Return the result of repeating sequence object *o* *count* times, or "
"``NULL`` on failure.  The operation is done *in-place* when *o* supports "
"it.  This is the equivalent of the Python expression ``o *= count``."
msgstr ""
"回傳重複序列物件 *o* *count* 次的結果，或者在失敗時回傳 ``NULL``。當 *o* 支援"
"時，該操作就地*完成。這相當於 Python 表達式 ``o *= count``。"

#: ../../c-api/sequence.rst:55
#, fuzzy
msgid ""
"Return the *i*\\ th element of *o*, or ``NULL`` on failure. This is the "
"equivalent of the Python expression ``o[i]``."
msgstr ""
"回傳 *o* 的 *i*\\ th 元素，或失敗時回傳 ``NULL``。這相當於 Python 表達式 "
"``o[i]``。"

#: ../../c-api/sequence.rst:61
#, fuzzy
msgid ""
"Return the slice of sequence object *o* between *i1* and *i2*, or ``NULL`` "
"on failure. This is the equivalent of the Python expression ``o[i1:i2]``."
msgstr ""
"回傳 *i1* 和 *i2* 之間的序列物件 *o* 的切片，或者在失敗時回傳 ``NULL``。這相"
"當於 Python 表達式 ``o[i1:i2]``。"

#: ../../c-api/sequence.rst:67
#, fuzzy
msgid ""
"Assign object *v* to the *i*\\ th element of *o*.  Raise an exception and "
"return ``-1`` on failure; return ``0`` on success.  This is the equivalent "
"of the Python statement ``o[i] = v``.  This function *does not* steal a "
"reference to *v*."
msgstr ""
"將物件 *v* 分配給 *o* 的第 *i*\\ 個元素。引發例外並在失敗時回傳 ``-1``；成功"
"回傳 ``0``。這相當於 Python 語句 ``o[i] = v``。此函式*不會*竊取對*v* 的引用。"

#: ../../c-api/sequence.rst:72
#, fuzzy
msgid ""
"If *v* is ``NULL``, the element is deleted, but this feature is deprecated "
"in favour of using :c:func:`PySequence_DelItem`."
msgstr ""
"如果 *v* 為 ``NULL``，則刪除該元素，但不推薦使用此功能以支援使用 :c:func:"
"`PySequence_DelItem`。"

#: ../../c-api/sequence.rst:78
#, fuzzy
msgid ""
"Delete the *i*\\ th element of object *o*.  Returns ``-1`` on failure.  This "
"is the equivalent of the Python statement ``del o[i]``."
msgstr ""
"刪除物件 *o* 的第 *i*\\ 個元素。失敗時回傳 ``-1``。這相當於 Python 語句 "
"``del o[i]``。"

#: ../../c-api/sequence.rst:84
#, fuzzy
msgid ""
"Assign the sequence object *v* to the slice in sequence object *o* from *i1* "
"to *i2*.  This is the equivalent of the Python statement ``o[i1:i2] = v``."
msgstr ""
"將序列物件 *v* 分配給序列物件 *o* 中從 *i1* 到 *i2* 的切片。這相當於 Python "
"語句 ``o[i1:i2] = v``。"

#: ../../c-api/sequence.rst:90
#, fuzzy
msgid ""
"Delete the slice in sequence object *o* from *i1* to *i2*.  Returns ``-1`` "
"on failure.  This is the equivalent of the Python statement ``del o[i1:i2]``."
msgstr ""
"刪除序列物件 *o* 中從 *i1* 到 *i2* 的切片。失敗時回傳 ``-1``。這相當於 "
"Python 語句 ``del o[i1:i2]``。"

#: ../../c-api/sequence.rst:96
#, fuzzy
msgid ""
"Return the number of occurrences of *value* in *o*, that is, return the "
"number of keys for which ``o[key] == value``.  On failure, return ``-1``.  "
"This is equivalent to the Python expression ``o.count(value)``."
msgstr ""
"回傳 *o* 中 *value* 出現的次數，即回傳 ``o[key] == value`` 的鍵的個數。失敗"
"時，回傳 ``-1``。這等同於 Python 表達式 ``o.count(value)``。"

#: ../../c-api/sequence.rst:103
#, fuzzy
msgid ""
"Determine if *o* contains *value*.  If an item in *o* is equal to *value*, "
"return ``1``, otherwise return ``0``. On error, return ``-1``.  This is "
"equivalent to the Python expression ``value in o``."
msgstr ""
"確定 *o* 是否包含 *value*。如果 *o* 中的一項等於 *value*，則回傳 ``1``，否則"
"回傳 ``0``。出錯時，回傳 ``-1``。這等同於 Python 表達式“o 中的值”。"

#: ../../c-api/sequence.rst:110
#, fuzzy
msgid ""
"Return the first index *i* for which ``o[i] == value``.  On error, return "
"``-1``.    This is equivalent to the Python expression ``o.index(value)``."
msgstr ""
"回傳 ``o[i] == value`` 的第一個索引 *i*。出錯時，回傳 ``-1``。這等同於 "
"Python 表達式 ``o.index(value)``。"

#: ../../c-api/sequence.rst:116
#, fuzzy
msgid ""
"Return a list object with the same contents as the sequence or iterable *o*, "
"or ``NULL`` on failure.  The returned list is guaranteed to be new.  This is "
"equivalent to the Python expression ``list(o)``."
msgstr ""
"回傳一個與序列或可疊代 *o* 具有相同內容的列表物件，或者在失敗時回傳 "
"``NULL``。回傳的列表保證是新的。這等同於 Python 表達式 ``list(o)``。"

#: ../../c-api/sequence.rst:125
#, fuzzy
msgid ""
"Return a tuple object with the same contents as the sequence or iterable "
"*o*, or ``NULL`` on failure.  If *o* is a tuple, a new reference will be "
"returned, otherwise a tuple will be constructed with the appropriate "
"contents.  This is equivalent to the Python expression ``tuple(o)``."
msgstr ""
"回傳一個與序列或可疊代 *o* 具有相同內容的元組物件，或者在失敗時回傳 "
"``NULL``。如果 *o* 是一個元組，將回傳一個新的引用，否則將使用適當的內容構造一"
"個元組。這等同於 Python 表達式 ``tuple(o)``。"

#: ../../c-api/sequence.rst:133
#, fuzzy
msgid ""
"Return the sequence or iterable *o* as an object usable by the other "
"``PySequence_Fast*`` family of functions. If the object is not a sequence or "
"iterable, raises :exc:`TypeError` with *m* as the message text. Returns "
"``NULL`` on failure."
msgstr ""
"將序列或可疊代 *o* 作為其他“PySequence_Fast*”系列函式可用的物件回傳。如果對像"
"不是序列或可疊代物件，則引發 :exc:`TypeError` 並將 *m* 作為消息文本。失敗時回"
"傳 ``NULL`` 。"

#: ../../c-api/sequence.rst:138
#, fuzzy
msgid ""
"The ``PySequence_Fast*`` functions are thus named because they assume *o* is "
"a :c:type:`PyTupleObject` or a :c:type:`PyListObject` and access the data "
"fields of *o* directly."
msgstr ""
"``PySequence_Fast*`` 函式之所以這樣命名，是因為它們假定 *o* 是 PyTupleObject "
"或 PyListObject 並直接訪問 *o* 的資料欄位。"

#: ../../c-api/sequence.rst:142
#, fuzzy
msgid ""
"As a CPython implementation detail, if *o* is already a sequence or list, it "
"will be returned."
msgstr "作為 CPython 實作細節，如果 *o* 已經是一個序列或列表，它將被回傳。"

#: ../../c-api/sequence.rst:148
#, fuzzy
msgid ""
"Returns the length of *o*, assuming that *o* was returned by :c:func:"
"`PySequence_Fast` and that *o* is not ``NULL``.  The size can also be "
"retrieved by calling :c:func:`PySequence_Size` on *o*, but :c:func:"
"`PySequence_Fast_GET_SIZE` is faster because it can assume *o* is a list or "
"tuple."
msgstr ""
"回傳 *o* 的長度，假設 *o* 由 :c:func:`PySequence_Fast` 回傳並且 *o* 不是 "
"``NULL``。也可以通過在 *o* 上呼叫 PySequence_Size 來檢索大小，但是 "
"PySequence_Fast_GET_SIZE 更快，因為它可以假定 *o* 是列表或元組。"

#: ../../c-api/sequence.rst:157
#, fuzzy
msgid ""
"Return the *i*\\ th element of *o*, assuming that *o* was returned by :c:"
"func:`PySequence_Fast`, *o* is not ``NULL``, and that *i* is within bounds."
msgstr ""
"回傳 *o* 的第 *i*\\ 個元素，假設 *o* 由 :c:func:`PySequence_Fast` 回傳，*o* "
"不是 ``NULL``，並且 *i* 在範圍內。"

#: ../../c-api/sequence.rst:163
#, fuzzy
msgid ""
"Return the underlying array of PyObject pointers.  Assumes that *o* was "
"returned by :c:func:`PySequence_Fast` and *o* is not ``NULL``."
msgstr ""
"回傳 PyObject 指標的底層數組。假設 *o* 由 :c:func:`PySequence_Fast` 回傳並且 "
"*o* 不是 ``NULL``。"

#: ../../c-api/sequence.rst:166
#, fuzzy
msgid ""
"Note, if a list gets resized, the reallocation may relocate the items array. "
"So, only use the underlying array pointer in contexts where the sequence "
"cannot change."
msgstr ""
"請注意，如果調整列表的大小，重新分配可能會重新定位 items 數組。因此，僅在序列"
"無法更改的上下文中使用底層數組指標。"

#: ../../c-api/sequence.rst:173
#, fuzzy
msgid ""
"Return the *i*\\ th element of *o* or ``NULL`` on failure. Faster form of :c:"
"func:`PySequence_GetItem` but without checking that :c:func:"
"`PySequence_Check` on *o* is true and without adjustment for negative "
"indices."
msgstr ""
"失敗時回傳 *o* 的第 *i*\\ 個元素或 ``NULL``。更快的 :c:func:"
"`PySequence_GetItem` 形式，但沒有檢查 *o* 上的 :c:func:`PySequence_Check` 是"
"否為真，也沒有對負索引進行調整。"
