# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-15 20:43+0000\n"
"PO-Revision-Date: 2018-05-23 14:30+0000\n"
"Last-Translator: Adrian Liaw <adrianliaw2000@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/capsule.rst:6
#, fuzzy
msgid "Capsules"
msgstr "膠囊"

#: ../../c-api/capsule.rst:10
msgid ""
"Refer to :ref:`using-capsules` for more information on using these objects."
msgstr "有關使用這些物件的更多資訊，請參閱 :ref:`using-capsules`。"

#: ../../c-api/capsule.rst:17
#, fuzzy
msgid ""
"This subtype of :c:type:`PyObject` represents an opaque value, useful for C "
"extension modules who need to pass an opaque value (as a :c:expr:`void*` "
"pointer) through Python code to other C code.  It is often used to make a C "
"function pointer defined in one module available to other modules, so the "
"regular import mechanism can be used to access C APIs defined in dynamically "
"loaded modules."
msgstr ""
":c:type:`PyObject` 的這種子型別表示一個不透明值，對於需要通過 Python "
"程式碼將不透明值（作為 :c:expr:`void*` 指標）傳遞給其他 C 程式碼的 C "
"擴充模組很有用。它通常用於使一個模組中定義的 C 函式指標可用於其他模組，"
"因此常規導入機制可用於訪問動態加載模組中定義的 C API。"

#: ../../c-api/capsule.rst:27
#, fuzzy
msgid "The type of a destructor callback for a capsule.  Defined as::"
msgstr "膠囊的析構函式回呼型別。定義為：："

#: ../../c-api/capsule.rst:31
#, fuzzy
msgid ""
"See :c:func:`PyCapsule_New` for the semantics of PyCapsule_Destructor "
"callbacks."
msgstr "有關 PyCapsule_Destructor 回呼的語義，請參閱:c:func:`PyCapsule_New`。"

#: ../../c-api/capsule.rst:37
#, fuzzy
msgid ""
"Return true if its argument is a :c:type:`PyCapsule`.  This function always "
"succeeds."
msgstr "如果它的參數是 :c:type:`PyCapsule` 則回傳 true。這個函式總是成功的。"

#: ../../c-api/capsule.rst:43
#, fuzzy
msgid ""
"Create a :c:type:`PyCapsule` encapsulating the *pointer*.  The *pointer* "
"argument may not be ``NULL``."
msgstr "建立一個封裝 *pointer* 的 :c:type:`PyCapsule`。 *pointer* 參數不能為 ``NULL`` 。"

#: ../../c-api/capsule.rst:46
msgid "On failure, set an exception and return ``NULL``."
msgstr "失敗時，設定例外並回傳 ``NULL``。"

#: ../../c-api/capsule.rst:48
#, fuzzy
msgid ""
"The *name* string may either be ``NULL`` or a pointer to a valid C string.  "
"If non-``NULL``, this string must outlive the capsule.  (Though it is "
"permitted to free it inside the *destructor*.)"
msgstr ""
"*name* 字串可以是 ``NULL`` 或指向有效 C "
"字串的指標。如果非 ``NULL`` ，則此字串必須比膠囊更有效。 （儘管允許在 "
"*destructor* 中釋放它。）"

#: ../../c-api/capsule.rst:52
#, fuzzy
msgid ""
"If the *destructor* argument is not ``NULL``, it will be called with the "
"capsule as its argument when it is destroyed."
msgstr "如果 *destructor* 參數不是 ``NULL``，當它被銷毀時，它將以膠囊作為參數被呼叫。"

#: ../../c-api/capsule.rst:55
#, fuzzy
msgid ""
"If this capsule will be stored as an attribute of a module, the *name* "
"should be specified as ``modulename.attributename``.  This will enable other "
"modules to import the capsule using :c:func:`PyCapsule_Import`."
msgstr ""
"如果此膠囊將儲存為模組的屬性，則 *name* 應指定為 ``modulename."
"attributename``。這將使其他模組能夠使用 PyCapsule_Import 導入膠囊。"

#: ../../c-api/capsule.rst:62
#, fuzzy
msgid ""
"Retrieve the *pointer* stored in the capsule.  On failure, set an exception "
"and return ``NULL``."
msgstr "檢索儲存在膠囊中的*指標*。失敗時，設定例外並回傳 ``NULL`` 。"

#: ../../c-api/capsule.rst:65
#, fuzzy
msgid ""
"The *name* parameter must compare exactly to the name stored in the capsule. "
"If the name stored in the capsule is ``NULL``, the *name* passed in must "
"also be ``NULL``.  Python uses the C function :c:func:`strcmp` to compare "
"capsule names."
msgstr ""
"*name* "
"參數必須與儲存在膠囊中的名稱進行精確比較。如果儲存在膠囊中的名稱為 ``NULL`` ，"
"則傳入的 *name* 也必須為 ``NULL`` 。 Python 使用 C 函式 :c:func:`strcmp` "
"來比較膠囊名稱。"

#: ../../c-api/capsule.rst:73
#, fuzzy
msgid ""
"Return the current destructor stored in the capsule.  On failure, set an "
"exception and return ``NULL``."
msgstr "回傳儲存在膠囊中的當前析構函式。失敗時，設定例外並回傳 ``NULL`` 。"

#: ../../c-api/capsule.rst:76
#, fuzzy
msgid ""
"It is legal for a capsule to have a ``NULL`` destructor.  This makes a "
"``NULL`` return code somewhat ambiguous; use :c:func:`PyCapsule_IsValid` or :"
"c:func:`PyErr_Occurred` to disambiguate."
msgstr ""
"膠囊擁有一個 ``NULL`` 析構函式是合法的。這使得 ``NULL`` 回傳碼有些模糊；使用 "
":c:func:`PyCapsule_IsValid` 或 :c:func:`PyErr_Occurred` 來消除歧義。"

#: ../../c-api/capsule.rst:83
#, fuzzy
msgid ""
"Return the current context stored in the capsule.  On failure, set an "
"exception and return ``NULL``."
msgstr "回傳儲存在膠囊中的當前上下文。失敗時，設定例外並回傳 ``NULL`` 。"

#: ../../c-api/capsule.rst:86
#, fuzzy
msgid ""
"It is legal for a capsule to have a ``NULL`` context.  This makes a ``NULL`` "
"return code somewhat ambiguous; use :c:func:`PyCapsule_IsValid` or :c:func:"
"`PyErr_Occurred` to disambiguate."
msgstr ""
"膠囊具有 ``NULL`` 上下文是合法的。這使得 ``NULL`` 回傳碼有些模糊；使用 "
":c:func:`PyCapsule_IsValid` 或 :c:func:`PyErr_Occurred` 來消除歧義。"

#: ../../c-api/capsule.rst:93
#, fuzzy
msgid ""
"Return the current name stored in the capsule.  On failure, set an exception "
"and return ``NULL``."
msgstr "回傳儲存在膠囊中的當前名稱。失敗時，設定例外並回傳 ``NULL`` 。"

#: ../../c-api/capsule.rst:96
#, fuzzy
msgid ""
"It is legal for a capsule to have a ``NULL`` name.  This makes a ``NULL`` "
"return code somewhat ambiguous; use :c:func:`PyCapsule_IsValid` or :c:func:"
"`PyErr_Occurred` to disambiguate."
msgstr ""
"膠囊具有 ``NULL`` 名稱是合法的。這使得 ``NULL`` 回傳碼有些模糊；使用 "
":c:func:`PyCapsule_IsValid` 或 :c:func:`PyErr_Occurred` 來消除歧義。"

#: ../../c-api/capsule.rst:103
#, fuzzy
msgid ""
"Import a pointer to a C object from a capsule attribute in a module.  The "
"*name* parameter should specify the full name to the attribute, as in "
"``module.attribute``.  The *name* stored in the capsule must match this "
"string exactly."
msgstr ""
"從模組中的膠囊屬性導入指向 C 物件的指標。 *name* 參數應指定屬性的全名，如 "
"``module.attribute`` 中所示。儲存在膠囊中的 *name* 必須與此字串完全匹配。"

#: ../../c-api/capsule.rst:108
#, fuzzy
msgid ""
"Return the capsule's internal *pointer* on success.  On failure, set an "
"exception and return ``NULL``."
msgstr "成功回傳膠囊的內部*指標*。失敗時，設定例外並回傳 ``NULL`` 。"

#: ../../c-api/capsule.rst:111
#, fuzzy
msgid "*no_block* has no effect anymore."
msgstr "*no_block* 不再有效。"

#: ../../c-api/capsule.rst:117
#, fuzzy
msgid ""
"Determines whether or not *capsule* is a valid capsule.  A valid capsule is "
"non-``NULL``, passes :c:func:`PyCapsule_CheckExact`, has a non-``NULL`` "
"pointer stored in it, and its internal name matches the *name* parameter.  "
"(See :c:func:`PyCapsule_GetPointer` for information on how capsule names are "
"compared.)"
msgstr ""
"確定 *capsule* 是否是一個有效的膠囊。一個有效的膠囊是非``NULL``，傳遞 :c:func"
":`PyCapsule_CheckExact`，其中儲存了一個非``NULL`` 指標，並且其內部名稱與 "
"*name* 參數匹配。 "
"（有關如何比較膠囊名稱的資訊，請參閱:c:func:`PyCapsule_GetPointer`。）"

#: ../../c-api/capsule.rst:123
#, fuzzy
msgid ""
"In other words, if :c:func:`PyCapsule_IsValid` returns a true value, calls "
"to any of the accessors (any function starting with :c:func:`PyCapsule_Get`) "
"are guaranteed to succeed."
msgstr ""
"換句話說，如果 :c:func:`PyCapsule_IsValid` 回傳真值，則對任何訪問器的呼叫（"
"任何以 :c:func:`PyCapsule_Get` 開頭的函式）都保證成功。"

#: ../../c-api/capsule.rst:127
#, fuzzy
msgid ""
"Return a nonzero value if the object is valid and matches the name passed "
"in. Return ``0`` otherwise.  This function will not fail."
msgstr "如果對像有效且與傳入的名稱匹配，則回傳一個非零值。否則回傳 ``0``。這個功能不會失"
"效。"

#: ../../c-api/capsule.rst:133
#, fuzzy
msgid "Set the context pointer inside *capsule* to *context*."
msgstr "將 *capsule* 中的情境指標設定為 *context*。"

#: ../../c-api/capsule.rst:135 ../../c-api/capsule.rst:142
#: ../../c-api/capsule.rst:151 ../../c-api/capsule.rst:159
#, fuzzy
msgid ""
"Return ``0`` on success.  Return nonzero and set an exception on failure."
msgstr "成功回傳 ``0``。回傳非零值並在失敗時設定例外。"

#: ../../c-api/capsule.rst:140
#, fuzzy
msgid "Set the destructor inside *capsule* to *destructor*."
msgstr "將 *capsule* 內的析構函式設定為 *destructor*。"

#: ../../c-api/capsule.rst:147
#, fuzzy
msgid ""
"Set the name inside *capsule* to *name*.  If non-``NULL``, the name must "
"outlive the capsule.  If the previous *name* stored in the capsule was not "
"``NULL``, no attempt is made to free it."
msgstr ""
"將 *capsule* 中的名稱設定為 *name*。如果非 ``NULL`` ，名稱必須比膠囊更有效。"
"如果先前儲存在膠囊中的 *name* 不是 ``NULL`` ，則不會嘗試釋放它。"

#: ../../c-api/capsule.rst:156
#, fuzzy
msgid ""
"Set the void pointer inside *capsule* to *pointer*.  The pointer may not be "
"``NULL``."
msgstr "將 *capsule* 中的 void 指標設定為 *pointer*。指標可能不是 ``NULL`` 。"
