# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-05 00:18+0000\n"
"PO-Revision-Date: 2015-12-09 17:51+0000\n"
"Last-Translator: Liang-Bo Wang <me@liang2.tw>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.2.2\n"

#: ../../c-api/code.rst:8
msgid "Code Objects"
msgstr "程式碼物件"

#: ../../c-api/code.rst:12
#, fuzzy
msgid ""
"Code objects are a low-level detail of the CPython implementation. Each one "
"represents a chunk of executable code that hasn't yet been bound into a "
"function."
msgstr ""
"程式碼對像是 CPython 實作的低階細節。每個都代表一大塊尚未綁定到函式中的可執行"
"程式碼。"

#: ../../c-api/code.rst:18
#, fuzzy
msgid ""
"The C structure of the objects used to describe code objects.  The fields of "
"this type are subject to change at any time."
msgstr "用於描述程式碼物件的物件的C 結構。此類欄位隨時可能更改。"

#: ../../c-api/code.rst:24
#, fuzzy
msgid ""
"This is an instance of :c:type:`PyTypeObject` representing the Python :class:"
"`code` type."
msgstr ""
"這是 :c:type:`PyTypeObject` 的一個實例，表示 Python :class:`code` 型別。"

#: ../../c-api/code.rst:30
#, fuzzy
msgid ""
"Return true if *co* is a :class:`code` object.  This function always "
"succeeds."
msgstr "如果 *co* 是 :class:`code` 物件，則回傳 true。這個函式總是成功的。"

#: ../../c-api/code.rst:34
#, fuzzy
msgid "Return the number of free variables in *co*."
msgstr "回傳 *co* 中自由變數的數量。"

#: ../../c-api/code.rst:38
#, fuzzy
msgid ""
"Return a new code object.  If you need a dummy code object to create a "
"frame, use :c:func:`PyCode_NewEmpty` instead.  Calling :c:func:`PyCode_New` "
"directly will bind you to a precise Python version since the definition of "
"the bytecode changes often. The many arguments of this function are inter-"
"dependent in complex ways, meaning that subtle changes to values are likely "
"to result in incorrect execution or VM crashes. Use this function only with "
"extreme care."
msgstr ""
"回傳一個新的程式碼物件。如果你需要一個虛擬程式碼物件來建立一個框架，請改用:c:"
"func:`PyCode_NewEmpty`。直接呼叫 :c:func:`PyCode_New` 會將您綁定到一個精確的 "
"Python 版本，因為位元組碼的定義經常變化。此函式的許多參數以復雜的方式相互依"
"賴，這意味著對值的細微更改可能會導致執行不正確或 VM 崩潰。請務必格外小心地使"
"用此功能。"

#: ../../c-api/code.rst:45 ../../c-api/code.rst:55
msgid "Added ``exceptiontable`` parameter."
msgstr "新增了 ``exceptiontable`` 參數。"

#: ../../c-api/code.rst:50
#, fuzzy
msgid ""
"Similar to :c:func:`PyCode_New`, but with an extra \"posonlyargcount\" for "
"positional-only arguments. The same caveats that apply to ``PyCode_New`` "
"also apply to this function."
msgstr ""
"類似於 :c:func:`PyCode_New`，但有一個額外的 ``posonlyargcount`` 用於僅位置參"
"數。適用於 ``PyCode_New`` 的相同警告也適用於此函式。"

#: ../../c-api/code.rst:60
#, fuzzy
msgid ""
"Return a new empty code object with the specified filename, function name, "
"and first line number. The resulting code object will raise an ``Exception`` "
"if executed."
msgstr ""
"回傳具有指定文件名、函式名和第一行號的新空程式碼物件。如果執行，生成的程式碼"
"物件將引發“例外”。"

#: ../../c-api/code.rst:66
#, fuzzy
msgid ""
"Return the line number of the instruction that occurs on or before "
"``byte_offset`` and ends after it. If you just need the line number of a "
"frame, use :c:func:`PyFrame_GetLineNumber` instead."
msgstr ""
"回傳在“byte_offset”之前或之前發生並在其之後結束的指令的行號。如果您只需要幀的"
"行號，請改用:c:func:`PyFrame_GetLineNumber`。"

#: ../../c-api/code.rst:69
#, fuzzy
msgid ""
"For efficiently iterating over the line numbers in a code object, use `the "
"API described in PEP 626 <https://peps.python.org/pep-0626/#out-of-process-"
"debuggers-and-profilers>`_."
msgstr ""
"為了有效地疊代程式碼對像中的行號，請使用 PEP 626 <https://peps.python.org/"
"pep-0626/#out-of-process-debuggers-and-profilers> 中描述的 API `_ ."

#: ../../c-api/code.rst:74
#, fuzzy
msgid ""
"Sets the passed ``int`` pointers to the source code line and column numbers "
"for the instruction at ``byte_offset``. Sets the value to ``0`` when "
"information is not available for any particular element."
msgstr ""
"將傳遞的 ``int``指標設定為“byte_offset”處指令的源程式碼行號和列號。當任何特定"
"元素的資訊不可用時，將值設定為 ``0``。"

#: ../../c-api/code.rst:78
msgid "Returns ``1`` if the function succeeds and 0 otherwise."
msgstr "如果函式成功則回傳 ``1``，否則回傳 0。"

#: ../../c-api/code.rst:84
#, fuzzy
msgid ""
"Equivalent to the Python code ``getattr(co, 'co_code')``. Returns a strong "
"reference to a :c:type:`PyBytesObject` representing the bytecode in a code "
"object. On error, ``NULL`` is returned and an exception is raised."
msgstr ""
"相當於 Python 程式碼 ``getattr(co, 'co_code')``。回傳對錶示程式碼對像中位元組"
"碼的 PyBytesObject 的強引用。出錯時，回傳 ``NULL`` 並引發例外。"

#: ../../c-api/code.rst:89
#, fuzzy
msgid ""
"This ``PyBytesObject`` may be created on-demand by the interpreter and does "
"not necessarily represent the bytecode actually executed by CPython. The "
"primary use case for this function is debuggers and profilers."
msgstr ""
"這個 ``PyBytesObject`` 可以由直譯器按需建立，並不一定代表 CPython 實際執行的"
"位元組碼。此功能的主要用例是除錯器和分析器。"

#: ../../c-api/code.rst:97
#, fuzzy
msgid ""
"Equivalent to the Python code ``getattr(co, 'co_varnames')``. Returns a new "
"reference to a :c:type:`PyTupleObject` containing the names of the local "
"variables. On error, ``NULL`` is returned and an exception is raised."
msgstr ""
"相當於 Python 程式碼 ``getattr(co, 'co_varnames')``。回傳對包含局部變數名稱"
"的 PyTupleObject 的新引用。出錯時，回傳 ``NULL`` 並引發例外。"

#: ../../c-api/code.rst:106
#, fuzzy
msgid ""
"Equivalent to the Python code ``getattr(co, 'co_cellvars')``. Returns a new "
"reference to a :c:type:`PyTupleObject` containing the names of the local "
"variables that are referenced by nested functions. On error, ``NULL`` is "
"returned and an exception is raised."
msgstr ""
"相當於 Python 程式碼 ``getattr(co, 'co_cellvars')``。回傳對 PyTupleObject 的"
"新引用，其中包含嵌套函式引用的局部變數的名稱。出錯時，回傳 ``NULL`` 並引發例"
"外。"

#: ../../c-api/code.rst:115
#, fuzzy
msgid ""
"Equivalent to the Python code ``getattr(co, 'co_freevars')``. Returns a new "
"reference to a :c:type:`PyTupleObject` containing the names of the free "
"variables. On error, ``NULL`` is returned and an exception is raised."
msgstr ""
"相當於 Python 程式碼 ``getattr(co, 'co_freevars')``。回傳對包含自由變數名稱"
"的 PyTupleObject 的新引用。出錯時，回傳 ``NULL`` 並引發例外。"
