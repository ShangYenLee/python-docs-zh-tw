# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Leon H., 2017
# Liang-Bo Wang <me@liang2.tw>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-15 20:43+0000\n"
"PO-Revision-Date: 2023-05-02 17:39+0800\n"
"Last-Translator: Matt Wang <mattwang44@gmail.com>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.2.2\n"

#: ../../c-api/unicode.rst:6
msgid "Unicode Objects and Codecs"
msgstr "Unicode 物件與編解碼器"

#: ../../c-api/unicode.rst:12
msgid "Unicode Objects"
msgstr "Unicode 物件"

#: ../../c-api/unicode.rst:14
#, fuzzy
msgid ""
"Since the implementation of :pep:`393` in Python 3.3, Unicode objects "
"internally use a variety of representations, in order to allow handling the "
"complete range of Unicode characters while staying memory efficient.  There "
"are special cases for strings where all code points are below 128, 256, or "
"65536; otherwise, code points must be below 1114112 (which is the full "
"Unicode range)."
msgstr ""
"自 :pep:`393` 在 Python 3.3 中實作以來，Unicode 對像在內部使用了多種表示形"
"式，以便在保持記憶體效率的同時處理完整範圍的 Unicode 字元。對於所有程式碼點都"
"低於 128、256 或 65536 的字串，存在特殊情況；否則，程式碼點必須低於 1114112"
"（這是完整的 Unicode 範圍）。"

#: ../../c-api/unicode.rst:20
#, fuzzy
msgid ""
":c:expr:`Py_UNICODE*` and UTF-8 representations are created on demand and "
"cached in the Unicode object.  The :c:expr:`Py_UNICODE*` representation is "
"deprecated and inefficient."
msgstr ""
":c:expr:`Py_UNICODE*` 和 UTF-8 表示按需建立並快取在 Unicode 對像中。 :c:expr:"
"`Py_UNICODE*` 表示已棄用且效率低下。"

#: ../../c-api/unicode.rst:24
#, fuzzy
msgid ""
"Due to the transition between the old APIs and the new APIs, Unicode objects "
"can internally be in two states depending on how they were created:"
msgstr ""
"由於舊 API 和新 API 之間的轉換，Unicode 物件可以在內部處於兩種狀態，具體取決"
"於它們的建立方式："

#: ../../c-api/unicode.rst:27
#, fuzzy
msgid ""
"\"canonical\" Unicode objects are all objects created by a non-deprecated "
"Unicode API.  They use the most efficient representation allowed by the "
"implementation."
msgstr ""
"“規範的”Unicode 對像是由未棄用的 Unicode API 建立的所有物件。他們使用實作允許"
"的最有效的表示。"

#: ../../c-api/unicode.rst:31
#, fuzzy
msgid ""
"\"legacy\" Unicode objects have been created through one of the deprecated "
"APIs (typically :c:func:`PyUnicode_FromUnicode`) and only bear the :c:expr:"
"`Py_UNICODE*` representation; you will have to call :c:func:"
"`PyUnicode_READY` on them before calling any other API."
msgstr ""
"“遺留”Unicode 對像是通過一種已棄用的 API（通常是 :c:func:"
"`PyUnicode_FromUnicode`）建立的，並且只帶有 :c:expr:`Py_UNICODE*` 表示；在呼"
"叫任何其他 API 之前，您必須對它們呼叫 :c:func:`PyUnicode_READY`。"

#: ../../c-api/unicode.rst:37
#, fuzzy
msgid ""
"The \"legacy\" Unicode object will be removed in Python 3.12 with deprecated "
"APIs. All Unicode objects will be \"canonical\" since then. See :pep:`623` "
"for more information."
msgstr ""
"“遺留”Unicode 物件將在 Python 3.12 中被棄用的 API 移除。從那時起，所有 "
"Unicode 對像都將是“規範的”。有關詳細資訊，請參閱 :pep:`623`。"

#: ../../c-api/unicode.rst:43
#, fuzzy
msgid "Unicode Type"
msgstr "Unicode 型別"

#: ../../c-api/unicode.rst:45
#, fuzzy
msgid ""
"These are the basic Unicode object types used for the Unicode implementation "
"in Python:"
msgstr "這些是用於 Python 中 Unicode 實作的基本 Unicode 對像型別："

#: ../../c-api/unicode.rst:52
#, fuzzy
msgid ""
"These types are typedefs for unsigned integer types wide enough to contain "
"characters of 32 bits, 16 bits and 8 bits, respectively.  When dealing with "
"single Unicode characters, use :c:type:`Py_UCS4`."
msgstr ""
"這些型別是無符號整數型別的型別定義，其寬度足以分別包含 32 位、16 位和 8 位字"
"元。處理單個 Unicode 字元時，請使用 :c:type:`Py_UCS4`。"

#: ../../c-api/unicode.rst:61
#, fuzzy
msgid ""
"This is a typedef of :c:expr:`wchar_t`, which is a 16-bit type or 32-bit "
"type depending on the platform."
msgstr ""
"這是 :c:expr:`wchar_t` 的 typedef，它是 16 位型別或 32 位型別，具體取決於平"
"台。"

#: ../../c-api/unicode.rst:64
#, fuzzy
msgid ""
"In previous versions, this was a 16-bit type or a 32-bit type depending on "
"whether you selected a \"narrow\" or \"wide\" Unicode version of Python at "
"build time."
msgstr ""
"在以前的版本中，這是 16 位型別還是 32 位型別，具體取決於您在構建時選擇的是“窄"
"版”還是“寬版”Python Unicode 版本。"

#: ../../c-api/unicode.rst:74
#, fuzzy
msgid ""
"These subtypes of :c:type:`PyObject` represent a Python Unicode object.  In "
"almost all cases, they shouldn't be used directly, since all API functions "
"that deal with Unicode objects take and return :c:type:`PyObject` pointers."
msgstr ""
":c:type:`PyObject` 的這些子型別表示 Python Unicode 物件。在幾乎所有情況下，不"
"應直接使用它們，因為所有處理 Unicode 物件的 API 函式都採用並回傳 :c:type:"
"`PyObject` 指標。"

#: ../../c-api/unicode.rst:83
#, fuzzy
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python Unicode type.  "
"It is exposed to Python code as ``str``."
msgstr ""
":c:type:`PyTypeObject` 的這個實例表示 Python Unicode 型別。它作為 ``str`` 暴"
"露給 Python 程式碼。"

#: ../../c-api/unicode.rst:87
#, fuzzy
msgid ""
"The following APIs are C macros and static inlined functions for fast checks "
"and access to internal read-only data of Unicode objects:"
msgstr ""
"以下 API 是 C 巨集和靜態內聯函式，用於快速檢查和訪問 Unicode 物件的內部只讀資"
"料："

#: ../../c-api/unicode.rst:92
#, fuzzy
msgid ""
"Return true if the object *o* is a Unicode object or an instance of a "
"Unicode subtype.  This function always succeeds."
msgstr ""
"如果物件 *o* 是 Unicode 對像或 Unicode 子型別的實例，則回傳 true。這個函式總"
"是成功的。"

#: ../../c-api/unicode.rst:98
#, fuzzy
msgid ""
"Return true if the object *o* is a Unicode object, but not an instance of a "
"subtype.  This function always succeeds."
msgstr ""
"如果物件 *o* 是 Unicode 物件，但不是子型別的實例，則回傳 true。這個函式總是成"
"功的。"

#: ../../c-api/unicode.rst:104
#, fuzzy
msgid ""
"Ensure the string object *o* is in the \"canonical\" representation.  This "
"is required before using any of the access macros described below."
msgstr ""
"確保字串物件 *o* 在“規範”表示中。在使用下面描述的任何訪問巨集之前，這是必需"
"的。"

#: ../../c-api/unicode.rst:109
#, fuzzy
msgid ""
"Returns ``0`` on success and ``-1`` with an exception set on failure, which "
"in particular happens if memory allocation fails."
msgstr ""
"成功時回傳 ``0``，失敗時回傳 ``-1``並設定例外，尤其是在記憶體分配失敗時。"

#: ../../c-api/unicode.rst:115
#, fuzzy
msgid "This API will be removed with :c:func:`PyUnicode_FromUnicode`."
msgstr "此 API 將隨 :c:func:`PyUnicode_FromUnicode` 一起刪除。"

#: ../../c-api/unicode.rst:120
#, fuzzy
msgid ""
"Return the length of the Unicode string, in code points.  *o* has to be a "
"Unicode object in the \"canonical\" representation (not checked)."
msgstr ""
"回傳 Unicode 字串的長度，以程式碼點為單位。 *o* 必須是“規範”表示中的 Unicode "
"物件（未選中）。"

#: ../../c-api/unicode.rst:130
#, fuzzy
msgid ""
"Return a pointer to the canonical representation cast to UCS1, UCS2 or UCS4 "
"integer types for direct character access.  No checks are performed if the "
"canonical representation has the correct character size; use :c:func:"
"`PyUnicode_KIND` to select the right macro.  Make sure :c:func:"
"`PyUnicode_READY` has been called before accessing this."
msgstr ""
"回傳指向轉換為 UCS1、UCS2 或 UCS4 整數型別的規範表示的指標，以進行直接字元訪"
"問。如果規範表示具有正確的字元大小，則不執行檢查；使用 :c:func:"
"`PyUnicode_KIND` 選擇正確的巨集。確保在訪問它之前呼叫了 :c:func:"
"`PyUnicode_READY`。"

#: ../../c-api/unicode.rst:144
#, fuzzy
msgid "Return values of the :c:func:`PyUnicode_KIND` macro."
msgstr ":c:func:`PyUnicode_KIND` 巨集的回傳值。"

#: ../../c-api/unicode.rst:149
msgid "``PyUnicode_WCHAR_KIND`` is deprecated."
msgstr "``PyUnicode_WCHAR_KIND`` 已棄用。"

#: ../../c-api/unicode.rst:154
#, fuzzy
msgid ""
"Return one of the PyUnicode kind constants (see above) that indicate how "
"many bytes per character this Unicode object uses to store its data.  *o* "
"has to be a Unicode object in the \"canonical\" representation (not checked)."
msgstr ""
"回傳 PyUnicode 型別常數之一（見上文），指示此 Unicode 對像用於儲存其資料的每"
"個字元的位元組數。 *o* 必須是“規範”表示中的 Unicode 物件（未選中）。"

#: ../../c-api/unicode.rst:165
#, fuzzy
msgid ""
"Return a void pointer to the raw Unicode buffer.  *o* has to be a Unicode "
"object in the \"canonical\" representation (not checked)."
msgstr ""
"回傳指向原始 Unicode 緩衝區的空指標。 *o* 必須是“規範”表示中的 Unicode 物件"
"（未選中）。"

#: ../../c-api/unicode.rst:174
#, fuzzy
msgid ""
"Write into a canonical representation *data* (as obtained with :c:func:"
"`PyUnicode_DATA`).  This function performs no sanity checks, and is intended "
"for usage in loops.  The caller should cache the *kind* value and *data* "
"pointer as obtained from other calls.  *index* is the index in the string "
"(starts at 0) and *value* is the new code point value which should be "
"written to that location."
msgstr ""
"寫入規範表示*資料*（通過 :c:func:`PyUnicode_DATA` 獲得）。此函式不執行健全性"
"檢查，旨在用於循環中。呼叫者應該快取從其他呼叫中獲得的 *kind* 值和 *data* 指"
"標。 *index* 是字串中的索引（從 0 開始），*value* 是應該寫入該位置的新程式碼"
"點值。"

#: ../../c-api/unicode.rst:187
#, fuzzy
msgid ""
"Read a code point from a canonical representation *data* (as obtained with :"
"c:func:`PyUnicode_DATA`).  No checks or ready calls are performed."
msgstr ""
"從規範表示 *data* 中讀取程式碼點（通過 :c:func:`PyUnicode_DATA` 獲得）。不執"
"行任何檢查或就緒呼叫。"

#: ../../c-api/unicode.rst:195
#, fuzzy
msgid ""
"Read a character from a Unicode object *o*, which must be in the "
"\"canonical\" representation.  This is less efficient than :c:func:"
"`PyUnicode_READ` if you do multiple consecutive reads."
msgstr ""
"從 Unicode 物件 *o* 中讀取一個字元，它必須在“規範”表示中。如果您進行多次連續"
"讀取，這比 :c:func:`PyUnicode_READ` 效率低。"

#: ../../c-api/unicode.rst:204
#, fuzzy
msgid ""
"Return the maximum code point that is suitable for creating another string "
"based on *o*, which must be in the \"canonical\" representation.  This is "
"always an approximation but more efficient than iterating over the string."
msgstr ""
"回傳適合基於 *o* 建立另一個字串的最大程式碼點，它必須在“規範”表示中。這始終是"
"一個近似值，但比遍歷字串更有效。"

#: ../../c-api/unicode.rst:213
#, fuzzy
msgid ""
"Return the size of the deprecated :c:type:`Py_UNICODE` representation, in "
"code units (this includes surrogate pairs as 2 units).  *o* has to be a "
"Unicode object (not checked)."
msgstr ""
"回傳已棄用的 :c:type:`Py_UNICODE` 表示的大小，以程式碼單位表示（這包括作為 2 "
"個單位的代理項對）。 *o* 必須是 Unicode 物件（未選中）。"

#: ../../c-api/unicode.rst:219 ../../c-api/unicode.rst:229
#: ../../c-api/unicode.rst:752
#, fuzzy
msgid ""
"Part of the old-style Unicode API, please migrate to using :c:func:"
"`PyUnicode_GET_LENGTH`."
msgstr "部分舊式 Unicode API，請遷移至使用 :c:func:`PyUnicode_GET_LENGTH`。"

#: ../../c-api/unicode.rst:224
#, fuzzy
msgid ""
"Return the size of the deprecated :c:type:`Py_UNICODE` representation in "
"bytes.  *o* has to be a Unicode object (not checked)."
msgstr ""
"以位元組為單位回傳已棄用的 :c:type:`Py_UNICODE` 表示形式的大小。 *o* 必須是 "
"Unicode 物件（未選中）。"

#: ../../c-api/unicode.rst:235
#, fuzzy
msgid ""
"Return a pointer to a :c:type:`Py_UNICODE` representation of the object.  "
"The returned buffer is always terminated with an extra null code point.  It "
"may also contain embedded null code points, which would cause the string to "
"be truncated when used in most C functions.  The ``AS_DATA`` form casts the "
"pointer to :c:expr:`const char *`.  The *o* argument has to be a Unicode "
"object (not checked)."
msgstr ""
"回傳指向物件的 Py_UNICODE 表示的指標。回傳的緩衝區總是以額外的空程式碼點結"
"束。它還可能包含嵌入的空程式碼點，這會導致在大多數 C 函式中使用時字串被截"
"斷。 ``AS_DATA`` 形式將指標轉換為 :c:expr:`const char *`。 *o* 參數必須是 "
"Unicode 物件（未選中）。"

#: ../../c-api/unicode.rst:242
#, fuzzy
msgid ""
"This function is now inefficient -- because in many cases the :c:type:"
"`Py_UNICODE` representation does not exist and needs to be created -- and "
"can fail (return ``NULL`` with an exception set).  Try to port the code to "
"use the new :c:func:`PyUnicode_nBYTE_DATA` macros or use :c:func:"
"`PyUnicode_WRITE` or :c:func:`PyUnicode_READ`."
msgstr ""
"這個函式現在效率低下——因為在許多情況下 :c:type:`Py_UNICODE` 表示不存在並且需"
"要建立——並且可能會失敗（回傳 ``NULL`` 並設定例外）。嘗試移植程式碼以使用新的:"
"c:func:`PyUnicode_nBYTE_DATA` 巨集或使用:c:func:`PyUnicode_WRITE` 或:c:func:"
"`PyUnicode_READ`。"

#: ../../c-api/unicode.rst:251
#, fuzzy
msgid ""
"Part of the old-style Unicode API, please migrate to using the :c:func:"
"`PyUnicode_nBYTE_DATA` family of macros."
msgstr ""
"部分舊式 Unicode API，請遷移到使用 :c:func:`PyUnicode_nBYTE_DATA` 巨集系列。"

#: ../../c-api/unicode.rst:256
#, fuzzy
msgid ""
"Return ``1`` if the string is a valid identifier according to the language "
"definition, section :ref:`identifiers`. Return ``0`` otherwise."
msgstr ""
"如果字串是根據語言定義的有效標識符，則回傳 ``1``，section :ref:"
"`identifiers`。否則回傳 ``0``。"

#: ../../c-api/unicode.rst:259
#, fuzzy
msgid ""
"The function does not call :c:func:`Py_FatalError` anymore if the string is "
"not ready."
msgstr "如果字串未準備好，該函式不再呼叫 Py_FatalError。"

#: ../../c-api/unicode.rst:265
#, fuzzy
msgid "Unicode Character Properties"
msgstr "Unicode 字元屬性"

#: ../../c-api/unicode.rst:267
#, fuzzy
msgid ""
"Unicode provides many different character properties. The most often needed "
"ones are available through these macros which are mapped to C functions "
"depending on the Python configuration."
msgstr ""
"Unicode 提供了許多不同的字元屬性。最經常需要的那些可以通過這些巨集獲得，這些"
"巨集根據 Python 配置映射到 C 函式。"

#: ../../c-api/unicode.rst:274
msgid ""
"Return ``1`` or ``0`` depending on whether *ch* is a whitespace character."
msgstr "根據 *ch* 是否為空白字元回傳 ``1`` 或 ``0``。"

#: ../../c-api/unicode.rst:279
msgid ""
"Return ``1`` or ``0`` depending on whether *ch* is a lowercase character."
msgstr "根據 *ch* 是否為小寫字元回傳 ``1`` 或 ``0``。"

#: ../../c-api/unicode.rst:284
msgid ""
"Return ``1`` or ``0`` depending on whether *ch* is an uppercase character."
msgstr "根據 *ch* 是否為大寫字元回傳 ``1`` 或 ``0``。"

#: ../../c-api/unicode.rst:289
#, fuzzy
msgid ""
"Return ``1`` or ``0`` depending on whether *ch* is a titlecase character."
msgstr "回傳 ``1`` 或 ``0`` 取決於 *ch* 是否是標題字元。"

#: ../../c-api/unicode.rst:294
#, fuzzy
msgid ""
"Return ``1`` or ``0`` depending on whether *ch* is a linebreak character."
msgstr "根據 *ch* 是否為換行符回傳 ``1`` 或 ``0``。"

#: ../../c-api/unicode.rst:299
#, fuzzy
msgid "Return ``1`` or ``0`` depending on whether *ch* is a decimal character."
msgstr "根據 *ch* 是否為十進位字元回傳 ``1`` 或 ``0``。"

#: ../../c-api/unicode.rst:304
#, fuzzy
msgid "Return ``1`` or ``0`` depending on whether *ch* is a digit character."
msgstr "根據 *ch* 是否為數字字元回傳 ``1`` 或 ``0``。"

#: ../../c-api/unicode.rst:309
#, fuzzy
msgid "Return ``1`` or ``0`` depending on whether *ch* is a numeric character."
msgstr "根據 *ch* 是否為數字字元回傳 ``1`` 或 ``0``。"

#: ../../c-api/unicode.rst:314
#, fuzzy
msgid ""
"Return ``1`` or ``0`` depending on whether *ch* is an alphabetic character."
msgstr "根據 *ch* 是否為字母字元，回傳 ``1`` 或 ``0``。"

#: ../../c-api/unicode.rst:319
#, fuzzy
msgid ""
"Return ``1`` or ``0`` depending on whether *ch* is an alphanumeric character."
msgstr "根據 *ch* 是否為字母數字字元回傳 ``1`` 或 ``0``。"

#: ../../c-api/unicode.rst:324
#, fuzzy
msgid ""
"Return ``1`` or ``0`` depending on whether *ch* is a printable character. "
"Nonprintable characters are those characters defined in the Unicode "
"character database as \"Other\" or \"Separator\", excepting the ASCII space "
"(0x20) which is considered printable.  (Note that printable characters in "
"this context are those which should not be escaped when :func:`repr` is "
"invoked on a string. It has no bearing on the handling of strings written "
"to :data:`sys.stdout` or :data:`sys.stderr`.)"
msgstr ""
"根據 *ch* 是否為可印出字元回傳 ``1`` 或 ``0``。不可印出字元是在 Unicode 字元"
"資料庫中定義為“其他”或“分隔符”的那些字元，但被視為可印出的 ASCII 空格 (0x20) "
"除外。 （請注意，此上下文中的可印出字元是在對字串呼叫 :func:`repr` 時不應轉義"
"的字元。它與寫入 :data:`sys.stdout` 或 :data 的字串的處理無關:`sys."
"stderr`。）"

#: ../../c-api/unicode.rst:333
#, fuzzy
msgid "These APIs can be used for fast direct character conversions:"
msgstr "這些 API 可用於快速直接字元轉換："

#: ../../c-api/unicode.rst:338
#, fuzzy
msgid "Return the character *ch* converted to lower case."
msgstr "回傳轉換為小寫的字元 *ch*。"

#: ../../c-api/unicode.rst:340 ../../c-api/unicode.rst:348
#: ../../c-api/unicode.rst:356
#, fuzzy
msgid "This function uses simple case mappings."
msgstr "此函式使用簡單的大小寫映射。"

#: ../../c-api/unicode.rst:346
#, fuzzy
msgid "Return the character *ch* converted to upper case."
msgstr "回傳轉換為大寫的字元 *ch*。"

#: ../../c-api/unicode.rst:354
#, fuzzy
msgid "Return the character *ch* converted to title case."
msgstr "回傳轉換為首字母大寫的字元 *ch*。"

#: ../../c-api/unicode.rst:362
#, fuzzy
msgid ""
"Return the character *ch* converted to a decimal positive integer.  Return "
"``-1`` if this is not possible.  This macro does not raise exceptions."
msgstr ""
"回傳轉換為十進位正整數的字元 *ch*。如果不可能，則回傳 ``-1``。此巨集不會引發"
"例外。"

#: ../../c-api/unicode.rst:368
#, fuzzy
msgid ""
"Return the character *ch* converted to a single digit integer. Return ``-1`` "
"if this is not possible.  This macro does not raise exceptions."
msgstr ""
"回傳轉換為單個數字整數的字元 *ch*。如果不可能，則回傳 ``-1``。此巨集不會引發"
"例外。"

#: ../../c-api/unicode.rst:374
#, fuzzy
msgid ""
"Return the character *ch* converted to a double. Return ``-1.0`` if this is "
"not possible.  This macro does not raise exceptions."
msgstr ""
"回傳轉換為雙精度的字元 *ch*。如果不可能，則回傳 ``-1.0``。此巨集不會引發例"
"外。"

#: ../../c-api/unicode.rst:378
#, fuzzy
msgid "These APIs can be used to work with surrogates:"
msgstr "這些 API 可用於與代理一起工作："

#: ../../c-api/unicode.rst:382
#, fuzzy
msgid "Check if *ch* is a surrogate (``0xD800 <= ch <= 0xDFFF``)."
msgstr "檢查 *ch* 是否是代理項（``0xD800 <= ch <= 0xDFFF``）。"

#: ../../c-api/unicode.rst:386
#, fuzzy
msgid "Check if *ch* is a high surrogate (``0xD800 <= ch <= 0xDBFF``)."
msgstr "檢查 *ch* 是否為高代理（``0xD800 <= ch <= 0xDBFF``）。"

#: ../../c-api/unicode.rst:390
#, fuzzy
msgid "Check if *ch* is a low surrogate (``0xDC00 <= ch <= 0xDFFF``)."
msgstr "檢查 *ch* 是否為低代理（``0xDC00 <= ch <= 0xDFFF``）。"

#: ../../c-api/unicode.rst:394
#, fuzzy
msgid ""
"Join two surrogate characters and return a single Py_UCS4 value. *high* and "
"*low* are respectively the leading and trailing surrogates in a surrogate "
"pair."
msgstr ""
"加入兩個代理字元並回傳單個 Py_UCS4 值。 *high* 和 *low* 分別是代理對中的前導"
"代理和尾隨代理。"

#: ../../c-api/unicode.rst:400
#, fuzzy
msgid "Creating and accessing Unicode strings"
msgstr "建立和訪問 Unicode 字串"

#: ../../c-api/unicode.rst:402
#, fuzzy
msgid ""
"To create Unicode objects and access their basic sequence properties, use "
"these APIs:"
msgstr "要建立 Unicode 物件並訪問它們的基本序列屬性，請使用這些 API："

#: ../../c-api/unicode.rst:407
#, fuzzy
msgid ""
"Create a new Unicode object.  *maxchar* should be the true maximum code "
"point to be placed in the string.  As an approximation, it can be rounded up "
"to the nearest value in the sequence 127, 255, 65535, 1114111."
msgstr ""
"建立一個新的 Unicode 物件。 *maxchar* 應該是要放置在字串中的真正最大程式碼"
"點。作為近似值，它可以四捨五入到序列 127、255、65535、1114111 中最接近的值。"

#: ../../c-api/unicode.rst:411
#, fuzzy
msgid ""
"This is the recommended way to allocate a new Unicode object.  Objects "
"created using this function are not resizable."
msgstr "這是分配新 Unicode 物件的推薦方法。使用此函式建立的對像不可調整大小。"

#: ../../c-api/unicode.rst:420
#, fuzzy
msgid ""
"Create a new Unicode object with the given *kind* (possible values are :c:"
"macro:`PyUnicode_1BYTE_KIND` etc., as returned by :c:func:"
"`PyUnicode_KIND`).  The *buffer* must point to an array of *size* units of "
"1, 2 or 4 bytes per character, as given by the kind."
msgstr ""
"使用給定的 *kind* 建立一個新的 Unicode 物件（可能的值為 :c:macro:"
"`PyUnicode_1BYTE_KIND` 等，由 :c:func:`PyUnicode_KIND` 回傳）。 *buffer* 必須"
"指向每個字元 1、2 或 4 個位元組的 *size* 單元數組，由種類指定。"

#: ../../c-api/unicode.rst:425
#, fuzzy
msgid ""
"If necessary, the input *buffer* is copied and transformed into the "
"canonical representation.  For example, if the *buffer* is a UCS4 string (:c:"
"macro:`PyUnicode_4BYTE_KIND`) and it consists only of codepoints in the UCS1 "
"range, it will be transformed into UCS1 (:c:macro:`PyUnicode_1BYTE_KIND`)."
msgstr ""
"如有必要，輸入 *buffer* 被複製並轉換為規範表示。例如，如果 *buffer* 是 UCS4 "
"字串 (:c:macro:`PyUnicode_4BYTE_KIND`) 並且它僅包含 UCS1 範圍內的程式碼點，它"
"將被轉換為 UCS1 (:c:macro:`PyUnicode_1BYTE_KIND`)。"

#: ../../c-api/unicode.rst:436
#, fuzzy
msgid ""
"Create a Unicode object from the char buffer *u*.  The bytes will be "
"interpreted as being UTF-8 encoded.  The buffer is copied into the new "
"object. If the buffer is not ``NULL``, the return value might be a shared "
"object, i.e. modification of the data is not allowed."
msgstr ""
"從字元緩衝區 *u* 建立一個 Unicode 物件。這些位元組將被解釋為 UTF-8 編碼。緩衝"
"區被複製到新對像中。如果緩衝區不是 ``NULL`` ，則回傳值可能是共享物件，即不允"
"許修改資料。"

#: ../../c-api/unicode.rst:441
#, fuzzy
msgid ""
"If *u* is ``NULL``, this function behaves like :c:func:"
"`PyUnicode_FromUnicode` with the buffer set to ``NULL``.  This usage is "
"deprecated in favor of :c:func:`PyUnicode_New`, and will be removed in "
"Python 3.12."
msgstr ""
"如果 *u* 為 ``NULL``，此函式的行為類似於 :c:func:`PyUnicode_FromUnicode`，緩"
"衝區設定為 ``NULL``。此用法已棄用，取而代之的是 :c:func:`PyUnicode_New`，並將"
"在 Python 3.12 中刪除。"

#: ../../c-api/unicode.rst:448
#, fuzzy
msgid ""
"Create a Unicode object from a UTF-8 encoded null-terminated char buffer *u*."
msgstr "從 UTF-8 編碼的空終止字元緩衝區 *u* 建立一個 Unicode 物件。"

#: ../../c-api/unicode.rst:454
#, fuzzy
msgid ""
"Take a C :c:func:`printf`\\ -style *format* string and a variable number of "
"arguments, calculate the size of the resulting Python Unicode string and "
"return a string with the values formatted into it.  The variable arguments "
"must be C types and must correspond exactly to the format characters in the "
"*format* ASCII-encoded string. The following format characters are allowed:"
msgstr ""
"採用 C :c:func:`printf`\\ 風格的 *format* 字串和可變數量的參數，計算生成的 "
"Python Unicode 字串的大小，並回傳一個字串，其中包含格式化的值。可變參數必須"
"是 C 型別，並且必須與 *format* ASCII 編碼字串中的格式字元完全對應。允許使用以"
"下格式字元："

#: ../../c-api/unicode.rst:469
#, fuzzy
msgid "Format Characters"
msgstr "格式化字元"

#: ../../c-api/unicode.rst:469
#, fuzzy
msgid "Type"
msgstr "型別"

#: ../../c-api/unicode.rst:469
#, fuzzy
msgid "Comment"
msgstr "評論"

#: ../../c-api/unicode.rst:471
msgid ":attr:`%%`"
msgstr ":attr:`%%`"

#: ../../c-api/unicode.rst:471
msgid "*n/a*"
msgstr "*n/a*"

#: ../../c-api/unicode.rst:471
#, fuzzy
msgid "The literal % character."
msgstr "文字 % 字元。"

#: ../../c-api/unicode.rst:473
msgid ":attr:`%c`"
msgstr ":attr:`%c`"

#: ../../c-api/unicode.rst:473 ../../c-api/unicode.rst:476
#: ../../c-api/unicode.rst:509 ../../c-api/unicode.rst:512
msgid "int"
msgstr "int"

#: ../../c-api/unicode.rst:473
#, fuzzy
msgid "A single character, represented as a C int."
msgstr "單個字元，表示為 C int。"

#: ../../c-api/unicode.rst:476
msgid ":attr:`%d`"
msgstr ":attr:`%d`"

#: ../../c-api/unicode.rst:476
msgid "Equivalent to ``printf(\"%d\")``. [1]_"
msgstr "等價於 ``printf(\"%d\")``. [1]_"

#: ../../c-api/unicode.rst:479
msgid ":attr:`%u`"
msgstr ":attr:`%u`"

#: ../../c-api/unicode.rst:479
msgid "unsigned int"
msgstr "unsigned int"

#: ../../c-api/unicode.rst:479
msgid "Equivalent to ``printf(\"%u\")``. [1]_"
msgstr "等價於 ``printf(\"%u\")``. [1]_"

#: ../../c-api/unicode.rst:482
msgid ":attr:`%ld`"
msgstr ":attr:`%ld`"

#: ../../c-api/unicode.rst:482 ../../c-api/unicode.rst:485
msgid "long"
msgstr "long"

#: ../../c-api/unicode.rst:482
msgid "Equivalent to ``printf(\"%ld\")``. [1]_"
msgstr "等價於 ``printf(\"%ld\")``. [1]_"

#: ../../c-api/unicode.rst:485
msgid ":attr:`%li`"
msgstr ":attr:`%li`"

#: ../../c-api/unicode.rst:485
msgid "Equivalent to ``printf(\"%li\")``. [1]_"
msgstr "等價於 ``printf(\"%li\")``. [1]_"

#: ../../c-api/unicode.rst:488
msgid ":attr:`%lu`"
msgstr ":attr:`%lu`"

#: ../../c-api/unicode.rst:488
msgid "unsigned long"
msgstr "unsigned long"

#: ../../c-api/unicode.rst:488
msgid "Equivalent to ``printf(\"%lu\")``. [1]_"
msgstr "等價於 ``printf(\"%lu\")``. [1]_"

#: ../../c-api/unicode.rst:491
msgid ":attr:`%lld`"
msgstr ":attr:`%lld`"

#: ../../c-api/unicode.rst:491 ../../c-api/unicode.rst:494
msgid "long long"
msgstr "long long"

#: ../../c-api/unicode.rst:491
msgid "Equivalent to ``printf(\"%lld\")``. [1]_"
msgstr "等價於 ``printf(\"%lld\")``. [1]_"

#: ../../c-api/unicode.rst:494
msgid ":attr:`%lli`"
msgstr ":attr:`%lli`"

#: ../../c-api/unicode.rst:494
msgid "Equivalent to ``printf(\"%lli\")``. [1]_"
msgstr "等價於 ``printf(\"%lli\")``. [1]_"

#: ../../c-api/unicode.rst:497
msgid ":attr:`%llu`"
msgstr ":attr:`%llu`"

#: ../../c-api/unicode.rst:497
msgid "unsigned long long"
msgstr "unsigned long long"

#: ../../c-api/unicode.rst:497
msgid "Equivalent to ``printf(\"%llu\")``. [1]_"
msgstr "等價於 ``printf(\"%llu\")``. [1]_"

#: ../../c-api/unicode.rst:500
msgid ":attr:`%zd`"
msgstr ":attr:`%zd`"

#: ../../c-api/unicode.rst:500 ../../c-api/unicode.rst:503
msgid ":c:type:`\\ Py_ssize_t`"
msgstr ":c:type:`\\ Py_ssize_t`"

#: ../../c-api/unicode.rst:500
msgid "Equivalent to ``printf(\"%zd\")``. [1]_"
msgstr "等價於 ``printf(\"%zd\")``. [1]_"

#: ../../c-api/unicode.rst:503
msgid ":attr:`%zi`"
msgstr ":attr:`%zi`"

#: ../../c-api/unicode.rst:503
msgid "Equivalent to ``printf(\"%zi\")``. [1]_"
msgstr "等價於 ``printf(\"%zi\")``. [1]_"

#: ../../c-api/unicode.rst:506
msgid ":attr:`%zu`"
msgstr ":attr:`%zu`"

#: ../../c-api/unicode.rst:506
msgid "size_t"
msgstr "size_t"

#: ../../c-api/unicode.rst:506
msgid "Equivalent to ``printf(\"%zu\")``. [1]_"
msgstr "等價於 ``printf(\"%zu\")``. [1]_"

#: ../../c-api/unicode.rst:509
msgid ":attr:`%i`"
msgstr ":attr:`%i`"

#: ../../c-api/unicode.rst:509
msgid "Equivalent to ``printf(\"%i\")``. [1]_"
msgstr "等價於 ``printf(\"%i\")``. [1]_"

#: ../../c-api/unicode.rst:512
msgid ":attr:`%x`"
msgstr ":attr:`%x`"

#: ../../c-api/unicode.rst:512
msgid "Equivalent to ``printf(\"%x\")``. [1]_"
msgstr "等價於 ``printf(\"%x\")``. [1]_"

#: ../../c-api/unicode.rst:515
msgid ":attr:`%s`"
msgstr ":attr:`%s`"

#: ../../c-api/unicode.rst:515
msgid "const char\\*"
msgstr "const char\\*"

#: ../../c-api/unicode.rst:515
#, fuzzy
msgid "A null-terminated C character array."
msgstr "以 null 結尾的 C 字元數組。"

#: ../../c-api/unicode.rst:518
msgid ":attr:`%p`"
msgstr ":attr:`%p`"

#: ../../c-api/unicode.rst:518
msgid "const void\\*"
msgstr "const void\\*"

#: ../../c-api/unicode.rst:518
#, fuzzy
msgid ""
"The hex representation of a C pointer. Mostly equivalent to "
"``printf(\"%p\")`` except that it is guaranteed to start with the literal "
"``0x`` regardless of what the platform's ``printf`` yields."
msgstr ""
"C 指標的十六進位表示。主要等同於 ``printf(\"%p\")`` 除了它保證以文字 ``0x`` "
"開頭，而不管平台的 ``printf`` 產生什麼。"

#: ../../c-api/unicode.rst:526
msgid ":attr:`%A`"
msgstr ":attr:`%A`"

#: ../../c-api/unicode.rst:526 ../../c-api/unicode.rst:529
#: ../../c-api/unicode.rst:538 ../../c-api/unicode.rst:541
msgid "PyObject\\*"
msgstr "PyObject\\*"

#: ../../c-api/unicode.rst:526
msgid "The result of calling :func:`ascii`."
msgstr "呼叫 :func:`ascii` 的結果。"

#: ../../c-api/unicode.rst:529
msgid ":attr:`%U`"
msgstr ":attr:`%U`"

#: ../../c-api/unicode.rst:529
msgid "A Unicode object."
msgstr "一 Unicode 物件。"

#: ../../c-api/unicode.rst:531
msgid ":attr:`%V`"
msgstr ":attr:`%V`"

#: ../../c-api/unicode.rst:531
msgid "PyObject\\*, const char\\*"
msgstr "PyObject\\*, const char\\*"

#: ../../c-api/unicode.rst:531
#, fuzzy
msgid ""
"A Unicode object (which may be ``NULL``) and a null-terminated C character "
"array as a second parameter (which will be used, if the first parameter is "
"``NULL``)."
msgstr ""
"一個 Unicode 物件（可以是 ``NULL`` ）和一個以 null 結尾的 C 字元數組作為第二"
"個參數（如果第一個參數是 ``NULL`` ，將被使用）。"

#: ../../c-api/unicode.rst:538
msgid ":attr:`%S`"
msgstr ":attr:`%S`"

#: ../../c-api/unicode.rst:538
msgid "The result of calling :c:func:`PyObject_Str`."
msgstr "呼叫 :c:func:`PyObject_Str` 的結果。"

#: ../../c-api/unicode.rst:541
msgid ":attr:`%R`"
msgstr ":attr:`%R`"

#: ../../c-api/unicode.rst:541
msgid "The result of calling :c:func:`PyObject_Repr`."
msgstr "呼叫 :c:func:`PyObject_Repr` 的結果。"

#: ../../c-api/unicode.rst:545
#, fuzzy
msgid ""
"An unrecognized format character causes all the rest of the format string to "
"be copied as-is to the result string, and any extra arguments discarded."
msgstr ""
"無法識別的格式字元會導致格式字串的所有其餘部分按原樣複製到結果字串，並丟棄任"
"何額外的參數。"

#: ../../c-api/unicode.rst:549
#, fuzzy
msgid ""
"The width formatter unit is number of characters rather than bytes. The "
"precision formatter unit is number of bytes for ``\"%s\"`` and ``\"%V\"`` "
"(if the ``PyObject*`` argument is ``NULL``), and a number of characters for "
"``\"%A\"``, ``\"%U\"``, ``\"%S\"``, ``\"%R\"`` and ``\"%V\"`` (if the "
"``PyObject*`` argument is not ``NULL``)."
msgstr ""
"寬度格式器單位是字元數而不是位元組數。精度格式單元是“%s”和“%V”（如果 "
"PyObject* 參數是 NULL）的位元組數，以及一些字元``\"%A\"``、``\"%U\"``、"
"``\"%S\"``、``\"%R\"`` 和 ``\"%V\"``（如果 ``PyObject *`` 參數不是 "
"``NULL``)。"

#: ../../c-api/unicode.rst:555
#, fuzzy
msgid ""
"For integer specifiers (d, u, ld, li, lu, lld, lli, llu, zd, zi, zu, i, x): "
"the 0-conversion flag has effect even when a precision is given."
msgstr ""
"對於整數說明符（d、u、ld、li、lu、lld、lli、llu、zd、zi、zu、i、x）：即使給出"
"精度，0 轉換旗標也有效。"

#: ../../c-api/unicode.rst:558
msgid "Support for ``\"%lld\"`` and ``\"%llu\"`` added."
msgstr "新增了對 ``\"%lld\"`` 和 ``\"%llu\"`` 的支援。"

#: ../../c-api/unicode.rst:561
msgid "Support for ``\"%li\"``, ``\"%lli\"`` and ``\"%zi\"`` added."
msgstr "新增了對 ``\"%li\"``、``\"%lli\"`` 和 ``\"%zi\"`` 的支援。"

#: ../../c-api/unicode.rst:564
#, fuzzy
msgid ""
"Support width and precision formatter for ``\"%s\"``, ``\"%A\"``, "
"``\"%U\"``, ``\"%V\"``, ``\"%S\"``, ``\"%R\"`` added."
msgstr ""
"支援``\"%s\"``、``\"%A\"``、``\"%U\"``、``\"%V\"``、``\"%S\"`` 的寬度和精度格"
"式化程式, ``\"%R\"`` 新增。"

#: ../../c-api/unicode.rst:571
#, fuzzy
msgid ""
"Identical to :c:func:`PyUnicode_FromFormat` except that it takes exactly two "
"arguments."
msgstr "與 :c:func:`PyUnicode_FromFormat` 相同，只是它只需要兩個參數。"

#: ../../c-api/unicode.rst:578
#, fuzzy
msgid "Decode an encoded object *obj* to a Unicode object."
msgstr "將編碼物件 *obj* 解碼為 Unicode 物件。"

#: ../../c-api/unicode.rst:580
#, fuzzy
msgid ""
":class:`bytes`, :class:`bytearray` and other :term:`bytes-like objects "
"<bytes-like object>` are decoded according to the given *encoding* and using "
"the error handling defined by *errors*. Both can be ``NULL`` to have the "
"interface use the default values (see :ref:`builtincodecs` for details)."
msgstr ""
":class:`bytes`、:class:`bytearray` 和其他 :term:`bytes-like objects <bytes-"
"like object>` 根據給定的 *encoding* 並使用 *errors* 定義的錯誤處理進行解碼。"
"兩者都可以為 ``NULL`` 以使介面使用預設值（有關詳細資訊，請參閱 :ref:"
"`builtincodecs`）。"

#: ../../c-api/unicode.rst:586
#, fuzzy
msgid ""
"All other objects, including Unicode objects, cause a :exc:`TypeError` to be "
"set."
msgstr "所有其他物件，包括 Unicode 物件，都會導致設定 :exc:`TypeError`。"

#: ../../c-api/unicode.rst:589
#, fuzzy
msgid ""
"The API returns ``NULL`` if there was an error.  The caller is responsible "
"for decref'ing the returned objects."
msgstr "如果出現錯誤，API 將回傳 ``NULL`` 。呼叫者負責遞減回傳的物件。"

#: ../../c-api/unicode.rst:595
#, fuzzy
msgid "Return the length of the Unicode object, in code points."
msgstr "以程式碼點為單位回傳 Unicode 物件的長度。"

#: ../../c-api/unicode.rst:606
#, fuzzy
msgid ""
"Copy characters from one Unicode object into another.  This function "
"performs character conversion when necessary and falls back to :c:func:"
"`memcpy` if possible.  Returns ``-1`` and sets an exception on error, "
"otherwise returns the number of copied characters."
msgstr ""
"將字元從一個 Unicode 物件複製到另一個。此函式在必要時執行字元轉換，並在可能的"
"情況下回退到 :c:func:`memcpy`。回傳 ``-1`` 並設定錯誤例外，否則回傳複製的字元"
"數。"

#: ../../c-api/unicode.rst:617
#, fuzzy
msgid ""
"Fill a string with a character: write *fill_char* into ``unicode[start:"
"start+length]``."
msgstr "用字元填充字串：將 *fill_char* 寫入 ``unicode[start:start+length]``。"

#: ../../c-api/unicode.rst:620
#, fuzzy
msgid ""
"Fail if *fill_char* is bigger than the string maximum character, or if the "
"string has more than 1 reference."
msgstr "如果 *fill_char* 大於字串最大字元數，或者字串有超過 1 個引用，則失敗。"

#: ../../c-api/unicode.rst:623
#, fuzzy
msgid ""
"Return the number of written character, or return ``-1`` and raise an "
"exception on error."
msgstr "回傳寫入的字元數，或回傳 ``-1``並在出錯時引發例外。"

#: ../../c-api/unicode.rst:632
#, fuzzy
msgid ""
"Write a character to a string.  The string must have been created through :c:"
"func:`PyUnicode_New`.  Since Unicode strings are supposed to be immutable, "
"the string must not be shared, or have been hashed yet."
msgstr ""
"將字元寫入字串。該字串必須是通過 :c:func:`PyUnicode_New` 建立的。由於 "
"Unicode 字串應該是不可變的，因此該字串不能共享，或者尚未被散列。"

#: ../../c-api/unicode.rst:636
#, fuzzy
msgid ""
"This function checks that *unicode* is a Unicode object, that the index is "
"not out of bounds, and that the object can be modified safely (i.e. that it "
"its reference count is one)."
msgstr ""
"此函式檢查 *unicode* 是否為 Unicode 物件，索引是否超出範圍，以及對像是否可以"
"安全修改（即它的引用計數為 1）。"

#: ../../c-api/unicode.rst:645
#, fuzzy
msgid ""
"Read a character from a string.  This function checks that *unicode* is a "
"Unicode object and the index is not out of bounds, in contrast to :c:func:"
"`PyUnicode_READ_CHAR`, which performs no error checking."
msgstr ""
"從字串中讀取一個字元。此函式檢查 *unicode* 是一個 Unicode 物件並且索引沒有超"
"出範圍，與 :c:func:`PyUnicode_READ_CHAR` 相比，它不執行錯誤檢查。"

#: ../../c-api/unicode.rst:655
#, fuzzy
msgid ""
"Return a substring of *str*, from character index *start* (included) to "
"character index *end* (excluded).  Negative indices are not supported."
msgstr ""
"回傳 *str* 的子串，從字元索引 *start*（包括）到字元索引 *end*（不包括）。不支"
"援負索引。"

#: ../../c-api/unicode.rst:664
#, fuzzy
msgid ""
"Copy the string *u* into a UCS4 buffer, including a null character, if "
"*copy_null* is set.  Returns ``NULL`` and sets an exception on error (in "
"particular, a :exc:`SystemError` if *buflen* is smaller than the length of "
"*u*).  *buffer* is returned on success."
msgstr ""
"如果設定了 *copy_null*，則將字串 *u* 複製到 UCS4 緩衝區，包括空字元。回傳 "
"``NULL`` 並設定錯誤例外（特別是，如果 *buflen* 小於 *u* 的長度，則為 :exc:"
"`SystemError`）。 *buffer* 成功回傳。"

#: ../../c-api/unicode.rst:674
#, fuzzy
msgid ""
"Copy the string *u* into a new UCS4 buffer that is allocated using :c:func:"
"`PyMem_Malloc`.  If this fails, ``NULL`` is returned with a :exc:"
"`MemoryError` set.  The returned buffer always has an extra null code point "
"appended."
msgstr ""
"將字串 *u* 複製到使用 PyMem_Malloc 分配的新 UCS4 緩衝區中。如果失敗，則回傳 "
"``NULL`` 並設定 :exec:`MemoryError`。回傳的緩衝區總是附加一個額外的空程式碼"
"點。"

#: ../../c-api/unicode.rst:683
#, fuzzy
msgid "Deprecated Py_UNICODE APIs"
msgstr "棄用的 Py_UNICODE API"

#: ../../c-api/unicode.rst:687
#, fuzzy
msgid ""
"These API functions are deprecated with the implementation of :pep:`393`. "
"Extension modules can continue using them, as they will not be removed in "
"Python 3.x, but need to be aware that their use can now cause performance "
"and memory hits."
msgstr ""
"這些 API 函式已隨著 :pep:`393` 的實作而棄用。擴充模組可以繼續使用它們，因為它"
"們不會在 Python 3.x 中被刪除，但需要注意它們的使用現在會導致性能和記憶體命"
"中。"

#: ../../c-api/unicode.rst:694
#, fuzzy
msgid ""
"Create a Unicode object from the Py_UNICODE buffer *u* of the given size. "
"*u* may be ``NULL`` which causes the contents to be undefined. It is the "
"user's responsibility to fill in the needed data.  The buffer is copied into "
"the new object."
msgstr ""
"從給定大小的 Py_UNICODE 緩衝區 *u* 建立一個 Unicode 物件。 *u* 可能是 "
"``NULL`` ，這會導致內容未定義。使用者有責任填寫所需資料。緩衝區被複製到新對像"
"中。"

#: ../../c-api/unicode.rst:699
#, fuzzy
msgid ""
"If the buffer is not ``NULL``, the return value might be a shared object. "
"Therefore, modification of the resulting Unicode object is only allowed when "
"*u* is ``NULL``."
msgstr ""
"如果緩衝區不是 ``NULL`` ，則回傳值可能是一個共享物件。因此，僅當 *u* 為 "
"``NULL`` 時才允許修改生成的 Unicode 物件。"

#: ../../c-api/unicode.rst:703
#, fuzzy
msgid ""
"If the buffer is ``NULL``, :c:func:`PyUnicode_READY` must be called once the "
"string content has been filled before using any of the access macros such "
"as :c:func:`PyUnicode_KIND`."
msgstr ""
"如果緩衝區為 ``NULL`` ，則在使用任何訪問巨集（例如 :c:func:`PyUnicode_KIND`）"
"之前填充字串內容後，必須呼叫 PyUnicode_READY。"

#: ../../c-api/unicode.rst:710
#, fuzzy
msgid ""
"Part of the old-style Unicode API, please migrate to using :c:func:"
"`PyUnicode_FromKindAndData`, :c:func:`PyUnicode_FromWideChar`, or :c:func:"
"`PyUnicode_New`."
msgstr ""
"部分舊式 Unicode API，請遷移至使用 :c:func:`PyUnicode_FromKindAndData`、:c:"
"func:`PyUnicode_FromWideChar` 或:c:func:`PyUnicode_New`。"

#: ../../c-api/unicode.rst:715
#, fuzzy
msgid ""
"Return a read-only pointer to the Unicode object's internal :c:type:"
"`Py_UNICODE` buffer, or ``NULL`` on error. This will create the :c:expr:"
"`Py_UNICODE*` representation of the object if it is not yet available. The "
"buffer is always terminated with an extra null code point. Note that the "
"resulting :c:type:`Py_UNICODE` string may also contain embedded null code "
"points, which would cause the string to be truncated when used in most C "
"functions."
msgstr ""
"回傳一個指向 Unicode 物件內部 :c:type:`Py_UNICODE` 緩衝區的只讀指標，或者在出"
"錯時回傳 ``NULL``。如果物件尚不可用，這將建立物件的 :c:expr:`Py_UNICODE*` 表"
"示。緩衝區總是以額外的空程式碼點終止。請注意，生成的 :c:type:`Py_UNICODE` 字"
"串還可能包含嵌入的空程式碼點，這會導致在大多數 C 函式中使用時字串被截斷。"

#: ../../c-api/unicode.rst:726 ../../c-api/unicode.rst:742
#, fuzzy
msgid ""
"Part of the old-style Unicode API, please migrate to using :c:func:"
"`PyUnicode_AsUCS4`, :c:func:`PyUnicode_AsWideChar`, :c:func:"
"`PyUnicode_ReadChar` or similar new APIs."
msgstr ""
"部分舊式 Unicode API，請遷移至使用 :c:func:`PyUnicode_AsUCS4`、:c:func:"
"`PyUnicode_AsWideChar`、:c:func:`PyUnicode_ReadChar` 或類似的新 API。"

#: ../../c-api/unicode.rst:731
#, fuzzy
msgid ""
"Like :c:func:`PyUnicode_AsUnicode`, but also saves the :c:func:`Py_UNICODE` "
"array length (excluding the extra null terminator) in *size*. Note that the "
"resulting :c:expr:`Py_UNICODE*` string may contain embedded null code "
"points, which would cause the string to be truncated when used in most C "
"functions."
msgstr ""
"與 :c:func:`PyUnicode_AsUnicode` 類似，但也將 :c:func:`Py_UNICODE` 數組長度"
"（不包括額外的空終止符）保存在 *size* 中。請注意，生成的 :c:expr:"
"`Py_UNICODE*` 字串可能包含嵌入的空程式碼點，這會導致字串在大多數 C 函式中使用"
"時被截斷。"

#: ../../c-api/unicode.rst:747
#, fuzzy
msgid ""
"Return the size of the deprecated :c:type:`Py_UNICODE` representation, in "
"code units (this includes surrogate pairs as 2 units)."
msgstr ""
"回傳已棄用的 :c:type:`Py_UNICODE` 表示的大小，以程式碼單位表示（這包括作為 2 "
"個單位的代理項對）。"

#: ../../c-api/unicode.rst:757
#, fuzzy
msgid ""
"Copy an instance of a Unicode subtype to a new true Unicode object if "
"necessary. If *obj* is already a true Unicode object (not a subtype), return "
"the reference with incremented refcount."
msgstr ""
"如有必要，將 Unicode 子型別的實例複製到新的真正 Unicode 物件。如果 *obj* 已經"
"是一個真正的 Unicode 物件（不是子型別），則回傳帶有遞增 refcount 的引用。"

#: ../../c-api/unicode.rst:761
#, fuzzy
msgid ""
"Objects other than Unicode or its subtypes will cause a :exc:`TypeError`."
msgstr "Unicode 或其子型別以外的物件將導致 :exc:`TypeError`。"

#: ../../c-api/unicode.rst:765
#, fuzzy
msgid "Locale Encoding"
msgstr "語言環境編碼"

#: ../../c-api/unicode.rst:767
#, fuzzy
msgid ""
"The current locale encoding can be used to decode text from the operating "
"system."
msgstr "當前的語言環境編碼可用於解碼來自操作系統的文本。"

#: ../../c-api/unicode.rst:774
#, fuzzy
msgid ""
"Decode a string from UTF-8 on Android and VxWorks, or from the current "
"locale encoding on other platforms. The supported error handlers are "
"``\"strict\"`` and ``\"surrogateescape\"`` (:pep:`383`). The decoder uses "
"``\"strict\"`` error handler if *errors* is ``NULL``.  *str* must end with a "
"null character but cannot contain embedded null characters."
msgstr ""
"從 Android 和 VxWorks 上的 UTF-8 解碼字串，或從其他平台上的當前語言環境編碼解"
"碼字串。支援的錯誤處理程式是``\"strict\"`` 和``\"surrogateescape\"`` (:pep:"
"`383`)。如果 *errors* 為 ``NULL``，則解碼器使用 ``\"strict\"`` 錯誤處理程"
"式。 *str* 必須以空字元結尾，但不能包含嵌入的空字元。"

#: ../../c-api/unicode.rst:781
#, fuzzy
msgid ""
"Use :c:func:`PyUnicode_DecodeFSDefaultAndSize` to decode a string from :c:"
"data:`Py_FileSystemDefaultEncoding` (the locale encoding read at Python "
"startup)."
msgstr ""
"使用:c:func:`PyUnicode_DecodeFSDefaultAndSize` 解碼來自:c:data:"
"`Py_FileSystemDefaultEncoding` 的字串（Python 啟動時讀取的語言環境編碼）。"

#: ../../c-api/unicode.rst:785 ../../c-api/unicode.rst:821
#, fuzzy
msgid "This function ignores the :ref:`Python UTF-8 Mode <utf8-mode>`."
msgstr "此函式忽略 :ref:`Python UTF-8 模式 <utf8-mode>`。"

#: ../../c-api/unicode.rst:789 ../../c-api/unicode.rst:892
msgid "The :c:func:`Py_DecodeLocale` function."
msgstr ":c:func:`Py_DecodeLocale` 函式。"

#: ../../c-api/unicode.rst:793
#, fuzzy
msgid ""
"The function now also uses the current locale encoding for the "
"``surrogateescape`` error handler, except on Android. Previously, :c:func:"
"`Py_DecodeLocale` was used for the ``surrogateescape``, and the current "
"locale encoding was used for ``strict``."
msgstr ""
"該函式現在還使用當前的語言環境編碼用於 ``surrogateescape`` 錯誤處理程式，"
"Android 除外。以前，:c:func:`Py_DecodeLocale` 用於 ``surrogateescape``，當前"
"區域設定編碼用於 ``strict``。"

#: ../../c-api/unicode.rst:802
#, fuzzy
msgid ""
"Similar to :c:func:`PyUnicode_DecodeLocaleAndSize`, but compute the string "
"length using :c:func:`strlen`."
msgstr ""
"類似於 :c:func:`PyUnicode_DecodeLocaleAndSize`，但使用 :c:func:`strlen` 計算"
"字串長度。"

#: ../../c-api/unicode.rst:810
#, fuzzy
msgid ""
"Encode a Unicode object to UTF-8 on Android and VxWorks, or to the current "
"locale encoding on other platforms. The supported error handlers are "
"``\"strict\"`` and ``\"surrogateescape\"`` (:pep:`383`). The encoder uses "
"``\"strict\"`` error handler if *errors* is ``NULL``. Return a :class:"
"`bytes` object. *unicode* cannot contain embedded null characters."
msgstr ""
"在 Android 和 VxWorks 上將 Unicode 物件編碼為 UTF-8，或在其他平台上編碼為當前"
"語言環境編碼。支援的錯誤處理程式是``\"strict\"`` 和``\"surrogateescape\"`` (:"
"pep:`383`)。如果 *errors* 為 ``NULL``，則編碼器使用 ``\"strict\"`` 錯誤處理程"
"式。回傳一個 :class:`bytes` 物件。 *unicode* 不能包含嵌入的空字元。"

#: ../../c-api/unicode.rst:817
#, fuzzy
msgid ""
"Use :c:func:`PyUnicode_EncodeFSDefault` to encode a string to :c:data:"
"`Py_FileSystemDefaultEncoding` (the locale encoding read at Python startup)."
msgstr ""
"使用:c:func:`PyUnicode_EncodeFSDefault` 將字串編碼為:c:data:"
"`Py_FileSystemDefaultEncoding`（Python 啟動時讀取的語言環境編碼）。"

#: ../../c-api/unicode.rst:825 ../../c-api/unicode.rst:928
msgid "The :c:func:`Py_EncodeLocale` function."
msgstr ":c:func:`Py_EncodeLocale` 函式。"

#: ../../c-api/unicode.rst:829
#, fuzzy
msgid ""
"The function now also uses the current locale encoding for the "
"``surrogateescape`` error handler, except on Android. Previously, :c:func:"
"`Py_EncodeLocale` was used for the ``surrogateescape``, and the current "
"locale encoding was used for ``strict``."
msgstr ""
"該函式現在還使用當前的語言環境編碼用於 ``surrogateescape`` 錯誤處理程式，"
"Android 除外。以前，:c:func:`Py_EncodeLocale` 用於 ``surrogateescape``，當前"
"區域設定編碼用於 ``strict``。"

#: ../../c-api/unicode.rst:838
#, fuzzy
msgid "File System Encoding"
msgstr "文件系統編碼"

#: ../../c-api/unicode.rst:840
#, fuzzy
msgid ""
"To encode and decode file names and other environment strings, :c:data:"
"`Py_FileSystemDefaultEncoding` should be used as the encoding, and :c:data:"
"`Py_FileSystemDefaultEncodeErrors` should be used as the error handler (:pep:"
"`383` and :pep:`529`). To encode file names to :class:`bytes` during "
"argument parsing, the ``\"O&\"`` converter should be used, passing :c:func:"
"`PyUnicode_FSConverter` as the conversion function:"
msgstr ""
"要編碼和解碼文件名和其他環境字串，:c:data:`Py_FileSystemDefaultEncoding` 應該"
"用作編碼，:c:data:`Py_FileSystemDefaultEncodeErrors` 應該用作錯誤處理程式（:"
"pep:`383` 和 :pep:`529`)。要在參數剖析期間將文件名編碼為 bytes，應使用 "
"``\"O&\"`` 轉換器，傳遞 :c:func:`PyUnicode_FSConverter` 作為轉換函式："

#: ../../c-api/unicode.rst:849
#, fuzzy
msgid ""
"ParseTuple converter: encode :class:`str` objects -- obtained directly or "
"through the :class:`os.PathLike` interface -- to :class:`bytes` using :c:"
"func:`PyUnicode_EncodeFSDefault`; :class:`bytes` objects are output as-is. "
"*result* must be a :c:expr:`PyBytesObject*` which must be released when it "
"is no longer used."
msgstr ""
"ParseTuple 轉換器：使用 PyUnicode_EncodeFSDefault 將 str 物件——直接或通過 os."
"PathLike 介面獲得——編碼為 bytes； :class:`bytes` 物件按原樣輸出。 *result* 必"
"須是一個 :c:expr:`PyBytesObject*` ，當它不再使用時必須被釋放。"

#: ../../c-api/unicode.rst:857 ../../c-api/unicode.rst:874
#, fuzzy
msgid "Accepts a :term:`path-like object`."
msgstr "接受一個 :term:`path-like object`。"

#: ../../c-api/unicode.rst:860
#, fuzzy
msgid ""
"To decode file names to :class:`str` during argument parsing, the ``\"O&\"`` "
"converter should be used, passing :c:func:`PyUnicode_FSDecoder` as the "
"conversion function:"
msgstr ""
"要在參數剖析期間將文件名解碼為 str，應使用 ``\"O&\"`` 轉換器，傳遞 :c:func:"
"`PyUnicode_FSDecoder` 作為轉換函式："

#: ../../c-api/unicode.rst:866
#, fuzzy
msgid ""
"ParseTuple converter: decode :class:`bytes` objects -- obtained either "
"directly or indirectly through the :class:`os.PathLike` interface -- to :"
"class:`str` using :c:func:`PyUnicode_DecodeFSDefaultAndSize`; :class:`str` "
"objects are output as-is. *result* must be a :c:expr:`PyUnicodeObject*` "
"which must be released when it is no longer used."
msgstr ""
"ParseTuple 轉換器：使用 PyUnicode_DecodeFSDefaultAndSize 將 :class:`bytes` 物"
"件——直接或間接通過 :class:`os.PathLike` 介面獲得的物件解碼為 :class:`str`； :"
"class:`str` 物件按原樣輸出。 *result* 必須是一個 :c:expr:`PyUnicodeObject*`，"
"當它不再被使用時必須被釋放。"

#: ../../c-api/unicode.rst:880
#, fuzzy
msgid "Decode a string from the :term:`filesystem encoding and error handler`."
msgstr "從 :term:`filesystem encoding and error handler` 解碼一個字串。"

#: ../../c-api/unicode.rst:882 ../../c-api/unicode.rst:903
#: ../../c-api/unicode.rst:919
#, fuzzy
msgid ""
"If :c:data:`Py_FileSystemDefaultEncoding` is not set, fall back to the "
"locale encoding."
msgstr ""
"如果 :c:data:`Py_FileSystemDefaultEncoding` 未設定，則回退到語言環境編碼。"

#: ../../c-api/unicode.rst:885
#, fuzzy
msgid ""
":c:data:`Py_FileSystemDefaultEncoding` is initialized at startup from the "
"locale encoding and cannot be modified later. If you need to decode a string "
"from the current locale encoding, use :c:func:"
"`PyUnicode_DecodeLocaleAndSize`."
msgstr ""
":c:data:`Py_FileSystemDefaultEncoding` 在啟動時從語言環境編碼初始化，以後無法"
"修改。如果您需要從當前語言環境編碼中解碼字串，請使用 :c:func:"
"`PyUnicode_DecodeLocaleAndSize`。"

#: ../../c-api/unicode.rst:894 ../../c-api/unicode.rst:908
#: ../../c-api/unicode.rst:932
#, fuzzy
msgid "Use :c:data:`Py_FileSystemDefaultEncodeErrors` error handler."
msgstr "使用 :c:data:`Py_FileSystemDefaultEncodeErrors` 錯誤處理程式。"

#: ../../c-api/unicode.rst:900
#, fuzzy
msgid ""
"Decode a null-terminated string from the :term:`filesystem encoding and "
"error handler`."
msgstr ""
"從 :term:`filesystem encoding and error handler` 解碼以 null 結尾的字串。"

#: ../../c-api/unicode.rst:906
#, fuzzy
msgid ""
"Use :c:func:`PyUnicode_DecodeFSDefaultAndSize` if you know the string length."
msgstr "如果您知道字串長度，請使用:c:func:`PyUnicode_DecodeFSDefaultAndSize`。"

#: ../../c-api/unicode.rst:914
#, fuzzy
msgid ""
"Encode a Unicode object to :c:data:`Py_FileSystemDefaultEncoding` with the :"
"c:data:`Py_FileSystemDefaultEncodeErrors` error handler, and return :class:"
"`bytes`. Note that the resulting :class:`bytes` object may contain null "
"bytes."
msgstr ""
"使用 Py_FileSystemDefaultEncodeErrors 錯誤處理程式將 Unicode 物件編碼為 "
"Py_FileSystemDefaultEncoding，並回傳 bytes。請注意，生成的 :class:`bytes` 物"
"件可能包含空位元組。"

#: ../../c-api/unicode.rst:922
#, fuzzy
msgid ""
":c:data:`Py_FileSystemDefaultEncoding` is initialized at startup from the "
"locale encoding and cannot be modified later. If you need to encode a string "
"to the current locale encoding, use :c:func:`PyUnicode_EncodeLocale`."
msgstr ""
":c:data:`Py_FileSystemDefaultEncoding` 在啟動時從語言環境編碼初始化，以後無法"
"修改。如果需要將字串編碼為當前語言環境編碼，請使用:c:func:"
"`PyUnicode_EncodeLocale`。"

#: ../../c-api/unicode.rst:936
msgid "wchar_t Support"
msgstr "wchar_t 支援"

#: ../../c-api/unicode.rst:938
#, fuzzy
msgid ":c:expr:`wchar_t` support for platforms which support it:"
msgstr ":c:expr:`wchar_t` 支援支援它的平台："

#: ../../c-api/unicode.rst:942
#, fuzzy
msgid ""
"Create a Unicode object from the :c:expr:`wchar_t` buffer *w* of the given "
"*size*. Passing ``-1`` as the *size* indicates that the function must itself "
"compute the length, using wcslen. Return ``NULL`` on failure."
msgstr ""
"從給定 *size* 的 :c:expr:`wchar_t` 緩衝區 *w* 建立一個 Unicode 物件。將 "
"``-1``作為 *size* 傳遞表明函式本身必須使用 wcslen 計算長度。失敗時回傳 "
"``NULL`` 。"

#: ../../c-api/unicode.rst:950
#, fuzzy
msgid ""
"Copy the Unicode object contents into the :c:expr:`wchar_t` buffer *w*.  At "
"most *size* :c:expr:`wchar_t` characters are copied (excluding a possibly "
"trailing null termination character).  Return the number of :c:expr:"
"`wchar_t` characters copied or ``-1`` in case of an error.  Note that the "
"resulting :c:expr:`wchar_t*` string may or may not be null-terminated.  It "
"is the responsibility of the caller to make sure that the :c:expr:`wchar_t*` "
"string is null-terminated in case this is required by the application. Also, "
"note that the :c:expr:`wchar_t*` string might contain null characters, which "
"would cause the string to be truncated when used with most C functions."
msgstr ""
"將 Unicode 物件內容複製到 :c:expr:`wchar_t` 緩衝區 *w*。最多 *size* :c:expr:"
"`wchar_t` 字元被複製（不包括可能尾隨的空終止字元）。回傳複製的 :c:expr:"
"`wchar_t` 字元數或 ``-1`` 以防出現錯誤。請注意，生成的 :c:expr:`wchar_t*` 字"
"串可能以也可能不以 null 終止。呼叫者有責任確保 :c:expr:`wchar_t*` 字串以 "
"null 結尾，以防應用程式需要。另請注意 :c:expr:`wchar_t*` 字串可能包含空字元，"
"這會導致字串在與大多數 C 函式一起使用時被截斷。"

#: ../../c-api/unicode.rst:963
#, fuzzy
msgid ""
"Convert the Unicode object to a wide character string. The output string "
"always ends with a null character. If *size* is not ``NULL``, write the "
"number of wide characters (excluding the trailing null termination "
"character) into *\\*size*. Note that the resulting :c:expr:`wchar_t` string "
"might contain null characters, which would cause the string to be truncated "
"when used with most C functions. If *size* is ``NULL`` and the :c:expr:"
"`wchar_t*` string contains null characters a :exc:`ValueError` is raised."
msgstr ""
"將 Unicode 物件轉換為寬字串。輸出字串總是以空字元結尾。如果 *size* 不是 "
"``NULL`` ，則將寬字元數（不包括尾隨的空終止字元）寫入 *\\*size*。請注意，生成"
"的 :c:expr:`wchar_t` 字串可能包含空字元，這會導致字串在與大多數 C 函式一起使"
"用時被截斷。如果 *size* 是 ``NULL`` 並且:c:expr:`wchar_t*` 字串包含空字元，則"
"會引發 :exc:`ValueError`。"

#: ../../c-api/unicode.rst:971
#, fuzzy
msgid ""
"Returns a buffer allocated by :c:func:`PyMem_Alloc` (use :c:func:"
"`PyMem_Free` to free it) on success. On error, returns ``NULL`` and "
"*\\*size* is undefined. Raises a :exc:`MemoryError` if memory allocation is "
"failed."
msgstr ""
"成功時回傳由 :c:func:`PyMem_Alloc` 分配的緩衝區（使用 :c:func:`PyMem_Free` 釋"
"放它）。出錯時，回傳 ``NULL`` 並且 *\\*size* 未定義。如果記憶體分配失敗，則引"
"發 :exc:`MemoryError`。"

#: ../../c-api/unicode.rst:978
#, fuzzy
msgid ""
"Raises a :exc:`ValueError` if *size* is ``NULL`` and the :c:expr:`wchar_t*` "
"string contains null characters."
msgstr ""
"如果 *size* 為 ``NULL`` 且 :c:expr:`wchar_t*` 字串包含空字元，則引發 :exc:"
"`ValueError`。"

#: ../../c-api/unicode.rst:986
msgid "Built-in Codecs"
msgstr "內建編解碼器"

#: ../../c-api/unicode.rst:988
#, fuzzy
msgid ""
"Python provides a set of built-in codecs which are written in C for speed. "
"All of these codecs are directly usable via the following functions."
msgstr ""
"Python 提供了一組內建的編解碼器，這些編解碼器是用 C 語言編寫的以提高速度。所"
"有這些編解碼器都可以通過以下功能直接使用。"

#: ../../c-api/unicode.rst:991
#, fuzzy
msgid ""
"Many of the following APIs take two arguments encoding and errors, and they "
"have the same semantics as the ones of the built-in :func:`str` string "
"object constructor."
msgstr ""
"以下許多 API 都採用兩個參數編碼和錯誤，它們與內建的 string 物件構造函式具有相"
"同的語義。"

#: ../../c-api/unicode.rst:995
#, fuzzy
msgid ""
"Setting encoding to ``NULL`` causes the default encoding to be used which is "
"UTF-8.  The file system calls should use :c:func:`PyUnicode_FSConverter` for "
"encoding file names. This uses the variable :c:data:"
"`Py_FileSystemDefaultEncoding` internally. This variable should be treated "
"as read-only: on some systems, it will be a pointer to a static string, on "
"others, it will change at run-time (such as when the application invokes "
"setlocale)."
msgstr ""
"將編碼設定為 ``NULL`` 會導致使用預設編碼，即 UTF-8。文件系統呼叫應使用:c:"
"func:`PyUnicode_FSConverter` 對文件名進行編碼。這在內部使用變數 :c:data:"
"`Py_FileSystemDefaultEncoding`。此變數應被視為只讀：在某些系統上，它將是指向"
"靜態字串的指標，在其他系統上，它將在運行時更改（例如當應用程式呼叫 setlocale "
"時）。"

#: ../../c-api/unicode.rst:1003
#, fuzzy
msgid ""
"Error handling is set by errors which may also be set to ``NULL`` meaning to "
"use the default handling defined for the codec.  Default error handling for "
"all built-in codecs is \"strict\" (:exc:`ValueError` is raised)."
msgstr ""
"錯誤處理由錯誤設定，錯誤也可以設定為 ``NULL`` ，表示使用為編解碼器定義的預設"
"處理。所有內建編解碼器的預設錯誤處理都是“嚴格的”（引發 :exec:`ValueError`）。"

#: ../../c-api/unicode.rst:1007
#, fuzzy
msgid ""
"The codecs all use a similar interface.  Only deviations from the following "
"generic ones are documented for simplicity."
msgstr "編解碼器都使用類似的介面。為簡單起見，僅記錄了與以下通用版本的偏差。"

#: ../../c-api/unicode.rst:1012
#, fuzzy
msgid "Generic Codecs"
msgstr "通用編解碼器"

#: ../../c-api/unicode.rst:1014
#, fuzzy
msgid "These are the generic codec APIs:"
msgstr "這些是通用編解碼器 API："

#: ../../c-api/unicode.rst:1020
#, fuzzy
msgid ""
"Create a Unicode object by decoding *size* bytes of the encoded string *s*. "
"*encoding* and *errors* have the same meaning as the parameters of the same "
"name in the :func:`str` built-in function.  The codec to be used is looked "
"up using the Python codec registry.  Return ``NULL`` if an exception was "
"raised by the codec."
msgstr ""
"通過解碼編碼字串 *s* 的 *size* 位元組建立一個 Unicode 物件。 *encoding* 和 "
"*errors* 與 :func:`str` 內建函式中的同名參數具有相同的含義。使用 Python 編解"
"碼器註冊表查找要使用的編解碼器。如果編解碼器引發例外，則回傳 ``NULL`` 。"

#: ../../c-api/unicode.rst:1030
#, fuzzy
msgid ""
"Encode a Unicode object and return the result as Python bytes object. "
"*encoding* and *errors* have the same meaning as the parameters of the same "
"name in the Unicode :meth:`~str.encode` method. The codec to be used is "
"looked up using the Python codec registry. Return ``NULL`` if an exception "
"was raised by the codec."
msgstr ""
"編碼 Unicode 物件並將結果作為 Python 位元組物件回傳。 *encoding* 和 *errors* "
"與 Unicode :meth:`~str.encode` 方法中的同名參數具有相同的含義。使用 Python 編"
"解碼器註冊表查找要使用的編解碼器。如果編解碼器引發例外，則回傳 ``NULL`` 。"

#: ../../c-api/unicode.rst:1038
#, fuzzy
msgid "UTF-8 Codecs"
msgstr "UTF-8 編解碼器"

#: ../../c-api/unicode.rst:1040
#, fuzzy
msgid "These are the UTF-8 codec APIs:"
msgstr "這些是 UTF-8 編解碼器 API："

#: ../../c-api/unicode.rst:1045
#, fuzzy
msgid ""
"Create a Unicode object by decoding *size* bytes of the UTF-8 encoded string "
"*s*. Return ``NULL`` if an exception was raised by the codec."
msgstr ""
"通過解碼 UTF-8 編碼字串 *s* 的 *size* 位元組建立一個 Unicode 物件。如果編解碼"
"器引發例外，則回傳 ``NULL`` 。"

#: ../../c-api/unicode.rst:1052
#, fuzzy
msgid ""
"If *consumed* is ``NULL``, behave like :c:func:`PyUnicode_DecodeUTF8`. If "
"*consumed* is not ``NULL``, trailing incomplete UTF-8 byte sequences will "
"not be treated as an error. Those bytes will not be decoded and the number "
"of bytes that have been decoded will be stored in *consumed*."
msgstr ""
"如果 *consumed* 是``NULL``，表現得像:c:func:`PyUnicode_DecodeUTF8`。如果 "
"*consumed* 不是 ``NULL`` ，尾隨的不完整的 UTF-8 位元組序列將不會被視為錯誤。"
"這些位元組不會被解碼，已解碼的位元組數將儲存在 *consumed* 中。"

#: ../../c-api/unicode.rst:1060
#, fuzzy
msgid ""
"Encode a Unicode object using UTF-8 and return the result as Python bytes "
"object.  Error handling is \"strict\".  Return ``NULL`` if an exception was "
"raised by the codec."
msgstr ""
"使用 UTF-8 編碼 Unicode 物件並將結果作為 Python 位元組物件回傳。錯誤處理是“嚴"
"格的”。如果編解碼器引發例外，則回傳 ``NULL`` 。"

#: ../../c-api/unicode.rst:1067
#, fuzzy
msgid ""
"Return a pointer to the UTF-8 encoding of the Unicode object, and store the "
"size of the encoded representation (in bytes) in *size*.  The *size* "
"argument can be ``NULL``; in this case no size will be stored.  The returned "
"buffer always has an extra null byte appended (not included in *size*), "
"regardless of whether there are any other null code points."
msgstr ""
"回傳指向 Unicode 物件的 UTF-8 編碼的指標，並將編碼表示的大小（以位元組為單"
"位）儲存在 *size* 中。 *size* 參數可以是 ``NULL`` ；在這種情況下，不會儲存任"
"何大小。回傳的緩衝區總是附加一個額外的空位元組（不包括在 *size* 中），無論是"
"否有任何其他空程式碼點。"

#: ../../c-api/unicode.rst:1073
#, fuzzy
msgid ""
"In the case of an error, ``NULL`` is returned with an exception set and no "
"*size* is stored."
msgstr "在出現錯誤的情況下，將回傳帶有例外集的 ``NULL`` ，並且不儲存 *size*。"

#: ../../c-api/unicode.rst:1076
#, fuzzy
msgid ""
"This caches the UTF-8 representation of the string in the Unicode object, "
"and subsequent calls will return a pointer to the same buffer.  The caller "
"is not responsible for deallocating the buffer. The buffer is deallocated "
"and pointers to it become invalid when the Unicode object is garbage "
"collected."
msgstr ""
"這會將字串的 UTF-8 表示形式快取在 Unicode 對像中，後續呼叫將回傳指向同一緩衝"
"區的指標。呼叫者不負責釋放緩衝區。當 Unicode 對像被垃圾回收時，緩衝區被釋放並"
"且指向它的指標變得無效。"

#: ../../c-api/unicode.rst:1083 ../../c-api/unicode.rst:1096
#, fuzzy
msgid "The return type is now ``const char *`` rather of ``char *``."
msgstr "回傳型別現在是 ``const char *`` 而不是 ``char *``。"

#: ../../c-api/unicode.rst:1086
#, fuzzy
msgid "This function is a part of the :ref:`limited API <stable>`."
msgstr "此函式是 :ref:`limited API <stable>` 的一部分。"

#: ../../c-api/unicode.rst:1092
#, fuzzy
msgid "As :c:func:`PyUnicode_AsUTF8AndSize`, but does not store the size."
msgstr "作為 :c:func:`PyUnicode_AsUTF8AndSize`，但不儲存大小。"

#: ../../c-api/unicode.rst:1101
#, fuzzy
msgid "UTF-32 Codecs"
msgstr "UTF-32 編解碼器"

#: ../../c-api/unicode.rst:1103
#, fuzzy
msgid "These are the UTF-32 codec APIs:"
msgstr "這些是 UTF-32 編解碼器 API："

#: ../../c-api/unicode.rst:1109
#, fuzzy
msgid ""
"Decode *size* bytes from a UTF-32 encoded buffer string and return the "
"corresponding Unicode object.  *errors* (if non-``NULL``) defines the error "
"handling. It defaults to \"strict\"."
msgstr ""
"從 UTF-32 編碼的緩衝區字串中解碼 *size* 位元組並回傳相應的 Unicode 物件。 "
"*errors*（如果非``NULL``）定義錯誤處理。它預設為“嚴格”。"

#: ../../c-api/unicode.rst:1113 ../../c-api/unicode.rst:1163
#, fuzzy
msgid ""
"If *byteorder* is non-``NULL``, the decoder starts decoding using the given "
"byte order::"
msgstr "如果 *byteorder* 是非 ``NULL`` ，解碼器使用給定的位元組順序開始解碼："

#: ../../c-api/unicode.rst:1120
#, fuzzy
msgid ""
"If ``*byteorder`` is zero, and the first four bytes of the input data are a "
"byte order mark (BOM), the decoder switches to this byte order and the BOM "
"is not copied into the resulting Unicode string.  If ``*byteorder`` is "
"``-1`` or ``1``, any byte order mark is copied to the output."
msgstr ""
"如果 *byteorder 為零，並且輸入資料的前四個位元組是位元組順序標記 (BOM)，則解"
"碼器切換到此位元組順序，並且 BOM 不會復製到生成的 Unicode 字串中。如果 "
"``*byteorder`` 是 ``-1`` 或 ``1``，任何位元組順序標記被複製到輸出。"

#: ../../c-api/unicode.rst:1125
#, fuzzy
msgid ""
"After completion, *\\*byteorder* is set to the current byte order at the end "
"of input data."
msgstr "完成後，*\\*byteorder* 設定為輸入資料末尾的當前位元組順序。"

#: ../../c-api/unicode.rst:1128 ../../c-api/unicode.rst:1179
#, fuzzy
msgid "If *byteorder* is ``NULL``, the codec starts in native order mode."
msgstr "如果 *byteorder* 為 ``NULL`` ，則編解碼器以本機順序模式啟動。"

#: ../../c-api/unicode.rst:1130 ../../c-api/unicode.rst:1181
#, fuzzy
msgid "Return ``NULL`` if an exception was raised by the codec."
msgstr "如果編解碼器引發例外，則回傳 ``NULL`` 。"

#: ../../c-api/unicode.rst:1136
#, fuzzy
msgid ""
"If *consumed* is ``NULL``, behave like :c:func:`PyUnicode_DecodeUTF32`. If "
"*consumed* is not ``NULL``, :c:func:`PyUnicode_DecodeUTF32Stateful` will not "
"treat trailing incomplete UTF-32 byte sequences (such as a number of bytes "
"not divisible by four) as an error. Those bytes will not be decoded and the "
"number of bytes that have been decoded will be stored in *consumed*."
msgstr ""
"如果 *consumed* 是``NULL``，表現得像:c:func:`PyUnicode_DecodeUTF32`。如果 "
"*consumed* 不是 ``NULL``，:c:func:`PyUnicode_DecodeUTF32Stateful` 不會將尾隨"
"的不完整 UTF-32 位元組序列（例如不能被 4 整除的位元組數）視為錯誤。這些位元組"
"不會被解碼，已解碼的位元組數將儲存在 *consumed* 中。"

#: ../../c-api/unicode.rst:1145
#, fuzzy
msgid ""
"Return a Python byte string using the UTF-32 encoding in native byte order. "
"The string always starts with a BOM mark.  Error handling is \"strict\". "
"Return ``NULL`` if an exception was raised by the codec."
msgstr ""
"使用 UTF-32 編碼以本機位元組順序回傳 Python 位元組字串。該字串始終以 BOM 標記"
"開頭。錯誤處理是“嚴格的”。如果編解碼器引發例外，則回傳 ``NULL`` 。"

#: ../../c-api/unicode.rst:1151
#, fuzzy
msgid "UTF-16 Codecs"
msgstr "UTF-16 編解碼器"

#: ../../c-api/unicode.rst:1153
#, fuzzy
msgid "These are the UTF-16 codec APIs:"
msgstr "這些是 UTF-16 編解碼器 API："

#: ../../c-api/unicode.rst:1159
#, fuzzy
msgid ""
"Decode *size* bytes from a UTF-16 encoded buffer string and return the "
"corresponding Unicode object.  *errors* (if non-``NULL``) defines the error "
"handling. It defaults to \"strict\"."
msgstr ""
"從 UTF-16 編碼的緩衝區字串中解碼 *size* 位元組並回傳相應的 Unicode 物件。 "
"*errors*（如果非``NULL``）定義錯誤處理。它預設為“嚴格”。"

#: ../../c-api/unicode.rst:1170
#, fuzzy
msgid ""
"If ``*byteorder`` is zero, and the first two bytes of the input data are a "
"byte order mark (BOM), the decoder switches to this byte order and the BOM "
"is not copied into the resulting Unicode string.  If ``*byteorder`` is "
"``-1`` or ``1``, any byte order mark is copied to the output (where it will "
"result in either a ``\\ufeff`` or a ``\\ufffe`` character)."
msgstr ""
"如果 *byteorder 為零，並且輸入資料的前兩個位元組是位元組順序標記 (BOM)，則解"
"碼器切換到此位元組順序，並且 BOM 不會復製到生成的 Unicode 字串中。如果 "
"``*byteorder`` 是 ``-1`` 或 ``1``，則任何位元組順序標記都被複製到輸出（它將導"
"致 ``\\ufeff`` 或 ``\\ufffe `` 字元）。"

#: ../../c-api/unicode.rst:1176
#, fuzzy
msgid ""
"After completion, ``*byteorder`` is set to the current byte order at the end "
"of input data."
msgstr "完成後，``*byteorder`` 被設定為輸入資料末尾的當前位元組順序。"

#: ../../c-api/unicode.rst:1187
#, fuzzy
msgid ""
"If *consumed* is ``NULL``, behave like :c:func:`PyUnicode_DecodeUTF16`. If "
"*consumed* is not ``NULL``, :c:func:`PyUnicode_DecodeUTF16Stateful` will not "
"treat trailing incomplete UTF-16 byte sequences (such as an odd number of "
"bytes or a split surrogate pair) as an error. Those bytes will not be "
"decoded and the number of bytes that have been decoded will be stored in "
"*consumed*."
msgstr ""
"如果 *consumed* 是``NULL``，表現得像:c:func:`PyUnicode_DecodeUTF16`。如果 "
"*consumed* 不是 ``NULL``，:c:func:`PyUnicode_DecodeUTF16Stateful` 不會將尾隨"
"的不完整 UTF-16 位元組序列（例如奇數位元組或拆分代理項對）視為錯誤。這些位元"
"組不會被解碼，已解碼的位元組數將儲存在 *consumed* 中。"

#: ../../c-api/unicode.rst:1196
#, fuzzy
msgid ""
"Return a Python byte string using the UTF-16 encoding in native byte order. "
"The string always starts with a BOM mark.  Error handling is \"strict\". "
"Return ``NULL`` if an exception was raised by the codec."
msgstr ""
"使用 UTF-16 編碼以本機位元組順序回傳 Python 位元組字串。該字串始終以 BOM 標記"
"開頭。錯誤處理是“嚴格的”。如果編解碼器引發例外，則回傳 ``NULL`` 。"

#: ../../c-api/unicode.rst:1202
#, fuzzy
msgid "UTF-7 Codecs"
msgstr "UTF-7 編解碼器"

#: ../../c-api/unicode.rst:1204
#, fuzzy
msgid "These are the UTF-7 codec APIs:"
msgstr "這些是 UTF-7 編解碼器 API："

#: ../../c-api/unicode.rst:1209
#, fuzzy
msgid ""
"Create a Unicode object by decoding *size* bytes of the UTF-7 encoded string "
"*s*.  Return ``NULL`` if an exception was raised by the codec."
msgstr ""
"通過解碼 UTF-7 編碼字串 *s* 的 *size* 位元組建立一個 Unicode 物件。如果編解碼"
"器引發例外，則回傳 ``NULL`` 。"

#: ../../c-api/unicode.rst:1216
#, fuzzy
msgid ""
"If *consumed* is ``NULL``, behave like :c:func:`PyUnicode_DecodeUTF7`.  If "
"*consumed* is not ``NULL``, trailing incomplete UTF-7 base-64 sections will "
"not be treated as an error.  Those bytes will not be decoded and the number "
"of bytes that have been decoded will be stored in *consumed*."
msgstr ""
"如果 *consumed* 是``NULL``，表現得像:c:func:`PyUnicode_DecodeUTF7`。如果 "
"*consumed* 不是 ``NULL`` ，尾隨的不完整的 UTF-7 base-64 部分將不會被視為錯"
"誤。這些位元組不會被解碼，已解碼的位元組數將儲存在 *consumed* 中。"

#: ../../c-api/unicode.rst:1223
#, fuzzy
msgid "Unicode-Escape Codecs"
msgstr "Unicode-轉義編解碼器"

#: ../../c-api/unicode.rst:1225
#, fuzzy
msgid "These are the \"Unicode Escape\" codec APIs:"
msgstr "這些是“Unicode Escape”編解碼器 API："

#: ../../c-api/unicode.rst:1231
#, fuzzy
msgid ""
"Create a Unicode object by decoding *size* bytes of the Unicode-Escape "
"encoded string *s*.  Return ``NULL`` if an exception was raised by the codec."
msgstr ""
"通過解碼 Unicode-Escape 編碼字串 *s* 的 *size* 位元組來建立一個 Unicode 物"
"件。如果編解碼器引發例外，則回傳 ``NULL`` 。"

#: ../../c-api/unicode.rst:1237
#, fuzzy
msgid ""
"Encode a Unicode object using Unicode-Escape and return the result as a "
"bytes object.  Error handling is \"strict\".  Return ``NULL`` if an "
"exception was raised by the codec."
msgstr ""
"使用 Unicode-Escape 對 Unicode 物件進行編碼，並將結果作為位元組物件回傳。錯誤"
"處理是“嚴格的”。如果編解碼器引發例外，則回傳 ``NULL`` 。"

#: ../../c-api/unicode.rst:1243
#, fuzzy
msgid "Raw-Unicode-Escape Codecs"
msgstr "原始 Unicode 轉義編解碼器"

#: ../../c-api/unicode.rst:1245
#, fuzzy
msgid "These are the \"Raw Unicode Escape\" codec APIs:"
msgstr "這些是“原始 Unicode 轉義”編解碼器 API："

#: ../../c-api/unicode.rst:1251
#, fuzzy
msgid ""
"Create a Unicode object by decoding *size* bytes of the Raw-Unicode-Escape "
"encoded string *s*.  Return ``NULL`` if an exception was raised by the codec."
msgstr ""
"通過解碼 Raw-Unicode-Escape 編碼字串 *s* 的 *size* 位元組來建立一個 Unicode "
"物件。如果編解碼器引發例外，則回傳 ``NULL`` 。"

#: ../../c-api/unicode.rst:1257
#, fuzzy
msgid ""
"Encode a Unicode object using Raw-Unicode-Escape and return the result as a "
"bytes object.  Error handling is \"strict\".  Return ``NULL`` if an "
"exception was raised by the codec."
msgstr ""
"使用 Raw-Unicode-Escape 對 Unicode 物件進行編碼，並將結果作為位元組物件回傳。"
"錯誤處理是“嚴格的”。如果編解碼器引發例外，則回傳 ``NULL`` 。"

#: ../../c-api/unicode.rst:1263
#, fuzzy
msgid "Latin-1 Codecs"
msgstr "Latin-1 編解碼器"

#: ../../c-api/unicode.rst:1265
#, fuzzy
msgid ""
"These are the Latin-1 codec APIs: Latin-1 corresponds to the first 256 "
"Unicode ordinals and only these are accepted by the codecs during encoding."
msgstr ""
"這些是 Latin-1 編解碼器 API：Latin-1 對應於前 256 個 Unicode 序號，只有這些在"
"編碼期間被編解碼器接受。"

#: ../../c-api/unicode.rst:1271
#, fuzzy
msgid ""
"Create a Unicode object by decoding *size* bytes of the Latin-1 encoded "
"string *s*.  Return ``NULL`` if an exception was raised by the codec."
msgstr ""
"通過解碼 Latin-1 編碼字串 *s* 的 *size* 位元組建立一個 Unicode 物件。如果編解"
"碼器引發例外，則回傳 ``NULL`` 。"

#: ../../c-api/unicode.rst:1277
#, fuzzy
msgid ""
"Encode a Unicode object using Latin-1 and return the result as Python bytes "
"object.  Error handling is \"strict\".  Return ``NULL`` if an exception was "
"raised by the codec."
msgstr ""
"使用 Latin-1 對 Unicode 物件進行編碼，並將結果作為 Python 位元組物件回傳。錯"
"誤處理是“嚴格的”。如果編解碼器引發例外，則回傳 ``NULL`` 。"

#: ../../c-api/unicode.rst:1283
#, fuzzy
msgid "ASCII Codecs"
msgstr "ASCII 編解碼器"

#: ../../c-api/unicode.rst:1285
#, fuzzy
msgid ""
"These are the ASCII codec APIs.  Only 7-bit ASCII data is accepted. All "
"other codes generate errors."
msgstr ""
"這些是 ASCII 編解碼器 API。僅接受 7 位 ASCII 資料。所有其他程式碼都會產生錯"
"誤。"

#: ../../c-api/unicode.rst:1291
#, fuzzy
msgid ""
"Create a Unicode object by decoding *size* bytes of the ASCII encoded string "
"*s*.  Return ``NULL`` if an exception was raised by the codec."
msgstr ""
"通過解碼 ASCII 編碼字串 *s* 的 *size* 位元組建立一個 Unicode 物件。如果編解碼"
"器引發例外，則回傳 ``NULL`` 。"

#: ../../c-api/unicode.rst:1297
#, fuzzy
msgid ""
"Encode a Unicode object using ASCII and return the result as Python bytes "
"object.  Error handling is \"strict\".  Return ``NULL`` if an exception was "
"raised by the codec."
msgstr ""
"使用 ASCII 編碼 Unicode 物件並將結果作為 Python 位元組物件回傳。錯誤處理是“嚴"
"格的”。如果編解碼器引發例外，則回傳 ``NULL`` 。"

#: ../../c-api/unicode.rst:1303
#, fuzzy
msgid "Character Map Codecs"
msgstr "字元映射編解碼器"

#: ../../c-api/unicode.rst:1305
#, fuzzy
msgid ""
"This codec is special in that it can be used to implement many different "
"codecs (and this is in fact what was done to obtain most of the standard "
"codecs included in the :mod:`encodings` package). The codec uses mappings to "
"encode and decode characters.  The mapping objects provided must support "
"the :meth:`__getitem__` mapping interface; dictionaries and sequences work "
"well."
msgstr ""
"這個編解碼器的特殊之處在於它可以用來實作許多不同的編解碼器（事實上，這是為了"
"獲得 :mod:`encodings` 包中包含的大多數標準編解碼器所做的）。編解碼器使用映射"
"來編碼和解碼字元。提供的映射物件必須支援 :meth:`__getitem__`映射介面；字典和"
"序列運行良好。"

#: ../../c-api/unicode.rst:1311
#, fuzzy
msgid "These are the mapping codec APIs:"
msgstr "這些是映射編解碼器 API："

#: ../../c-api/unicode.rst:1316
#, fuzzy
msgid ""
"Create a Unicode object by decoding *size* bytes of the encoded string *s* "
"using the given *mapping* object.  Return ``NULL`` if an exception was "
"raised by the codec."
msgstr ""
"通過使用給定的 *mapping* 對像對編碼字串 *s* 的 *size* 位元組進行解碼來建立一"
"個 Unicode 物件。如果編解碼器引發例外，則回傳 ``NULL`` 。"

#: ../../c-api/unicode.rst:1320
#, fuzzy
msgid ""
"If *mapping* is ``NULL``, Latin-1 decoding will be applied.  Else *mapping* "
"must map bytes ordinals (integers in the range from 0 to 255) to Unicode "
"strings, integers (which are then interpreted as Unicode ordinals) or "
"``None``.  Unmapped data bytes -- ones which cause a :exc:`LookupError`, as "
"well as ones which get mapped to ``None``, ``0xFFFE`` or ``'\\ufffe'``, are "
"treated as undefined mappings and cause an error."
msgstr ""
"如果 *mapping* 為 ``NULL`` ，將應用 Latin-1 解碼。否則 *mapping* 必須將位元組"
"序數（0 到 255 範圍內的整數）映射到 Unicode 字串、整數（然後被解釋為 Unicode "
"序數）或 ``None`` 。未映射的資料位元組——導致 LookupError 的位元組，以及映射"
"到 None、0xFFFE 或 ufffe 的位元組，被視為未定義的映射並導致錯誤。"

#: ../../c-api/unicode.rst:1331
#, fuzzy
msgid ""
"Encode a Unicode object using the given *mapping* object and return the "
"result as a bytes object.  Error handling is \"strict\".  Return ``NULL`` if "
"an exception was raised by the codec."
msgstr ""
"使用給定的 *mapping* 對像對 Unicode 物件進行編碼，並將結果作為位元組物件回"
"傳。錯誤處理是“嚴格的”。如果編解碼器引發例外，則回傳 ``NULL`` 。"

#: ../../c-api/unicode.rst:1335
#, fuzzy
msgid ""
"The *mapping* object must map Unicode ordinal integers to bytes objects, "
"integers in the range from 0 to 255 or ``None``.  Unmapped character "
"ordinals (ones which cause a :exc:`LookupError`) as well as mapped to "
"``None`` are treated as \"undefined mapping\" and cause an error."
msgstr ""
"*mapping* 物件必須將 Unicode 序數整數映射到位元組物件，即 0 到 255 範圍內的整"
"數或 ``None`` 。未映射的字元序數（導致 :exc:`LookupError` 的字元序數）以及映"
"射到 ``None`` 的字元序數被視為“未定義映射”並導致錯誤。"

#: ../../c-api/unicode.rst:1341
#, fuzzy
msgid "The following codec API is special in that maps Unicode to Unicode."
msgstr "以下編解碼器 API 的特殊之處在於將 Unicode 映射到 Unicode。"

#: ../../c-api/unicode.rst:1345
#, fuzzy
msgid ""
"Translate a string by applying a character mapping table to it and return "
"the resulting Unicode object. Return ``NULL`` if an exception was raised by "
"the codec."
msgstr ""
"通過向字串應用字元映射表來翻譯字串並回傳生成的 Unicode 物件。如果編解碼器引發"
"例外，則回傳 ``NULL`` 。"

#: ../../c-api/unicode.rst:1349
#, fuzzy
msgid ""
"The mapping table must map Unicode ordinal integers to Unicode ordinal "
"integers or ``None`` (causing deletion of the character)."
msgstr ""
"映射表必須將 Unicode 序數整數映射到 Unicode 序數整數或 ``None`` （導致刪除字"
"元）。"

#: ../../c-api/unicode.rst:1352
#, fuzzy
msgid ""
"Mapping tables need only provide the :meth:`__getitem__` interface; "
"dictionaries and sequences work well.  Unmapped character ordinals (ones "
"which cause a :exc:`LookupError`) are left untouched and are copied as-is."
msgstr ""
"映射表只需要提供 :meth:`__getitem__` 介面；字典和序列運行良好。未映射的字元序"
"數（導致 :exc:`LookupError` 的字元序數）保持不變並按原樣複製。"

#: ../../c-api/unicode.rst:1356
#, fuzzy
msgid ""
"*errors* has the usual meaning for codecs. It may be ``NULL`` which "
"indicates to use the default error handling."
msgstr ""
"*errors* 具有編解碼器的通常含義。它可能是 ``NULL`` ，表示使用預設的錯誤處理。"

#: ../../c-api/unicode.rst:1361
#, fuzzy
msgid "MBCS codecs for Windows"
msgstr "適用於 Windows 的 MBCS 編解碼器"

#: ../../c-api/unicode.rst:1363
#, fuzzy
msgid ""
"These are the MBCS codec APIs. They are currently only available on Windows "
"and use the Win32 MBCS converters to implement the conversions.  Note that "
"MBCS (or DBCS) is a class of encodings, not just one.  The target encoding "
"is defined by the user settings on the machine running the codec."
msgstr ""
"這些是 MBCS 編解碼器 API。它們目前僅在 Windows 上可用，並使用 Win32 MBCS 轉換"
"器來實作轉換。請注意，MBCS（或 DBCS）是一類編碼，而不僅僅是一種。目標編碼由運"
"行編解碼器的機器上的使用者設定定義。"

#: ../../c-api/unicode.rst:1370
#, fuzzy
msgid ""
"Create a Unicode object by decoding *size* bytes of the MBCS encoded string "
"*s*. Return ``NULL`` if an exception was raised by the codec."
msgstr ""
"通過解碼 MBCS 編碼字串 *s* 的 *size* 位元組來建立 Unicode 物件。如果編解碼器"
"引發例外，則回傳 ``NULL`` 。"

#: ../../c-api/unicode.rst:1377
#, fuzzy
msgid ""
"If *consumed* is ``NULL``, behave like :c:func:`PyUnicode_DecodeMBCS`. If "
"*consumed* is not ``NULL``, :c:func:`PyUnicode_DecodeMBCSStateful` will not "
"decode trailing lead byte and the number of bytes that have been decoded "
"will be stored in *consumed*."
msgstr ""
"如果 *consumed* 是``NULL``，表現得像:c:func:`PyUnicode_DecodeMBCS`。如果 "
"*consumed* 不是 ``NULL``，:c:func:`PyUnicode_DecodeMBCSStateful` 將不會解碼尾"
"隨前導位元組，並且已解碼的位元組數將儲存在 *consumed* 中。"

#: ../../c-api/unicode.rst:1385
#, fuzzy
msgid ""
"Encode a Unicode object using MBCS and return the result as Python bytes "
"object.  Error handling is \"strict\".  Return ``NULL`` if an exception was "
"raised by the codec."
msgstr ""
"使用 MBCS 對 Unicode 物件進行編碼並將結果作為 Python 位元組物件回傳。錯誤處理"
"是“嚴格的”。如果編解碼器引發例外，則回傳 ``NULL`` 。"

#: ../../c-api/unicode.rst:1392
#, fuzzy
msgid ""
"Encode the Unicode object using the specified code page and return a Python "
"bytes object.  Return ``NULL`` if an exception was raised by the codec. Use :"
"c:data:`CP_ACP` code page to get the MBCS encoder."
msgstr ""
"使用指定的程式碼頁對 Unicode 物件進行編碼並回傳 Python 位元組物件。如果編解碼"
"器引發例外，則回傳 ``NULL`` 。使用 :c:data:`CP_ACP` 程式碼頁獲取 MBCS 編碼"
"器。"

#: ../../c-api/unicode.rst:1400
#, fuzzy
msgid "Methods & Slots"
msgstr "方法和插槽"

#: ../../c-api/unicode.rst:1406
#, fuzzy
msgid "Methods and Slot Functions"
msgstr "方法和槽函式"

#: ../../c-api/unicode.rst:1408
#, fuzzy
msgid ""
"The following APIs are capable of handling Unicode objects and strings on "
"input (we refer to them as strings in the descriptions) and return Unicode "
"objects or integers as appropriate."
msgstr ""
"以下 API 能夠處理輸入的 Unicode 物件和字串（我們在描述中將它們稱為字串）並根"
"據需要回傳 Unicode 對像或整數。"

#: ../../c-api/unicode.rst:1412
#, fuzzy
msgid "They all return ``NULL`` or ``-1`` if an exception occurs."
msgstr "如果發生例外，它們都會回傳 ``NULL`` 或 ``-1``。"

#: ../../c-api/unicode.rst:1417
#, fuzzy
msgid "Concat two strings giving a new Unicode string."
msgstr "連接兩個字串給出一個新的 Unicode 字串。"

#: ../../c-api/unicode.rst:1422
#, fuzzy
msgid ""
"Split a string giving a list of Unicode strings.  If *sep* is ``NULL``, "
"splitting will be done at all whitespace substrings.  Otherwise, splits "
"occur at the given separator.  At most *maxsplit* splits will be done.  If "
"negative, no limit is set.  Separators are not included in the resulting "
"list."
msgstr ""
"拆分一個字串，給出一個 Unicode 字串列表。如果 *sep* 為 ``NULL`` ，將在所有空"
"白子字串處進行拆分。否則，拆分發生在給定的分隔符處。至多 *maxsplit* 拆分將完"
"成。如果為負，則不設定限制。結果列表中不包含分隔符。"

#: ../../c-api/unicode.rst:1430
#, fuzzy
msgid ""
"Split a Unicode string at line breaks, returning a list of Unicode strings. "
"CRLF is considered to be one line break.  If *keepend* is ``0``, the line "
"break characters are not included in the resulting strings."
msgstr ""
"在換行處拆分 Unicode 字串，回傳 Unicode 字串列表。 CRLF 被認為是一個換行符。"
"如果 *keepend* 為 ``0``，則換行符不包含在結果字串中。"

#: ../../c-api/unicode.rst:1437
#, fuzzy
msgid ""
"Join a sequence of strings using the given *separator* and return the "
"resulting Unicode string."
msgstr "使用給定的 *separator* 連接一系列字串並回傳生成的 Unicode 字串。"

#: ../../c-api/unicode.rst:1444
#, fuzzy
msgid ""
"Return ``1`` if *substr* matches ``str[start:end]`` at the given tail end "
"(*direction* == ``-1`` means to do a prefix match, *direction* == ``1`` a "
"suffix match), ``0`` otherwise. Return ``-1`` if an error occurred."
msgstr ""
"如果 *substr* 在給定的尾端匹配 ``str[start:end]`` 則回傳 ``1``（*direction* "
"== ``-1`` 表示進行前綴匹配，*direction* == ``1`` 後綴匹配），``0`` 否則。如果"
"發生錯誤，則回傳 ``-1``。"

#: ../../c-api/unicode.rst:1452
#, fuzzy
msgid ""
"Return the first position of *substr* in ``str[start:end]`` using the given "
"*direction* (*direction* == ``1`` means to do a forward search, *direction* "
"== ``-1`` a backward search).  The return value is the index of the first "
"match; a value of ``-1`` indicates that no match was found, and ``-2`` "
"indicates that an error occurred and an exception has been set."
msgstr ""
"使用給定的 *direction* 回傳 *substr* 在 ``str[start:end]`` 中的第一個位置*"
"（*direction* == ``1`` 表示進行正向搜索，*direction* == `` -1`` 向後搜索）。"
"回傳值為第一個匹配的索引；值 ``-1``表示未找到匹配項， ``-2``表示發生錯誤並設"
"定了例外。"

#: ../../c-api/unicode.rst:1462
#, fuzzy
msgid ""
"Return the first position of the character *ch* in ``str[start:end]`` using "
"the given *direction* (*direction* == ``1`` means to do a forward search, "
"*direction* == ``-1`` a backward search).  The return value is the index of "
"the first match; a value of ``-1`` indicates that no match was found, and "
"``-2`` indicates that an error occurred and an exception has been set."
msgstr ""
"使用給定的 *direction* 回傳字元 *ch* 在 ``str[start:end]`` 中的第一個位置*"
"（*direction* == ``1`` 表示進行正向搜索，*direction* == ``-1`` 向後搜索）。回"
"傳值為第一個匹配的索引；值 ``-1``表示未找到匹配項， ``-2``表示發生錯誤並設定"
"了例外。"

#: ../../c-api/unicode.rst:1470
#, fuzzy
msgid "*start* and *end* are now adjusted to behave like ``str[start:end]``."
msgstr "*start* 和 *end* 現在被調整為表現得像 ``str[start:end]``。"

#: ../../c-api/unicode.rst:1477
#, fuzzy
msgid ""
"Return the number of non-overlapping occurrences of *substr* in ``str[start:"
"end]``.  Return ``-1`` if an error occurred."
msgstr ""
"回傳 ``str[start:end]`` 中 *substr* 的非重疊出現次數。如果發生錯誤，則回傳 "
"``-1``。"

#: ../../c-api/unicode.rst:1484
#, fuzzy
msgid ""
"Replace at most *maxcount* occurrences of *substr* in *str* with *replstr* "
"and return the resulting Unicode object. *maxcount* == ``-1`` means replace "
"all occurrences."
msgstr ""
"用 *replstr* 替換 *str* 中最多 *maxcount* 次出現的 *substr* 並回傳生成的 "
"Unicode 物件。 *maxcount* == ``-1`` 表示替換所有出現的地方。"

#: ../../c-api/unicode.rst:1491
#, fuzzy
msgid ""
"Compare two strings and return ``-1``, ``0``, ``1`` for less than, equal, "
"and greater than, respectively."
msgstr "比較兩個字串並分別回傳小於、等於和大於的 ``-1``、``0``、``1``。"

#: ../../c-api/unicode.rst:1494
#, fuzzy
msgid ""
"This function returns ``-1`` upon failure, so one should call :c:func:"
"`PyErr_Occurred` to check for errors."
msgstr ""
"此函式在失敗時回傳 ``-1``，因此應該呼叫 :c:func:`PyErr_Occurred` 來檢查錯誤。"

#: ../../c-api/unicode.rst:1500
#, fuzzy
msgid ""
"Compare a Unicode object, *uni*, with *string* and return ``-1``, ``0``, "
"``1`` for less than, equal, and greater than, respectively. It is best to "
"pass only ASCII-encoded strings, but the function interprets the input "
"string as ISO-8859-1 if it contains non-ASCII characters."
msgstr ""
"將 Unicode 物件 *uni* 與 *string* 進行比較，並分別回傳小於、等於和大於的 "
"``-1``、``0``、``1``。最好只傳遞 ASCII 編碼的字串，但如果輸入字串包含非 "
"ASCII 字元，該函式會將其解釋為 ISO-8859-1。"

#: ../../c-api/unicode.rst:1505
#, fuzzy
msgid "This function does not raise exceptions."
msgstr "此函式不會引發例外。"

#: ../../c-api/unicode.rst:1510
#, fuzzy
msgid "Rich compare two Unicode strings and return one of the following:"
msgstr "Rich 比較兩個 Unicode 字串並回傳以下之一："

#: ../../c-api/unicode.rst:1512
#, fuzzy
msgid "``NULL`` in case an exception was raised"
msgstr "``NULL`` 以防出現例外"

#: ../../c-api/unicode.rst:1513
#, fuzzy
msgid ":const:`Py_True` or :const:`Py_False` for successful comparisons"
msgstr ":const:`Py_True` 或 :const:`Py_False` 用於成功比較"

#: ../../c-api/unicode.rst:1514
#, fuzzy
msgid ":const:`Py_NotImplemented` in case the type combination is unknown"
msgstr ":const:`Py_NotImplemented` 以防型別組合未知"

#: ../../c-api/unicode.rst:1516
#, fuzzy
msgid ""
"Possible values for *op* are :const:`Py_GT`, :const:`Py_GE`, :const:"
"`Py_EQ`, :const:`Py_NE`, :const:`Py_LT`, and :const:`Py_LE`."
msgstr ""
"*op* 的可能值為 :const:`Py_GT`、:const:`Py_GE`、:const:`Py_EQ`、:const:"
"`Py_NE`、:const:`Py_LT` 和 :const:`Py_LE`。"

#: ../../c-api/unicode.rst:1522
#, fuzzy
msgid ""
"Return a new string object from *format* and *args*; this is analogous to "
"``format % args``."
msgstr ""
"從 *format* 和 *args* 回傳一個新的字串物件；這類似於``format % args``。"

#: ../../c-api/unicode.rst:1528
#, fuzzy
msgid ""
"Check whether *element* is contained in *container* and return true or false "
"accordingly."
msgstr "檢查 *element* 是否包含在 *container* 中，並相應地回傳 true 或 false。"

#: ../../c-api/unicode.rst:1531
#, fuzzy
msgid ""
"*element* has to coerce to a one element Unicode string. ``-1`` is returned "
"if there was an error."
msgstr ""
"*element* 必須強制轉換為一個元素 Unicode 字串。如果出現錯誤，則回傳 ``-1``。"

#: ../../c-api/unicode.rst:1537
#, fuzzy
msgid ""
"Intern the argument *\\*string* in place.  The argument must be the address "
"of a pointer variable pointing to a Python Unicode string object.  If there "
"is an existing interned string that is the same as *\\*string*, it sets "
"*\\*string* to it (decrementing the reference count of the old string object "
"and incrementing the reference count of the interned string object), "
"otherwise it leaves *\\*string* alone and interns it (incrementing its "
"reference count). (Clarification: even though there is a lot of talk about "
"reference counts, think of this function as reference-count-neutral; you own "
"the object after the call if and only if you owned it before the call.)"
msgstr ""
"在適當的位置實習參數 *\\*string*。參數必須是指向 Python Unicode 字串物件的指"
"標變數的地址。如果存在與 *\\*string* 相同的現有駐留字串，則將 *\\*string* 設"
"定為它（減少舊字串物件的引用計數並增加駐留字串物件的引用計數），否則它單獨留"
"下 *\\*string* 並對其進行實習（增加其引用計數）。 （澄清：儘管有很多關於引用"
"計數的討論，但請將此函式視為引用計數中立的；當且僅當您在呼叫前擁有該物件時，"
"您在呼叫後擁有該物件。）"

#: ../../c-api/unicode.rst:1550
#, fuzzy
msgid ""
"A combination of :c:func:`PyUnicode_FromString` and :c:func:"
"`PyUnicode_InternInPlace`, returning either a new Unicode string object that "
"has been interned, or a new (\"owned\") reference to an earlier interned "
"string object with the same value."
msgstr ""
":c:func:`PyUnicode_FromString` 和 :c:func:`PyUnicode_InternInPlace` 的組合，"
"回傳一個新的已被駐留的 Unicode 字串物件，或者一個新的（“擁有的”）對早期駐留字"
"串物件的引用相同的值。"
