# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Leon H., 2017
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-21 17:35+0000\n"
"PO-Revision-Date: 2017-09-22 18:26+0000\n"
"Last-Translator: Leon H.\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.2.2\n"

#: ../../c-api/refcounting.rst:8
msgid "Reference Counting"
msgstr "參照計數"

#: ../../c-api/refcounting.rst:10
#, fuzzy
msgid ""
"The macros in this section are used for managing reference counts of Python "
"objects."
msgstr "本節中的巨集用於管理 Python 物件的引用計數。"

#: ../../c-api/refcounting.rst:16
#, fuzzy
msgid "Increment the reference count for object *o*."
msgstr "增加物件 *o* 的引用計數。"

#: ../../c-api/refcounting.rst:18
#, fuzzy
msgid ""
"This function is usually used to convert a :term:`borrowed reference` to a :"
"term:`strong reference` in-place. The :c:func:`Py_NewRef` function can be "
"used to create a new :term:`strong reference`."
msgstr ""
"此函式通常用於將 :term:`borrowed reference` 就地轉換為 :term:`strong "
"reference`。 :c:func:`Py_NewRef` 函式可用於建立新的 :term:`strong "
"reference`。"

#: ../../c-api/refcounting.rst:22
#, fuzzy
msgid ""
"The object must not be ``NULL``; if you aren't sure that it isn't ``NULL``, "
"use :c:func:`Py_XINCREF`."
msgstr ""
"該對像不能為 ``NULL`` ；如果您不確定它不是 ``NULL``，請使用 :c:func:"
"`Py_XINCREF`。"

#: ../../c-api/refcounting.rst:28
#, fuzzy
msgid ""
"Increment the reference count for object *o*.  The object may be ``NULL``, "
"in which case the macro has no effect."
msgstr ""
"增加物件 *o* 的引用計數。該物件可能為 ``NULL`` ，在這種情況下巨集無效。"

#: ../../c-api/refcounting.rst:31
msgid "See also :c:func:`Py_XNewRef`."
msgstr "另請見 :c:func:`Py_XNewRef`\\ 。"

#: ../../c-api/refcounting.rst:36
#, fuzzy
msgid ""
"Create a new :term:`strong reference` to an object: increment the reference "
"count of the object *o* and return the object *o*."
msgstr ""
"為物件建立一個新的 :term:`strong reference`：增加物件 *o* 的引用計數並回傳物"
"件 *o*。"

#: ../../c-api/refcounting.rst:39
#, fuzzy
msgid ""
"When the :term:`strong reference` is no longer needed, :c:func:`Py_DECREF` "
"should be called on it to decrement the object reference count."
msgstr ""
"當不再需要 :term:`strong reference` 時，應該呼叫 :c:func:`Py_DECREF` 來減少物"
"件引用計數。"

#: ../../c-api/refcounting.rst:42
#, fuzzy
msgid ""
"The object *o* must not be ``NULL``; use :c:func:`Py_XNewRef` if *o* can be "
"``NULL``."
msgstr ""
"物件 *o* 不能為 ``NULL`` ；使用 :c:func:`Py_XNewRef` 如果 *o* 可以是 "
"``NULL``。"

#: ../../c-api/refcounting.rst:45
msgid "For example::"
msgstr ""
"舉例來說：\n"
"\n"
"::"

#: ../../c-api/refcounting.rst:50
msgid "can be written as::"
msgstr ""
"可以寫成：\n"
"\n"
"::"

#: ../../c-api/refcounting.rst:54
msgid "See also :c:func:`Py_INCREF`."
msgstr "另請參閱 :c:func:`Py_INCREF`\\ 。"

#: ../../c-api/refcounting.rst:61
#, fuzzy
msgid "Similar to :c:func:`Py_NewRef`, but the object *o* can be NULL."
msgstr "類似於 :c:func:`Py_NewRef`，但物件 *o* 可以為 NULL。"

#: ../../c-api/refcounting.rst:63
#, fuzzy
msgid "If the object *o* is ``NULL``, the function just returns ``NULL``."
msgstr "如果物件 *o* 是 ``NULL``，函式只回傳 ``NULL``。"

#: ../../c-api/refcounting.rst:70
#, fuzzy
msgid "Decrement the reference count for object *o*."
msgstr "減少物件 *o* 的引用計數。"

#: ../../c-api/refcounting.rst:72
#, fuzzy
msgid ""
"If the reference count reaches zero, the object's type's deallocation "
"function (which must not be ``NULL``) is invoked."
msgstr "如果引用計數達到零，則呼叫對像型別的釋放函式（不能為 ``NULL`` ）。"

#: ../../c-api/refcounting.rst:75
#, fuzzy
msgid ""
"This function is usually used to delete a :term:`strong reference` before "
"exiting its scope."
msgstr "此函式通常用於在退出其作用域之前刪除 :term:`strong reference`。"

#: ../../c-api/refcounting.rst:78
#, fuzzy
msgid ""
"The object must not be ``NULL``; if you aren't sure that it isn't ``NULL``, "
"use :c:func:`Py_XDECREF`."
msgstr ""
"該對像不能為 ``NULL`` ；如果您不確定它不是 ``NULL``，請使用 :c:func:"
"`Py_XDECREF`。"

#: ../../c-api/refcounting.rst:83
#, fuzzy
msgid ""
"The deallocation function can cause arbitrary Python code to be invoked (e."
"g. when a class instance with a :meth:`__del__` method is deallocated).  "
"While exceptions in such code are not propagated, the executed code has free "
"access to all Python global variables.  This means that any object that is "
"reachable from a global variable should be in a consistent state before :c:"
"func:`Py_DECREF` is invoked.  For example, code to delete an object from a "
"list should copy a reference to the deleted object in a temporary variable, "
"update the list data structure, and then call :c:func:`Py_DECREF` for the "
"temporary variable."
msgstr ""
"釋放函式可以導致呼叫任意 Python 程式碼（例如，當釋放具有 :meth:`__del__` 方法"
"的類實例時）。雖然此類程式碼中的例外不會傳播，但執行的程式碼可以自由訪問所有 "
"Python 全局變數。這意味著在呼叫 Py_DECREF 之前，從全局變數可訪問的任何對像都"
"應處於一致狀態。例如，從列表中刪除一個物件的程式碼應該在臨時變數中復制對已刪"
"除物件的引用，更新列表資料結構，然後為臨時變數呼叫:c:func:`Py_DECREF`。"

#: ../../c-api/refcounting.rst:95
#, fuzzy
msgid ""
"Decrement the reference count for object *o*.  The object may be ``NULL``, "
"in which case the macro has no effect; otherwise the effect is the same as "
"for :c:func:`Py_DECREF`, and the same warning applies."
msgstr ""
"減少物件 *o* 的引用計數。該物件可能為 ``NULL`` ，在這種情況下巨集無效；否則效"
"果與 :c:func:`Py_DECREF` 相同，並且應用相同的警告。"

#: ../../c-api/refcounting.rst:102
#, fuzzy
msgid ""
"Decrement the reference count for object *o*.  The object may be ``NULL``, "
"in which case the macro has no effect; otherwise the effect is the same as "
"for :c:func:`Py_DECREF`, except that the argument is also set to ``NULL``.  "
"The warning for :c:func:`Py_DECREF` does not apply with respect to the "
"object passed because the macro carefully uses a temporary variable and sets "
"the argument to ``NULL`` before decrementing its reference count."
msgstr ""
"減少物件 *o* 的引用計數。該物件可能為 ``NULL`` ，在這種情況下巨集無效；否則效"
"果與 :c:func:`Py_DECREF` 相同，只是參數也設定為 ``NULL``。 :c:func:"
"`Py_DECREF` 的警告不適用於傳遞的物件，因為巨集小心地使用臨時變數並在遞減其引"
"用計數之前將參數設定為 ``NULL``。"

#: ../../c-api/refcounting.rst:109
#, fuzzy
msgid ""
"It is a good idea to use this macro whenever decrementing the reference "
"count of an object that might be traversed during garbage collection."
msgstr "每當減少垃圾收集期間可能遍歷的物件的引用計數時，最好使用此巨集。"

#: ../../c-api/refcounting.rst:114
#, fuzzy
msgid ""
"Increment the reference count for object *o*. A function version of :c:func:"
"`Py_XINCREF`. It can be used for runtime dynamic embedding of Python."
msgstr ""
"增加物件 *o* 的引用計數。 :c:func:`Py_XINCREF` 的函式版本。它可用於 Python 的"
"運行時動態嵌入。"

#: ../../c-api/refcounting.rst:120
#, fuzzy
msgid ""
"Decrement the reference count for object *o*. A function version of :c:func:"
"`Py_XDECREF`. It can be used for runtime dynamic embedding of Python."
msgstr ""
"減少物件 *o* 的引用計數。 :c:func:`Py_XDECREF` 的函式版本。它可用於 Python 的"
"運行時動態嵌入。"

#: ../../c-api/refcounting.rst:124
#, fuzzy
msgid ""
"The following functions or macros are only for use within the interpreter "
"core: :c:func:`_Py_Dealloc`, :c:func:`_Py_ForgetReference`, :c:func:"
"`_Py_NewReference`, as well as the global variable :c:data:`_Py_RefTotal`."
msgstr ""
"以下函式或巨集僅在直譯器核心中使用：:c:func:`_Py_Dealloc`、:c:func:"
"`_Py_ForgetReference`、:c:func:`_Py_NewReference`，以及全局變數:c:資料："
"`_Py_RefTotal`。"
