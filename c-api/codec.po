# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-26 16:47+0000\n"
"PO-Revision-Date: 2015-12-09 17:51+0000\n"
"Last-Translator: Liang-Bo Wang <me@liang2.tw>\n"
"Language-Team: Chinese - TAIWAN (https://github.com/python/python-docs-zh-"
"tw)\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/codec.rst:4
msgid "Codec registry and support functions"
msgstr "編解碼器之註冊和支援功能"

#: ../../c-api/codec.rst:8
#, fuzzy
msgid "Register a new codec search function."
msgstr "註冊一個新的編解碼器搜索功能。"

#: ../../c-api/codec.rst:10
#, fuzzy
msgid ""
"As side effect, this tries to load the :mod:`encodings` package, if not yet "
"done, to make sure that it is always first in the list of search functions."
msgstr "作為副作用，這會嘗試加載 :mod:`encodings` "
"包（如果尚未完成），以確保它始終位於搜索函式列表的第一位。"

#: ../../c-api/codec.rst:15
#, fuzzy
msgid ""
"Unregister a codec search function and clear the registry's cache. If the "
"search function is not registered, do nothing. Return 0 on success. Raise an "
"exception and return -1 on error."
msgstr "註銷編解碼器搜索功能並清除註冊表的快取。如果未註冊搜索功能，則什麼也不做。成"
"功回傳0。引發例外並在出錯時回傳 -1。"

#: ../../c-api/codec.rst:23
#, fuzzy
msgid ""
"Return ``1`` or ``0`` depending on whether there is a registered codec for "
"the given *encoding*.  This function always succeeds."
msgstr "回傳``1`` 或``0`` 取決於是否有給定*編碼* 的註冊編解碼器。這個函式總是成功的。"

#: ../../c-api/codec.rst:28
#, fuzzy
msgid "Generic codec based encoding API."
msgstr "基於通用編解碼器的編碼 API。"

#: ../../c-api/codec.rst:30
#, fuzzy
msgid ""
"*object* is passed through the encoder function found for the given "
"*encoding* using the error handling method defined by *errors*.  *errors* "
"may be ``NULL`` to use the default method defined for the codec.  Raises a :"
"exc:`LookupError` if no encoder can be found."
msgstr ""
"*object* 通過為給定 *encoding* 找到的編碼器函式傳遞，使用由 *errors* "
"定義的錯誤處理方法。 *errors* 可以是 ``NULL`` 以使用為編解碼器定義的預設方法。如"
"果找不到編碼器，則引發 :exec:`LookupError`。"

#: ../../c-api/codec.rst:37
#, fuzzy
msgid "Generic codec based decoding API."
msgstr "基於通用編解碼器的解碼 API。"

#: ../../c-api/codec.rst:39
#, fuzzy
msgid ""
"*object* is passed through the decoder function found for the given "
"*encoding* using the error handling method defined by *errors*.  *errors* "
"may be ``NULL`` to use the default method defined for the codec.  Raises a :"
"exc:`LookupError` if no encoder can be found."
msgstr ""
"*object* 通過為給定 *encoding* 找到的解碼器函式傳遞，使用由 *errors* "
"定義的錯誤處理方法。 *errors* 可以是 ``NULL`` 以使用為編解碼器定義的預設方法。如"
"果找不到編碼器，則引發 :exec:`LookupError`。"

#: ../../c-api/codec.rst:46
#, fuzzy
msgid "Codec lookup API"
msgstr "編解碼器查找 API"

#: ../../c-api/codec.rst:48
#, fuzzy
msgid ""
"In the following functions, the *encoding* string is looked up converted to "
"all lower-case characters, which makes encodings looked up through this "
"mechanism effectively case-insensitive.  If no codec is found, a :exc:"
"`KeyError` is set and ``NULL`` returned."
msgstr ""
"在以下函式中， *encoding* 字串被查找轉換為所有小寫字元，這使得通過此機制查找"
"的編碼有效地不區分大小寫。如果未找到編解碼器，則設定 :exc:`KeyError` 並回傳 "
"``NULL``。"

#: ../../c-api/codec.rst:55
#, fuzzy
msgid "Get an encoder function for the given *encoding*."
msgstr "獲取給定 *encoding* 的編碼器函式。"

#: ../../c-api/codec.rst:59
#, fuzzy
msgid "Get a decoder function for the given *encoding*."
msgstr "獲取給定 *encoding* 的解碼器函式。"

#: ../../c-api/codec.rst:63
#, fuzzy
msgid ""
"Get an :class:`~codecs.IncrementalEncoder` object for the given *encoding*."
msgstr "為給定的 *encoding* 獲取一個 :class:`~codecs.IncrementalEncoder` 物件。"

#: ../../c-api/codec.rst:67
#, fuzzy
msgid ""
"Get an :class:`~codecs.IncrementalDecoder` object for the given *encoding*."
msgstr "為給定的 *encoding* 獲取一個 :class:`~codecs.IncrementalDecoder` 物件。"

#: ../../c-api/codec.rst:71
#, fuzzy
msgid ""
"Get a :class:`~codecs.StreamReader` factory function for the given "
"*encoding*."
msgstr "為給定的 *encoding* 獲取一個 :class:`~codecs.StreamReader` 工廠函式。"

#: ../../c-api/codec.rst:75
#, fuzzy
msgid ""
"Get a :class:`~codecs.StreamWriter` factory function for the given "
"*encoding*."
msgstr "為給定的 *encoding* 獲取一個 :class:`~codecs.StreamWriter` 工廠函式。"

#: ../../c-api/codec.rst:79
#, fuzzy
msgid "Registry API for Unicode encoding error handlers"
msgstr "用於 Unicode 編碼錯誤處理程式的註冊表 API"

#: ../../c-api/codec.rst:83
#, fuzzy
msgid ""
"Register the error handling callback function *error* under the given "
"*name*. This callback function will be called by a codec when it encounters "
"unencodable characters/undecodable bytes and *name* is specified as the "
"error parameter in the call to the encode/decode function."
msgstr ""
"在給定的 *name* 下註冊錯誤處理回呼函式 "
"*error*。當編解碼器遇到無法編碼的字元/無法解碼的位元組時，將呼叫此回呼函式，"
"並且 *name* 被指定為呼叫編碼/解碼函式時的錯誤參數。"

#: ../../c-api/codec.rst:88
#, fuzzy
msgid ""
"The callback gets a single argument, an instance of :exc:"
"`UnicodeEncodeError`, :exc:`UnicodeDecodeError` or :exc:"
"`UnicodeTranslateError` that holds information about the problematic "
"sequence of characters or bytes and their offset in the original string "
"(see :ref:`unicodeexceptions` for functions to extract this information).  "
"The callback must either raise the given exception, or return a two-item "
"tuple containing the replacement for the problematic sequence, and an "
"integer giving the offset in the original string at which encoding/decoding "
"should be resumed."
msgstr ""
"回呼獲取單個參數，一個 :exc:`UnicodeEncodeError`、:exc:`UnicodeDecodeError` "
"或 :exc:`UnicodeTranslateError` 的實例，其中包含有關有問題的字元或位元組序列"
"及其在原始字串中的偏移量的資訊（請參閱 :ref:`unicodeexceptions` 用於提取此資訊"
"的函式）。回呼必須引發給定的例外，或者回傳一個包含有問題序列的替換項的兩項元"
"組，以及一個整數，該整數給出原始字串中應恢復編碼/解碼的偏移量。"

#: ../../c-api/codec.rst:98
#, fuzzy
msgid "Return ``0`` on success, ``-1`` on error."
msgstr "成功回傳 ``0``，錯誤回傳 ``-1``。"

#: ../../c-api/codec.rst:102
#, fuzzy
msgid ""
"Lookup the error handling callback function registered under *name*.  As a "
"special case ``NULL`` can be passed, in which case the error handling "
"callback for \"strict\" will be returned."
msgstr "查找在 *name* 下註冊的錯誤處理回呼函式。作為一種特殊情況，可以傳遞 ``NULL`` ，在"
"這種情況下，將回傳 ``strict``的錯誤處理回呼。"

#: ../../c-api/codec.rst:108
#, fuzzy
msgid "Raise *exc* as an exception."
msgstr "引發 *exc* 作為例外。"

#: ../../c-api/codec.rst:112
#, fuzzy
msgid "Ignore the unicode error, skipping the faulty input."
msgstr "忽略 unicode 錯誤，跳過錯誤輸入。"

#: ../../c-api/codec.rst:116
#, fuzzy
msgid "Replace the unicode encode error with ``?`` or ``U+FFFD``."
msgstr "用 ``?`` 或 ``U+FFFD`` 替換 unicode 編碼錯誤。"

#: ../../c-api/codec.rst:120
#, fuzzy
msgid "Replace the unicode encode error with XML character references."
msgstr "用 XML 字元引用替換 unicode 編碼錯誤。"

#: ../../c-api/codec.rst:124
#, fuzzy
msgid ""
"Replace the unicode encode error with backslash escapes (``\\x``, ``\\u`` "
"and ``\\U``)."
msgstr "用反斜杠轉義（``\\x``、``\\u`` 和``\\U``）替換 unicode 編碼錯誤。"

#: ../../c-api/codec.rst:129
#, fuzzy
msgid "Replace the unicode encode error with ``\\N{...}`` escapes."
msgstr "用 ``\\N{...}`` 轉義替換 unicode 編碼錯誤。"
